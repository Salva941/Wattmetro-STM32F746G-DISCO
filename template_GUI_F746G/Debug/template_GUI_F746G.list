
template_GUI_F746G.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00018604  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00006514  080187d8  080187d8  000287d8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  0801ecec  0801ecec  0002ecec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  0801ecf4  0801ecf4  0002ecf4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  0801ecf8  0801ecf8  0002ecf8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         000002dc  20000000  0801ecfc  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          0002d8e4  200002dc  0801efd8  000302dc  2**2
                  ALLOC
  8 ._user_heap_stack 00004000  2002dbc0  0801efd8  0003dbc0  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  000302dc  2**0
                  CONTENTS, READONLY
 10 .debug_info   0003072b  00000000  00000000  0003030c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 00004e43  00000000  00000000  00060a37  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 000019b0  00000000  00000000  00065880  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_ranges 00001788  00000000  00000000  00067230  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_macro  0002ea92  00000000  00000000  000689b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line   0001dd4e  00000000  00000000  0009744a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str    0010d265  00000000  00000000  000b5198  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .comment      000000c1  00000000  00000000  001c23fd  2**0
                  CONTENTS, READONLY
 18 .debug_frame  00007c90  00000000  00000000  001c24c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200002dc 	.word	0x200002dc
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080187bc 	.word	0x080187bc

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200002e0 	.word	0x200002e0
 800020c:	080187bc 	.word	0x080187bc

08000210 <strlen>:
 8000210:	4603      	mov	r3, r0
 8000212:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000216:	2a00      	cmp	r2, #0
 8000218:	d1fb      	bne.n	8000212 <strlen+0x2>
 800021a:	1a18      	subs	r0, r3, r0
 800021c:	3801      	subs	r0, #1
 800021e:	4770      	bx	lr

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	; 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b96e 	b.w	8000f7c <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	468c      	mov	ip, r1
 8000cc2:	2b00      	cmp	r3, #0
 8000cc4:	f040 8083 	bne.w	8000dce <__udivmoddi4+0x116>
 8000cc8:	428a      	cmp	r2, r1
 8000cca:	4617      	mov	r7, r2
 8000ccc:	d947      	bls.n	8000d5e <__udivmoddi4+0xa6>
 8000cce:	fab2 f282 	clz	r2, r2
 8000cd2:	b142      	cbz	r2, 8000ce6 <__udivmoddi4+0x2e>
 8000cd4:	f1c2 0020 	rsb	r0, r2, #32
 8000cd8:	fa24 f000 	lsr.w	r0, r4, r0
 8000cdc:	4091      	lsls	r1, r2
 8000cde:	4097      	lsls	r7, r2
 8000ce0:	ea40 0c01 	orr.w	ip, r0, r1
 8000ce4:	4094      	lsls	r4, r2
 8000ce6:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000cea:	0c23      	lsrs	r3, r4, #16
 8000cec:	fbbc f6f8 	udiv	r6, ip, r8
 8000cf0:	fa1f fe87 	uxth.w	lr, r7
 8000cf4:	fb08 c116 	mls	r1, r8, r6, ip
 8000cf8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000cfc:	fb06 f10e 	mul.w	r1, r6, lr
 8000d00:	4299      	cmp	r1, r3
 8000d02:	d909      	bls.n	8000d18 <__udivmoddi4+0x60>
 8000d04:	18fb      	adds	r3, r7, r3
 8000d06:	f106 30ff 	add.w	r0, r6, #4294967295
 8000d0a:	f080 8119 	bcs.w	8000f40 <__udivmoddi4+0x288>
 8000d0e:	4299      	cmp	r1, r3
 8000d10:	f240 8116 	bls.w	8000f40 <__udivmoddi4+0x288>
 8000d14:	3e02      	subs	r6, #2
 8000d16:	443b      	add	r3, r7
 8000d18:	1a5b      	subs	r3, r3, r1
 8000d1a:	b2a4      	uxth	r4, r4
 8000d1c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d20:	fb08 3310 	mls	r3, r8, r0, r3
 8000d24:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000d28:	fb00 fe0e 	mul.w	lr, r0, lr
 8000d2c:	45a6      	cmp	lr, r4
 8000d2e:	d909      	bls.n	8000d44 <__udivmoddi4+0x8c>
 8000d30:	193c      	adds	r4, r7, r4
 8000d32:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d36:	f080 8105 	bcs.w	8000f44 <__udivmoddi4+0x28c>
 8000d3a:	45a6      	cmp	lr, r4
 8000d3c:	f240 8102 	bls.w	8000f44 <__udivmoddi4+0x28c>
 8000d40:	3802      	subs	r0, #2
 8000d42:	443c      	add	r4, r7
 8000d44:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d48:	eba4 040e 	sub.w	r4, r4, lr
 8000d4c:	2600      	movs	r6, #0
 8000d4e:	b11d      	cbz	r5, 8000d58 <__udivmoddi4+0xa0>
 8000d50:	40d4      	lsrs	r4, r2
 8000d52:	2300      	movs	r3, #0
 8000d54:	e9c5 4300 	strd	r4, r3, [r5]
 8000d58:	4631      	mov	r1, r6
 8000d5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d5e:	b902      	cbnz	r2, 8000d62 <__udivmoddi4+0xaa>
 8000d60:	deff      	udf	#255	; 0xff
 8000d62:	fab2 f282 	clz	r2, r2
 8000d66:	2a00      	cmp	r2, #0
 8000d68:	d150      	bne.n	8000e0c <__udivmoddi4+0x154>
 8000d6a:	1bcb      	subs	r3, r1, r7
 8000d6c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d70:	fa1f f887 	uxth.w	r8, r7
 8000d74:	2601      	movs	r6, #1
 8000d76:	fbb3 fcfe 	udiv	ip, r3, lr
 8000d7a:	0c21      	lsrs	r1, r4, #16
 8000d7c:	fb0e 331c 	mls	r3, lr, ip, r3
 8000d80:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000d84:	fb08 f30c 	mul.w	r3, r8, ip
 8000d88:	428b      	cmp	r3, r1
 8000d8a:	d907      	bls.n	8000d9c <__udivmoddi4+0xe4>
 8000d8c:	1879      	adds	r1, r7, r1
 8000d8e:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000d92:	d202      	bcs.n	8000d9a <__udivmoddi4+0xe2>
 8000d94:	428b      	cmp	r3, r1
 8000d96:	f200 80e9 	bhi.w	8000f6c <__udivmoddi4+0x2b4>
 8000d9a:	4684      	mov	ip, r0
 8000d9c:	1ac9      	subs	r1, r1, r3
 8000d9e:	b2a3      	uxth	r3, r4
 8000da0:	fbb1 f0fe 	udiv	r0, r1, lr
 8000da4:	fb0e 1110 	mls	r1, lr, r0, r1
 8000da8:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 8000dac:	fb08 f800 	mul.w	r8, r8, r0
 8000db0:	45a0      	cmp	r8, r4
 8000db2:	d907      	bls.n	8000dc4 <__udivmoddi4+0x10c>
 8000db4:	193c      	adds	r4, r7, r4
 8000db6:	f100 33ff 	add.w	r3, r0, #4294967295
 8000dba:	d202      	bcs.n	8000dc2 <__udivmoddi4+0x10a>
 8000dbc:	45a0      	cmp	r8, r4
 8000dbe:	f200 80d9 	bhi.w	8000f74 <__udivmoddi4+0x2bc>
 8000dc2:	4618      	mov	r0, r3
 8000dc4:	eba4 0408 	sub.w	r4, r4, r8
 8000dc8:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000dcc:	e7bf      	b.n	8000d4e <__udivmoddi4+0x96>
 8000dce:	428b      	cmp	r3, r1
 8000dd0:	d909      	bls.n	8000de6 <__udivmoddi4+0x12e>
 8000dd2:	2d00      	cmp	r5, #0
 8000dd4:	f000 80b1 	beq.w	8000f3a <__udivmoddi4+0x282>
 8000dd8:	2600      	movs	r6, #0
 8000dda:	e9c5 0100 	strd	r0, r1, [r5]
 8000dde:	4630      	mov	r0, r6
 8000de0:	4631      	mov	r1, r6
 8000de2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000de6:	fab3 f683 	clz	r6, r3
 8000dea:	2e00      	cmp	r6, #0
 8000dec:	d14a      	bne.n	8000e84 <__udivmoddi4+0x1cc>
 8000dee:	428b      	cmp	r3, r1
 8000df0:	d302      	bcc.n	8000df8 <__udivmoddi4+0x140>
 8000df2:	4282      	cmp	r2, r0
 8000df4:	f200 80b8 	bhi.w	8000f68 <__udivmoddi4+0x2b0>
 8000df8:	1a84      	subs	r4, r0, r2
 8000dfa:	eb61 0103 	sbc.w	r1, r1, r3
 8000dfe:	2001      	movs	r0, #1
 8000e00:	468c      	mov	ip, r1
 8000e02:	2d00      	cmp	r5, #0
 8000e04:	d0a8      	beq.n	8000d58 <__udivmoddi4+0xa0>
 8000e06:	e9c5 4c00 	strd	r4, ip, [r5]
 8000e0a:	e7a5      	b.n	8000d58 <__udivmoddi4+0xa0>
 8000e0c:	f1c2 0320 	rsb	r3, r2, #32
 8000e10:	fa20 f603 	lsr.w	r6, r0, r3
 8000e14:	4097      	lsls	r7, r2
 8000e16:	fa01 f002 	lsl.w	r0, r1, r2
 8000e1a:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000e1e:	40d9      	lsrs	r1, r3
 8000e20:	4330      	orrs	r0, r6
 8000e22:	0c03      	lsrs	r3, r0, #16
 8000e24:	fbb1 f6fe 	udiv	r6, r1, lr
 8000e28:	fa1f f887 	uxth.w	r8, r7
 8000e2c:	fb0e 1116 	mls	r1, lr, r6, r1
 8000e30:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e34:	fb06 f108 	mul.w	r1, r6, r8
 8000e38:	4299      	cmp	r1, r3
 8000e3a:	fa04 f402 	lsl.w	r4, r4, r2
 8000e3e:	d909      	bls.n	8000e54 <__udivmoddi4+0x19c>
 8000e40:	18fb      	adds	r3, r7, r3
 8000e42:	f106 3cff 	add.w	ip, r6, #4294967295
 8000e46:	f080 808d 	bcs.w	8000f64 <__udivmoddi4+0x2ac>
 8000e4a:	4299      	cmp	r1, r3
 8000e4c:	f240 808a 	bls.w	8000f64 <__udivmoddi4+0x2ac>
 8000e50:	3e02      	subs	r6, #2
 8000e52:	443b      	add	r3, r7
 8000e54:	1a5b      	subs	r3, r3, r1
 8000e56:	b281      	uxth	r1, r0
 8000e58:	fbb3 f0fe 	udiv	r0, r3, lr
 8000e5c:	fb0e 3310 	mls	r3, lr, r0, r3
 8000e60:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e64:	fb00 f308 	mul.w	r3, r0, r8
 8000e68:	428b      	cmp	r3, r1
 8000e6a:	d907      	bls.n	8000e7c <__udivmoddi4+0x1c4>
 8000e6c:	1879      	adds	r1, r7, r1
 8000e6e:	f100 3cff 	add.w	ip, r0, #4294967295
 8000e72:	d273      	bcs.n	8000f5c <__udivmoddi4+0x2a4>
 8000e74:	428b      	cmp	r3, r1
 8000e76:	d971      	bls.n	8000f5c <__udivmoddi4+0x2a4>
 8000e78:	3802      	subs	r0, #2
 8000e7a:	4439      	add	r1, r7
 8000e7c:	1acb      	subs	r3, r1, r3
 8000e7e:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 8000e82:	e778      	b.n	8000d76 <__udivmoddi4+0xbe>
 8000e84:	f1c6 0c20 	rsb	ip, r6, #32
 8000e88:	fa03 f406 	lsl.w	r4, r3, r6
 8000e8c:	fa22 f30c 	lsr.w	r3, r2, ip
 8000e90:	431c      	orrs	r4, r3
 8000e92:	fa20 f70c 	lsr.w	r7, r0, ip
 8000e96:	fa01 f306 	lsl.w	r3, r1, r6
 8000e9a:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8000e9e:	fa21 f10c 	lsr.w	r1, r1, ip
 8000ea2:	431f      	orrs	r7, r3
 8000ea4:	0c3b      	lsrs	r3, r7, #16
 8000ea6:	fbb1 f9fe 	udiv	r9, r1, lr
 8000eaa:	fa1f f884 	uxth.w	r8, r4
 8000eae:	fb0e 1119 	mls	r1, lr, r9, r1
 8000eb2:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8000eb6:	fb09 fa08 	mul.w	sl, r9, r8
 8000eba:	458a      	cmp	sl, r1
 8000ebc:	fa02 f206 	lsl.w	r2, r2, r6
 8000ec0:	fa00 f306 	lsl.w	r3, r0, r6
 8000ec4:	d908      	bls.n	8000ed8 <__udivmoddi4+0x220>
 8000ec6:	1861      	adds	r1, r4, r1
 8000ec8:	f109 30ff 	add.w	r0, r9, #4294967295
 8000ecc:	d248      	bcs.n	8000f60 <__udivmoddi4+0x2a8>
 8000ece:	458a      	cmp	sl, r1
 8000ed0:	d946      	bls.n	8000f60 <__udivmoddi4+0x2a8>
 8000ed2:	f1a9 0902 	sub.w	r9, r9, #2
 8000ed6:	4421      	add	r1, r4
 8000ed8:	eba1 010a 	sub.w	r1, r1, sl
 8000edc:	b2bf      	uxth	r7, r7
 8000ede:	fbb1 f0fe 	udiv	r0, r1, lr
 8000ee2:	fb0e 1110 	mls	r1, lr, r0, r1
 8000ee6:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000eea:	fb00 f808 	mul.w	r8, r0, r8
 8000eee:	45b8      	cmp	r8, r7
 8000ef0:	d907      	bls.n	8000f02 <__udivmoddi4+0x24a>
 8000ef2:	19e7      	adds	r7, r4, r7
 8000ef4:	f100 31ff 	add.w	r1, r0, #4294967295
 8000ef8:	d22e      	bcs.n	8000f58 <__udivmoddi4+0x2a0>
 8000efa:	45b8      	cmp	r8, r7
 8000efc:	d92c      	bls.n	8000f58 <__udivmoddi4+0x2a0>
 8000efe:	3802      	subs	r0, #2
 8000f00:	4427      	add	r7, r4
 8000f02:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000f06:	eba7 0708 	sub.w	r7, r7, r8
 8000f0a:	fba0 8902 	umull	r8, r9, r0, r2
 8000f0e:	454f      	cmp	r7, r9
 8000f10:	46c6      	mov	lr, r8
 8000f12:	4649      	mov	r1, r9
 8000f14:	d31a      	bcc.n	8000f4c <__udivmoddi4+0x294>
 8000f16:	d017      	beq.n	8000f48 <__udivmoddi4+0x290>
 8000f18:	b15d      	cbz	r5, 8000f32 <__udivmoddi4+0x27a>
 8000f1a:	ebb3 020e 	subs.w	r2, r3, lr
 8000f1e:	eb67 0701 	sbc.w	r7, r7, r1
 8000f22:	fa07 fc0c 	lsl.w	ip, r7, ip
 8000f26:	40f2      	lsrs	r2, r6
 8000f28:	ea4c 0202 	orr.w	r2, ip, r2
 8000f2c:	40f7      	lsrs	r7, r6
 8000f2e:	e9c5 2700 	strd	r2, r7, [r5]
 8000f32:	2600      	movs	r6, #0
 8000f34:	4631      	mov	r1, r6
 8000f36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f3a:	462e      	mov	r6, r5
 8000f3c:	4628      	mov	r0, r5
 8000f3e:	e70b      	b.n	8000d58 <__udivmoddi4+0xa0>
 8000f40:	4606      	mov	r6, r0
 8000f42:	e6e9      	b.n	8000d18 <__udivmoddi4+0x60>
 8000f44:	4618      	mov	r0, r3
 8000f46:	e6fd      	b.n	8000d44 <__udivmoddi4+0x8c>
 8000f48:	4543      	cmp	r3, r8
 8000f4a:	d2e5      	bcs.n	8000f18 <__udivmoddi4+0x260>
 8000f4c:	ebb8 0e02 	subs.w	lr, r8, r2
 8000f50:	eb69 0104 	sbc.w	r1, r9, r4
 8000f54:	3801      	subs	r0, #1
 8000f56:	e7df      	b.n	8000f18 <__udivmoddi4+0x260>
 8000f58:	4608      	mov	r0, r1
 8000f5a:	e7d2      	b.n	8000f02 <__udivmoddi4+0x24a>
 8000f5c:	4660      	mov	r0, ip
 8000f5e:	e78d      	b.n	8000e7c <__udivmoddi4+0x1c4>
 8000f60:	4681      	mov	r9, r0
 8000f62:	e7b9      	b.n	8000ed8 <__udivmoddi4+0x220>
 8000f64:	4666      	mov	r6, ip
 8000f66:	e775      	b.n	8000e54 <__udivmoddi4+0x19c>
 8000f68:	4630      	mov	r0, r6
 8000f6a:	e74a      	b.n	8000e02 <__udivmoddi4+0x14a>
 8000f6c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000f70:	4439      	add	r1, r7
 8000f72:	e713      	b.n	8000d9c <__udivmoddi4+0xe4>
 8000f74:	3802      	subs	r0, #2
 8000f76:	443c      	add	r4, r7
 8000f78:	e724      	b.n	8000dc4 <__udivmoddi4+0x10c>
 8000f7a:	bf00      	nop

08000f7c <__aeabi_idiv0>:
 8000f7c:	4770      	bx	lr
 8000f7e:	bf00      	nop

08000f80 <adc_init>:
static void MX_DMA_Init(void);

uint16_t ch1[ADC_BUFFER_SIZE];
uint16_t ch2[ADC_BUFFER_SIZE];

void adc_init(void){
 8000f80:	b580      	push	{r7, lr}
 8000f82:	af00      	add	r7, sp, #0
	MX_DMA_Init();
 8000f84:	f000 f822 	bl	8000fcc <MX_DMA_Init>
	MX_ADC1_Init();
 8000f88:	f000 f846 	bl	8001018 <MX_ADC1_Init>
	MX_ADC3_Init();
 8000f8c:	f000 f88c 	bl	80010a8 <MX_ADC3_Init>
	MX_TIM7_Init();
 8000f90:	f000 f8d2 	bl	8001138 <MX_TIM7_Init>

	HAL_ADC_Start_DMA(&hadc1, (uint32_t*)ch1, ADC_BUFFER_SIZE);
 8000f94:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000f98:	4907      	ldr	r1, [pc, #28]	; (8000fb8 <adc_init+0x38>)
 8000f9a:	4808      	ldr	r0, [pc, #32]	; (8000fbc <adc_init+0x3c>)
 8000f9c:	f002 fd06 	bl	80039ac <HAL_ADC_Start_DMA>
	HAL_ADC_Start_DMA(&hadc3, (uint32_t*)ch2, ADC_BUFFER_SIZE);
 8000fa0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000fa4:	4906      	ldr	r1, [pc, #24]	; (8000fc0 <adc_init+0x40>)
 8000fa6:	4807      	ldr	r0, [pc, #28]	; (8000fc4 <adc_init+0x44>)
 8000fa8:	f002 fd00 	bl	80039ac <HAL_ADC_Start_DMA>
	HAL_TIM_Base_Start_IT(&htim7);
 8000fac:	4806      	ldr	r0, [pc, #24]	; (8000fc8 <adc_init+0x48>)
 8000fae:	f006 fd9d 	bl	8007aec <HAL_TIM_Base_Start_IT>
}
 8000fb2:	bf00      	nop
 8000fb4:	bd80      	pop	{r7, pc}
 8000fb6:	bf00      	nop
 8000fb8:	2000788c 	.word	0x2000788c
 8000fbc:	2000779c 	.word	0x2000779c
 8000fc0:	20006f3c 	.word	0x20006f3c
 8000fc4:	200077e4 	.word	0x200077e4
 8000fc8:	2000808c 	.word	0x2000808c

08000fcc <MX_DMA_Init>:

static void MX_DMA_Init(void)
{
 8000fcc:	b580      	push	{r7, lr}
 8000fce:	b082      	sub	sp, #8
 8000fd0:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 8000fd2:	4b10      	ldr	r3, [pc, #64]	; (8001014 <MX_DMA_Init+0x48>)
 8000fd4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fd6:	4a0f      	ldr	r2, [pc, #60]	; (8001014 <MX_DMA_Init+0x48>)
 8000fd8:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000fdc:	6313      	str	r3, [r2, #48]	; 0x30
 8000fde:	4b0d      	ldr	r3, [pc, #52]	; (8001014 <MX_DMA_Init+0x48>)
 8000fe0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fe2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8000fe6:	607b      	str	r3, [r7, #4]
 8000fe8:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  HAL_NVIC_SetPriority(DMA2_Stream4_IRQn, 0, 0);
 8000fea:	2200      	movs	r2, #0
 8000fec:	2100      	movs	r1, #0
 8000fee:	203c      	movs	r0, #60	; 0x3c
 8000ff0:	f003 f999 	bl	8004326 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream4_IRQn);
 8000ff4:	203c      	movs	r0, #60	; 0x3c
 8000ff6:	f003 f9b2 	bl	800435e <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(DMA2_Stream1_IRQn, 0, 0);
 8000ffa:	2200      	movs	r2, #0
 8000ffc:	2100      	movs	r1, #0
 8000ffe:	2039      	movs	r0, #57	; 0x39
 8001000:	f003 f991 	bl	8004326 <HAL_NVIC_SetPriority>
  HAL_NVIC_DisableIRQ(DMA2_Stream1_IRQn);
 8001004:	2039      	movs	r0, #57	; 0x39
 8001006:	f003 f9b8 	bl	800437a <HAL_NVIC_DisableIRQ>

}
 800100a:	bf00      	nop
 800100c:	3708      	adds	r7, #8
 800100e:	46bd      	mov	sp, r7
 8001010:	bd80      	pop	{r7, pc}
 8001012:	bf00      	nop
 8001014:	40023800 	.word	0x40023800

08001018 <MX_ADC1_Init>:

static void MX_ADC1_Init(void)
{
 8001018:	b580      	push	{r7, lr}
 800101a:	b084      	sub	sp, #16
 800101c:	af00      	add	r7, sp, #0
	ADC_ChannelConfTypeDef sConfig = {0};
 800101e:	463b      	mov	r3, r7
 8001020:	2200      	movs	r2, #0
 8001022:	601a      	str	r2, [r3, #0]
 8001024:	605a      	str	r2, [r3, #4]
 8001026:	609a      	str	r2, [r3, #8]
 8001028:	60da      	str	r2, [r3, #12]

	/** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
	 */
	hadc1.Instance = ADC1;
 800102a:	4b1c      	ldr	r3, [pc, #112]	; (800109c <MX_ADC1_Init+0x84>)
 800102c:	4a1c      	ldr	r2, [pc, #112]	; (80010a0 <MX_ADC1_Init+0x88>)
 800102e:	601a      	str	r2, [r3, #0]
	hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8001030:	4b1a      	ldr	r3, [pc, #104]	; (800109c <MX_ADC1_Init+0x84>)
 8001032:	2200      	movs	r2, #0
 8001034:	605a      	str	r2, [r3, #4]
	hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001036:	4b19      	ldr	r3, [pc, #100]	; (800109c <MX_ADC1_Init+0x84>)
 8001038:	2200      	movs	r2, #0
 800103a:	609a      	str	r2, [r3, #8]
	hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 800103c:	4b17      	ldr	r3, [pc, #92]	; (800109c <MX_ADC1_Init+0x84>)
 800103e:	2200      	movs	r2, #0
 8001040:	611a      	str	r2, [r3, #16]
	hadc1.Init.ContinuousConvMode = DISABLE;
 8001042:	4b16      	ldr	r3, [pc, #88]	; (800109c <MX_ADC1_Init+0x84>)
 8001044:	2200      	movs	r2, #0
 8001046:	619a      	str	r2, [r3, #24]
	hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001048:	4b14      	ldr	r3, [pc, #80]	; (800109c <MX_ADC1_Init+0x84>)
 800104a:	2200      	movs	r2, #0
 800104c:	f883 2020 	strb.w	r2, [r3, #32]
	hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001050:	4b12      	ldr	r3, [pc, #72]	; (800109c <MX_ADC1_Init+0x84>)
 8001052:	2200      	movs	r2, #0
 8001054:	62da      	str	r2, [r3, #44]	; 0x2c
	hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001056:	4b11      	ldr	r3, [pc, #68]	; (800109c <MX_ADC1_Init+0x84>)
 8001058:	4a12      	ldr	r2, [pc, #72]	; (80010a4 <MX_ADC1_Init+0x8c>)
 800105a:	629a      	str	r2, [r3, #40]	; 0x28
	hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800105c:	4b0f      	ldr	r3, [pc, #60]	; (800109c <MX_ADC1_Init+0x84>)
 800105e:	2200      	movs	r2, #0
 8001060:	60da      	str	r2, [r3, #12]
	hadc1.Init.NbrOfConversion = 1;
 8001062:	4b0e      	ldr	r3, [pc, #56]	; (800109c <MX_ADC1_Init+0x84>)
 8001064:	2201      	movs	r2, #1
 8001066:	61da      	str	r2, [r3, #28]
	hadc1.Init.DMAContinuousRequests = ENABLE;
 8001068:	4b0c      	ldr	r3, [pc, #48]	; (800109c <MX_ADC1_Init+0x84>)
 800106a:	2201      	movs	r2, #1
 800106c:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
	hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001070:	4b0a      	ldr	r3, [pc, #40]	; (800109c <MX_ADC1_Init+0x84>)
 8001072:	2201      	movs	r2, #1
 8001074:	615a      	str	r2, [r3, #20]
	if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001076:	4809      	ldr	r0, [pc, #36]	; (800109c <MX_ADC1_Init+0x84>)
 8001078:	f002 fc54 	bl	8003924 <HAL_ADC_Init>
	{

	}
	/** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
	 */
	sConfig.Channel = ADC_CHANNEL_0;
 800107c:	2300      	movs	r3, #0
 800107e:	603b      	str	r3, [r7, #0]
	sConfig.Rank = ADC_REGULAR_RANK_1;
 8001080:	2301      	movs	r3, #1
 8001082:	607b      	str	r3, [r7, #4]
	sConfig.SamplingTime = ADC_SAMPLETIME_84CYCLES;
 8001084:	2304      	movs	r3, #4
 8001086:	60bb      	str	r3, [r7, #8]
	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001088:	463b      	mov	r3, r7
 800108a:	4619      	mov	r1, r3
 800108c:	4803      	ldr	r0, [pc, #12]	; (800109c <MX_ADC1_Init+0x84>)
 800108e:	f002 fd85 	bl	8003b9c <HAL_ADC_ConfigChannel>
	{

	}


}
 8001092:	bf00      	nop
 8001094:	3710      	adds	r7, #16
 8001096:	46bd      	mov	sp, r7
 8001098:	bd80      	pop	{r7, pc}
 800109a:	bf00      	nop
 800109c:	2000779c 	.word	0x2000779c
 80010a0:	40012000 	.word	0x40012000
 80010a4:	0f000001 	.word	0x0f000001

080010a8 <MX_ADC3_Init>:
 * @brief adc3 Initialization Function
 * @param None
 * @retval None
 */
static void MX_ADC3_Init(void)
{
 80010a8:	b580      	push	{r7, lr}
 80010aa:	b084      	sub	sp, #16
 80010ac:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN adc3_Init 0 */

	/* USER CODE END adc3_Init 0 */

	ADC_ChannelConfTypeDef sConfig = {0};
 80010ae:	463b      	mov	r3, r7
 80010b0:	2200      	movs	r2, #0
 80010b2:	601a      	str	r2, [r3, #0]
 80010b4:	605a      	str	r2, [r3, #4]
 80010b6:	609a      	str	r2, [r3, #8]
 80010b8:	60da      	str	r2, [r3, #12]
	/* USER CODE BEGIN adc3_Init 1 */

	/* USER CODE END adc3_Init 1 */
	/** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
	 */
	hadc3.Instance = ADC3;
 80010ba:	4b1c      	ldr	r3, [pc, #112]	; (800112c <MX_ADC3_Init+0x84>)
 80010bc:	4a1c      	ldr	r2, [pc, #112]	; (8001130 <MX_ADC3_Init+0x88>)
 80010be:	601a      	str	r2, [r3, #0]
	hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 80010c0:	4b1a      	ldr	r3, [pc, #104]	; (800112c <MX_ADC3_Init+0x84>)
 80010c2:	2200      	movs	r2, #0
 80010c4:	605a      	str	r2, [r3, #4]
	hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 80010c6:	4b19      	ldr	r3, [pc, #100]	; (800112c <MX_ADC3_Init+0x84>)
 80010c8:	2200      	movs	r2, #0
 80010ca:	609a      	str	r2, [r3, #8]
	hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 80010cc:	4b17      	ldr	r3, [pc, #92]	; (800112c <MX_ADC3_Init+0x84>)
 80010ce:	2200      	movs	r2, #0
 80010d0:	611a      	str	r2, [r3, #16]
	hadc3.Init.ContinuousConvMode = DISABLE;
 80010d2:	4b16      	ldr	r3, [pc, #88]	; (800112c <MX_ADC3_Init+0x84>)
 80010d4:	2200      	movs	r2, #0
 80010d6:	619a      	str	r2, [r3, #24]
	hadc3.Init.DiscontinuousConvMode = DISABLE;
 80010d8:	4b14      	ldr	r3, [pc, #80]	; (800112c <MX_ADC3_Init+0x84>)
 80010da:	2200      	movs	r2, #0
 80010dc:	f883 2020 	strb.w	r2, [r3, #32]
	hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80010e0:	4b12      	ldr	r3, [pc, #72]	; (800112c <MX_ADC3_Init+0x84>)
 80010e2:	2200      	movs	r2, #0
 80010e4:	62da      	str	r2, [r3, #44]	; 0x2c
	hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80010e6:	4b11      	ldr	r3, [pc, #68]	; (800112c <MX_ADC3_Init+0x84>)
 80010e8:	4a12      	ldr	r2, [pc, #72]	; (8001134 <MX_ADC3_Init+0x8c>)
 80010ea:	629a      	str	r2, [r3, #40]	; 0x28
	hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80010ec:	4b0f      	ldr	r3, [pc, #60]	; (800112c <MX_ADC3_Init+0x84>)
 80010ee:	2200      	movs	r2, #0
 80010f0:	60da      	str	r2, [r3, #12]
	hadc3.Init.NbrOfConversion = 1;
 80010f2:	4b0e      	ldr	r3, [pc, #56]	; (800112c <MX_ADC3_Init+0x84>)
 80010f4:	2201      	movs	r2, #1
 80010f6:	61da      	str	r2, [r3, #28]
	hadc3.Init.DMAContinuousRequests = ENABLE;
 80010f8:	4b0c      	ldr	r3, [pc, #48]	; (800112c <MX_ADC3_Init+0x84>)
 80010fa:	2201      	movs	r2, #1
 80010fc:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
	hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001100:	4b0a      	ldr	r3, [pc, #40]	; (800112c <MX_ADC3_Init+0x84>)
 8001102:	2201      	movs	r2, #1
 8001104:	615a      	str	r2, [r3, #20]
	if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8001106:	4809      	ldr	r0, [pc, #36]	; (800112c <MX_ADC3_Init+0x84>)
 8001108:	f002 fc0c 	bl	8003924 <HAL_ADC_Init>
	{

	}
	/** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
	 */
	sConfig.Channel = ADC_CHANNEL_4;
 800110c:	2304      	movs	r3, #4
 800110e:	603b      	str	r3, [r7, #0]
	sConfig.Rank = ADC_REGULAR_RANK_1;
 8001110:	2301      	movs	r3, #1
 8001112:	607b      	str	r3, [r7, #4]
	sConfig.SamplingTime = ADC_SAMPLETIME_84CYCLES;
 8001114:	2304      	movs	r3, #4
 8001116:	60bb      	str	r3, [r7, #8]
	if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8001118:	463b      	mov	r3, r7
 800111a:	4619      	mov	r1, r3
 800111c:	4803      	ldr	r0, [pc, #12]	; (800112c <MX_ADC3_Init+0x84>)
 800111e:	f002 fd3d 	bl	8003b9c <HAL_ADC_ConfigChannel>
	{

	}

}
 8001122:	bf00      	nop
 8001124:	3710      	adds	r7, #16
 8001126:	46bd      	mov	sp, r7
 8001128:	bd80      	pop	{r7, pc}
 800112a:	bf00      	nop
 800112c:	200077e4 	.word	0x200077e4
 8001130:	40012200 	.word	0x40012200
 8001134:	0f000001 	.word	0x0f000001

08001138 <MX_TIM7_Init>:

static void MX_TIM7_Init(void)
{
 8001138:	b580      	push	{r7, lr}
 800113a:	b084      	sub	sp, #16
 800113c:	af00      	add	r7, sp, #0

	/* USER CODE BEGIN TIM7_Init 0 */

	/* USER CODE END TIM7_Init 0 */

	TIM_MasterConfigTypeDef sMasterConfig = {0};
 800113e:	1d3b      	adds	r3, r7, #4
 8001140:	2200      	movs	r2, #0
 8001142:	601a      	str	r2, [r3, #0]
 8001144:	605a      	str	r2, [r3, #4]
 8001146:	609a      	str	r2, [r3, #8]

	/* USER CODE BEGIN TIM7_Init 1 */
	__HAL_RCC_TIM7_CLK_ENABLE();
 8001148:	4b19      	ldr	r3, [pc, #100]	; (80011b0 <MX_TIM7_Init+0x78>)
 800114a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800114c:	4a18      	ldr	r2, [pc, #96]	; (80011b0 <MX_TIM7_Init+0x78>)
 800114e:	f043 0320 	orr.w	r3, r3, #32
 8001152:	6413      	str	r3, [r2, #64]	; 0x40
 8001154:	4b16      	ldr	r3, [pc, #88]	; (80011b0 <MX_TIM7_Init+0x78>)
 8001156:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001158:	f003 0320 	and.w	r3, r3, #32
 800115c:	603b      	str	r3, [r7, #0]
 800115e:	683b      	ldr	r3, [r7, #0]
	/* USER CODE END TIM7_Init 1 */
	htim7.Instance = TIM7;
 8001160:	4b14      	ldr	r3, [pc, #80]	; (80011b4 <MX_TIM7_Init+0x7c>)
 8001162:	4a15      	ldr	r2, [pc, #84]	; (80011b8 <MX_TIM7_Init+0x80>)
 8001164:	601a      	str	r2, [r3, #0]
	htim7.Init.Prescaler = 99;
 8001166:	4b13      	ldr	r3, [pc, #76]	; (80011b4 <MX_TIM7_Init+0x7c>)
 8001168:	2263      	movs	r2, #99	; 0x63
 800116a:	605a      	str	r2, [r3, #4]
	htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 800116c:	4b11      	ldr	r3, [pc, #68]	; (80011b4 <MX_TIM7_Init+0x7c>)
 800116e:	2200      	movs	r2, #0
 8001170:	609a      	str	r2, [r3, #8]
	htim7.Init.Period = 999;
 8001172:	4b10      	ldr	r3, [pc, #64]	; (80011b4 <MX_TIM7_Init+0x7c>)
 8001174:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001178:	60da      	str	r2, [r3, #12]
	htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 800117a:	4b0e      	ldr	r3, [pc, #56]	; (80011b4 <MX_TIM7_Init+0x7c>)
 800117c:	2280      	movs	r2, #128	; 0x80
 800117e:	619a      	str	r2, [r3, #24]
	HAL_TIM_Base_Init(&htim7);
 8001180:	480c      	ldr	r0, [pc, #48]	; (80011b4 <MX_TIM7_Init+0x7c>)
 8001182:	f006 fc88 	bl	8007a96 <HAL_TIM_Base_Init>
	sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001186:	2300      	movs	r3, #0
 8001188:	607b      	str	r3, [r7, #4]
	sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800118a:	2300      	movs	r3, #0
 800118c:	60fb      	str	r3, [r7, #12]
	if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800118e:	1d3b      	adds	r3, r7, #4
 8001190:	4619      	mov	r1, r3
 8001192:	4808      	ldr	r0, [pc, #32]	; (80011b4 <MX_TIM7_Init+0x7c>)
 8001194:	f006 fd74 	bl	8007c80 <HAL_TIMEx_MasterConfigSynchronization>
	/* USER CODE BEGIN TIM7_Init 2 */

	/* USER CODE END TIM7_Init 2 */

	/* TIM7 interrupt Init */
	HAL_NVIC_SetPriority(TIM7_IRQn, 0, 0);
 8001198:	2200      	movs	r2, #0
 800119a:	2100      	movs	r1, #0
 800119c:	2037      	movs	r0, #55	; 0x37
 800119e:	f003 f8c2 	bl	8004326 <HAL_NVIC_SetPriority>
	HAL_NVIC_EnableIRQ(TIM7_IRQn);
 80011a2:	2037      	movs	r0, #55	; 0x37
 80011a4:	f003 f8db 	bl	800435e <HAL_NVIC_EnableIRQ>
}
 80011a8:	bf00      	nop
 80011aa:	3710      	adds	r7, #16
 80011ac:	46bd      	mov	sp, r7
 80011ae:	bd80      	pop	{r7, pc}
 80011b0:	40023800 	.word	0x40023800
 80011b4:	2000808c 	.word	0x2000808c
 80011b8:	40001400 	.word	0x40001400

080011bc <HAL_ADC_MspInit>:

void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80011bc:	b580      	push	{r7, lr}
 80011be:	b08a      	sub	sp, #40	; 0x28
 80011c0:	af00      	add	r7, sp, #0
 80011c2:	6078      	str	r0, [r7, #4]

	GPIO_InitTypeDef GPIO_InitStruct;
	if(hadc->Instance==ADC1)
 80011c4:	687b      	ldr	r3, [r7, #4]
 80011c6:	681b      	ldr	r3, [r3, #0]
 80011c8:	4a53      	ldr	r2, [pc, #332]	; (8001318 <HAL_ADC_MspInit+0x15c>)
 80011ca:	4293      	cmp	r3, r2
 80011cc:	d14d      	bne.n	800126a <HAL_ADC_MspInit+0xae>
	{
		/* USER CODE BEGIN adc1_MspInit 0 */

		/* USER CODE END adc1_MspInit 0 */
		/* Peripheral clock enable */
		__HAL_RCC_ADC1_CLK_ENABLE();
 80011ce:	4b53      	ldr	r3, [pc, #332]	; (800131c <HAL_ADC_MspInit+0x160>)
 80011d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80011d2:	4a52      	ldr	r2, [pc, #328]	; (800131c <HAL_ADC_MspInit+0x160>)
 80011d4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80011d8:	6453      	str	r3, [r2, #68]	; 0x44
 80011da:	4b50      	ldr	r3, [pc, #320]	; (800131c <HAL_ADC_MspInit+0x160>)
 80011dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80011de:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80011e2:	613b      	str	r3, [r7, #16]
 80011e4:	693b      	ldr	r3, [r7, #16]

		/**adc1 GPIO Configuration
    PA0/WKUP     ------> adc1_IN0
		 */
		GPIO_InitStruct.Pin = GPIO_PIN_0;
 80011e6:	2301      	movs	r3, #1
 80011e8:	617b      	str	r3, [r7, #20]
		GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80011ea:	2303      	movs	r3, #3
 80011ec:	61bb      	str	r3, [r7, #24]
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011ee:	2300      	movs	r3, #0
 80011f0:	61fb      	str	r3, [r7, #28]
		HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80011f2:	f107 0314 	add.w	r3, r7, #20
 80011f6:	4619      	mov	r1, r3
 80011f8:	4849      	ldr	r0, [pc, #292]	; (8001320 <HAL_ADC_MspInit+0x164>)
 80011fa:	f003 fd75 	bl	8004ce8 <HAL_GPIO_Init>

		/* adc1 DMA Init */
		/* adc1 Init */
		hdma_adc1.Instance = DMA2_Stream4;
 80011fe:	4b49      	ldr	r3, [pc, #292]	; (8001324 <HAL_ADC_MspInit+0x168>)
 8001200:	4a49      	ldr	r2, [pc, #292]	; (8001328 <HAL_ADC_MspInit+0x16c>)
 8001202:	601a      	str	r2, [r3, #0]
		hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 8001204:	4b47      	ldr	r3, [pc, #284]	; (8001324 <HAL_ADC_MspInit+0x168>)
 8001206:	2200      	movs	r2, #0
 8001208:	605a      	str	r2, [r3, #4]
		hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800120a:	4b46      	ldr	r3, [pc, #280]	; (8001324 <HAL_ADC_MspInit+0x168>)
 800120c:	2200      	movs	r2, #0
 800120e:	609a      	str	r2, [r3, #8]
		hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8001210:	4b44      	ldr	r3, [pc, #272]	; (8001324 <HAL_ADC_MspInit+0x168>)
 8001212:	2200      	movs	r2, #0
 8001214:	60da      	str	r2, [r3, #12]
		hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 8001216:	4b43      	ldr	r3, [pc, #268]	; (8001324 <HAL_ADC_MspInit+0x168>)
 8001218:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800121c:	611a      	str	r2, [r3, #16]
		hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 800121e:	4b41      	ldr	r3, [pc, #260]	; (8001324 <HAL_ADC_MspInit+0x168>)
 8001220:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001224:	615a      	str	r2, [r3, #20]
		hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8001226:	4b3f      	ldr	r3, [pc, #252]	; (8001324 <HAL_ADC_MspInit+0x168>)
 8001228:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800122c:	619a      	str	r2, [r3, #24]
		hdma_adc1.Init.Mode = DMA_CIRCULAR;
 800122e:	4b3d      	ldr	r3, [pc, #244]	; (8001324 <HAL_ADC_MspInit+0x168>)
 8001230:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001234:	61da      	str	r2, [r3, #28]
		hdma_adc1.Init.Priority = DMA_PRIORITY_HIGH;
 8001236:	4b3b      	ldr	r3, [pc, #236]	; (8001324 <HAL_ADC_MspInit+0x168>)
 8001238:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800123c:	621a      	str	r2, [r3, #32]
		hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 800123e:	4b39      	ldr	r3, [pc, #228]	; (8001324 <HAL_ADC_MspInit+0x168>)
 8001240:	2204      	movs	r2, #4
 8001242:	625a      	str	r2, [r3, #36]	; 0x24
		hdma_adc1.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
 8001244:	4b37      	ldr	r3, [pc, #220]	; (8001324 <HAL_ADC_MspInit+0x168>)
 8001246:	2203      	movs	r2, #3
 8001248:	629a      	str	r2, [r3, #40]	; 0x28
		hdma_adc1.Init.MemBurst = DMA_MBURST_SINGLE;
 800124a:	4b36      	ldr	r3, [pc, #216]	; (8001324 <HAL_ADC_MspInit+0x168>)
 800124c:	2200      	movs	r2, #0
 800124e:	62da      	str	r2, [r3, #44]	; 0x2c
		hdma_adc1.Init.PeriphBurst = DMA_PBURST_SINGLE;
 8001250:	4b34      	ldr	r3, [pc, #208]	; (8001324 <HAL_ADC_MspInit+0x168>)
 8001252:	2200      	movs	r2, #0
 8001254:	631a      	str	r2, [r3, #48]	; 0x30

		if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8001256:	4833      	ldr	r0, [pc, #204]	; (8001324 <HAL_ADC_MspInit+0x168>)
 8001258:	f003 f926 	bl	80044a8 <HAL_DMA_Init>
		{

		}

		__HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 800125c:	687b      	ldr	r3, [r7, #4]
 800125e:	4a31      	ldr	r2, [pc, #196]	; (8001324 <HAL_ADC_MspInit+0x168>)
 8001260:	639a      	str	r2, [r3, #56]	; 0x38
 8001262:	4a30      	ldr	r2, [pc, #192]	; (8001324 <HAL_ADC_MspInit+0x168>)
 8001264:	687b      	ldr	r3, [r7, #4]
 8001266:	6393      	str	r3, [r2, #56]	; 0x38
		/* USER CODE BEGIN adc3_MspInit 1 */

		/* USER CODE END adc3_MspInit 1 */
	}

}
 8001268:	e052      	b.n	8001310 <HAL_ADC_MspInit+0x154>
	else if(hadc->Instance==ADC3)
 800126a:	687b      	ldr	r3, [r7, #4]
 800126c:	681b      	ldr	r3, [r3, #0]
 800126e:	4a2f      	ldr	r2, [pc, #188]	; (800132c <HAL_ADC_MspInit+0x170>)
 8001270:	4293      	cmp	r3, r2
 8001272:	d14d      	bne.n	8001310 <HAL_ADC_MspInit+0x154>
		__HAL_RCC_ADC3_CLK_ENABLE();
 8001274:	4b29      	ldr	r3, [pc, #164]	; (800131c <HAL_ADC_MspInit+0x160>)
 8001276:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001278:	4a28      	ldr	r2, [pc, #160]	; (800131c <HAL_ADC_MspInit+0x160>)
 800127a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800127e:	6453      	str	r3, [r2, #68]	; 0x44
 8001280:	4b26      	ldr	r3, [pc, #152]	; (800131c <HAL_ADC_MspInit+0x160>)
 8001282:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001284:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001288:	60fb      	str	r3, [r7, #12]
 800128a:	68fb      	ldr	r3, [r7, #12]
		GPIO_InitStruct.Pin = GPIO_PIN_0;
 800128c:	2301      	movs	r3, #1
 800128e:	617b      	str	r3, [r7, #20]
		GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001290:	2303      	movs	r3, #3
 8001292:	61bb      	str	r3, [r7, #24]
		GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001294:	2300      	movs	r3, #0
 8001296:	61fb      	str	r3, [r7, #28]
		HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001298:	f107 0314 	add.w	r3, r7, #20
 800129c:	4619      	mov	r1, r3
 800129e:	4824      	ldr	r0, [pc, #144]	; (8001330 <HAL_ADC_MspInit+0x174>)
 80012a0:	f003 fd22 	bl	8004ce8 <HAL_GPIO_Init>
		hdma_adc3.Instance = DMA2_Stream1;
 80012a4:	4b23      	ldr	r3, [pc, #140]	; (8001334 <HAL_ADC_MspInit+0x178>)
 80012a6:	4a24      	ldr	r2, [pc, #144]	; (8001338 <HAL_ADC_MspInit+0x17c>)
 80012a8:	601a      	str	r2, [r3, #0]
		hdma_adc3.Init.Channel = DMA_CHANNEL_2;
 80012aa:	4b22      	ldr	r3, [pc, #136]	; (8001334 <HAL_ADC_MspInit+0x178>)
 80012ac:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80012b0:	605a      	str	r2, [r3, #4]
		hdma_adc3.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80012b2:	4b20      	ldr	r3, [pc, #128]	; (8001334 <HAL_ADC_MspInit+0x178>)
 80012b4:	2200      	movs	r2, #0
 80012b6:	609a      	str	r2, [r3, #8]
		hdma_adc3.Init.PeriphInc = DMA_PINC_DISABLE;
 80012b8:	4b1e      	ldr	r3, [pc, #120]	; (8001334 <HAL_ADC_MspInit+0x178>)
 80012ba:	2200      	movs	r2, #0
 80012bc:	60da      	str	r2, [r3, #12]
		hdma_adc3.Init.MemInc = DMA_MINC_ENABLE;
 80012be:	4b1d      	ldr	r3, [pc, #116]	; (8001334 <HAL_ADC_MspInit+0x178>)
 80012c0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80012c4:	611a      	str	r2, [r3, #16]
		hdma_adc3.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80012c6:	4b1b      	ldr	r3, [pc, #108]	; (8001334 <HAL_ADC_MspInit+0x178>)
 80012c8:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80012cc:	615a      	str	r2, [r3, #20]
		hdma_adc3.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 80012ce:	4b19      	ldr	r3, [pc, #100]	; (8001334 <HAL_ADC_MspInit+0x178>)
 80012d0:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80012d4:	619a      	str	r2, [r3, #24]
		hdma_adc3.Init.Mode = DMA_CIRCULAR;
 80012d6:	4b17      	ldr	r3, [pc, #92]	; (8001334 <HAL_ADC_MspInit+0x178>)
 80012d8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80012dc:	61da      	str	r2, [r3, #28]
		hdma_adc3.Init.Priority = DMA_PRIORITY_MEDIUM;
 80012de:	4b15      	ldr	r3, [pc, #84]	; (8001334 <HAL_ADC_MspInit+0x178>)
 80012e0:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80012e4:	621a      	str	r2, [r3, #32]
		hdma_adc3.Init.FIFOMode = DMA_FIFOMODE_ENABLE;
 80012e6:	4b13      	ldr	r3, [pc, #76]	; (8001334 <HAL_ADC_MspInit+0x178>)
 80012e8:	2204      	movs	r2, #4
 80012ea:	625a      	str	r2, [r3, #36]	; 0x24
		hdma_adc3.Init.FIFOThreshold = DMA_FIFO_THRESHOLD_FULL;
 80012ec:	4b11      	ldr	r3, [pc, #68]	; (8001334 <HAL_ADC_MspInit+0x178>)
 80012ee:	2203      	movs	r2, #3
 80012f0:	629a      	str	r2, [r3, #40]	; 0x28
		hdma_adc3.Init.MemBurst = DMA_MBURST_SINGLE;
 80012f2:	4b10      	ldr	r3, [pc, #64]	; (8001334 <HAL_ADC_MspInit+0x178>)
 80012f4:	2200      	movs	r2, #0
 80012f6:	62da      	str	r2, [r3, #44]	; 0x2c
		hdma_adc3.Init.PeriphBurst = DMA_PBURST_SINGLE;
 80012f8:	4b0e      	ldr	r3, [pc, #56]	; (8001334 <HAL_ADC_MspInit+0x178>)
 80012fa:	2200      	movs	r2, #0
 80012fc:	631a      	str	r2, [r3, #48]	; 0x30
		HAL_DMA_Init(&hdma_adc3);
 80012fe:	480d      	ldr	r0, [pc, #52]	; (8001334 <HAL_ADC_MspInit+0x178>)
 8001300:	f003 f8d2 	bl	80044a8 <HAL_DMA_Init>
		__HAL_LINKDMA(hadc,DMA_Handle,hdma_adc3);
 8001304:	687b      	ldr	r3, [r7, #4]
 8001306:	4a0b      	ldr	r2, [pc, #44]	; (8001334 <HAL_ADC_MspInit+0x178>)
 8001308:	639a      	str	r2, [r3, #56]	; 0x38
 800130a:	4a0a      	ldr	r2, [pc, #40]	; (8001334 <HAL_ADC_MspInit+0x178>)
 800130c:	687b      	ldr	r3, [r7, #4]
 800130e:	6393      	str	r3, [r2, #56]	; 0x38
}
 8001310:	bf00      	nop
 8001312:	3728      	adds	r7, #40	; 0x28
 8001314:	46bd      	mov	sp, r7
 8001316:	bd80      	pop	{r7, pc}
 8001318:	40012000 	.word	0x40012000
 800131c:	40023800 	.word	0x40023800
 8001320:	40020000 	.word	0x40020000
 8001324:	2000782c 	.word	0x2000782c
 8001328:	40026470 	.word	0x40026470
 800132c:	40012200 	.word	0x40012200
 8001330:	40021400 	.word	0x40021400
 8001334:	2000773c 	.word	0x2000773c
 8001338:	40026428 	.word	0x40026428

0800133c <TIM7_IRQHandler>:

void TIM7_IRQHandler(void) {
 800133c:	b480      	push	{r7}
 800133e:	af00      	add	r7, sp, #0
	//HAL_TIM_IRQHandler(&htim7);

	__HAL_TIM_CLEAR_IT(&htim7, TIM_IT_UPDATE);
 8001340:	4b0c      	ldr	r3, [pc, #48]	; (8001374 <TIM7_IRQHandler+0x38>)
 8001342:	681b      	ldr	r3, [r3, #0]
 8001344:	f06f 0201 	mvn.w	r2, #1
 8001348:	611a      	str	r2, [r3, #16]
	hadc3.Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800134a:	4b0b      	ldr	r3, [pc, #44]	; (8001378 <TIM7_IRQHandler+0x3c>)
 800134c:	681b      	ldr	r3, [r3, #0]
 800134e:	689a      	ldr	r2, [r3, #8]
 8001350:	4b09      	ldr	r3, [pc, #36]	; (8001378 <TIM7_IRQHandler+0x3c>)
 8001352:	681b      	ldr	r3, [r3, #0]
 8001354:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8001358:	609a      	str	r2, [r3, #8]
	hadc1.Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800135a:	4b08      	ldr	r3, [pc, #32]	; (800137c <TIM7_IRQHandler+0x40>)
 800135c:	681b      	ldr	r3, [r3, #0]
 800135e:	689a      	ldr	r2, [r3, #8]
 8001360:	4b06      	ldr	r3, [pc, #24]	; (800137c <TIM7_IRQHandler+0x40>)
 8001362:	681b      	ldr	r3, [r3, #0]
 8001364:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8001368:	609a      	str	r2, [r3, #8]
}
 800136a:	bf00      	nop
 800136c:	46bd      	mov	sp, r7
 800136e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001372:	4770      	bx	lr
 8001374:	2000808c 	.word	0x2000808c
 8001378:	200077e4 	.word	0x200077e4
 800137c:	2000779c 	.word	0x2000779c

08001380 <DMA2_Stream4_IRQHandler>:


/**
 * @brief This function handles DMA2 stream0 global interrupt.
 */
void DMA2_Stream4_IRQHandler(void) {
 8001380:	b580      	push	{r7, lr}
 8001382:	af00      	add	r7, sp, #0
	HAL_DMA_IRQHandler(&hdma_adc1);
 8001384:	4802      	ldr	r0, [pc, #8]	; (8001390 <DMA2_Stream4_IRQHandler+0x10>)
 8001386:	f003 f9fb 	bl	8004780 <HAL_DMA_IRQHandler>
}
 800138a:	bf00      	nop
 800138c:	bd80      	pop	{r7, pc}
 800138e:	bf00      	nop
 8001390:	2000782c 	.word	0x2000782c

08001394 <DMA2_Stream1_IRQHandler>:
void DMA2_Stream1_IRQHandler(void) {
 8001394:	b580      	push	{r7, lr}
 8001396:	af00      	add	r7, sp, #0
	HAL_DMA_IRQHandler(&hdma_adc3);
 8001398:	4802      	ldr	r0, [pc, #8]	; (80013a4 <DMA2_Stream1_IRQHandler+0x10>)
 800139a:	f003 f9f1 	bl	8004780 <HAL_DMA_IRQHandler>
}
 800139e:	bf00      	nop
 80013a0:	bd80      	pop	{r7, pc}
 80013a2:	bf00      	nop
 80013a4:	2000773c 	.word	0x2000773c

080013a8 <calculate_RMS>:


uint16_t *pdata=0;
uint16_t *pdata2=0;

float calculate_RMS(uint16_t* pSamples, uint16_t len,int ind_i , int ind_f ) {
 80013a8:	b580      	push	{r7, lr}
 80013aa:	b086      	sub	sp, #24
 80013ac:	af00      	add	r7, sp, #0
 80013ae:	60f8      	str	r0, [r7, #12]
 80013b0:	607a      	str	r2, [r7, #4]
 80013b2:	603b      	str	r3, [r7, #0]
 80013b4:	460b      	mov	r3, r1
 80013b6:	817b      	strh	r3, [r7, #10]

	int i=0;
 80013b8:	2300      	movs	r3, #0
 80013ba:	617b      	str	r3, [r7, #20]
	float RMS=0;
 80013bc:	f04f 0300 	mov.w	r3, #0
 80013c0:	613b      	str	r3, [r7, #16]

	for(i=ind_i; i<ind_f; i++)
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	617b      	str	r3, [r7, #20]
 80013c6:	e019      	b.n	80013fc <calculate_RMS+0x54>
	{
		RMS +=pSamples[i]*pSamples[i];
 80013c8:	697b      	ldr	r3, [r7, #20]
 80013ca:	005b      	lsls	r3, r3, #1
 80013cc:	68fa      	ldr	r2, [r7, #12]
 80013ce:	4413      	add	r3, r2
 80013d0:	881b      	ldrh	r3, [r3, #0]
 80013d2:	4619      	mov	r1, r3
 80013d4:	697b      	ldr	r3, [r7, #20]
 80013d6:	005b      	lsls	r3, r3, #1
 80013d8:	68fa      	ldr	r2, [r7, #12]
 80013da:	4413      	add	r3, r2
 80013dc:	881b      	ldrh	r3, [r3, #0]
 80013de:	fb03 f301 	mul.w	r3, r3, r1
 80013e2:	ee07 3a90 	vmov	s15, r3
 80013e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80013ea:	ed97 7a04 	vldr	s14, [r7, #16]
 80013ee:	ee77 7a27 	vadd.f32	s15, s14, s15
 80013f2:	edc7 7a04 	vstr	s15, [r7, #16]
	for(i=ind_i; i<ind_f; i++)
 80013f6:	697b      	ldr	r3, [r7, #20]
 80013f8:	3301      	adds	r3, #1
 80013fa:	617b      	str	r3, [r7, #20]
 80013fc:	697a      	ldr	r2, [r7, #20]
 80013fe:	683b      	ldr	r3, [r7, #0]
 8001400:	429a      	cmp	r2, r3
 8001402:	dbe1      	blt.n	80013c8 <calculate_RMS+0x20>
	}

	RMS=sqrt(RMS/(ind_f-ind_i));
 8001404:	683a      	ldr	r2, [r7, #0]
 8001406:	687b      	ldr	r3, [r7, #4]
 8001408:	1ad3      	subs	r3, r2, r3
 800140a:	ee07 3a90 	vmov	s15, r3
 800140e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001412:	ed97 7a04 	vldr	s14, [r7, #16]
 8001416:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800141a:	ee16 0a90 	vmov	r0, s13
 800141e:	f7ff f8b3 	bl	8000588 <__aeabi_f2d>
 8001422:	4602      	mov	r2, r0
 8001424:	460b      	mov	r3, r1
 8001426:	ec43 2b10 	vmov	d0, r2, r3
 800142a:	f017 f8df 	bl	80185ec <sqrt>
 800142e:	ec53 2b10 	vmov	r2, r3, d0
 8001432:	4610      	mov	r0, r2
 8001434:	4619      	mov	r1, r3
 8001436:	f7ff fbd7 	bl	8000be8 <__aeabi_d2f>
 800143a:	4603      	mov	r3, r0
 800143c:	613b      	str	r3, [r7, #16]
	return RMS;
 800143e:	693b      	ldr	r3, [r7, #16]
 8001440:	ee07 3a90 	vmov	s15, r3
}
 8001444:	eeb0 0a67 	vmov.f32	s0, s15
 8001448:	3718      	adds	r7, #24
 800144a:	46bd      	mov	sp, r7
 800144c:	bd80      	pop	{r7, pc}

0800144e <calculate_mean>:

float calculate_mean(uint16_t* pSamples, uint16_t len,int ind_i , int ind_f) {
 800144e:	b480      	push	{r7}
 8001450:	b087      	sub	sp, #28
 8001452:	af00      	add	r7, sp, #0
 8001454:	60f8      	str	r0, [r7, #12]
 8001456:	607a      	str	r2, [r7, #4]
 8001458:	603b      	str	r3, [r7, #0]
 800145a:	460b      	mov	r3, r1
 800145c:	817b      	strh	r3, [r7, #10]

	int i=0;
 800145e:	2300      	movs	r3, #0
 8001460:	617b      	str	r3, [r7, #20]
	float mean=0;
 8001462:	f04f 0300 	mov.w	r3, #0
 8001466:	613b      	str	r3, [r7, #16]
	for(i=ind_i; i<ind_f; i++)
 8001468:	687b      	ldr	r3, [r7, #4]
 800146a:	617b      	str	r3, [r7, #20]
 800146c:	e011      	b.n	8001492 <calculate_mean+0x44>
	{
		mean +=pSamples[i];
 800146e:	697b      	ldr	r3, [r7, #20]
 8001470:	005b      	lsls	r3, r3, #1
 8001472:	68fa      	ldr	r2, [r7, #12]
 8001474:	4413      	add	r3, r2
 8001476:	881b      	ldrh	r3, [r3, #0]
 8001478:	ee07 3a90 	vmov	s15, r3
 800147c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001480:	ed97 7a04 	vldr	s14, [r7, #16]
 8001484:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001488:	edc7 7a04 	vstr	s15, [r7, #16]
	for(i=ind_i; i<ind_f; i++)
 800148c:	697b      	ldr	r3, [r7, #20]
 800148e:	3301      	adds	r3, #1
 8001490:	617b      	str	r3, [r7, #20]
 8001492:	697a      	ldr	r2, [r7, #20]
 8001494:	683b      	ldr	r3, [r7, #0]
 8001496:	429a      	cmp	r2, r3
 8001498:	dbe9      	blt.n	800146e <calculate_mean+0x20>
	}
	mean=mean/(ind_f-ind_i);
 800149a:	683a      	ldr	r2, [r7, #0]
 800149c:	687b      	ldr	r3, [r7, #4]
 800149e:	1ad3      	subs	r3, r2, r3
 80014a0:	ee07 3a90 	vmov	s15, r3
 80014a4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80014a8:	edd7 6a04 	vldr	s13, [r7, #16]
 80014ac:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80014b0:	edc7 7a04 	vstr	s15, [r7, #16]
	return mean;
 80014b4:	693b      	ldr	r3, [r7, #16]
 80014b6:	ee07 3a90 	vmov	s15, r3
}
 80014ba:	eeb0 0a67 	vmov.f32	s0, s15
 80014be:	371c      	adds	r7, #28
 80014c0:	46bd      	mov	sp, r7
 80014c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014c6:	4770      	bx	lr

080014c8 <HAL_ADC_ConvHalfCpltCallback>:


void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* p){
 80014c8:	b480      	push	{r7}
 80014ca:	b083      	sub	sp, #12
 80014cc:	af00      	add	r7, sp, #0
 80014ce:	6078      	str	r0, [r7, #4]


	if(pdata!=0)
 80014d0:	4b07      	ldr	r3, [pc, #28]	; (80014f0 <HAL_ADC_ConvHalfCpltCallback+0x28>)
 80014d2:	681b      	ldr	r3, [r3, #0]
 80014d4:	2b00      	cmp	r3, #0
 80014d6:	d105      	bne.n	80014e4 <HAL_ADC_ConvHalfCpltCallback+0x1c>
	{
		//while(1);
	}
	else{

		pdata = &ch1[0];
 80014d8:	4b05      	ldr	r3, [pc, #20]	; (80014f0 <HAL_ADC_ConvHalfCpltCallback+0x28>)
 80014da:	4a06      	ldr	r2, [pc, #24]	; (80014f4 <HAL_ADC_ConvHalfCpltCallback+0x2c>)
 80014dc:	601a      	str	r2, [r3, #0]
		pdata2=&ch2[0];
 80014de:	4b06      	ldr	r3, [pc, #24]	; (80014f8 <HAL_ADC_ConvHalfCpltCallback+0x30>)
 80014e0:	4a06      	ldr	r2, [pc, #24]	; (80014fc <HAL_ADC_ConvHalfCpltCallback+0x34>)
 80014e2:	601a      	str	r2, [r3, #0]

	}
}
 80014e4:	bf00      	nop
 80014e6:	370c      	adds	r7, #12
 80014e8:	46bd      	mov	sp, r7
 80014ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014ee:	4770      	bx	lr
 80014f0:	20000e80 	.word	0x20000e80
 80014f4:	2000788c 	.word	0x2000788c
 80014f8:	20000e84 	.word	0x20000e84
 80014fc:	20006f3c 	.word	0x20006f3c

08001500 <HAL_ADC_ConvCpltCallback>:

void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef * p){
 8001500:	b480      	push	{r7}
 8001502:	b083      	sub	sp, #12
 8001504:	af00      	add	r7, sp, #0
 8001506:	6078      	str	r0, [r7, #4]
	if (pdata!=0){
 8001508:	4b07      	ldr	r3, [pc, #28]	; (8001528 <HAL_ADC_ConvCpltCallback+0x28>)
 800150a:	681b      	ldr	r3, [r3, #0]
 800150c:	2b00      	cmp	r3, #0
 800150e:	d105      	bne.n	800151c <HAL_ADC_ConvCpltCallback+0x1c>
		//elaborazione ancora in corso
		//while(1);
	} else
	{
		pdata= &ch1[ADC_BUFFER_SIZE/2];
 8001510:	4b05      	ldr	r3, [pc, #20]	; (8001528 <HAL_ADC_ConvCpltCallback+0x28>)
 8001512:	4a06      	ldr	r2, [pc, #24]	; (800152c <HAL_ADC_ConvCpltCallback+0x2c>)
 8001514:	601a      	str	r2, [r3, #0]
		pdata2=&ch2[ADC_BUFFER_SIZE/2];
 8001516:	4b06      	ldr	r3, [pc, #24]	; (8001530 <HAL_ADC_ConvCpltCallback+0x30>)
 8001518:	4a06      	ldr	r2, [pc, #24]	; (8001534 <HAL_ADC_ConvCpltCallback+0x34>)
 800151a:	601a      	str	r2, [r3, #0]
	}
}
 800151c:	bf00      	nop
 800151e:	370c      	adds	r7, #12
 8001520:	46bd      	mov	sp, r7
 8001522:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001526:	4770      	bx	lr
 8001528:	20000e80 	.word	0x20000e80
 800152c:	20007c8c 	.word	0x20007c8c
 8001530:	20000e84 	.word	0x20000e84
 8001534:	2000733c 	.word	0x2000733c

08001538 <elabora>:

volatile float RMS=0,mean=0,valore_efficace=0;

void elabora(void) {
 8001538:	b580      	push	{r7, lr}
 800153a:	b084      	sub	sp, #16
 800153c:	af00      	add	r7, sp, #0
	int ind_i=0;
 800153e:	2300      	movs	r3, #0
 8001540:	60fb      	str	r3, [r7, #12]
	int ind_f=0;
 8001542:	2300      	movs	r3, #0
 8001544:	60bb      	str	r3, [r7, #8]
	uint16_t trig=0;
 8001546:	2300      	movs	r3, #0
 8001548:	80fb      	strh	r3, [r7, #6]
	int discesa_salita=0;
 800154a:	2300      	movs	r3, #0
 800154c:	603b      	str	r3, [r7, #0]


	if (pdata!=0)
 800154e:	4b1c      	ldr	r3, [pc, #112]	; (80015c0 <elabora+0x88>)
 8001550:	681b      	ldr	r3, [r3, #0]
 8001552:	2b00      	cmp	r3, #0
 8001554:	d030      	beq.n	80015b8 <elabora+0x80>
	{

		ind_i= Cross(pdata, ADC_BUFFER_SIZE/2, trig, discesa_salita);
 8001556:	4b1a      	ldr	r3, [pc, #104]	; (80015c0 <elabora+0x88>)
 8001558:	6818      	ldr	r0, [r3, #0]
 800155a:	88fa      	ldrh	r2, [r7, #6]
 800155c:	683b      	ldr	r3, [r7, #0]
 800155e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001562:	f000 ffab 	bl	80024bc <Cross>
 8001566:	4603      	mov	r3, r0
 8001568:	60fb      	str	r3, [r7, #12]
		ind_f= ReverseCross(pdata, ADC_BUFFER_SIZE/2, trig, discesa_salita);
 800156a:	4b15      	ldr	r3, [pc, #84]	; (80015c0 <elabora+0x88>)
 800156c:	6818      	ldr	r0, [r3, #0]
 800156e:	88fa      	ldrh	r2, [r7, #6]
 8001570:	683b      	ldr	r3, [r7, #0]
 8001572:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001576:	f001 f83a 	bl	80025ee <ReverseCross>
 800157a:	4603      	mov	r3, r0
 800157c:	60bb      	str	r3, [r7, #8]
		RMS=calculate_RMS(pdata, ADC_BUFFER_SIZE/2, ind_i,ind_f);
 800157e:	4b10      	ldr	r3, [pc, #64]	; (80015c0 <elabora+0x88>)
 8001580:	6818      	ldr	r0, [r3, #0]
 8001582:	68bb      	ldr	r3, [r7, #8]
 8001584:	68fa      	ldr	r2, [r7, #12]
 8001586:	f44f 7100 	mov.w	r1, #512	; 0x200
 800158a:	f7ff ff0d 	bl	80013a8 <calculate_RMS>
 800158e:	eef0 7a40 	vmov.f32	s15, s0
 8001592:	4b0c      	ldr	r3, [pc, #48]	; (80015c4 <elabora+0x8c>)
 8001594:	edc3 7a00 	vstr	s15, [r3]
		mean=calculate_mean(pdata, ADC_BUFFER_SIZE/2, ind_i,ind_f);
 8001598:	4b09      	ldr	r3, [pc, #36]	; (80015c0 <elabora+0x88>)
 800159a:	6818      	ldr	r0, [r3, #0]
 800159c:	68bb      	ldr	r3, [r7, #8]
 800159e:	68fa      	ldr	r2, [r7, #12]
 80015a0:	f44f 7100 	mov.w	r1, #512	; 0x200
 80015a4:	f7ff ff53 	bl	800144e <calculate_mean>
 80015a8:	eef0 7a40 	vmov.f32	s15, s0
 80015ac:	4b06      	ldr	r3, [pc, #24]	; (80015c8 <elabora+0x90>)
 80015ae:	edc3 7a00 	vstr	s15, [r3]



		pdata=0;
 80015b2:	4b03      	ldr	r3, [pc, #12]	; (80015c0 <elabora+0x88>)
 80015b4:	2200      	movs	r2, #0
 80015b6:	601a      	str	r2, [r3, #0]

	}

}
 80015b8:	bf00      	nop
 80015ba:	3710      	adds	r7, #16
 80015bc:	46bd      	mov	sp, r7
 80015be:	bd80      	pop	{r7, pc}
 80015c0:	20000e80 	.word	0x20000e80
 80015c4:	20000e88 	.word	0x20000e88
 80015c8:	20000e8c 	.word	0x20000e8c

080015cc <SCB_EnableICache>:
/**
  \brief   Enable I-Cache
  \details Turns on I-Cache
  */
__STATIC_INLINE void SCB_EnableICache (void)
{
 80015cc:	b480      	push	{r7}
 80015ce:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80015d0:	f3bf 8f4f 	dsb	sy
}
 80015d4:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80015d6:	f3bf 8f6f 	isb	sy
}
 80015da:	bf00      	nop
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 80015dc:	4b0d      	ldr	r3, [pc, #52]	; (8001614 <SCB_EnableICache+0x48>)
 80015de:	2200      	movs	r2, #0
 80015e0:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 80015e4:	f3bf 8f4f 	dsb	sy
}
 80015e8:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80015ea:	f3bf 8f6f 	isb	sy
}
 80015ee:	bf00      	nop
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 80015f0:	4b08      	ldr	r3, [pc, #32]	; (8001614 <SCB_EnableICache+0x48>)
 80015f2:	695b      	ldr	r3, [r3, #20]
 80015f4:	4a07      	ldr	r2, [pc, #28]	; (8001614 <SCB_EnableICache+0x48>)
 80015f6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80015fa:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 80015fc:	f3bf 8f4f 	dsb	sy
}
 8001600:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001602:	f3bf 8f6f 	isb	sy
}
 8001606:	bf00      	nop
    __DSB();
    __ISB();
  #endif
}
 8001608:	bf00      	nop
 800160a:	46bd      	mov	sp, r7
 800160c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001610:	4770      	bx	lr
 8001612:	bf00      	nop
 8001614:	e000ed00 	.word	0xe000ed00

08001618 <SCB_EnableDCache>:
/**
  \brief   Enable D-Cache
  \details Turns on D-Cache
  */
__STATIC_INLINE void SCB_EnableDCache (void)
{
 8001618:	b480      	push	{r7}
 800161a:	b085      	sub	sp, #20
 800161c:	af00      	add	r7, sp, #0
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 800161e:	4b1f      	ldr	r3, [pc, #124]	; (800169c <SCB_EnableDCache+0x84>)
 8001620:	2200      	movs	r2, #0
 8001622:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001626:	f3bf 8f4f 	dsb	sy
}
 800162a:	bf00      	nop
    __DSB();

    ccsidr = SCB->CCSIDR;
 800162c:	4b1b      	ldr	r3, [pc, #108]	; (800169c <SCB_EnableDCache+0x84>)
 800162e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001632:	607b      	str	r3, [r7, #4]

                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8001634:	687b      	ldr	r3, [r7, #4]
 8001636:	0b5b      	lsrs	r3, r3, #13
 8001638:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800163c:	60fb      	str	r3, [r7, #12]
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800163e:	687b      	ldr	r3, [r7, #4]
 8001640:	08db      	lsrs	r3, r3, #3
 8001642:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8001646:	60bb      	str	r3, [r7, #8]
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8001648:	68fb      	ldr	r3, [r7, #12]
 800164a:	015a      	lsls	r2, r3, #5
 800164c:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 8001650:	4013      	ands	r3, r2
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 8001652:	68ba      	ldr	r2, [r7, #8]
 8001654:	0792      	lsls	r2, r2, #30
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8001656:	4911      	ldr	r1, [pc, #68]	; (800169c <SCB_EnableDCache+0x84>)
 8001658:	4313      	orrs	r3, r2
 800165a:	f8c1 3260 	str.w	r3, [r1, #608]	; 0x260
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 800165e:	68bb      	ldr	r3, [r7, #8]
 8001660:	1e5a      	subs	r2, r3, #1
 8001662:	60ba      	str	r2, [r7, #8]
 8001664:	2b00      	cmp	r3, #0
 8001666:	d1ef      	bne.n	8001648 <SCB_EnableDCache+0x30>
    } while(sets-- != 0U);
 8001668:	68fb      	ldr	r3, [r7, #12]
 800166a:	1e5a      	subs	r2, r3, #1
 800166c:	60fa      	str	r2, [r7, #12]
 800166e:	2b00      	cmp	r3, #0
 8001670:	d1e5      	bne.n	800163e <SCB_EnableDCache+0x26>
  __ASM volatile ("dsb 0xF":::"memory");
 8001672:	f3bf 8f4f 	dsb	sy
}
 8001676:	bf00      	nop
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 8001678:	4b08      	ldr	r3, [pc, #32]	; (800169c <SCB_EnableDCache+0x84>)
 800167a:	695b      	ldr	r3, [r3, #20]
 800167c:	4a07      	ldr	r2, [pc, #28]	; (800169c <SCB_EnableDCache+0x84>)
 800167e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001682:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8001684:	f3bf 8f4f 	dsb	sy
}
 8001688:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800168a:	f3bf 8f6f 	isb	sy
}
 800168e:	bf00      	nop

    __DSB();
    __ISB();
  #endif
}
 8001690:	bf00      	nop
 8001692:	3714      	adds	r7, #20
 8001694:	46bd      	mov	sp, r7
 8001696:	f85d 7b04 	ldr.w	r7, [sp], #4
 800169a:	4770      	bx	lr
 800169c:	e000ed00 	.word	0xe000ed00

080016a0 <manage_gesture>:
}


uint32_t sensitivity_timer = 0;

void manage_gesture(Gesture_t *gesture) {   // COMPITO DELL'UTENTE
 80016a0:	b580      	push	{r7, lr}
 80016a2:	b082      	sub	sp, #8
 80016a4:	af00      	add	r7, sp, #0
 80016a6:	6078      	str	r0, [r7, #4]
	if (HAL_GetTick() - sensitivity_timer < 100) {	//acceco la gestione delle gesture per 100ms
 80016a8:	f002 f90c 	bl	80038c4 <HAL_GetTick>
 80016ac:	4602      	mov	r2, r0
 80016ae:	4b28      	ldr	r3, [pc, #160]	; (8001750 <manage_gesture+0xb0>)
 80016b0:	681b      	ldr	r3, [r3, #0]
 80016b2:	1ad3      	subs	r3, r2, r3
 80016b4:	2b63      	cmp	r3, #99	; 0x63
 80016b6:	d943      	bls.n	8001740 <manage_gesture+0xa0>
		return;
	}
	sensitivity_timer = HAL_GetTick();
 80016b8:	f002 f904 	bl	80038c4 <HAL_GetTick>
 80016bc:	4603      	mov	r3, r0
 80016be:	4a24      	ldr	r2, [pc, #144]	; (8001750 <manage_gesture+0xb0>)
 80016c0:	6013      	str	r3, [r2, #0]

	switch(gesture->id) {
 80016c2:	687b      	ldr	r3, [r7, #4]
 80016c4:	781b      	ldrb	r3, [r3, #0]
 80016c6:	2b09      	cmp	r3, #9
 80016c8:	d83f      	bhi.n	800174a <manage_gesture+0xaa>
 80016ca:	a201      	add	r2, pc, #4	; (adr r2, 80016d0 <manage_gesture+0x30>)
 80016cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80016d0:	080016f9 	.word	0x080016f9
 80016d4:	080016fd 	.word	0x080016fd
 80016d8:	08001701 	.word	0x08001701
 80016dc:	08001705 	.word	0x08001705
 80016e0:	08001709 	.word	0x08001709
 80016e4:	0800171d 	.word	0x0800171d
 80016e8:	08001731 	.word	0x08001731
 80016ec:	08001735 	.word	0x08001735
 80016f0:	08001739 	.word	0x08001739
 80016f4:	0800173d 	.word	0x0800173d
	case GEST_NONE:	//LE COORDINATE NON SONO SIGNIFICATIVE
		asm("nop");
 80016f8:	bf00      	nop
		break;
 80016fa:	e026      	b.n	800174a <manage_gesture+0xaa>
	case GEST_TOUCH:
		asm("nop");
 80016fc:	bf00      	nop
		break;
 80016fe:	e024      	b.n	800174a <manage_gesture+0xaa>
	case GEST_MOVE_UP:

		asm("nop");
 8001700:	bf00      	nop
		break;
 8001702:	e022      	b.n	800174a <manage_gesture+0xaa>
	case GEST_MOVE_DOWN:

		asm("nop");
 8001704:	bf00      	nop
		break;
 8001706:	e020      	b.n	800174a <manage_gesture+0xaa>
	case GEST_MOVE_LEFT:
		if (page < 3) page++;
 8001708:	4b12      	ldr	r3, [pc, #72]	; (8001754 <manage_gesture+0xb4>)
 800170a:	681b      	ldr	r3, [r3, #0]
 800170c:	2b02      	cmp	r3, #2
 800170e:	dc19      	bgt.n	8001744 <manage_gesture+0xa4>
 8001710:	4b10      	ldr	r3, [pc, #64]	; (8001754 <manage_gesture+0xb4>)
 8001712:	681b      	ldr	r3, [r3, #0]
 8001714:	3301      	adds	r3, #1
 8001716:	4a0f      	ldr	r2, [pc, #60]	; (8001754 <manage_gesture+0xb4>)
 8001718:	6013      	str	r3, [r2, #0]
		break;
 800171a:	e013      	b.n	8001744 <manage_gesture+0xa4>
	case GEST_MOVE_RIGHT:
		if (page > 0) page--;
 800171c:	4b0d      	ldr	r3, [pc, #52]	; (8001754 <manage_gesture+0xb4>)
 800171e:	681b      	ldr	r3, [r3, #0]
 8001720:	2b00      	cmp	r3, #0
 8001722:	dd11      	ble.n	8001748 <manage_gesture+0xa8>
 8001724:	4b0b      	ldr	r3, [pc, #44]	; (8001754 <manage_gesture+0xb4>)
 8001726:	681b      	ldr	r3, [r3, #0]
 8001728:	3b01      	subs	r3, #1
 800172a:	4a0a      	ldr	r2, [pc, #40]	; (8001754 <manage_gesture+0xb4>)
 800172c:	6013      	str	r3, [r2, #0]
		break;
 800172e:	e00b      	b.n	8001748 <manage_gesture+0xa8>

	case GEST_SPREAD_X:
		asm("nop");
 8001730:	bf00      	nop
		break;
 8001732:	e00a      	b.n	800174a <manage_gesture+0xaa>

	case GEST_PINCH_X:
		asm("nop");
 8001734:	bf00      	nop
		break;
 8001736:	e008      	b.n	800174a <manage_gesture+0xaa>

	case GEST_SPREAD_Y:

		asm("nop");
 8001738:	bf00      	nop
		break;
 800173a:	e006      	b.n	800174a <manage_gesture+0xaa>

	case GEST_PINCH_Y:

		asm("nop");
 800173c:	bf00      	nop
		break;
 800173e:	e004      	b.n	800174a <manage_gesture+0xaa>
		return;
 8001740:	bf00      	nop
 8001742:	e002      	b.n	800174a <manage_gesture+0xaa>
		break;
 8001744:	bf00      	nop
 8001746:	e000      	b.n	800174a <manage_gesture+0xaa>
		break;
 8001748:	bf00      	nop
	}
};
 800174a:	3708      	adds	r7, #8
 800174c:	46bd      	mov	sp, r7
 800174e:	bd80      	pop	{r7, pc}
 8001750:	20000e94 	.word	0x20000e94
 8001754:	20000e90 	.word	0x20000e90

08001758 <main>:
 * @brief  Main program
 * @param  None
 * @retval None
 */
int main(void)
{
 8001758:	b580      	push	{r7, lr}
 800175a:	b08e      	sub	sp, #56	; 0x38
 800175c:	af02      	add	r7, sp, #8
	int elapsed_ticks = 0;
 800175e:	2300      	movs	r3, #0
 8001760:	62fb      	str	r3, [r7, #44]	; 0x2c

	char buff[40]="";
 8001762:	2300      	movs	r3, #0
 8001764:	607b      	str	r3, [r7, #4]
 8001766:	f107 0308 	add.w	r3, r7, #8
 800176a:	2224      	movs	r2, #36	; 0x24
 800176c:	2100      	movs	r1, #0
 800176e:	4618      	mov	r0, r3
 8001770:	f014 f8c0 	bl	80158f4 <memset>
	MPU_Config();
 8001774:	f000 faea 	bl	8001d4c <MPU_Config>

	/* Enable the CPU Cache */
	CPU_CACHE_Enable();
 8001778:	f000 fae0 	bl	8001d3c <CPU_CACHE_Enable>
       - Configure the Flash ART accelerator on ITCM interface
       - Configure the Systick to generate an interrupt each 1 msec
       - Set NVIC Group Priority to 4
       - Global MSP (MCU Support Package) initialization
	 */
	HAL_Init();
 800177c:	f002 f848 	bl	8003810 <HAL_Init>

	/* Configure the system clock to 200 MHz */
	SystemClock_Config();
 8001780:	f000 f8c8 	bl	8001914 <SystemClock_Config>

	/* Configure LED1 */
	BSP_LED_Init(LED1);
 8001784:	2000      	movs	r0, #0
 8001786:	f001 fa1d 	bl	8002bc4 <BSP_LED_Init>

	/***********************************************************/
	MX_GPIO_Init();
 800178a:	f000 f911 	bl	80019b0 <MX_GPIO_Init>
	adc_init();
 800178e:	f7ff fbf7 	bl	8000f80 <adc_init>
	GUI_initialize(manage_gesture);
 8001792:	4853      	ldr	r0, [pc, #332]	; (80018e0 <main+0x188>)
 8001794:	f008 f8ba 	bl	800990c <GUI_initialize>
	GUI_setOrizzontalAxisLabel("Time [ms]");
	GUI_setVerticalAxisLabel("Amplitude [V]");
#endif
	/* Infinite loop */
	for(;;) {
		if (HAL_GetTick() - elapsed_ticks > 100) {
 8001798:	f002 f894 	bl	80038c4 <HAL_GetTick>
 800179c:	4602      	mov	r2, r0
 800179e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80017a0:	1ad3      	subs	r3, r2, r3
 80017a2:	2b64      	cmp	r3, #100	; 0x64
 80017a4:	d9f8      	bls.n	8001798 <main+0x40>
			elapsed_ticks = HAL_GetTick();
 80017a6:	f002 f88d 	bl	80038c4 <HAL_GetTick>
 80017aa:	4603      	mov	r3, r0
 80017ac:	62fb      	str	r3, [r7, #44]	; 0x2c

#if	TXT_UI
			switch(page) {
 80017ae:	4b4d      	ldr	r3, [pc, #308]	; (80018e4 <main+0x18c>)
 80017b0:	681b      	ldr	r3, [r3, #0]
 80017b2:	2b02      	cmp	r3, #2
 80017b4:	d052      	beq.n	800185c <main+0x104>
 80017b6:	2b02      	cmp	r3, #2
 80017b8:	f300 8085 	bgt.w	80018c6 <main+0x16e>
 80017bc:	2b00      	cmp	r3, #0
 80017be:	d002      	beq.n	80017c6 <main+0x6e>
 80017c0:	2b01      	cmp	r3, #1
 80017c2:	d025      	beq.n	8001810 <main+0xb8>
 80017c4:	e07f      	b.n	80018c6 <main+0x16e>
				case 0:
					sprintf(buff, "Vrms[V] = %.4f", 230.0);
 80017c6:	1d38      	adds	r0, r7, #4
 80017c8:	a341      	add	r3, pc, #260	; (adr r3, 80018d0 <main+0x178>)
 80017ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017ce:	4946      	ldr	r1, [pc, #280]	; (80018e8 <main+0x190>)
 80017d0:	f014 fd02 	bl	80161d8 <siprintf>
					GUI_setTextValue(buff, TXT_1RAW);
 80017d4:	1d3b      	adds	r3, r7, #4
 80017d6:	2100      	movs	r1, #0
 80017d8:	4618      	mov	r0, r3
 80017da:	f008 fc19 	bl	800a010 <GUI_setTextValue>
					sprintf(buff, "P [W]    = %.4f", 230*10.0);
 80017de:	1d38      	adds	r0, r7, #4
 80017e0:	a33d      	add	r3, pc, #244	; (adr r3, 80018d8 <main+0x180>)
 80017e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017e6:	4941      	ldr	r1, [pc, #260]	; (80018ec <main+0x194>)
 80017e8:	f014 fcf6 	bl	80161d8 <siprintf>
					GUI_setTextValue(buff, TXT_2RAW);
 80017ec:	1d3b      	adds	r3, r7, #4
 80017ee:	2101      	movs	r1, #1
 80017f0:	4618      	mov	r0, r3
 80017f2:	f008 fc0d 	bl	800a010 <GUI_setTextValue>
					sprintf(buff, "S[VA]    = %.4f", 1.0);
 80017f6:	1d38      	adds	r0, r7, #4
 80017f8:	f04f 0200 	mov.w	r2, #0
 80017fc:	4b3c      	ldr	r3, [pc, #240]	; (80018f0 <main+0x198>)
 80017fe:	493d      	ldr	r1, [pc, #244]	; (80018f4 <main+0x19c>)
 8001800:	f014 fcea 	bl	80161d8 <siprintf>
					GUI_setTextValue(buff, TXT_3RAW);
 8001804:	1d3b      	adds	r3, r7, #4
 8001806:	2102      	movs	r1, #2
 8001808:	4618      	mov	r0, r3
 800180a:	f008 fc01 	bl	800a010 <GUI_setTextValue>
					break;
 800180e:	e05a      	b.n	80018c6 <main+0x16e>
				case 1:
					sprintf(buff, "Irms[A] = %.4f", 10.0);
 8001810:	1d38      	adds	r0, r7, #4
 8001812:	f04f 0200 	mov.w	r2, #0
 8001816:	4b38      	ldr	r3, [pc, #224]	; (80018f8 <main+0x1a0>)
 8001818:	4938      	ldr	r1, [pc, #224]	; (80018fc <main+0x1a4>)
 800181a:	f014 fcdd 	bl	80161d8 <siprintf>
					GUI_setTextValue(buff, TXT_1RAW);
 800181e:	1d3b      	adds	r3, r7, #4
 8001820:	2100      	movs	r1, #0
 8001822:	4618      	mov	r0, r3
 8001824:	f008 fbf4 	bl	800a010 <GUI_setTextValue>
					sprintf(buff, "Q [var] = %.4f", 0.0);
 8001828:	1d38      	adds	r0, r7, #4
 800182a:	f04f 0200 	mov.w	r2, #0
 800182e:	f04f 0300 	mov.w	r3, #0
 8001832:	4933      	ldr	r1, [pc, #204]	; (8001900 <main+0x1a8>)
 8001834:	f014 fcd0 	bl	80161d8 <siprintf>
					GUI_setTextValue(buff, TXT_2RAW);
 8001838:	1d3b      	adds	r3, r7, #4
 800183a:	2101      	movs	r1, #1
 800183c:	4618      	mov	r0, r3
 800183e:	f008 fbe7 	bl	800a010 <GUI_setTextValue>
					sprintf(buff, "P.F.    = %.4f", 1.0);
 8001842:	1d38      	adds	r0, r7, #4
 8001844:	f04f 0200 	mov.w	r2, #0
 8001848:	4b29      	ldr	r3, [pc, #164]	; (80018f0 <main+0x198>)
 800184a:	492e      	ldr	r1, [pc, #184]	; (8001904 <main+0x1ac>)
 800184c:	f014 fcc4 	bl	80161d8 <siprintf>
					GUI_setTextValue(buff, TXT_3RAW);
 8001850:	1d3b      	adds	r3, r7, #4
 8001852:	2102      	movs	r1, #2
 8001854:	4618      	mov	r0, r3
 8001856:	f008 fbdb 	bl	800a010 <GUI_setTextValue>
					break;
 800185a:	e034      	b.n	80018c6 <main+0x16e>
				case 2:
					sprintf(buff, "Vrms[V] = %.2f   Irms[A] = %.2f", 230.0, 10.0);
 800185c:	1d38      	adds	r0, r7, #4
 800185e:	f04f 0200 	mov.w	r2, #0
 8001862:	4b25      	ldr	r3, [pc, #148]	; (80018f8 <main+0x1a0>)
 8001864:	e9cd 2300 	strd	r2, r3, [sp]
 8001868:	a319      	add	r3, pc, #100	; (adr r3, 80018d0 <main+0x178>)
 800186a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800186e:	4926      	ldr	r1, [pc, #152]	; (8001908 <main+0x1b0>)
 8001870:	f014 fcb2 	bl	80161d8 <siprintf>
					GUI_setTextValue(buff, TXT_1RAW);
 8001874:	1d3b      	adds	r3, r7, #4
 8001876:	2100      	movs	r1, #0
 8001878:	4618      	mov	r0, r3
 800187a:	f008 fbc9 	bl	800a010 <GUI_setTextValue>
					sprintf(buff, "P [W]    = %.2f   Q [var] = %.2f", 230*10.0, 0.0);
 800187e:	1d38      	adds	r0, r7, #4
 8001880:	f04f 0200 	mov.w	r2, #0
 8001884:	f04f 0300 	mov.w	r3, #0
 8001888:	e9cd 2300 	strd	r2, r3, [sp]
 800188c:	a312      	add	r3, pc, #72	; (adr r3, 80018d8 <main+0x180>)
 800188e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001892:	491e      	ldr	r1, [pc, #120]	; (800190c <main+0x1b4>)
 8001894:	f014 fca0 	bl	80161d8 <siprintf>
					GUI_setTextValue(buff, TXT_2RAW);
 8001898:	1d3b      	adds	r3, r7, #4
 800189a:	2101      	movs	r1, #1
 800189c:	4618      	mov	r0, r3
 800189e:	f008 fbb7 	bl	800a010 <GUI_setTextValue>
					sprintf(buff, "S[VA]    = %.2f   P.F.    = %.2f", 230*10.0, 1.0);
 80018a2:	1d38      	adds	r0, r7, #4
 80018a4:	f04f 0200 	mov.w	r2, #0
 80018a8:	4b11      	ldr	r3, [pc, #68]	; (80018f0 <main+0x198>)
 80018aa:	e9cd 2300 	strd	r2, r3, [sp]
 80018ae:	a30a      	add	r3, pc, #40	; (adr r3, 80018d8 <main+0x180>)
 80018b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80018b4:	4916      	ldr	r1, [pc, #88]	; (8001910 <main+0x1b8>)
 80018b6:	f014 fc8f 	bl	80161d8 <siprintf>
					GUI_setTextValue(buff, TXT_3RAW);
 80018ba:	1d3b      	adds	r3, r7, #4
 80018bc:	2102      	movs	r1, #2
 80018be:	4618      	mov	r0, r3
 80018c0:	f008 fba6 	bl	800a010 <GUI_setTextValue>
					break;
 80018c4:	bf00      	nop
#else
			sine_wave(4000, 2000, dataToPlot, 1000);
			GUI_DrawChartAutoscale(dataToPlot, 1000, 1);
#endif

			GUI_poll();
 80018c6:	f008 fb95 	bl	8009ff4 <GUI_poll>
			elabora();
 80018ca:	f7ff fe35 	bl	8001538 <elabora>
		if (HAL_GetTick() - elapsed_ticks > 100) {
 80018ce:	e763      	b.n	8001798 <main+0x40>
 80018d0:	00000000 	.word	0x00000000
 80018d4:	406cc000 	.word	0x406cc000
 80018d8:	00000000 	.word	0x00000000
 80018dc:	40a1f800 	.word	0x40a1f800
 80018e0:	080016a1 	.word	0x080016a1
 80018e4:	20000e90 	.word	0x20000e90
 80018e8:	080187d8 	.word	0x080187d8
 80018ec:	080187e8 	.word	0x080187e8
 80018f0:	3ff00000 	.word	0x3ff00000
 80018f4:	080187f8 	.word	0x080187f8
 80018f8:	40240000 	.word	0x40240000
 80018fc:	08018808 	.word	0x08018808
 8001900:	08018818 	.word	0x08018818
 8001904:	08018828 	.word	0x08018828
 8001908:	08018838 	.word	0x08018838
 800190c:	08018858 	.word	0x08018858
 8001910:	0801887c 	.word	0x0801887c

08001914 <SystemClock_Config>:
 *            Flash Latency(WS)              = 6
 * @param  None
 * @retval None
 */
static void SystemClock_Config(void)
{
 8001914:	b580      	push	{r7, lr}
 8001916:	b092      	sub	sp, #72	; 0x48
 8001918:	af00      	add	r7, sp, #0
	RCC_ClkInitTypeDef RCC_ClkInitStruct;
	RCC_OscInitTypeDef RCC_OscInitStruct;
	HAL_StatusTypeDef ret = HAL_OK;
 800191a:	2300      	movs	r3, #0
 800191c:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47

	/* Enable HSE Oscillator and activate PLL with HSE as source */
	RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001920:	2301      	movs	r3, #1
 8001922:	603b      	str	r3, [r7, #0]
	RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001924:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001928:	607b      	str	r3, [r7, #4]
	RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800192a:	2302      	movs	r3, #2
 800192c:	61bb      	str	r3, [r7, #24]
	RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800192e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001932:	61fb      	str	r3, [r7, #28]
	RCC_OscInitStruct.PLL.PLLM = 25;
 8001934:	2319      	movs	r3, #25
 8001936:	623b      	str	r3, [r7, #32]
	RCC_OscInitStruct.PLL.PLLN = 400;
 8001938:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800193c:	627b      	str	r3, [r7, #36]	; 0x24
	RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800193e:	2302      	movs	r3, #2
 8001940:	62bb      	str	r3, [r7, #40]	; 0x28
	RCC_OscInitStruct.PLL.PLLQ = 8;
 8001942:	2308      	movs	r3, #8
 8001944:	62fb      	str	r3, [r7, #44]	; 0x2c

	ret = HAL_RCC_OscConfig(&RCC_OscInitStruct);
 8001946:	463b      	mov	r3, r7
 8001948:	4618      	mov	r0, r3
 800194a:	f004 fff1 	bl	8006930 <HAL_RCC_OscConfig>
 800194e:	4603      	mov	r3, r0
 8001950:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
	if(ret != HAL_OK)
 8001954:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 8001958:	2b00      	cmp	r3, #0
 800195a:	d000      	beq.n	800195e <SystemClock_Config+0x4a>
	{
		while(1) { ; }
 800195c:	e7fe      	b.n	800195c <SystemClock_Config+0x48>
	}

	/* Activate the OverDrive to reach the 200 MHz Frequency */
	ret = HAL_PWREx_EnableOverDrive();
 800195e:	f004 ff97 	bl	8006890 <HAL_PWREx_EnableOverDrive>
 8001962:	4603      	mov	r3, r0
 8001964:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
	if(ret != HAL_OK)
 8001968:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 800196c:	2b00      	cmp	r3, #0
 800196e:	d000      	beq.n	8001972 <SystemClock_Config+0x5e>
	{
		while(1) { ; }
 8001970:	e7fe      	b.n	8001970 <SystemClock_Config+0x5c>
	}

	/* Select PLL as system clock source and configure the HCLK, PCLK1 and PCLK2 clocks dividers */
	RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2);
 8001972:	230f      	movs	r3, #15
 8001974:	633b      	str	r3, [r7, #48]	; 0x30
	RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001976:	2302      	movs	r3, #2
 8001978:	637b      	str	r3, [r7, #52]	; 0x34
	RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800197a:	2300      	movs	r3, #0
 800197c:	63bb      	str	r3, [r7, #56]	; 0x38
	RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800197e:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8001982:	63fb      	str	r3, [r7, #60]	; 0x3c
	RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001984:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001988:	643b      	str	r3, [r7, #64]	; 0x40

	ret = HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6);
 800198a:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800198e:	2106      	movs	r1, #6
 8001990:	4618      	mov	r0, r3
 8001992:	f005 fa71 	bl	8006e78 <HAL_RCC_ClockConfig>
 8001996:	4603      	mov	r3, r0
 8001998:	f887 3047 	strb.w	r3, [r7, #71]	; 0x47
	if(ret != HAL_OK)
 800199c:	f897 3047 	ldrb.w	r3, [r7, #71]	; 0x47
 80019a0:	2b00      	cmp	r3, #0
 80019a2:	d000      	beq.n	80019a6 <SystemClock_Config+0x92>
	{
		while(1) { ; }
 80019a4:	e7fe      	b.n	80019a4 <SystemClock_Config+0x90>
	}
}
 80019a6:	bf00      	nop
 80019a8:	3748      	adds	r7, #72	; 0x48
 80019aa:	46bd      	mov	sp, r7
 80019ac:	bd80      	pop	{r7, pc}
	...

080019b0 <MX_GPIO_Init>:
 * @brief  CPU L1-Cache enable.
 * @param  None
 * @retval None
 */
static void MX_GPIO_Init(void)
{
 80019b0:	b580      	push	{r7, lr}
 80019b2:	b090      	sub	sp, #64	; 0x40
 80019b4:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct;

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOE_CLK_ENABLE();
 80019b6:	4baf      	ldr	r3, [pc, #700]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 80019b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019ba:	4aae      	ldr	r2, [pc, #696]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 80019bc:	f043 0310 	orr.w	r3, r3, #16
 80019c0:	6313      	str	r3, [r2, #48]	; 0x30
 80019c2:	4bac      	ldr	r3, [pc, #688]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 80019c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019c6:	f003 0310 	and.w	r3, r3, #16
 80019ca:	62bb      	str	r3, [r7, #40]	; 0x28
 80019cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
	__HAL_RCC_GPIOG_CLK_ENABLE();
 80019ce:	4ba9      	ldr	r3, [pc, #676]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 80019d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019d2:	4aa8      	ldr	r2, [pc, #672]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 80019d4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80019d8:	6313      	str	r3, [r2, #48]	; 0x30
 80019da:	4ba6      	ldr	r3, [pc, #664]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 80019dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019de:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80019e2:	627b      	str	r3, [r7, #36]	; 0x24
 80019e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
	__HAL_RCC_GPIOB_CLK_ENABLE();
 80019e6:	4ba3      	ldr	r3, [pc, #652]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 80019e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019ea:	4aa2      	ldr	r2, [pc, #648]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 80019ec:	f043 0302 	orr.w	r3, r3, #2
 80019f0:	6313      	str	r3, [r2, #48]	; 0x30
 80019f2:	4ba0      	ldr	r3, [pc, #640]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 80019f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019f6:	f003 0302 	and.w	r3, r3, #2
 80019fa:	623b      	str	r3, [r7, #32]
 80019fc:	6a3b      	ldr	r3, [r7, #32]
	__HAL_RCC_GPIOD_CLK_ENABLE();
 80019fe:	4b9d      	ldr	r3, [pc, #628]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a02:	4a9c      	ldr	r2, [pc, #624]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a04:	f043 0308 	orr.w	r3, r3, #8
 8001a08:	6313      	str	r3, [r2, #48]	; 0x30
 8001a0a:	4b9a      	ldr	r3, [pc, #616]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a0e:	f003 0308 	and.w	r3, r3, #8
 8001a12:	61fb      	str	r3, [r7, #28]
 8001a14:	69fb      	ldr	r3, [r7, #28]
	__HAL_RCC_GPIOC_CLK_ENABLE();
 8001a16:	4b97      	ldr	r3, [pc, #604]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a1a:	4a96      	ldr	r2, [pc, #600]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a1c:	f043 0304 	orr.w	r3, r3, #4
 8001a20:	6313      	str	r3, [r2, #48]	; 0x30
 8001a22:	4b94      	ldr	r3, [pc, #592]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a26:	f003 0304 	and.w	r3, r3, #4
 8001a2a:	61bb      	str	r3, [r7, #24]
 8001a2c:	69bb      	ldr	r3, [r7, #24]
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8001a2e:	4b91      	ldr	r3, [pc, #580]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a32:	4a90      	ldr	r2, [pc, #576]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a34:	f043 0301 	orr.w	r3, r3, #1
 8001a38:	6313      	str	r3, [r2, #48]	; 0x30
 8001a3a:	4b8e      	ldr	r3, [pc, #568]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a3e:	f003 0301 	and.w	r3, r3, #1
 8001a42:	617b      	str	r3, [r7, #20]
 8001a44:	697b      	ldr	r3, [r7, #20]
	__HAL_RCC_GPIOJ_CLK_ENABLE();
 8001a46:	4b8b      	ldr	r3, [pc, #556]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a4a:	4a8a      	ldr	r2, [pc, #552]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a4c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001a50:	6313      	str	r3, [r2, #48]	; 0x30
 8001a52:	4b88      	ldr	r3, [pc, #544]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a56:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001a5a:	613b      	str	r3, [r7, #16]
 8001a5c:	693b      	ldr	r3, [r7, #16]
	__HAL_RCC_GPIOI_CLK_ENABLE();
 8001a5e:	4b85      	ldr	r3, [pc, #532]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a62:	4a84      	ldr	r2, [pc, #528]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a64:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001a68:	6313      	str	r3, [r2, #48]	; 0x30
 8001a6a:	4b82      	ldr	r3, [pc, #520]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a6e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001a72:	60fb      	str	r3, [r7, #12]
 8001a74:	68fb      	ldr	r3, [r7, #12]
	__HAL_RCC_GPIOK_CLK_ENABLE();
 8001a76:	4b7f      	ldr	r3, [pc, #508]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a7a:	4a7e      	ldr	r2, [pc, #504]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a7c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001a80:	6313      	str	r3, [r2, #48]	; 0x30
 8001a82:	4b7c      	ldr	r3, [pc, #496]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a86:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001a8a:	60bb      	str	r3, [r7, #8]
 8001a8c:	68bb      	ldr	r3, [r7, #8]
	__HAL_RCC_GPIOF_CLK_ENABLE();
 8001a8e:	4b79      	ldr	r3, [pc, #484]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a92:	4a78      	ldr	r2, [pc, #480]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a94:	f043 0320 	orr.w	r3, r3, #32
 8001a98:	6313      	str	r3, [r2, #48]	; 0x30
 8001a9a:	4b76      	ldr	r3, [pc, #472]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001a9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a9e:	f003 0320 	and.w	r3, r3, #32
 8001aa2:	607b      	str	r3, [r7, #4]
 8001aa4:	687b      	ldr	r3, [r7, #4]
	__HAL_RCC_GPIOH_CLK_ENABLE();
 8001aa6:	4b73      	ldr	r3, [pc, #460]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001aa8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aaa:	4a72      	ldr	r2, [pc, #456]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001aac:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001ab0:	6313      	str	r3, [r2, #48]	; 0x30
 8001ab2:	4b70      	ldr	r3, [pc, #448]	; (8001c74 <MX_GPIO_Init+0x2c4>)
 8001ab4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ab6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001aba:	603b      	str	r3, [r7, #0]
 8001abc:	683b      	ldr	r3, [r7, #0]

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 8001abe:	2201      	movs	r2, #1
 8001ac0:	2120      	movs	r1, #32
 8001ac2:	486d      	ldr	r0, [pc, #436]	; (8001c78 <MX_GPIO_Init+0x2c8>)
 8001ac4:	f003 fbc8 	bl	8005258 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOI, ARDUINO_D7_Pin|ARDUINO_D8_Pin, GPIO_PIN_RESET);
 8001ac8:	2200      	movs	r2, #0
 8001aca:	210c      	movs	r1, #12
 8001acc:	486b      	ldr	r0, [pc, #428]	; (8001c7c <MX_GPIO_Init+0x2cc>)
 8001ace:	f003 fbc3 	bl	8005258 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8001ad2:	2201      	movs	r2, #1
 8001ad4:	2108      	movs	r1, #8
 8001ad6:	486a      	ldr	r0, [pc, #424]	; (8001c80 <MX_GPIO_Init+0x2d0>)
 8001ad8:	f003 fbbe 	bl	8005258 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 8001adc:	2201      	movs	r2, #1
 8001ade:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001ae2:	4866      	ldr	r0, [pc, #408]	; (8001c7c <MX_GPIO_Init+0x2cc>)
 8001ae4:	f003 fbb8 	bl	8005258 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(DCMI_PWR_EN_GPIO_Port, DCMI_PWR_EN_Pin, GPIO_PIN_RESET);
 8001ae8:	2200      	movs	r2, #0
 8001aea:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001aee:	4865      	ldr	r0, [pc, #404]	; (8001c84 <MX_GPIO_Init+0x2d4>)
 8001af0:	f003 fbb2 	bl	8005258 <HAL_GPIO_WritePin>

	/*Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIOG, ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin, GPIO_PIN_RESET);
 8001af4:	2200      	movs	r2, #0
 8001af6:	21c8      	movs	r1, #200	; 0xc8
 8001af8:	4863      	ldr	r0, [pc, #396]	; (8001c88 <MX_GPIO_Init+0x2d8>)
 8001afa:	f003 fbad 	bl	8005258 <HAL_GPIO_WritePin>

	/*Configure GPIO pin : OTG_HS_OverCurrent_Pin */
	GPIO_InitStruct.Pin = OTG_HS_OverCurrent_Pin;
 8001afe:	2308      	movs	r3, #8
 8001b00:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001b02:	2300      	movs	r3, #0
 8001b04:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b06:	2300      	movs	r3, #0
 8001b08:	637b      	str	r3, [r7, #52]	; 0x34
	HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 8001b0a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001b0e:	4619      	mov	r1, r3
 8001b10:	485e      	ldr	r0, [pc, #376]	; (8001c8c <MX_GPIO_Init+0x2dc>)
 8001b12:	f003 f8e9 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pins : ULPI_D7_Pin ULPI_D6_Pin ULPI_D5_Pin ULPI_D3_Pin
                           ULPI_D2_Pin ULPI_D1_Pin ULPI_D4_Pin */
	GPIO_InitStruct.Pin = ULPI_D7_Pin|ULPI_D6_Pin|ULPI_D5_Pin|ULPI_D3_Pin
 8001b16:	f643 4323 	movw	r3, #15395	; 0x3c23
 8001b1a:	62fb      	str	r3, [r7, #44]	; 0x2c
			|ULPI_D2_Pin|ULPI_D1_Pin|ULPI_D4_Pin;
	GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b1c:	2302      	movs	r3, #2
 8001b1e:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b20:	2300      	movs	r3, #0
 8001b22:	637b      	str	r3, [r7, #52]	; 0x34
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b24:	2303      	movs	r3, #3
 8001b26:	63bb      	str	r3, [r7, #56]	; 0x38
	GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8001b28:	230a      	movs	r3, #10
 8001b2a:	63fb      	str	r3, [r7, #60]	; 0x3c
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b2c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001b30:	4619      	mov	r1, r3
 8001b32:	4857      	ldr	r0, [pc, #348]	; (8001c90 <MX_GPIO_Init+0x2e0>)
 8001b34:	f003 f8d8 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pin : OTG_FS_VBUS_Pin */
	GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 8001b38:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001b3c:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001b3e:	2300      	movs	r3, #0
 8001b40:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b42:	2300      	movs	r3, #0
 8001b44:	637b      	str	r3, [r7, #52]	; 0x34
	HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 8001b46:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001b4a:	4619      	mov	r1, r3
 8001b4c:	4851      	ldr	r0, [pc, #324]	; (8001c94 <MX_GPIO_Init+0x2e4>)
 8001b4e:	f003 f8cb 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pin : Audio_INT_Pin */
	GPIO_InitStruct.Pin = Audio_INT_Pin;
 8001b52:	2340      	movs	r3, #64	; 0x40
 8001b54:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8001b56:	4b50      	ldr	r3, [pc, #320]	; (8001c98 <MX_GPIO_Init+0x2e8>)
 8001b58:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b5a:	2300      	movs	r3, #0
 8001b5c:	637b      	str	r3, [r7, #52]	; 0x34
	HAL_GPIO_Init(Audio_INT_GPIO_Port, &GPIO_InitStruct);
 8001b5e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001b62:	4619      	mov	r1, r3
 8001b64:	4844      	ldr	r0, [pc, #272]	; (8001c78 <MX_GPIO_Init+0x2c8>)
 8001b66:	f003 f8bf 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
	GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 8001b6a:	2320      	movs	r3, #32
 8001b6c:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001b6e:	2301      	movs	r3, #1
 8001b70:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b72:	2300      	movs	r3, #0
 8001b74:	637b      	str	r3, [r7, #52]	; 0x34
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b76:	2300      	movs	r3, #0
 8001b78:	63bb      	str	r3, [r7, #56]	; 0x38
	HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 8001b7a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001b7e:	4619      	mov	r1, r3
 8001b80:	483d      	ldr	r0, [pc, #244]	; (8001c78 <MX_GPIO_Init+0x2c8>)
 8001b82:	f003 f8b1 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pins : ARDUINO_D7_Pin ARDUINO_D8_Pin LCD_DISP_Pin */
	GPIO_InitStruct.Pin = ARDUINO_D7_Pin|ARDUINO_D8_Pin|LCD_DISP_Pin;
 8001b86:	f241 030c 	movw	r3, #4108	; 0x100c
 8001b8a:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001b8c:	2301      	movs	r3, #1
 8001b8e:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b90:	2300      	movs	r3, #0
 8001b92:	637b      	str	r3, [r7, #52]	; 0x34
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b94:	2300      	movs	r3, #0
 8001b96:	63bb      	str	r3, [r7, #56]	; 0x38
	HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001b98:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001b9c:	4619      	mov	r1, r3
 8001b9e:	4837      	ldr	r0, [pc, #220]	; (8001c7c <MX_GPIO_Init+0x2cc>)
 8001ba0:	f003 f8a2 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pin : uSD_Detect_Pin */
	GPIO_InitStruct.Pin = uSD_Detect_Pin;
 8001ba4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001ba8:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001baa:	2300      	movs	r3, #0
 8001bac:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bae:	2300      	movs	r3, #0
 8001bb0:	637b      	str	r3, [r7, #52]	; 0x34
	HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 8001bb2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001bb6:	4619      	mov	r1, r3
 8001bb8:	4838      	ldr	r0, [pc, #224]	; (8001c9c <MX_GPIO_Init+0x2ec>)
 8001bba:	f003 f895 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pin : LCD_BL_CTRL_Pin */
	GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 8001bbe:	2308      	movs	r3, #8
 8001bc0:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bc2:	2301      	movs	r3, #1
 8001bc4:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bc6:	2300      	movs	r3, #0
 8001bc8:	637b      	str	r3, [r7, #52]	; 0x34
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001bca:	2300      	movs	r3, #0
 8001bcc:	63bb      	str	r3, [r7, #56]	; 0x38
	HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 8001bce:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001bd2:	4619      	mov	r1, r3
 8001bd4:	482a      	ldr	r0, [pc, #168]	; (8001c80 <MX_GPIO_Init+0x2d0>)
 8001bd6:	f003 f887 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
	GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 8001bda:	2310      	movs	r3, #16
 8001bdc:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001bde:	2300      	movs	r3, #0
 8001be0:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001be2:	2300      	movs	r3, #0
 8001be4:	637b      	str	r3, [r7, #52]	; 0x34
	HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 8001be6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001bea:	4619      	mov	r1, r3
 8001bec:	4822      	ldr	r0, [pc, #136]	; (8001c78 <MX_GPIO_Init+0x2c8>)
 8001bee:	f003 f87b 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pins : TP3_Pin NC2_Pin */
	GPIO_InitStruct.Pin = TP3_Pin|NC2_Pin;
 8001bf2:	f248 0304 	movw	r3, #32772	; 0x8004
 8001bf6:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001bf8:	2300      	movs	r3, #0
 8001bfa:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bfc:	2300      	movs	r3, #0
 8001bfe:	637b      	str	r3, [r7, #52]	; 0x34
	HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001c00:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001c04:	4619      	mov	r1, r3
 8001c06:	481f      	ldr	r0, [pc, #124]	; (8001c84 <MX_GPIO_Init+0x2d4>)
 8001c08:	f003 f86e 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pin : DCMI_PWR_EN_Pin */
	GPIO_InitStruct.Pin = DCMI_PWR_EN_Pin;
 8001c0c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001c10:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c12:	2301      	movs	r3, #1
 8001c14:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c16:	2300      	movs	r3, #0
 8001c18:	637b      	str	r3, [r7, #52]	; 0x34
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c1a:	2300      	movs	r3, #0
 8001c1c:	63bb      	str	r3, [r7, #56]	; 0x38
	HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 8001c1e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001c22:	4619      	mov	r1, r3
 8001c24:	4817      	ldr	r0, [pc, #92]	; (8001c84 <MX_GPIO_Init+0x2d4>)
 8001c26:	f003 f85f 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pin : PI11 */
	GPIO_InitStruct.Pin = GPIO_PIN_11;
 8001c2a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001c2e:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c30:	2303      	movs	r3, #3
 8001c32:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c34:	2300      	movs	r3, #0
 8001c36:	637b      	str	r3, [r7, #52]	; 0x34
	HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001c38:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001c3c:	4619      	mov	r1, r3
 8001c3e:	480f      	ldr	r0, [pc, #60]	; (8001c7c <MX_GPIO_Init+0x2cc>)
 8001c40:	f003 f852 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pin : LCD_INT_Pin */
	GPIO_InitStruct.Pin = LCD_INT_Pin;
 8001c44:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001c48:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8001c4a:	4b13      	ldr	r3, [pc, #76]	; (8001c98 <MX_GPIO_Init+0x2e8>)
 8001c4c:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c4e:	2300      	movs	r3, #0
 8001c50:	637b      	str	r3, [r7, #52]	; 0x34
	HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 8001c52:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001c56:	4619      	mov	r1, r3
 8001c58:	4808      	ldr	r0, [pc, #32]	; (8001c7c <MX_GPIO_Init+0x2cc>)
 8001c5a:	f003 f845 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pin : ULPI_NXT_Pin */
	GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 8001c5e:	2310      	movs	r3, #16
 8001c60:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c62:	2302      	movs	r3, #2
 8001c64:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c66:	2300      	movs	r3, #0
 8001c68:	637b      	str	r3, [r7, #52]	; 0x34
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c6a:	2303      	movs	r3, #3
 8001c6c:	63bb      	str	r3, [r7, #56]	; 0x38
	GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8001c6e:	230a      	movs	r3, #10
 8001c70:	e016      	b.n	8001ca0 <MX_GPIO_Init+0x2f0>
 8001c72:	bf00      	nop
 8001c74:	40023800 	.word	0x40023800
 8001c78:	40020c00 	.word	0x40020c00
 8001c7c:	40022000 	.word	0x40022000
 8001c80:	40022800 	.word	0x40022800
 8001c84:	40021c00 	.word	0x40021c00
 8001c88:	40021800 	.word	0x40021800
 8001c8c:	40021000 	.word	0x40021000
 8001c90:	40020400 	.word	0x40020400
 8001c94:	40022400 	.word	0x40022400
 8001c98:	10120000 	.word	0x10120000
 8001c9c:	40020800 	.word	0x40020800
 8001ca0:	63fb      	str	r3, [r7, #60]	; 0x3c
	HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 8001ca2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001ca6:	4619      	mov	r1, r3
 8001ca8:	4820      	ldr	r0, [pc, #128]	; (8001d2c <MX_GPIO_Init+0x37c>)
 8001caa:	f003 f81d 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pins : ARDUINO_D4_Pin ARDUINO_D2_Pin EXT_RST_Pin */
	GPIO_InitStruct.Pin = ARDUINO_D4_Pin|ARDUINO_D2_Pin|EXT_RST_Pin;
 8001cae:	23c8      	movs	r3, #200	; 0xc8
 8001cb0:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001cb2:	2301      	movs	r3, #1
 8001cb4:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cb6:	2300      	movs	r3, #0
 8001cb8:	637b      	str	r3, [r7, #52]	; 0x34
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001cba:	2300      	movs	r3, #0
 8001cbc:	63bb      	str	r3, [r7, #56]	; 0x38
	HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001cbe:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001cc2:	4619      	mov	r1, r3
 8001cc4:	481a      	ldr	r0, [pc, #104]	; (8001d30 <MX_GPIO_Init+0x380>)
 8001cc6:	f003 f80f 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pins : ULPI_STP_Pin ULPI_DIR_Pin */
	GPIO_InitStruct.Pin = ULPI_STP_Pin|ULPI_DIR_Pin;
 8001cca:	2305      	movs	r3, #5
 8001ccc:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cce:	2302      	movs	r3, #2
 8001cd0:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cd2:	2300      	movs	r3, #0
 8001cd4:	637b      	str	r3, [r7, #52]	; 0x34
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cd6:	2303      	movs	r3, #3
 8001cd8:	63bb      	str	r3, [r7, #56]	; 0x38
	GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8001cda:	230a      	movs	r3, #10
 8001cdc:	63fb      	str	r3, [r7, #60]	; 0x3c
	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cde:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001ce2:	4619      	mov	r1, r3
 8001ce4:	4813      	ldr	r0, [pc, #76]	; (8001d34 <MX_GPIO_Init+0x384>)
 8001ce6:	f002 ffff 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pin : RMII_RXER_Pin */
	GPIO_InitStruct.Pin = RMII_RXER_Pin;
 8001cea:	2304      	movs	r3, #4
 8001cec:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001cee:	2300      	movs	r3, #0
 8001cf0:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cf2:	2300      	movs	r3, #0
 8001cf4:	637b      	str	r3, [r7, #52]	; 0x34
	HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 8001cf6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001cfa:	4619      	mov	r1, r3
 8001cfc:	480c      	ldr	r0, [pc, #48]	; (8001d30 <MX_GPIO_Init+0x380>)
 8001cfe:	f002 fff3 	bl	8004ce8 <HAL_GPIO_Init>

	/*Configure GPIO pins : ULPI_CLK_Pin ULPI_D0_Pin */
	GPIO_InitStruct.Pin = ULPI_CLK_Pin|ULPI_D0_Pin;
 8001d02:	2328      	movs	r3, #40	; 0x28
 8001d04:	62fb      	str	r3, [r7, #44]	; 0x2c
	GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d06:	2302      	movs	r3, #2
 8001d08:	633b      	str	r3, [r7, #48]	; 0x30
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d0a:	2300      	movs	r3, #0
 8001d0c:	637b      	str	r3, [r7, #52]	; 0x34
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d0e:	2303      	movs	r3, #3
 8001d10:	63bb      	str	r3, [r7, #56]	; 0x38
	GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8001d12:	230a      	movs	r3, #10
 8001d14:	63fb      	str	r3, [r7, #60]	; 0x3c
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d16:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001d1a:	4619      	mov	r1, r3
 8001d1c:	4806      	ldr	r0, [pc, #24]	; (8001d38 <MX_GPIO_Init+0x388>)
 8001d1e:	f002 ffe3 	bl	8004ce8 <HAL_GPIO_Init>
}
 8001d22:	bf00      	nop
 8001d24:	3740      	adds	r7, #64	; 0x40
 8001d26:	46bd      	mov	sp, r7
 8001d28:	bd80      	pop	{r7, pc}
 8001d2a:	bf00      	nop
 8001d2c:	40021c00 	.word	0x40021c00
 8001d30:	40021800 	.word	0x40021800
 8001d34:	40020800 	.word	0x40020800
 8001d38:	40020000 	.word	0x40020000

08001d3c <CPU_CACHE_Enable>:

static void CPU_CACHE_Enable(void)
{
 8001d3c:	b580      	push	{r7, lr}
 8001d3e:	af00      	add	r7, sp, #0
	/* Enable I-Cache */
	SCB_EnableICache();
 8001d40:	f7ff fc44 	bl	80015cc <SCB_EnableICache>

	/* Enable D-Cache */
	SCB_EnableDCache();
 8001d44:	f7ff fc68 	bl	8001618 <SCB_EnableDCache>
}
 8001d48:	bf00      	nop
 8001d4a:	bd80      	pop	{r7, pc}

08001d4c <MPU_Config>:
 *         The Region Size is 256KB, it is related to SRAM1 and SRAM2  memory size.
 * @param  None
 * @retval None
 */
static void MPU_Config(void)
{
 8001d4c:	b580      	push	{r7, lr}
 8001d4e:	b084      	sub	sp, #16
 8001d50:	af00      	add	r7, sp, #0
	MPU_Region_InitTypeDef MPU_InitStruct;

	/* Disable the MPU */
	HAL_MPU_Disable();
 8001d52:	f002 fb2d 	bl	80043b0 <HAL_MPU_Disable>

	/* Configure the MPU as Normal Non Cacheable for the SRAM1 and SRAM2 */
	MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8001d56:	2301      	movs	r3, #1
 8001d58:	703b      	strb	r3, [r7, #0]
	MPU_InitStruct.BaseAddress = 0x20010000;
 8001d5a:	4b0f      	ldr	r3, [pc, #60]	; (8001d98 <MPU_Config+0x4c>)
 8001d5c:	607b      	str	r3, [r7, #4]
	MPU_InitStruct.Size = MPU_REGION_SIZE_256KB;
 8001d5e:	2311      	movs	r3, #17
 8001d60:	723b      	strb	r3, [r7, #8]
	MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8001d62:	2303      	movs	r3, #3
 8001d64:	72fb      	strb	r3, [r7, #11]
	MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 8001d66:	2300      	movs	r3, #0
 8001d68:	73fb      	strb	r3, [r7, #15]
	MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 8001d6a:	2300      	movs	r3, #0
 8001d6c:	73bb      	strb	r3, [r7, #14]
	MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 8001d6e:	2301      	movs	r3, #1
 8001d70:	737b      	strb	r3, [r7, #13]
	MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 8001d72:	2301      	movs	r3, #1
 8001d74:	707b      	strb	r3, [r7, #1]
	MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL1;
 8001d76:	2301      	movs	r3, #1
 8001d78:	72bb      	strb	r3, [r7, #10]
	MPU_InitStruct.SubRegionDisable = 0x00;
 8001d7a:	2300      	movs	r3, #0
 8001d7c:	727b      	strb	r3, [r7, #9]
	MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 8001d7e:	2300      	movs	r3, #0
 8001d80:	733b      	strb	r3, [r7, #12]

	HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001d82:	463b      	mov	r3, r7
 8001d84:	4618      	mov	r0, r3
 8001d86:	f002 fb4b 	bl	8004420 <HAL_MPU_ConfigRegion>

	/* Enable the MPU */
	HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 8001d8a:	2004      	movs	r0, #4
 8001d8c:	f002 fb28 	bl	80043e0 <HAL_MPU_Enable>
}
 8001d90:	bf00      	nop
 8001d92:	3710      	adds	r7, #16
 8001d94:	46bd      	mov	sp, r7
 8001d96:	bd80      	pop	{r7, pc}
 8001d98:	20010000 	.word	0x20010000

08001d9c <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                                                                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001d9c:	b580      	push	{r7, lr}
 8001d9e:	b082      	sub	sp, #8
 8001da0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8001da2:	4b24      	ldr	r3, [pc, #144]	; (8001e34 <HAL_MspInit+0x98>)
 8001da4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001da6:	4a23      	ldr	r2, [pc, #140]	; (8001e34 <HAL_MspInit+0x98>)
 8001da8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001dac:	6413      	str	r3, [r2, #64]	; 0x40
 8001dae:	4b21      	ldr	r3, [pc, #132]	; (8001e34 <HAL_MspInit+0x98>)
 8001db0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001db2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001db6:	607b      	str	r3, [r7, #4]
 8001db8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001dba:	4b1e      	ldr	r3, [pc, #120]	; (8001e34 <HAL_MspInit+0x98>)
 8001dbc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001dbe:	4a1d      	ldr	r2, [pc, #116]	; (8001e34 <HAL_MspInit+0x98>)
 8001dc0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001dc4:	6453      	str	r3, [r2, #68]	; 0x44
 8001dc6:	4b1b      	ldr	r3, [pc, #108]	; (8001e34 <HAL_MspInit+0x98>)
 8001dc8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001dca:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001dce:	603b      	str	r3, [r7, #0]
 8001dd0:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001dd2:	2003      	movs	r0, #3
 8001dd4:	f002 fa9c 	bl	8004310 <HAL_NVIC_SetPriorityGrouping>

  /* System interrupt init*/
  /* MemoryManagement_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(MemoryManagement_IRQn, 0, 0);
 8001dd8:	2200      	movs	r2, #0
 8001dda:	2100      	movs	r1, #0
 8001ddc:	f06f 000b 	mvn.w	r0, #11
 8001de0:	f002 faa1 	bl	8004326 <HAL_NVIC_SetPriority>
  /* BusFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
 8001de4:	2200      	movs	r2, #0
 8001de6:	2100      	movs	r1, #0
 8001de8:	f06f 000a 	mvn.w	r0, #10
 8001dec:	f002 fa9b 	bl	8004326 <HAL_NVIC_SetPriority>
  /* UsageFault_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);
 8001df0:	2200      	movs	r2, #0
 8001df2:	2100      	movs	r1, #0
 8001df4:	f06f 0009 	mvn.w	r0, #9
 8001df8:	f002 fa95 	bl	8004326 <HAL_NVIC_SetPriority>
  /* SVCall_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SVCall_IRQn, 0, 0);
 8001dfc:	2200      	movs	r2, #0
 8001dfe:	2100      	movs	r1, #0
 8001e00:	f06f 0004 	mvn.w	r0, #4
 8001e04:	f002 fa8f 	bl	8004326 <HAL_NVIC_SetPriority>
  /* DebugMonitor_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DebugMonitor_IRQn, 0, 0);
 8001e08:	2200      	movs	r2, #0
 8001e0a:	2100      	movs	r1, #0
 8001e0c:	f06f 0003 	mvn.w	r0, #3
 8001e10:	f002 fa89 	bl	8004326 <HAL_NVIC_SetPriority>
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001e14:	2200      	movs	r2, #0
 8001e16:	210f      	movs	r1, #15
 8001e18:	f06f 0001 	mvn.w	r0, #1
 8001e1c:	f002 fa83 	bl	8004326 <HAL_NVIC_SetPriority>
  /* SysTick_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 8001e20:	2200      	movs	r2, #0
 8001e22:	210f      	movs	r1, #15
 8001e24:	f04f 30ff 	mov.w	r0, #4294967295
 8001e28:	f002 fa7d 	bl	8004326 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001e2c:	bf00      	nop
 8001e2e:	3708      	adds	r7, #8
 8001e30:	46bd      	mov	sp, r7
 8001e32:	bd80      	pop	{r7, pc}
 8001e34:	40023800 	.word	0x40023800

08001e38 <HAL_I2C_MspInit>:
  }

}
#endif
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001e38:	b580      	push	{r7, lr}
 8001e3a:	b08a      	sub	sp, #40	; 0x28
 8001e3c:	af00      	add	r7, sp, #0
 8001e3e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct;
  if(hi2c->Instance==I2C1)
 8001e40:	687b      	ldr	r3, [r7, #4]
 8001e42:	681b      	ldr	r3, [r3, #0]
 8001e44:	4a23      	ldr	r2, [pc, #140]	; (8001ed4 <HAL_I2C_MspInit+0x9c>)
 8001e46:	4293      	cmp	r3, r2
 8001e48:	d11d      	bne.n	8001e86 <HAL_I2C_MspInit+0x4e>
  
    /**I2C1 GPIO Configuration    
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA 
    */
    GPIO_InitStruct.Pin = ARDUINO_SCL_D15_Pin|ARDUINO_SDA_D14_Pin;
 8001e4a:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001e4e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001e50:	2312      	movs	r3, #18
 8001e52:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001e54:	2301      	movs	r3, #1
 8001e56:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e58:	2300      	movs	r3, #0
 8001e5a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001e5c:	2304      	movs	r3, #4
 8001e5e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e60:	f107 0314 	add.w	r3, r7, #20
 8001e64:	4619      	mov	r1, r3
 8001e66:	481c      	ldr	r0, [pc, #112]	; (8001ed8 <HAL_I2C_MspInit+0xa0>)
 8001e68:	f002 ff3e 	bl	8004ce8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001e6c:	4b1b      	ldr	r3, [pc, #108]	; (8001edc <HAL_I2C_MspInit+0xa4>)
 8001e6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e70:	4a1a      	ldr	r2, [pc, #104]	; (8001edc <HAL_I2C_MspInit+0xa4>)
 8001e72:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001e76:	6413      	str	r3, [r2, #64]	; 0x40
 8001e78:	4b18      	ldr	r3, [pc, #96]	; (8001edc <HAL_I2C_MspInit+0xa4>)
 8001e7a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e7c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001e80:	613b      	str	r3, [r7, #16]
 8001e82:	693b      	ldr	r3, [r7, #16]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001e84:	e021      	b.n	8001eca <HAL_I2C_MspInit+0x92>
  else if(hi2c->Instance==I2C3)
 8001e86:	687b      	ldr	r3, [r7, #4]
 8001e88:	681b      	ldr	r3, [r3, #0]
 8001e8a:	4a15      	ldr	r2, [pc, #84]	; (8001ee0 <HAL_I2C_MspInit+0xa8>)
 8001e8c:	4293      	cmp	r3, r2
 8001e8e:	d11c      	bne.n	8001eca <HAL_I2C_MspInit+0x92>
    GPIO_InitStruct.Pin = LCD_SCL_Pin|LCD_SDA_Pin;
 8001e90:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8001e94:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001e96:	2312      	movs	r3, #18
 8001e98:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001e9a:	2301      	movs	r3, #1
 8001e9c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e9e:	2303      	movs	r3, #3
 8001ea0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ea2:	2304      	movs	r3, #4
 8001ea4:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001ea6:	f107 0314 	add.w	r3, r7, #20
 8001eaa:	4619      	mov	r1, r3
 8001eac:	480d      	ldr	r0, [pc, #52]	; (8001ee4 <HAL_I2C_MspInit+0xac>)
 8001eae:	f002 ff1b 	bl	8004ce8 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001eb2:	4b0a      	ldr	r3, [pc, #40]	; (8001edc <HAL_I2C_MspInit+0xa4>)
 8001eb4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001eb6:	4a09      	ldr	r2, [pc, #36]	; (8001edc <HAL_I2C_MspInit+0xa4>)
 8001eb8:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001ebc:	6413      	str	r3, [r2, #64]	; 0x40
 8001ebe:	4b07      	ldr	r3, [pc, #28]	; (8001edc <HAL_I2C_MspInit+0xa4>)
 8001ec0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ec2:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001ec6:	60fb      	str	r3, [r7, #12]
 8001ec8:	68fb      	ldr	r3, [r7, #12]
}
 8001eca:	bf00      	nop
 8001ecc:	3728      	adds	r7, #40	; 0x28
 8001ece:	46bd      	mov	sp, r7
 8001ed0:	bd80      	pop	{r7, pc}
 8001ed2:	bf00      	nop
 8001ed4:	40005400 	.word	0x40005400
 8001ed8:	40020400 	.word	0x40020400
 8001edc:	40023800 	.word	0x40023800
 8001ee0:	40005c00 	.word	0x40005c00
 8001ee4:	40021c00 	.word	0x40021c00

08001ee8 <HAL_I2C_MspDeInit>:

void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001ee8:	b580      	push	{r7, lr}
 8001eea:	b082      	sub	sp, #8
 8001eec:	af00      	add	r7, sp, #0
 8001eee:	6078      	str	r0, [r7, #4]

  if(hi2c->Instance==I2C1)
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	4a11      	ldr	r2, [pc, #68]	; (8001f3c <HAL_I2C_MspDeInit+0x54>)
 8001ef6:	4293      	cmp	r3, r2
 8001ef8:	d10b      	bne.n	8001f12 <HAL_I2C_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001efa:	4b11      	ldr	r3, [pc, #68]	; (8001f40 <HAL_I2C_MspDeInit+0x58>)
 8001efc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001efe:	4a10      	ldr	r2, [pc, #64]	; (8001f40 <HAL_I2C_MspDeInit+0x58>)
 8001f00:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001f04:	6413      	str	r3, [r2, #64]	; 0x40
  
    /**I2C1 GPIO Configuration    
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA 
    */
    HAL_GPIO_DeInit(GPIOB, ARDUINO_SCL_D15_Pin|ARDUINO_SDA_D14_Pin);
 8001f06:	f44f 7140 	mov.w	r1, #768	; 0x300
 8001f0a:	480e      	ldr	r0, [pc, #56]	; (8001f44 <HAL_I2C_MspDeInit+0x5c>)
 8001f0c:	f003 f898 	bl	8005040 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C3_MspDeInit 1 */

  /* USER CODE END I2C3_MspDeInit 1 */
  }

}
 8001f10:	e00f      	b.n	8001f32 <HAL_I2C_MspDeInit+0x4a>
  else if(hi2c->Instance==I2C3)
 8001f12:	687b      	ldr	r3, [r7, #4]
 8001f14:	681b      	ldr	r3, [r3, #0]
 8001f16:	4a0c      	ldr	r2, [pc, #48]	; (8001f48 <HAL_I2C_MspDeInit+0x60>)
 8001f18:	4293      	cmp	r3, r2
 8001f1a:	d10a      	bne.n	8001f32 <HAL_I2C_MspDeInit+0x4a>
    __HAL_RCC_I2C3_CLK_DISABLE();
 8001f1c:	4b08      	ldr	r3, [pc, #32]	; (8001f40 <HAL_I2C_MspDeInit+0x58>)
 8001f1e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f20:	4a07      	ldr	r2, [pc, #28]	; (8001f40 <HAL_I2C_MspDeInit+0x58>)
 8001f22:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001f26:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOH, LCD_SCL_Pin|LCD_SDA_Pin);
 8001f28:	f44f 71c0 	mov.w	r1, #384	; 0x180
 8001f2c:	4807      	ldr	r0, [pc, #28]	; (8001f4c <HAL_I2C_MspDeInit+0x64>)
 8001f2e:	f003 f887 	bl	8005040 <HAL_GPIO_DeInit>
}
 8001f32:	bf00      	nop
 8001f34:	3708      	adds	r7, #8
 8001f36:	46bd      	mov	sp, r7
 8001f38:	bd80      	pop	{r7, pc}
 8001f3a:	bf00      	nop
 8001f3c:	40005400 	.word	0x40005400
 8001f40:	40023800 	.word	0x40023800
 8001f44:	40020400 	.word	0x40020400
 8001f48:	40005c00 	.word	0x40005c00
 8001f4c:	40021c00 	.word	0x40021c00

08001f50 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001f50:	b580      	push	{r7, lr}
 8001f52:	b088      	sub	sp, #32
 8001f54:	af00      	add	r7, sp, #0
 8001f56:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8001f58:	687b      	ldr	r3, [r7, #4]
 8001f5a:	681b      	ldr	r3, [r3, #0]
 8001f5c:	4a3e      	ldr	r2, [pc, #248]	; (8002058 <HAL_TIM_Base_MspInit+0x108>)
 8001f5e:	4293      	cmp	r3, r2
 8001f60:	d10c      	bne.n	8001f7c <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001f62:	4b3e      	ldr	r3, [pc, #248]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8001f64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f66:	4a3d      	ldr	r2, [pc, #244]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8001f68:	f043 0301 	orr.w	r3, r3, #1
 8001f6c:	6453      	str	r3, [r2, #68]	; 0x44
 8001f6e:	4b3b      	ldr	r3, [pc, #236]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8001f70:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f72:	f003 0301 	and.w	r3, r3, #1
 8001f76:	61fb      	str	r3, [r7, #28]
 8001f78:	69fb      	ldr	r3, [r7, #28]
  /* USER CODE BEGIN TIM8_MspInit 1 */

  /* USER CODE END TIM8_MspInit 1 */
  }

}
 8001f7a:	e068      	b.n	800204e <HAL_TIM_Base_MspInit+0xfe>
  else if(htim_base->Instance==TIM2)
 8001f7c:	687b      	ldr	r3, [r7, #4]
 8001f7e:	681b      	ldr	r3, [r3, #0]
 8001f80:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001f84:	d10c      	bne.n	8001fa0 <HAL_TIM_Base_MspInit+0x50>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001f86:	4b35      	ldr	r3, [pc, #212]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8001f88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f8a:	4a34      	ldr	r2, [pc, #208]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8001f8c:	f043 0301 	orr.w	r3, r3, #1
 8001f90:	6413      	str	r3, [r2, #64]	; 0x40
 8001f92:	4b32      	ldr	r3, [pc, #200]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8001f94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f96:	f003 0301 	and.w	r3, r3, #1
 8001f9a:	61bb      	str	r3, [r7, #24]
 8001f9c:	69bb      	ldr	r3, [r7, #24]
}
 8001f9e:	e056      	b.n	800204e <HAL_TIM_Base_MspInit+0xfe>
  else if(htim_base->Instance==TIM3)
 8001fa0:	687b      	ldr	r3, [r7, #4]
 8001fa2:	681b      	ldr	r3, [r3, #0]
 8001fa4:	4a2e      	ldr	r2, [pc, #184]	; (8002060 <HAL_TIM_Base_MspInit+0x110>)
 8001fa6:	4293      	cmp	r3, r2
 8001fa8:	d114      	bne.n	8001fd4 <HAL_TIM_Base_MspInit+0x84>
		__HAL_RCC_TIM3_CLK_ENABLE();
 8001faa:	4b2c      	ldr	r3, [pc, #176]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8001fac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001fae:	4a2b      	ldr	r2, [pc, #172]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8001fb0:	f043 0302 	orr.w	r3, r3, #2
 8001fb4:	6413      	str	r3, [r2, #64]	; 0x40
 8001fb6:	4b29      	ldr	r3, [pc, #164]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8001fb8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001fba:	f003 0302 	and.w	r3, r3, #2
 8001fbe:	617b      	str	r3, [r7, #20]
 8001fc0:	697b      	ldr	r3, [r7, #20]
		HAL_NVIC_SetPriority(TIM3_IRQn, 1, 1);
 8001fc2:	2201      	movs	r2, #1
 8001fc4:	2101      	movs	r1, #1
 8001fc6:	201d      	movs	r0, #29
 8001fc8:	f002 f9ad 	bl	8004326 <HAL_NVIC_SetPriority>
		HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001fcc:	201d      	movs	r0, #29
 8001fce:	f002 f9c6 	bl	800435e <HAL_NVIC_EnableIRQ>
}
 8001fd2:	e03c      	b.n	800204e <HAL_TIM_Base_MspInit+0xfe>
  else if(htim_base->Instance==TIM4)
 8001fd4:	687b      	ldr	r3, [r7, #4]
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	4a22      	ldr	r2, [pc, #136]	; (8002064 <HAL_TIM_Base_MspInit+0x114>)
 8001fda:	4293      	cmp	r3, r2
 8001fdc:	d114      	bne.n	8002008 <HAL_TIM_Base_MspInit+0xb8>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001fde:	4b1f      	ldr	r3, [pc, #124]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8001fe0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001fe2:	4a1e      	ldr	r2, [pc, #120]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8001fe4:	f043 0304 	orr.w	r3, r3, #4
 8001fe8:	6413      	str	r3, [r2, #64]	; 0x40
 8001fea:	4b1c      	ldr	r3, [pc, #112]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8001fec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001fee:	f003 0304 	and.w	r3, r3, #4
 8001ff2:	613b      	str	r3, [r7, #16]
 8001ff4:	693b      	ldr	r3, [r7, #16]
		HAL_NVIC_SetPriority(TIM4_IRQn, 0, 1);
 8001ff6:	2201      	movs	r2, #1
 8001ff8:	2100      	movs	r1, #0
 8001ffa:	201e      	movs	r0, #30
 8001ffc:	f002 f993 	bl	8004326 <HAL_NVIC_SetPriority>
		HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8002000:	201e      	movs	r0, #30
 8002002:	f002 f9ac 	bl	800435e <HAL_NVIC_EnableIRQ>
}
 8002006:	e022      	b.n	800204e <HAL_TIM_Base_MspInit+0xfe>
  else if(htim_base->Instance==TIM5)
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	681b      	ldr	r3, [r3, #0]
 800200c:	4a16      	ldr	r2, [pc, #88]	; (8002068 <HAL_TIM_Base_MspInit+0x118>)
 800200e:	4293      	cmp	r3, r2
 8002010:	d10c      	bne.n	800202c <HAL_TIM_Base_MspInit+0xdc>
    __HAL_RCC_TIM5_CLK_ENABLE();
 8002012:	4b12      	ldr	r3, [pc, #72]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8002014:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002016:	4a11      	ldr	r2, [pc, #68]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8002018:	f043 0308 	orr.w	r3, r3, #8
 800201c:	6413      	str	r3, [r2, #64]	; 0x40
 800201e:	4b0f      	ldr	r3, [pc, #60]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8002020:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002022:	f003 0308 	and.w	r3, r3, #8
 8002026:	60fb      	str	r3, [r7, #12]
 8002028:	68fb      	ldr	r3, [r7, #12]
}
 800202a:	e010      	b.n	800204e <HAL_TIM_Base_MspInit+0xfe>
  else if(htim_base->Instance==TIM8)
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	681b      	ldr	r3, [r3, #0]
 8002030:	4a0e      	ldr	r2, [pc, #56]	; (800206c <HAL_TIM_Base_MspInit+0x11c>)
 8002032:	4293      	cmp	r3, r2
 8002034:	d10b      	bne.n	800204e <HAL_TIM_Base_MspInit+0xfe>
    __HAL_RCC_TIM8_CLK_ENABLE();
 8002036:	4b09      	ldr	r3, [pc, #36]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8002038:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800203a:	4a08      	ldr	r2, [pc, #32]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 800203c:	f043 0302 	orr.w	r3, r3, #2
 8002040:	6453      	str	r3, [r2, #68]	; 0x44
 8002042:	4b06      	ldr	r3, [pc, #24]	; (800205c <HAL_TIM_Base_MspInit+0x10c>)
 8002044:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002046:	f003 0302 	and.w	r3, r3, #2
 800204a:	60bb      	str	r3, [r7, #8]
 800204c:	68bb      	ldr	r3, [r7, #8]
}
 800204e:	bf00      	nop
 8002050:	3720      	adds	r7, #32
 8002052:	46bd      	mov	sp, r7
 8002054:	bd80      	pop	{r7, pc}
 8002056:	bf00      	nop
 8002058:	40010000 	.word	0x40010000
 800205c:	40023800 	.word	0x40023800
 8002060:	40000400 	.word	0x40000400
 8002064:	40000800 	.word	0x40000800
 8002068:	40000c00 	.word	0x40000c00
 800206c:	40010400 	.word	0x40010400

08002070 <HAL_FMC_MspInit>:

}

static uint32_t FMC_Initialized = 0;

static void HAL_FMC_MspInit(void){
 8002070:	b580      	push	{r7, lr}
 8002072:	b086      	sub	sp, #24
 8002074:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct;
  if (FMC_Initialized) {
 8002076:	4b3b      	ldr	r3, [pc, #236]	; (8002164 <HAL_FMC_MspInit+0xf4>)
 8002078:	681b      	ldr	r3, [r3, #0]
 800207a:	2b00      	cmp	r3, #0
 800207c:	d16d      	bne.n	800215a <HAL_FMC_MspInit+0xea>
    return;
  }
  FMC_Initialized = 1;
 800207e:	4b39      	ldr	r3, [pc, #228]	; (8002164 <HAL_FMC_MspInit+0xf4>)
 8002080:	2201      	movs	r2, #1
 8002082:	601a      	str	r2, [r3, #0]
  /* Peripheral clock enable */
  __HAL_RCC_FMC_CLK_ENABLE();
 8002084:	4b38      	ldr	r3, [pc, #224]	; (8002168 <HAL_FMC_MspInit+0xf8>)
 8002086:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002088:	4a37      	ldr	r2, [pc, #220]	; (8002168 <HAL_FMC_MspInit+0xf8>)
 800208a:	f043 0301 	orr.w	r3, r3, #1
 800208e:	6393      	str	r3, [r2, #56]	; 0x38
 8002090:	4b35      	ldr	r3, [pc, #212]	; (8002168 <HAL_FMC_MspInit+0xf8>)
 8002092:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002094:	f003 0301 	and.w	r3, r3, #1
 8002098:	603b      	str	r3, [r7, #0]
 800209a:	683b      	ldr	r3, [r7, #0]
  PE10   ------> FMC_D7
  PE12   ------> FMC_D9
  PE15   ------> FMC_D12
  PE13   ------> FMC_D10
  */
  GPIO_InitStruct.Pin = FMC_NBL1_Pin|FMC_NBL0_Pin|FMC_D5_Pin|FMC_D6_Pin 
 800209c:	f64f 7383 	movw	r3, #65411	; 0xff83
 80020a0:	607b      	str	r3, [r7, #4]
                          |FMC_D8_Pin|FMC_D11_Pin|FMC_D4_Pin|FMC_D7_Pin 
                          |FMC_D9_Pin|FMC_D12_Pin|FMC_D10_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020a2:	2302      	movs	r3, #2
 80020a4:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020a6:	2300      	movs	r3, #0
 80020a8:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020aa:	2303      	movs	r3, #3
 80020ac:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020ae:	230c      	movs	r3, #12
 80020b0:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80020b2:	1d3b      	adds	r3, r7, #4
 80020b4:	4619      	mov	r1, r3
 80020b6:	482d      	ldr	r0, [pc, #180]	; (800216c <HAL_FMC_MspInit+0xfc>)
 80020b8:	f002 fe16 	bl	8004ce8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = FMC_SDNCAS_Pin|FMC_SDCLK_Pin|FMC_A11_Pin|FMC_A10_Pin 
 80020bc:	f248 1333 	movw	r3, #33075	; 0x8133
 80020c0:	607b      	str	r3, [r7, #4]
                          |FMC_BA1_Pin|FMC_BA0_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020c2:	2302      	movs	r3, #2
 80020c4:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020c6:	2300      	movs	r3, #0
 80020c8:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020ca:	2303      	movs	r3, #3
 80020cc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020ce:	230c      	movs	r3, #12
 80020d0:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020d2:	1d3b      	adds	r3, r7, #4
 80020d4:	4619      	mov	r1, r3
 80020d6:	4826      	ldr	r0, [pc, #152]	; (8002170 <HAL_FMC_MspInit+0x100>)
 80020d8:	f002 fe06 	bl	8004ce8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = FMC_D2_Pin|FMC_D3_Pin|FMC_D1_Pin|FMC_D15_Pin 
 80020dc:	f24c 7303 	movw	r3, #50947	; 0xc703
 80020e0:	607b      	str	r3, [r7, #4]
                          |FMC_D0_Pin|FMC_D14_Pin|FMC_D13_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020e2:	2302      	movs	r3, #2
 80020e4:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020e6:	2300      	movs	r3, #0
 80020e8:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020ea:	2303      	movs	r3, #3
 80020ec:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020ee:	230c      	movs	r3, #12
 80020f0:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020f2:	1d3b      	adds	r3, r7, #4
 80020f4:	4619      	mov	r1, r3
 80020f6:	481f      	ldr	r0, [pc, #124]	; (8002174 <HAL_FMC_MspInit+0x104>)
 80020f8:	f002 fdf6 	bl	8004ce8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = FMC_A0_Pin|FMC_A1_Pin|FMC_A2_Pin|FMC_A3_Pin 
 80020fc:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8002100:	607b      	str	r3, [r7, #4]
                          |FMC_A4_Pin|FMC_A5_Pin|FMC_A6_Pin|FMC_A9_Pin 
                          |FMC_A7_Pin|FMC_A8_Pin|FMC_SDNRAS_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002102:	2302      	movs	r3, #2
 8002104:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002106:	2300      	movs	r3, #0
 8002108:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800210a:	2303      	movs	r3, #3
 800210c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800210e:	230c      	movs	r3, #12
 8002110:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002112:	1d3b      	adds	r3, r7, #4
 8002114:	4619      	mov	r1, r3
 8002116:	4818      	ldr	r0, [pc, #96]	; (8002178 <HAL_FMC_MspInit+0x108>)
 8002118:	f002 fde6 	bl	8004ce8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = FMC_SDNME_Pin|FMC_SDNE0_Pin;
 800211c:	2328      	movs	r3, #40	; 0x28
 800211e:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002120:	2302      	movs	r3, #2
 8002122:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002124:	2300      	movs	r3, #0
 8002126:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002128:	2303      	movs	r3, #3
 800212a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800212c:	230c      	movs	r3, #12
 800212e:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8002130:	1d3b      	adds	r3, r7, #4
 8002132:	4619      	mov	r1, r3
 8002134:	4811      	ldr	r0, [pc, #68]	; (800217c <HAL_FMC_MspInit+0x10c>)
 8002136:	f002 fdd7 	bl	8004ce8 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = FMC_SDCKE0_Pin;
 800213a:	2308      	movs	r3, #8
 800213c:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800213e:	2302      	movs	r3, #2
 8002140:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002142:	2300      	movs	r3, #0
 8002144:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002146:	2303      	movs	r3, #3
 8002148:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800214a:	230c      	movs	r3, #12
 800214c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(FMC_SDCKE0_GPIO_Port, &GPIO_InitStruct);
 800214e:	1d3b      	adds	r3, r7, #4
 8002150:	4619      	mov	r1, r3
 8002152:	480b      	ldr	r0, [pc, #44]	; (8002180 <HAL_FMC_MspInit+0x110>)
 8002154:	f002 fdc8 	bl	8004ce8 <HAL_GPIO_Init>
 8002158:	e000      	b.n	800215c <HAL_FMC_MspInit+0xec>
    return;
 800215a:	bf00      	nop

  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}
 800215c:	3718      	adds	r7, #24
 800215e:	46bd      	mov	sp, r7
 8002160:	bd80      	pop	{r7, pc}
 8002162:	bf00      	nop
 8002164:	20000e98 	.word	0x20000e98
 8002168:	40023800 	.word	0x40023800
 800216c:	40021000 	.word	0x40021000
 8002170:	40021800 	.word	0x40021800
 8002174:	40020c00 	.word	0x40020c00
 8002178:	40021400 	.word	0x40021400
 800217c:	40021c00 	.word	0x40021c00
 8002180:	40020800 	.word	0x40020800

08002184 <HAL_SDRAM_MspInit>:

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002184:	b580      	push	{r7, lr}
 8002186:	b082      	sub	sp, #8
 8002188:	af00      	add	r7, sp, #0
 800218a:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SDRAM_MspInit 0 */

  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
 800218c:	f7ff ff70 	bl	8002070 <HAL_FMC_MspInit>
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002190:	bf00      	nop
 8002192:	3708      	adds	r7, #8
 8002194:	46bd      	mov	sp, r7
 8002196:	bd80      	pop	{r7, pc}

08002198 <NMI_Handler>:
/* Private define ------------------------------------------------------------*/
/* Private macro -------------------------------------------------------------*/
/* Private variables ---------------------------------------------------------*/

void NMI_Handler(void)
{
 8002198:	b480      	push	{r7}
 800219a:	af00      	add	r7, sp, #0
}
 800219c:	bf00      	nop
 800219e:	46bd      	mov	sp, r7
 80021a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021a4:	4770      	bx	lr

080021a6 <HardFault_Handler>:
 * @brief  This function handles Hard Fault exception.
 * @param  None
 * @retval None
 */
void HardFault_Handler(void)
{
 80021a6:	b480      	push	{r7}
 80021a8:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Hard Fault exception occurs */
	while (1)
 80021aa:	e7fe      	b.n	80021aa <HardFault_Handler+0x4>

080021ac <MemManage_Handler>:
 * @brief  This function handles Memory Manage exception.
 * @param  None
 * @retval None
 */
void MemManage_Handler(void)
{
 80021ac:	b480      	push	{r7}
 80021ae:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Memory Manage exception occurs */
	while (1)
 80021b0:	e7fe      	b.n	80021b0 <MemManage_Handler+0x4>

080021b2 <BusFault_Handler>:
 * @brief  This function handles Bus Fault exception.
 * @param  None
 * @retval None
 */
void BusFault_Handler(void)
{
 80021b2:	b480      	push	{r7}
 80021b4:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Bus Fault exception occurs */
	while (1)
 80021b6:	e7fe      	b.n	80021b6 <BusFault_Handler+0x4>

080021b8 <UsageFault_Handler>:
 * @brief  This function handles Usage Fault exception.
 * @param  None
 * @retval None
 */
void UsageFault_Handler(void)
{
 80021b8:	b480      	push	{r7}
 80021ba:	af00      	add	r7, sp, #0
	/* Go to infinite loop when Usage Fault exception occurs */
	while (1)
 80021bc:	e7fe      	b.n	80021bc <UsageFault_Handler+0x4>

080021be <DebugMon_Handler>:
 * @brief  This function handles Debug Monitor exception.
 * @param  None
 * @retval None
 */
void DebugMon_Handler(void)
{
 80021be:	b480      	push	{r7}
 80021c0:	af00      	add	r7, sp, #0
}
 80021c2:	bf00      	nop
 80021c4:	46bd      	mov	sp, r7
 80021c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021ca:	4770      	bx	lr

080021cc <SysTick_Handler>:
 * @brief  This function handles SysTick Handler.
 * @param  None
 * @retval None
 */
void SysTick_Handler(void)
{
 80021cc:	b580      	push	{r7, lr}
 80021ce:	af00      	add	r7, sp, #0
	/* Update the LocalTime by adding 1 ms each SysTick interrupt */
	HAL_IncTick();
 80021d0:	f001 fb64 	bl	800389c <HAL_IncTick>
	GUI_IncTick();
 80021d4:	f007 fcb6 	bl	8009b44 <GUI_IncTick>
}
 80021d8:	bf00      	nop
 80021da:	bd80      	pop	{r7, pc}

080021dc <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80021dc:	b480      	push	{r7}
 80021de:	af00      	add	r7, sp, #0
	return 1;
 80021e0:	2301      	movs	r3, #1
}
 80021e2:	4618      	mov	r0, r3
 80021e4:	46bd      	mov	sp, r7
 80021e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021ea:	4770      	bx	lr

080021ec <_kill>:

int _kill(int pid, int sig)
{
 80021ec:	b580      	push	{r7, lr}
 80021ee:	b082      	sub	sp, #8
 80021f0:	af00      	add	r7, sp, #0
 80021f2:	6078      	str	r0, [r7, #4]
 80021f4:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80021f6:	f013 fb1d 	bl	8015834 <__errno>
 80021fa:	4603      	mov	r3, r0
 80021fc:	2216      	movs	r2, #22
 80021fe:	601a      	str	r2, [r3, #0]
	return -1;
 8002200:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002204:	4618      	mov	r0, r3
 8002206:	3708      	adds	r7, #8
 8002208:	46bd      	mov	sp, r7
 800220a:	bd80      	pop	{r7, pc}

0800220c <_exit>:

void _exit (int status)
{
 800220c:	b580      	push	{r7, lr}
 800220e:	b082      	sub	sp, #8
 8002210:	af00      	add	r7, sp, #0
 8002212:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8002214:	f04f 31ff 	mov.w	r1, #4294967295
 8002218:	6878      	ldr	r0, [r7, #4]
 800221a:	f7ff ffe7 	bl	80021ec <_kill>
	while (1) {}		/* Make sure we hang here */
 800221e:	e7fe      	b.n	800221e <_exit+0x12>

08002220 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002220:	b580      	push	{r7, lr}
 8002222:	b086      	sub	sp, #24
 8002224:	af00      	add	r7, sp, #0
 8002226:	60f8      	str	r0, [r7, #12]
 8002228:	60b9      	str	r1, [r7, #8]
 800222a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800222c:	2300      	movs	r3, #0
 800222e:	617b      	str	r3, [r7, #20]
 8002230:	e00a      	b.n	8002248 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8002232:	f3af 8000 	nop.w
 8002236:	4601      	mov	r1, r0
 8002238:	68bb      	ldr	r3, [r7, #8]
 800223a:	1c5a      	adds	r2, r3, #1
 800223c:	60ba      	str	r2, [r7, #8]
 800223e:	b2ca      	uxtb	r2, r1
 8002240:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002242:	697b      	ldr	r3, [r7, #20]
 8002244:	3301      	adds	r3, #1
 8002246:	617b      	str	r3, [r7, #20]
 8002248:	697a      	ldr	r2, [r7, #20]
 800224a:	687b      	ldr	r3, [r7, #4]
 800224c:	429a      	cmp	r2, r3
 800224e:	dbf0      	blt.n	8002232 <_read+0x12>
	}

return len;
 8002250:	687b      	ldr	r3, [r7, #4]
}
 8002252:	4618      	mov	r0, r3
 8002254:	3718      	adds	r7, #24
 8002256:	46bd      	mov	sp, r7
 8002258:	bd80      	pop	{r7, pc}

0800225a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800225a:	b580      	push	{r7, lr}
 800225c:	b086      	sub	sp, #24
 800225e:	af00      	add	r7, sp, #0
 8002260:	60f8      	str	r0, [r7, #12]
 8002262:	60b9      	str	r1, [r7, #8]
 8002264:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002266:	2300      	movs	r3, #0
 8002268:	617b      	str	r3, [r7, #20]
 800226a:	e009      	b.n	8002280 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800226c:	68bb      	ldr	r3, [r7, #8]
 800226e:	1c5a      	adds	r2, r3, #1
 8002270:	60ba      	str	r2, [r7, #8]
 8002272:	781b      	ldrb	r3, [r3, #0]
 8002274:	4618      	mov	r0, r3
 8002276:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800227a:	697b      	ldr	r3, [r7, #20]
 800227c:	3301      	adds	r3, #1
 800227e:	617b      	str	r3, [r7, #20]
 8002280:	697a      	ldr	r2, [r7, #20]
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	429a      	cmp	r2, r3
 8002286:	dbf1      	blt.n	800226c <_write+0x12>
	}
	return len;
 8002288:	687b      	ldr	r3, [r7, #4]
}
 800228a:	4618      	mov	r0, r3
 800228c:	3718      	adds	r7, #24
 800228e:	46bd      	mov	sp, r7
 8002290:	bd80      	pop	{r7, pc}

08002292 <_close>:

int _close(int file)
{
 8002292:	b480      	push	{r7}
 8002294:	b083      	sub	sp, #12
 8002296:	af00      	add	r7, sp, #0
 8002298:	6078      	str	r0, [r7, #4]
	return -1;
 800229a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800229e:	4618      	mov	r0, r3
 80022a0:	370c      	adds	r7, #12
 80022a2:	46bd      	mov	sp, r7
 80022a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022a8:	4770      	bx	lr

080022aa <_fstat>:


int _fstat(int file, struct stat *st)
{
 80022aa:	b480      	push	{r7}
 80022ac:	b083      	sub	sp, #12
 80022ae:	af00      	add	r7, sp, #0
 80022b0:	6078      	str	r0, [r7, #4]
 80022b2:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80022b4:	683b      	ldr	r3, [r7, #0]
 80022b6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80022ba:	605a      	str	r2, [r3, #4]
	return 0;
 80022bc:	2300      	movs	r3, #0
}
 80022be:	4618      	mov	r0, r3
 80022c0:	370c      	adds	r7, #12
 80022c2:	46bd      	mov	sp, r7
 80022c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022c8:	4770      	bx	lr

080022ca <_isatty>:

int _isatty(int file)
{
 80022ca:	b480      	push	{r7}
 80022cc:	b083      	sub	sp, #12
 80022ce:	af00      	add	r7, sp, #0
 80022d0:	6078      	str	r0, [r7, #4]
	return 1;
 80022d2:	2301      	movs	r3, #1
}
 80022d4:	4618      	mov	r0, r3
 80022d6:	370c      	adds	r7, #12
 80022d8:	46bd      	mov	sp, r7
 80022da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022de:	4770      	bx	lr

080022e0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80022e0:	b480      	push	{r7}
 80022e2:	b085      	sub	sp, #20
 80022e4:	af00      	add	r7, sp, #0
 80022e6:	60f8      	str	r0, [r7, #12]
 80022e8:	60b9      	str	r1, [r7, #8]
 80022ea:	607a      	str	r2, [r7, #4]
	return 0;
 80022ec:	2300      	movs	r3, #0
}
 80022ee:	4618      	mov	r0, r3
 80022f0:	3714      	adds	r7, #20
 80022f2:	46bd      	mov	sp, r7
 80022f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022f8:	4770      	bx	lr
	...

080022fc <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80022fc:	b580      	push	{r7, lr}
 80022fe:	b084      	sub	sp, #16
 8002300:	af00      	add	r7, sp, #0
 8002302:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002304:	4b11      	ldr	r3, [pc, #68]	; (800234c <_sbrk+0x50>)
 8002306:	681b      	ldr	r3, [r3, #0]
 8002308:	2b00      	cmp	r3, #0
 800230a:	d102      	bne.n	8002312 <_sbrk+0x16>
		heap_end = &end;
 800230c:	4b0f      	ldr	r3, [pc, #60]	; (800234c <_sbrk+0x50>)
 800230e:	4a10      	ldr	r2, [pc, #64]	; (8002350 <_sbrk+0x54>)
 8002310:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 8002312:	4b0e      	ldr	r3, [pc, #56]	; (800234c <_sbrk+0x50>)
 8002314:	681b      	ldr	r3, [r3, #0]
 8002316:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8002318:	4b0c      	ldr	r3, [pc, #48]	; (800234c <_sbrk+0x50>)
 800231a:	681a      	ldr	r2, [r3, #0]
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	4413      	add	r3, r2
 8002320:	466a      	mov	r2, sp
 8002322:	4293      	cmp	r3, r2
 8002324:	d907      	bls.n	8002336 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8002326:	f013 fa85 	bl	8015834 <__errno>
 800232a:	4603      	mov	r3, r0
 800232c:	220c      	movs	r2, #12
 800232e:	601a      	str	r2, [r3, #0]
		return (caddr_t) -1;
 8002330:	f04f 33ff 	mov.w	r3, #4294967295
 8002334:	e006      	b.n	8002344 <_sbrk+0x48>
	}

	heap_end += incr;
 8002336:	4b05      	ldr	r3, [pc, #20]	; (800234c <_sbrk+0x50>)
 8002338:	681a      	ldr	r2, [r3, #0]
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	4413      	add	r3, r2
 800233e:	4a03      	ldr	r2, [pc, #12]	; (800234c <_sbrk+0x50>)
 8002340:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 8002342:	68fb      	ldr	r3, [r7, #12]
}
 8002344:	4618      	mov	r0, r3
 8002346:	3710      	adds	r7, #16
 8002348:	46bd      	mov	sp, r7
 800234a:	bd80      	pop	{r7, pc}
 800234c:	20000e9c 	.word	0x20000e9c
 8002350:	2002dbc0 	.word	0x2002dbc0

08002354 <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002354:	b480      	push	{r7}
 8002356:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002358:	4b15      	ldr	r3, [pc, #84]	; (80023b0 <SystemInit+0x5c>)
 800235a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800235e:	4a14      	ldr	r2, [pc, #80]	; (80023b0 <SystemInit+0x5c>)
 8002360:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002364:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8002368:	4b12      	ldr	r3, [pc, #72]	; (80023b4 <SystemInit+0x60>)
 800236a:	681b      	ldr	r3, [r3, #0]
 800236c:	4a11      	ldr	r2, [pc, #68]	; (80023b4 <SystemInit+0x60>)
 800236e:	f043 0301 	orr.w	r3, r3, #1
 8002372:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8002374:	4b0f      	ldr	r3, [pc, #60]	; (80023b4 <SystemInit+0x60>)
 8002376:	2200      	movs	r2, #0
 8002378:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 800237a:	4b0e      	ldr	r3, [pc, #56]	; (80023b4 <SystemInit+0x60>)
 800237c:	681a      	ldr	r2, [r3, #0]
 800237e:	490d      	ldr	r1, [pc, #52]	; (80023b4 <SystemInit+0x60>)
 8002380:	4b0d      	ldr	r3, [pc, #52]	; (80023b8 <SystemInit+0x64>)
 8002382:	4013      	ands	r3, r2
 8002384:	600b      	str	r3, [r1, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 8002386:	4b0b      	ldr	r3, [pc, #44]	; (80023b4 <SystemInit+0x60>)
 8002388:	4a0c      	ldr	r2, [pc, #48]	; (80023bc <SystemInit+0x68>)
 800238a:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 800238c:	4b09      	ldr	r3, [pc, #36]	; (80023b4 <SystemInit+0x60>)
 800238e:	681b      	ldr	r3, [r3, #0]
 8002390:	4a08      	ldr	r2, [pc, #32]	; (80023b4 <SystemInit+0x60>)
 8002392:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002396:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8002398:	4b06      	ldr	r3, [pc, #24]	; (80023b4 <SystemInit+0x60>)
 800239a:	2200      	movs	r2, #0
 800239c:	60da      	str	r2, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800239e:	4b04      	ldr	r3, [pc, #16]	; (80023b0 <SystemInit+0x5c>)
 80023a0:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80023a4:	609a      	str	r2, [r3, #8]
#endif
}
 80023a6:	bf00      	nop
 80023a8:	46bd      	mov	sp, r7
 80023aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023ae:	4770      	bx	lr
 80023b0:	e000ed00 	.word	0xe000ed00
 80023b4:	40023800 	.word	0x40023800
 80023b8:	fef6ffff 	.word	0xfef6ffff
 80023bc:	24003010 	.word	0x24003010

080023c0 <CrossNegative>:

#include "trigger.h"


uint16_t CrossNegative (uint16_t *pSamples, uint16_t len, uint16_t soglia)
{
 80023c0:	b480      	push	{r7}
 80023c2:	b085      	sub	sp, #20
 80023c4:	af00      	add	r7, sp, #0
 80023c6:	6078      	str	r0, [r7, #4]
 80023c8:	460b      	mov	r3, r1
 80023ca:	807b      	strh	r3, [r7, #2]
 80023cc:	4613      	mov	r3, r2
 80023ce:	803b      	strh	r3, [r7, #0]
	int k=0;
 80023d0:	2300      	movs	r3, #0
 80023d2:	60fb      	str	r3, [r7, #12]
	soglia+= HYSTERESY; //soglia superiore
 80023d4:	883b      	ldrh	r3, [r7, #0]
 80023d6:	330a      	adds	r3, #10
 80023d8:	803b      	strh	r3, [r7, #0]
	while((k < len) && (pSamples[k] < soglia))   //ci accertiamo di trovarci sopra la soglia superiore
 80023da:	e002      	b.n	80023e2 <CrossNegative+0x22>
	{
		k++;
 80023dc:	68fb      	ldr	r3, [r7, #12]
 80023de:	3301      	adds	r3, #1
 80023e0:	60fb      	str	r3, [r7, #12]
	while((k < len) && (pSamples[k] < soglia))   //ci accertiamo di trovarci sopra la soglia superiore
 80023e2:	887b      	ldrh	r3, [r7, #2]
 80023e4:	68fa      	ldr	r2, [r7, #12]
 80023e6:	429a      	cmp	r2, r3
 80023e8:	da07      	bge.n	80023fa <CrossNegative+0x3a>
 80023ea:	68fb      	ldr	r3, [r7, #12]
 80023ec:	005b      	lsls	r3, r3, #1
 80023ee:	687a      	ldr	r2, [r7, #4]
 80023f0:	4413      	add	r3, r2
 80023f2:	881b      	ldrh	r3, [r3, #0]
 80023f4:	883a      	ldrh	r2, [r7, #0]
 80023f6:	429a      	cmp	r2, r3
 80023f8:	d8f0      	bhi.n	80023dc <CrossNegative+0x1c>
	}
	soglia-= 2*HYSTERESY; //soglia inferiore
 80023fa:	883b      	ldrh	r3, [r7, #0]
 80023fc:	3b14      	subs	r3, #20
 80023fe:	803b      	strh	r3, [r7, #0]
	while((k < len) && (pSamples[k] > soglia))  //ci prendiamo l'indice nel momento in cui superioriamo la soglia inferiore
 8002400:	e002      	b.n	8002408 <CrossNegative+0x48>
	{
		k++;
 8002402:	68fb      	ldr	r3, [r7, #12]
 8002404:	3301      	adds	r3, #1
 8002406:	60fb      	str	r3, [r7, #12]
	while((k < len) && (pSamples[k] > soglia))  //ci prendiamo l'indice nel momento in cui superioriamo la soglia inferiore
 8002408:	887b      	ldrh	r3, [r7, #2]
 800240a:	68fa      	ldr	r2, [r7, #12]
 800240c:	429a      	cmp	r2, r3
 800240e:	da07      	bge.n	8002420 <CrossNegative+0x60>
 8002410:	68fb      	ldr	r3, [r7, #12]
 8002412:	005b      	lsls	r3, r3, #1
 8002414:	687a      	ldr	r2, [r7, #4]
 8002416:	4413      	add	r3, r2
 8002418:	881b      	ldrh	r3, [r3, #0]
 800241a:	883a      	ldrh	r2, [r7, #0]
 800241c:	429a      	cmp	r2, r3
 800241e:	d3f0      	bcc.n	8002402 <CrossNegative+0x42>
	}
	if(k >= len)
 8002420:	887b      	ldrh	r3, [r7, #2]
 8002422:	68fa      	ldr	r2, [r7, #12]
 8002424:	429a      	cmp	r2, r3
 8002426:	db02      	blt.n	800242e <CrossNegative+0x6e>
	{
		return -1;
 8002428:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800242c:	e001      	b.n	8002432 <CrossNegative+0x72>
	}
	else
	{
		return k;
 800242e:	68fb      	ldr	r3, [r7, #12]
 8002430:	b29b      	uxth	r3, r3
	}
}
 8002432:	4618      	mov	r0, r3
 8002434:	3714      	adds	r7, #20
 8002436:	46bd      	mov	sp, r7
 8002438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800243c:	4770      	bx	lr

0800243e <CrossPositive>:


uint16_t CrossPositive (uint16_t *pSamples, uint16_t len, uint16_t soglia)
{
 800243e:	b480      	push	{r7}
 8002440:	b085      	sub	sp, #20
 8002442:	af00      	add	r7, sp, #0
 8002444:	6078      	str	r0, [r7, #4]
 8002446:	460b      	mov	r3, r1
 8002448:	807b      	strh	r3, [r7, #2]
 800244a:	4613      	mov	r3, r2
 800244c:	803b      	strh	r3, [r7, #0]
	int k=0;
 800244e:	2300      	movs	r3, #0
 8002450:	60fb      	str	r3, [r7, #12]
	soglia-= HYSTERESY; //soglia inferiore
 8002452:	883b      	ldrh	r3, [r7, #0]
 8002454:	3b0a      	subs	r3, #10
 8002456:	803b      	strh	r3, [r7, #0]
	while((k<len) && (pSamples[k] > soglia))   //ci accertiamo di trovarci sotto la soglia inferiore
 8002458:	e002      	b.n	8002460 <CrossPositive+0x22>
	{
		k++;
 800245a:	68fb      	ldr	r3, [r7, #12]
 800245c:	3301      	adds	r3, #1
 800245e:	60fb      	str	r3, [r7, #12]
	while((k<len) && (pSamples[k] > soglia))   //ci accertiamo di trovarci sotto la soglia inferiore
 8002460:	887b      	ldrh	r3, [r7, #2]
 8002462:	68fa      	ldr	r2, [r7, #12]
 8002464:	429a      	cmp	r2, r3
 8002466:	da07      	bge.n	8002478 <CrossPositive+0x3a>
 8002468:	68fb      	ldr	r3, [r7, #12]
 800246a:	005b      	lsls	r3, r3, #1
 800246c:	687a      	ldr	r2, [r7, #4]
 800246e:	4413      	add	r3, r2
 8002470:	881b      	ldrh	r3, [r3, #0]
 8002472:	883a      	ldrh	r2, [r7, #0]
 8002474:	429a      	cmp	r2, r3
 8002476:	d3f0      	bcc.n	800245a <CrossPositive+0x1c>
	}
	soglia+= 2*HYSTERESY; //soglia superiore
 8002478:	883b      	ldrh	r3, [r7, #0]
 800247a:	3314      	adds	r3, #20
 800247c:	803b      	strh	r3, [r7, #0]
	while( (k < len) && (pSamples[k] > soglia))  //ci prendiamo l'indice nel momento in cui superioriamo la soglia superiore
 800247e:	e002      	b.n	8002486 <CrossPositive+0x48>
	{
		k++;
 8002480:	68fb      	ldr	r3, [r7, #12]
 8002482:	3301      	adds	r3, #1
 8002484:	60fb      	str	r3, [r7, #12]
	while( (k < len) && (pSamples[k] > soglia))  //ci prendiamo l'indice nel momento in cui superioriamo la soglia superiore
 8002486:	887b      	ldrh	r3, [r7, #2]
 8002488:	68fa      	ldr	r2, [r7, #12]
 800248a:	429a      	cmp	r2, r3
 800248c:	da07      	bge.n	800249e <CrossPositive+0x60>
 800248e:	68fb      	ldr	r3, [r7, #12]
 8002490:	005b      	lsls	r3, r3, #1
 8002492:	687a      	ldr	r2, [r7, #4]
 8002494:	4413      	add	r3, r2
 8002496:	881b      	ldrh	r3, [r3, #0]
 8002498:	883a      	ldrh	r2, [r7, #0]
 800249a:	429a      	cmp	r2, r3
 800249c:	d3f0      	bcc.n	8002480 <CrossPositive+0x42>
	}

	if(k > len-1)
 800249e:	887b      	ldrh	r3, [r7, #2]
 80024a0:	68fa      	ldr	r2, [r7, #12]
 80024a2:	429a      	cmp	r2, r3
 80024a4:	db02      	blt.n	80024ac <CrossPositive+0x6e>
	{
		return -1;
 80024a6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024aa:	e001      	b.n	80024b0 <CrossPositive+0x72>
	}
	else
	{
		return k;
 80024ac:	68fb      	ldr	r3, [r7, #12]
 80024ae:	b29b      	uxth	r3, r3
	}
}
 80024b0:	4618      	mov	r0, r3
 80024b2:	3714      	adds	r7, #20
 80024b4:	46bd      	mov	sp, r7
 80024b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024ba:	4770      	bx	lr

080024bc <Cross>:

uint16_t Cross (uint16_t *pSamples, uint16_t len, uint16_t soglia, int scelta)
{
 80024bc:	b580      	push	{r7, lr}
 80024be:	b084      	sub	sp, #16
 80024c0:	af00      	add	r7, sp, #0
 80024c2:	60f8      	str	r0, [r7, #12]
 80024c4:	607b      	str	r3, [r7, #4]
 80024c6:	460b      	mov	r3, r1
 80024c8:	817b      	strh	r3, [r7, #10]
 80024ca:	4613      	mov	r3, r2
 80024cc:	813b      	strh	r3, [r7, #8]
	if (scelta==0){  //se scelgo slope=0 scelgo il fronte di discesa
 80024ce:	687b      	ldr	r3, [r7, #4]
 80024d0:	2b00      	cmp	r3, #0
 80024d2:	d107      	bne.n	80024e4 <Cross+0x28>
		return CrossNegative(pSamples, len, soglia);
 80024d4:	893a      	ldrh	r2, [r7, #8]
 80024d6:	897b      	ldrh	r3, [r7, #10]
 80024d8:	4619      	mov	r1, r3
 80024da:	68f8      	ldr	r0, [r7, #12]
 80024dc:	f7ff ff70 	bl	80023c0 <CrossNegative>
 80024e0:	4603      	mov	r3, r0
 80024e2:	e006      	b.n	80024f2 <Cross+0x36>
	}
	else {  //se scelgo scelta!=0 scelgo il fronte di salita
		return CrossPositive(pSamples, len, soglia);
 80024e4:	893a      	ldrh	r2, [r7, #8]
 80024e6:	897b      	ldrh	r3, [r7, #10]
 80024e8:	4619      	mov	r1, r3
 80024ea:	68f8      	ldr	r0, [r7, #12]
 80024ec:	f7ff ffa7 	bl	800243e <CrossPositive>
 80024f0:	4603      	mov	r3, r0

	}
}
 80024f2:	4618      	mov	r0, r3
 80024f4:	3710      	adds	r7, #16
 80024f6:	46bd      	mov	sp, r7
 80024f8:	bd80      	pop	{r7, pc}

080024fa <ReverseCrossPositive>:


uint16_t ReverseCrossPositive(uint16_t *pBuffer, uint16_t len, uint16_t soglia)
{
 80024fa:	b480      	push	{r7}
 80024fc:	b085      	sub	sp, #20
 80024fe:	af00      	add	r7, sp, #0
 8002500:	6078      	str	r0, [r7, #4]
 8002502:	460b      	mov	r3, r1
 8002504:	807b      	strh	r3, [r7, #2]
 8002506:	4613      	mov	r3, r2
 8002508:	803b      	strh	r3, [r7, #0]
	int k=len-1;
 800250a:	887b      	ldrh	r3, [r7, #2]
 800250c:	3b01      	subs	r3, #1
 800250e:	60fb      	str	r3, [r7, #12]
	soglia += HYSTERESY;
 8002510:	883b      	ldrh	r3, [r7, #0]
 8002512:	330a      	adds	r3, #10
 8002514:	803b      	strh	r3, [r7, #0]
	while((k > 0) && (pBuffer[k] < soglia) ){
 8002516:	e002      	b.n	800251e <ReverseCrossPositive+0x24>
		k--;
 8002518:	68fb      	ldr	r3, [r7, #12]
 800251a:	3b01      	subs	r3, #1
 800251c:	60fb      	str	r3, [r7, #12]
	while((k > 0) && (pBuffer[k] < soglia) ){
 800251e:	68fb      	ldr	r3, [r7, #12]
 8002520:	2b00      	cmp	r3, #0
 8002522:	dd07      	ble.n	8002534 <ReverseCrossPositive+0x3a>
 8002524:	68fb      	ldr	r3, [r7, #12]
 8002526:	005b      	lsls	r3, r3, #1
 8002528:	687a      	ldr	r2, [r7, #4]
 800252a:	4413      	add	r3, r2
 800252c:	881b      	ldrh	r3, [r3, #0]
 800252e:	883a      	ldrh	r2, [r7, #0]
 8002530:	429a      	cmp	r2, r3
 8002532:	d8f1      	bhi.n	8002518 <ReverseCrossPositive+0x1e>
	}

	soglia -= 2*HYSTERESY;
 8002534:	883b      	ldrh	r3, [r7, #0]
 8002536:	3b14      	subs	r3, #20
 8002538:	803b      	strh	r3, [r7, #0]
	while((k > 0) && pBuffer[k] > soglia ){
 800253a:	e002      	b.n	8002542 <ReverseCrossPositive+0x48>
		k--;
 800253c:	68fb      	ldr	r3, [r7, #12]
 800253e:	3b01      	subs	r3, #1
 8002540:	60fb      	str	r3, [r7, #12]
	while((k > 0) && pBuffer[k] > soglia ){
 8002542:	68fb      	ldr	r3, [r7, #12]
 8002544:	2b00      	cmp	r3, #0
 8002546:	dd07      	ble.n	8002558 <ReverseCrossPositive+0x5e>
 8002548:	68fb      	ldr	r3, [r7, #12]
 800254a:	005b      	lsls	r3, r3, #1
 800254c:	687a      	ldr	r2, [r7, #4]
 800254e:	4413      	add	r3, r2
 8002550:	881b      	ldrh	r3, [r3, #0]
 8002552:	883a      	ldrh	r2, [r7, #0]
 8002554:	429a      	cmp	r2, r3
 8002556:	d3f1      	bcc.n	800253c <ReverseCrossPositive+0x42>
	}
	if(k>0)
 8002558:	68fb      	ldr	r3, [r7, #12]
 800255a:	2b00      	cmp	r3, #0
 800255c:	dd02      	ble.n	8002564 <ReverseCrossPositive+0x6a>
	{
		return k;
 800255e:	68fb      	ldr	r3, [r7, #12]
 8002560:	b29b      	uxth	r3, r3
 8002562:	e001      	b.n	8002568 <ReverseCrossPositive+0x6e>
	}
	else{
		return -1;
 8002564:	f64f 73ff 	movw	r3, #65535	; 0xffff
	}
}
 8002568:	4618      	mov	r0, r3
 800256a:	3714      	adds	r7, #20
 800256c:	46bd      	mov	sp, r7
 800256e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002572:	4770      	bx	lr

08002574 <ReverseCrossNegative>:

uint16_t ReverseCrossNegative(uint16_t *pBuffer, uint16_t len, uint16_t soglia)
{
 8002574:	b480      	push	{r7}
 8002576:	b085      	sub	sp, #20
 8002578:	af00      	add	r7, sp, #0
 800257a:	6078      	str	r0, [r7, #4]
 800257c:	460b      	mov	r3, r1
 800257e:	807b      	strh	r3, [r7, #2]
 8002580:	4613      	mov	r3, r2
 8002582:	803b      	strh	r3, [r7, #0]
	int k=len-1;
 8002584:	887b      	ldrh	r3, [r7, #2]
 8002586:	3b01      	subs	r3, #1
 8002588:	60fb      	str	r3, [r7, #12]
	soglia -= HYSTERESY;
 800258a:	883b      	ldrh	r3, [r7, #0]
 800258c:	3b0a      	subs	r3, #10
 800258e:	803b      	strh	r3, [r7, #0]
	while((k > 0) && (pBuffer[k] > soglia)){
 8002590:	e002      	b.n	8002598 <ReverseCrossNegative+0x24>
		k--;
 8002592:	68fb      	ldr	r3, [r7, #12]
 8002594:	3b01      	subs	r3, #1
 8002596:	60fb      	str	r3, [r7, #12]
	while((k > 0) && (pBuffer[k] > soglia)){
 8002598:	68fb      	ldr	r3, [r7, #12]
 800259a:	2b00      	cmp	r3, #0
 800259c:	dd07      	ble.n	80025ae <ReverseCrossNegative+0x3a>
 800259e:	68fb      	ldr	r3, [r7, #12]
 80025a0:	005b      	lsls	r3, r3, #1
 80025a2:	687a      	ldr	r2, [r7, #4]
 80025a4:	4413      	add	r3, r2
 80025a6:	881b      	ldrh	r3, [r3, #0]
 80025a8:	883a      	ldrh	r2, [r7, #0]
 80025aa:	429a      	cmp	r2, r3
 80025ac:	d3f1      	bcc.n	8002592 <ReverseCrossNegative+0x1e>
	}
	soglia += 2*HYSTERESY;
 80025ae:	883b      	ldrh	r3, [r7, #0]
 80025b0:	3314      	adds	r3, #20
 80025b2:	803b      	strh	r3, [r7, #0]

	while((k > 0) && (pBuffer[k] < soglia))
 80025b4:	e002      	b.n	80025bc <ReverseCrossNegative+0x48>
	{
		k--;
 80025b6:	68fb      	ldr	r3, [r7, #12]
 80025b8:	3b01      	subs	r3, #1
 80025ba:	60fb      	str	r3, [r7, #12]
	while((k > 0) && (pBuffer[k] < soglia))
 80025bc:	68fb      	ldr	r3, [r7, #12]
 80025be:	2b00      	cmp	r3, #0
 80025c0:	dd07      	ble.n	80025d2 <ReverseCrossNegative+0x5e>
 80025c2:	68fb      	ldr	r3, [r7, #12]
 80025c4:	005b      	lsls	r3, r3, #1
 80025c6:	687a      	ldr	r2, [r7, #4]
 80025c8:	4413      	add	r3, r2
 80025ca:	881b      	ldrh	r3, [r3, #0]
 80025cc:	883a      	ldrh	r2, [r7, #0]
 80025ce:	429a      	cmp	r2, r3
 80025d0:	d8f1      	bhi.n	80025b6 <ReverseCrossNegative+0x42>
	}
	if(k>0)
 80025d2:	68fb      	ldr	r3, [r7, #12]
 80025d4:	2b00      	cmp	r3, #0
 80025d6:	dd02      	ble.n	80025de <ReverseCrossNegative+0x6a>
	{
		return k;
 80025d8:	68fb      	ldr	r3, [r7, #12]
 80025da:	b29b      	uxth	r3, r3
 80025dc:	e001      	b.n	80025e2 <ReverseCrossNegative+0x6e>
	}
	else{
		return -1;
 80025de:	f64f 73ff 	movw	r3, #65535	; 0xffff
	}
}
 80025e2:	4618      	mov	r0, r3
 80025e4:	3714      	adds	r7, #20
 80025e6:	46bd      	mov	sp, r7
 80025e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025ec:	4770      	bx	lr

080025ee <ReverseCross>:

uint16_t ReverseCross(uint16_t *pBuffer, uint16_t len, uint16_t soglia, int scelta) //0: negative, !0:positive
{
 80025ee:	b580      	push	{r7, lr}
 80025f0:	b084      	sub	sp, #16
 80025f2:	af00      	add	r7, sp, #0
 80025f4:	60f8      	str	r0, [r7, #12]
 80025f6:	607b      	str	r3, [r7, #4]
 80025f8:	460b      	mov	r3, r1
 80025fa:	817b      	strh	r3, [r7, #10]
 80025fc:	4613      	mov	r3, r2
 80025fe:	813b      	strh	r3, [r7, #8]
	if (scelta == 0){
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	2b00      	cmp	r3, #0
 8002604:	d107      	bne.n	8002616 <ReverseCross+0x28>
		return ReverseCrossNegative(pBuffer, len, soglia);
 8002606:	893a      	ldrh	r2, [r7, #8]
 8002608:	897b      	ldrh	r3, [r7, #10]
 800260a:	4619      	mov	r1, r3
 800260c:	68f8      	ldr	r0, [r7, #12]
 800260e:	f7ff ffb1 	bl	8002574 <ReverseCrossNegative>
 8002612:	4603      	mov	r3, r0
 8002614:	e006      	b.n	8002624 <ReverseCross+0x36>
	} else {
		return ReverseCrossPositive(pBuffer, len, soglia);
 8002616:	893a      	ldrh	r2, [r7, #8]
 8002618:	897b      	ldrh	r3, [r7, #10]
 800261a:	4619      	mov	r1, r3
 800261c:	68f8      	ldr	r0, [r7, #12]
 800261e:	f7ff ff6c 	bl	80024fa <ReverseCrossPositive>
 8002622:	4603      	mov	r3, r0
	}
}
 8002624:	4618      	mov	r0, r3
 8002626:	3710      	adds	r7, #16
 8002628:	46bd      	mov	sp, r7
 800262a:	bd80      	pop	{r7, pc}

0800262c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 800262c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002664 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8002630:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8002632:	e003      	b.n	800263c <LoopCopyDataInit>

08002634 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8002634:	4b0c      	ldr	r3, [pc, #48]	; (8002668 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8002636:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8002638:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800263a:	3104      	adds	r1, #4

0800263c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800263c:	480b      	ldr	r0, [pc, #44]	; (800266c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800263e:	4b0c      	ldr	r3, [pc, #48]	; (8002670 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8002640:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8002642:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8002644:	d3f6      	bcc.n	8002634 <CopyDataInit>
  ldr  r2, =_sbss
 8002646:	4a0b      	ldr	r2, [pc, #44]	; (8002674 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8002648:	e002      	b.n	8002650 <LoopFillZerobss>

0800264a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800264a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800264c:	f842 3b04 	str.w	r3, [r2], #4

08002650 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8002650:	4b09      	ldr	r3, [pc, #36]	; (8002678 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8002652:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8002654:	d3f9      	bcc.n	800264a <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8002656:	f7ff fe7d 	bl	8002354 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800265a:	f013 f8f1 	bl	8015840 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800265e:	f7ff f87b 	bl	8001758 <main>
  bx  lr    
 8002662:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8002664:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8002668:	0801ecfc 	.word	0x0801ecfc
  ldr  r0, =_sdata
 800266c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8002670:	200002dc 	.word	0x200002dc
  ldr  r2, =_sbss
 8002674:	200002dc 	.word	0x200002dc
  ldr  r3, = _ebss
 8002678:	2002dbc0 	.word	0x2002dbc0

0800267c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800267c:	e7fe      	b.n	800267c <ADC_IRQHandler>

0800267e <ft5336_Init>:
  *         from MCU to FT5336 : ie I2C channel initialization (if required).
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_Init(uint16_t DeviceAddr)
{
 800267e:	b580      	push	{r7, lr}
 8002680:	b082      	sub	sp, #8
 8002682:	af00      	add	r7, sp, #0
 8002684:	4603      	mov	r3, r0
 8002686:	80fb      	strh	r3, [r7, #6]
  /* Wait at least 200ms after power up before accessing registers
   * Trsi timing (Time of starting to report point after resetting) from FT5336GQQ datasheet */
  TS_IO_Delay(200);
 8002688:	20c8      	movs	r0, #200	; 0xc8
 800268a:	f000 fc67 	bl	8002f5c <TS_IO_Delay>

  /* Initialize I2C link if needed */
  ft5336_I2C_InitializeIfRequired();
 800268e:	f000 fa7b 	bl	8002b88 <ft5336_I2C_InitializeIfRequired>
}
 8002692:	bf00      	nop
 8002694:	3708      	adds	r7, #8
 8002696:	46bd      	mov	sp, r7
 8002698:	bd80      	pop	{r7, pc}

0800269a <ft5336_Reset>:
  *         @note : Not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_Reset(uint16_t DeviceAddr)
{
 800269a:	b480      	push	{r7}
 800269c:	b083      	sub	sp, #12
 800269e:	af00      	add	r7, sp, #0
 80026a0:	4603      	mov	r3, r0
 80026a2:	80fb      	strh	r3, [r7, #6]
  /* Do nothing */
  /* No software reset sequence available in FT5336 IC */
}
 80026a4:	bf00      	nop
 80026a6:	370c      	adds	r7, #12
 80026a8:	46bd      	mov	sp, r7
 80026aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026ae:	4770      	bx	lr

080026b0 <ft5336_ReadID>:
  *         able to read the FT5336 device ID, and verify this is a FT5336.
  * @param  DeviceAddr: I2C FT5336 Slave address.
  * @retval The Device ID (two bytes).
  */
uint16_t ft5336_ReadID(uint16_t DeviceAddr)
{
 80026b0:	b580      	push	{r7, lr}
 80026b2:	b084      	sub	sp, #16
 80026b4:	af00      	add	r7, sp, #0
 80026b6:	4603      	mov	r3, r0
 80026b8:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t ucReadId = 0;
 80026ba:	2300      	movs	r3, #0
 80026bc:	737b      	strb	r3, [r7, #13]
  uint8_t nbReadAttempts = 0;
 80026be:	2300      	movs	r3, #0
 80026c0:	73fb      	strb	r3, [r7, #15]
  uint8_t bFoundDevice = 0; /* Device not found by default */
 80026c2:	2300      	movs	r3, #0
 80026c4:	73bb      	strb	r3, [r7, #14]

  /* Initialize I2C link if needed */
  ft5336_I2C_InitializeIfRequired();
 80026c6:	f000 fa5f 	bl	8002b88 <ft5336_I2C_InitializeIfRequired>

  /* At maximum 4 attempts to read ID : exit at first finding of the searched device ID */
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 80026ca:	2300      	movs	r3, #0
 80026cc:	73fb      	strb	r3, [r7, #15]
 80026ce:	e010      	b.n	80026f2 <ft5336_ReadID+0x42>
  {
    /* Read register FT5336_CHIP_ID_REG as DeviceID detection */
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 80026d0:	88fb      	ldrh	r3, [r7, #6]
 80026d2:	b2db      	uxtb	r3, r3
 80026d4:	21a8      	movs	r1, #168	; 0xa8
 80026d6:	4618      	mov	r0, r3
 80026d8:	f000 fc22 	bl	8002f20 <TS_IO_Read>
 80026dc:	4603      	mov	r3, r0
 80026de:	737b      	strb	r3, [r7, #13]

    /* Found the searched device ID ? */
    if(ucReadId == FT5336_ID_VALUE)
 80026e0:	7b7b      	ldrb	r3, [r7, #13]
 80026e2:	b2db      	uxtb	r3, r3
 80026e4:	2b51      	cmp	r3, #81	; 0x51
 80026e6:	d101      	bne.n	80026ec <ft5336_ReadID+0x3c>
    {
      /* Set device as found */
      bFoundDevice = 1;
 80026e8:	2301      	movs	r3, #1
 80026ea:	73bb      	strb	r3, [r7, #14]
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 80026ec:	7bfb      	ldrb	r3, [r7, #15]
 80026ee:	3301      	adds	r3, #1
 80026f0:	73fb      	strb	r3, [r7, #15]
 80026f2:	7bfb      	ldrb	r3, [r7, #15]
 80026f4:	2b02      	cmp	r3, #2
 80026f6:	d802      	bhi.n	80026fe <ft5336_ReadID+0x4e>
 80026f8:	7bbb      	ldrb	r3, [r7, #14]
 80026fa:	2b00      	cmp	r3, #0
 80026fc:	d0e8      	beq.n	80026d0 <ft5336_ReadID+0x20>
    }
  }

  /* Return the device ID value */
  return (ucReadId);
 80026fe:	7b7b      	ldrb	r3, [r7, #13]
 8002700:	b2db      	uxtb	r3, r3
 8002702:	b29b      	uxth	r3, r3
}
 8002704:	4618      	mov	r0, r3
 8002706:	3710      	adds	r7, #16
 8002708:	46bd      	mov	sp, r7
 800270a:	bd80      	pop	{r7, pc}

0800270c <ft5336_TS_Start>:
  * @brief  Configures the touch Screen IC device to start detecting touches
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address).
  * @retval None.
  */
void ft5336_TS_Start(uint16_t DeviceAddr)
{
 800270c:	b580      	push	{r7, lr}
 800270e:	b082      	sub	sp, #8
 8002710:	af00      	add	r7, sp, #0
 8002712:	4603      	mov	r3, r0
 8002714:	80fb      	strh	r3, [r7, #6]
  /* Minimum static configuration of FT5336 */
  FT5336_ASSERT(ft5336_TS_Configure(DeviceAddr));
 8002716:	88fb      	ldrh	r3, [r7, #6]
 8002718:	4618      	mov	r0, r3
 800271a:	f000 fa45 	bl	8002ba8 <ft5336_TS_Configure>

  /* By default set FT5336 IC in Polling mode : no INT generation on FT5336 for new touch available */
  /* Note TS_INT is active low                                                                      */
  ft5336_TS_DisableIT(DeviceAddr);
 800271e:	88fb      	ldrh	r3, [r7, #6]
 8002720:	4618      	mov	r0, r3
 8002722:	f000 f933 	bl	800298c <ft5336_TS_DisableIT>
}
 8002726:	bf00      	nop
 8002728:	3708      	adds	r7, #8
 800272a:	46bd      	mov	sp, r7
 800272c:	bd80      	pop	{r7, pc}
	...

08002730 <ft5336_TS_DetectTouch>:
  *         variables).
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval : Number of active touches detected (can be 0, 1 or 2).
  */
uint8_t ft5336_TS_DetectTouch(uint16_t DeviceAddr)
{
 8002730:	b580      	push	{r7, lr}
 8002732:	b084      	sub	sp, #16
 8002734:	af00      	add	r7, sp, #0
 8002736:	4603      	mov	r3, r0
 8002738:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t nbTouch = 0;
 800273a:	2300      	movs	r3, #0
 800273c:	73fb      	strb	r3, [r7, #15]

  /* Read register FT5336_TD_STAT_REG to check number of touches detection */
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 800273e:	88fb      	ldrh	r3, [r7, #6]
 8002740:	b2db      	uxtb	r3, r3
 8002742:	2102      	movs	r1, #2
 8002744:	4618      	mov	r0, r3
 8002746:	f000 fbeb 	bl	8002f20 <TS_IO_Read>
 800274a:	4603      	mov	r3, r0
 800274c:	73fb      	strb	r3, [r7, #15]
  nbTouch &= FT5336_TD_STAT_MASK;
 800274e:	7bfb      	ldrb	r3, [r7, #15]
 8002750:	b2db      	uxtb	r3, r3
 8002752:	f003 030f 	and.w	r3, r3, #15
 8002756:	b2db      	uxtb	r3, r3
 8002758:	73fb      	strb	r3, [r7, #15]

  if(nbTouch > FT5336_MAX_DETECTABLE_TOUCH)
 800275a:	7bfb      	ldrb	r3, [r7, #15]
 800275c:	b2db      	uxtb	r3, r3
 800275e:	2b05      	cmp	r3, #5
 8002760:	d901      	bls.n	8002766 <ft5336_TS_DetectTouch+0x36>
  {
    /* If invalid number of touch detected, set it to zero */
    nbTouch = 0;
 8002762:	2300      	movs	r3, #0
 8002764:	73fb      	strb	r3, [r7, #15]
  }

  /* Update ft5336 driver internal global : current number of active touches */
  ft5336_handle.currActiveTouchNb = nbTouch;
 8002766:	7bfb      	ldrb	r3, [r7, #15]
 8002768:	b2da      	uxtb	r2, r3
 800276a:	4b05      	ldr	r3, [pc, #20]	; (8002780 <ft5336_TS_DetectTouch+0x50>)
 800276c:	705a      	strb	r2, [r3, #1]

  /* Reset current active touch index on which to work on */
  ft5336_handle.currActiveTouchIdx = 0;
 800276e:	4b04      	ldr	r3, [pc, #16]	; (8002780 <ft5336_TS_DetectTouch+0x50>)
 8002770:	2200      	movs	r2, #0
 8002772:	709a      	strb	r2, [r3, #2]

  return(nbTouch);
 8002774:	7bfb      	ldrb	r3, [r7, #15]
 8002776:	b2db      	uxtb	r3, r3
}
 8002778:	4618      	mov	r0, r3
 800277a:	3710      	adds	r7, #16
 800277c:	46bd      	mov	sp, r7
 800277e:	bd80      	pop	{r7, pc}
 8002780:	20000ea0 	.word	0x20000ea0

08002784 <ft5336_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value
  * @retval None.
  */
void ft5336_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8002784:	b580      	push	{r7, lr}
 8002786:	b086      	sub	sp, #24
 8002788:	af00      	add	r7, sp, #0
 800278a:	4603      	mov	r3, r0
 800278c:	60b9      	str	r1, [r7, #8]
 800278e:	607a      	str	r2, [r7, #4]
 8002790:	81fb      	strh	r3, [r7, #14]
  volatile uint8_t ucReadData = 0;
 8002792:	2300      	movs	r3, #0
 8002794:	74fb      	strb	r3, [r7, #19]
  static uint16_t coord;
  uint8_t regAddressXLow = 0;
 8002796:	2300      	movs	r3, #0
 8002798:	75fb      	strb	r3, [r7, #23]
  uint8_t regAddressXHigh = 0;
 800279a:	2300      	movs	r3, #0
 800279c:	75bb      	strb	r3, [r7, #22]
  uint8_t regAddressYLow = 0;
 800279e:	2300      	movs	r3, #0
 80027a0:	757b      	strb	r3, [r7, #21]
  uint8_t regAddressYHigh = 0;
 80027a2:	2300      	movs	r3, #0
 80027a4:	753b      	strb	r3, [r7, #20]

  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 80027a6:	4b6d      	ldr	r3, [pc, #436]	; (800295c <ft5336_TS_GetXY+0x1d8>)
 80027a8:	789a      	ldrb	r2, [r3, #2]
 80027aa:	4b6c      	ldr	r3, [pc, #432]	; (800295c <ft5336_TS_GetXY+0x1d8>)
 80027ac:	785b      	ldrb	r3, [r3, #1]
 80027ae:	429a      	cmp	r2, r3
 80027b0:	f080 80cf 	bcs.w	8002952 <ft5336_TS_GetXY+0x1ce>
  {
    switch(ft5336_handle.currActiveTouchIdx)
 80027b4:	4b69      	ldr	r3, [pc, #420]	; (800295c <ft5336_TS_GetXY+0x1d8>)
 80027b6:	789b      	ldrb	r3, [r3, #2]
 80027b8:	2b09      	cmp	r3, #9
 80027ba:	d871      	bhi.n	80028a0 <ft5336_TS_GetXY+0x11c>
 80027bc:	a201      	add	r2, pc, #4	; (adr r2, 80027c4 <ft5336_TS_GetXY+0x40>)
 80027be:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80027c2:	bf00      	nop
 80027c4:	080027ed 	.word	0x080027ed
 80027c8:	080027ff 	.word	0x080027ff
 80027cc:	08002811 	.word	0x08002811
 80027d0:	08002823 	.word	0x08002823
 80027d4:	08002835 	.word	0x08002835
 80027d8:	08002847 	.word	0x08002847
 80027dc:	08002859 	.word	0x08002859
 80027e0:	0800286b 	.word	0x0800286b
 80027e4:	0800287d 	.word	0x0800287d
 80027e8:	0800288f 	.word	0x0800288f
    {
    case 0 :
      regAddressXLow  = FT5336_P1_XL_REG;
 80027ec:	2304      	movs	r3, #4
 80027ee:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P1_XH_REG;
 80027f0:	2303      	movs	r3, #3
 80027f2:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P1_YL_REG;
 80027f4:	2306      	movs	r3, #6
 80027f6:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P1_YH_REG;
 80027f8:	2305      	movs	r3, #5
 80027fa:	753b      	strb	r3, [r7, #20]
      break;
 80027fc:	e051      	b.n	80028a2 <ft5336_TS_GetXY+0x11e>

    case 1 :
      regAddressXLow  = FT5336_P2_XL_REG;
 80027fe:	230a      	movs	r3, #10
 8002800:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P2_XH_REG;
 8002802:	2309      	movs	r3, #9
 8002804:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P2_YL_REG;
 8002806:	230c      	movs	r3, #12
 8002808:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P2_YH_REG;
 800280a:	230b      	movs	r3, #11
 800280c:	753b      	strb	r3, [r7, #20]
      break;
 800280e:	e048      	b.n	80028a2 <ft5336_TS_GetXY+0x11e>

    case 2 :
      regAddressXLow  = FT5336_P3_XL_REG;
 8002810:	2310      	movs	r3, #16
 8002812:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P3_XH_REG;
 8002814:	230f      	movs	r3, #15
 8002816:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P3_YL_REG;
 8002818:	2312      	movs	r3, #18
 800281a:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P3_YH_REG;
 800281c:	2311      	movs	r3, #17
 800281e:	753b      	strb	r3, [r7, #20]
      break;
 8002820:	e03f      	b.n	80028a2 <ft5336_TS_GetXY+0x11e>

    case 3 :
      regAddressXLow  = FT5336_P4_XL_REG;
 8002822:	2316      	movs	r3, #22
 8002824:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P4_XH_REG;
 8002826:	2315      	movs	r3, #21
 8002828:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P4_YL_REG;
 800282a:	2318      	movs	r3, #24
 800282c:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P4_YH_REG;
 800282e:	2317      	movs	r3, #23
 8002830:	753b      	strb	r3, [r7, #20]
      break;
 8002832:	e036      	b.n	80028a2 <ft5336_TS_GetXY+0x11e>

    case 4 :
      regAddressXLow  = FT5336_P5_XL_REG;
 8002834:	231c      	movs	r3, #28
 8002836:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P5_XH_REG;
 8002838:	231b      	movs	r3, #27
 800283a:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P5_YL_REG;
 800283c:	231e      	movs	r3, #30
 800283e:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P5_YH_REG;
 8002840:	231d      	movs	r3, #29
 8002842:	753b      	strb	r3, [r7, #20]
      break;
 8002844:	e02d      	b.n	80028a2 <ft5336_TS_GetXY+0x11e>

    case 5 :
      regAddressXLow  = FT5336_P6_XL_REG;
 8002846:	2322      	movs	r3, #34	; 0x22
 8002848:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P6_XH_REG;
 800284a:	2321      	movs	r3, #33	; 0x21
 800284c:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P6_YL_REG;
 800284e:	2324      	movs	r3, #36	; 0x24
 8002850:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P6_YH_REG;
 8002852:	2323      	movs	r3, #35	; 0x23
 8002854:	753b      	strb	r3, [r7, #20]
      break;
 8002856:	e024      	b.n	80028a2 <ft5336_TS_GetXY+0x11e>

    case 6 :
      regAddressXLow  = FT5336_P7_XL_REG;
 8002858:	2328      	movs	r3, #40	; 0x28
 800285a:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P7_XH_REG;
 800285c:	2327      	movs	r3, #39	; 0x27
 800285e:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P7_YL_REG;
 8002860:	232a      	movs	r3, #42	; 0x2a
 8002862:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P7_YH_REG;
 8002864:	2329      	movs	r3, #41	; 0x29
 8002866:	753b      	strb	r3, [r7, #20]
      break;
 8002868:	e01b      	b.n	80028a2 <ft5336_TS_GetXY+0x11e>

    case 7 :
      regAddressXLow  = FT5336_P8_XL_REG;
 800286a:	232e      	movs	r3, #46	; 0x2e
 800286c:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P8_XH_REG;
 800286e:	232d      	movs	r3, #45	; 0x2d
 8002870:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P8_YL_REG;
 8002872:	2330      	movs	r3, #48	; 0x30
 8002874:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P8_YH_REG;
 8002876:	232f      	movs	r3, #47	; 0x2f
 8002878:	753b      	strb	r3, [r7, #20]
      break;
 800287a:	e012      	b.n	80028a2 <ft5336_TS_GetXY+0x11e>

    case 8 :
      regAddressXLow  = FT5336_P9_XL_REG;
 800287c:	2334      	movs	r3, #52	; 0x34
 800287e:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P9_XH_REG;
 8002880:	2333      	movs	r3, #51	; 0x33
 8002882:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P9_YL_REG;
 8002884:	2336      	movs	r3, #54	; 0x36
 8002886:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P9_YH_REG;
 8002888:	2335      	movs	r3, #53	; 0x35
 800288a:	753b      	strb	r3, [r7, #20]
      break;
 800288c:	e009      	b.n	80028a2 <ft5336_TS_GetXY+0x11e>

    case 9 :
      regAddressXLow  = FT5336_P10_XL_REG;
 800288e:	233a      	movs	r3, #58	; 0x3a
 8002890:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P10_XH_REG;
 8002892:	2339      	movs	r3, #57	; 0x39
 8002894:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P10_YL_REG;
 8002896:	233c      	movs	r3, #60	; 0x3c
 8002898:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P10_YH_REG;
 800289a:	233b      	movs	r3, #59	; 0x3b
 800289c:	753b      	strb	r3, [r7, #20]
      break;
 800289e:	e000      	b.n	80028a2 <ft5336_TS_GetXY+0x11e>

    default :
      break;
 80028a0:	bf00      	nop

    } /* end switch(ft5336_handle.currActiveTouchIdx) */

    /* Read low part of X position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 80028a2:	89fb      	ldrh	r3, [r7, #14]
 80028a4:	b2db      	uxtb	r3, r3
 80028a6:	7dfa      	ldrb	r2, [r7, #23]
 80028a8:	4611      	mov	r1, r2
 80028aa:	4618      	mov	r0, r3
 80028ac:	f000 fb38 	bl	8002f20 <TS_IO_Read>
 80028b0:	4603      	mov	r3, r0
 80028b2:	74fb      	strb	r3, [r7, #19]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 80028b4:	7cfb      	ldrb	r3, [r7, #19]
 80028b6:	b2db      	uxtb	r3, r3
 80028b8:	b29a      	uxth	r2, r3
 80028ba:	4b29      	ldr	r3, [pc, #164]	; (8002960 <ft5336_TS_GetXY+0x1dc>)
 80028bc:	801a      	strh	r2, [r3, #0]

    /* Read high part of X position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 80028be:	89fb      	ldrh	r3, [r7, #14]
 80028c0:	b2db      	uxtb	r3, r3
 80028c2:	7dba      	ldrb	r2, [r7, #22]
 80028c4:	4611      	mov	r1, r2
 80028c6:	4618      	mov	r0, r3
 80028c8:	f000 fb2a 	bl	8002f20 <TS_IO_Read>
 80028cc:	4603      	mov	r3, r0
 80028ce:	74fb      	strb	r3, [r7, #19]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 80028d0:	7cfb      	ldrb	r3, [r7, #19]
 80028d2:	b2db      	uxtb	r3, r3
 80028d4:	021b      	lsls	r3, r3, #8
 80028d6:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80028da:	b21a      	sxth	r2, r3
 80028dc:	4b20      	ldr	r3, [pc, #128]	; (8002960 <ft5336_TS_GetXY+0x1dc>)
 80028de:	881b      	ldrh	r3, [r3, #0]
 80028e0:	b21b      	sxth	r3, r3
 80028e2:	4313      	orrs	r3, r2
 80028e4:	b21b      	sxth	r3, r3
 80028e6:	b29a      	uxth	r2, r3
 80028e8:	4b1d      	ldr	r3, [pc, #116]	; (8002960 <ft5336_TS_GetXY+0x1dc>)
 80028ea:	801a      	strh	r2, [r3, #0]

    /* Send back ready X position to caller */
    *X = coord;
 80028ec:	4b1c      	ldr	r3, [pc, #112]	; (8002960 <ft5336_TS_GetXY+0x1dc>)
 80028ee:	881a      	ldrh	r2, [r3, #0]
 80028f0:	68bb      	ldr	r3, [r7, #8]
 80028f2:	801a      	strh	r2, [r3, #0]

    /* Read low part of Y position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 80028f4:	89fb      	ldrh	r3, [r7, #14]
 80028f6:	b2db      	uxtb	r3, r3
 80028f8:	7d7a      	ldrb	r2, [r7, #21]
 80028fa:	4611      	mov	r1, r2
 80028fc:	4618      	mov	r0, r3
 80028fe:	f000 fb0f 	bl	8002f20 <TS_IO_Read>
 8002902:	4603      	mov	r3, r0
 8002904:	74fb      	strb	r3, [r7, #19]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8002906:	7cfb      	ldrb	r3, [r7, #19]
 8002908:	b2db      	uxtb	r3, r3
 800290a:	b29a      	uxth	r2, r3
 800290c:	4b14      	ldr	r3, [pc, #80]	; (8002960 <ft5336_TS_GetXY+0x1dc>)
 800290e:	801a      	strh	r2, [r3, #0]

    /* Read high part of Y position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 8002910:	89fb      	ldrh	r3, [r7, #14]
 8002912:	b2db      	uxtb	r3, r3
 8002914:	7d3a      	ldrb	r2, [r7, #20]
 8002916:	4611      	mov	r1, r2
 8002918:	4618      	mov	r0, r3
 800291a:	f000 fb01 	bl	8002f20 <TS_IO_Read>
 800291e:	4603      	mov	r3, r0
 8002920:	74fb      	strb	r3, [r7, #19]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8002922:	7cfb      	ldrb	r3, [r7, #19]
 8002924:	b2db      	uxtb	r3, r3
 8002926:	021b      	lsls	r3, r3, #8
 8002928:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800292c:	b21a      	sxth	r2, r3
 800292e:	4b0c      	ldr	r3, [pc, #48]	; (8002960 <ft5336_TS_GetXY+0x1dc>)
 8002930:	881b      	ldrh	r3, [r3, #0]
 8002932:	b21b      	sxth	r3, r3
 8002934:	4313      	orrs	r3, r2
 8002936:	b21b      	sxth	r3, r3
 8002938:	b29a      	uxth	r2, r3
 800293a:	4b09      	ldr	r3, [pc, #36]	; (8002960 <ft5336_TS_GetXY+0x1dc>)
 800293c:	801a      	strh	r2, [r3, #0]

    /* Send back ready Y position to caller */
    *Y = coord;
 800293e:	4b08      	ldr	r3, [pc, #32]	; (8002960 <ft5336_TS_GetXY+0x1dc>)
 8002940:	881a      	ldrh	r2, [r3, #0]
 8002942:	687b      	ldr	r3, [r7, #4]
 8002944:	801a      	strh	r2, [r3, #0]

    ft5336_handle.currActiveTouchIdx++; /* next call will work on next touch */
 8002946:	4b05      	ldr	r3, [pc, #20]	; (800295c <ft5336_TS_GetXY+0x1d8>)
 8002948:	789b      	ldrb	r3, [r3, #2]
 800294a:	3301      	adds	r3, #1
 800294c:	b2da      	uxtb	r2, r3
 800294e:	4b03      	ldr	r3, [pc, #12]	; (800295c <ft5336_TS_GetXY+0x1d8>)
 8002950:	709a      	strb	r2, [r3, #2]

  } /* of if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb) */
}
 8002952:	bf00      	nop
 8002954:	3718      	adds	r7, #24
 8002956:	46bd      	mov	sp, r7
 8002958:	bd80      	pop	{r7, pc}
 800295a:	bf00      	nop
 800295c:	20000ea0 	.word	0x20000ea0
 8002960:	20000ea4 	.word	0x20000ea4

08002964 <ft5336_TS_EnableIT>:
  *         connected to MCU as EXTI.
  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT5336).
  * @retval None
  */
void ft5336_TS_EnableIT(uint16_t DeviceAddr)
{
 8002964:	b580      	push	{r7, lr}
 8002966:	b084      	sub	sp, #16
 8002968:	af00      	add	r7, sp, #0
 800296a:	4603      	mov	r3, r0
 800296c:	80fb      	strh	r3, [r7, #6]
   uint8_t regValue = 0;
 800296e:	2300      	movs	r3, #0
 8002970:	73fb      	strb	r3, [r7, #15]
   regValue = (FT5336_G_MODE_INTERRUPT_TRIGGER & (FT5336_G_MODE_INTERRUPT_MASK >> FT5336_G_MODE_INTERRUPT_SHIFT)) << FT5336_G_MODE_INTERRUPT_SHIFT;
 8002972:	2301      	movs	r3, #1
 8002974:	73fb      	strb	r3, [r7, #15]

   /* Set interrupt trigger mode in FT5336_GMODE_REG */
   TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 8002976:	88fb      	ldrh	r3, [r7, #6]
 8002978:	b2db      	uxtb	r3, r3
 800297a:	7bfa      	ldrb	r2, [r7, #15]
 800297c:	21a4      	movs	r1, #164	; 0xa4
 800297e:	4618      	mov	r0, r3
 8002980:	f000 fab4 	bl	8002eec <TS_IO_Write>
}
 8002984:	bf00      	nop
 8002986:	3710      	adds	r7, #16
 8002988:	46bd      	mov	sp, r7
 800298a:	bd80      	pop	{r7, pc}

0800298c <ft5336_TS_DisableIT>:
  *         connected to MCU as EXTI.
  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT5336).
  * @retval None
  */
void ft5336_TS_DisableIT(uint16_t DeviceAddr)
{
 800298c:	b580      	push	{r7, lr}
 800298e:	b084      	sub	sp, #16
 8002990:	af00      	add	r7, sp, #0
 8002992:	4603      	mov	r3, r0
 8002994:	80fb      	strh	r3, [r7, #6]
  uint8_t regValue = 0;
 8002996:	2300      	movs	r3, #0
 8002998:	73fb      	strb	r3, [r7, #15]
  regValue = (FT5336_G_MODE_INTERRUPT_POLLING & (FT5336_G_MODE_INTERRUPT_MASK >> FT5336_G_MODE_INTERRUPT_SHIFT)) << FT5336_G_MODE_INTERRUPT_SHIFT;
 800299a:	2300      	movs	r3, #0
 800299c:	73fb      	strb	r3, [r7, #15]

  /* Set interrupt polling mode in FT5336_GMODE_REG */
  TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 800299e:	88fb      	ldrh	r3, [r7, #6]
 80029a0:	b2db      	uxtb	r3, r3
 80029a2:	7bfa      	ldrb	r2, [r7, #15]
 80029a4:	21a4      	movs	r1, #164	; 0xa4
 80029a6:	4618      	mov	r0, r3
 80029a8:	f000 faa0 	bl	8002eec <TS_IO_Write>
}
 80029ac:	bf00      	nop
 80029ae:	3710      	adds	r7, #16
 80029b0:	46bd      	mov	sp, r7
 80029b2:	bd80      	pop	{r7, pc}

080029b4 <ft5336_TS_ITStatus>:
  *         @note : This feature is not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval TS interrupts status : always return 0 here
  */
uint8_t ft5336_TS_ITStatus(uint16_t DeviceAddr)
{
 80029b4:	b480      	push	{r7}
 80029b6:	b083      	sub	sp, #12
 80029b8:	af00      	add	r7, sp, #0
 80029ba:	4603      	mov	r3, r0
 80029bc:	80fb      	strh	r3, [r7, #6]
  /* Always return 0 as feature not applicable to FT5336 */
  return 0;
 80029be:	2300      	movs	r3, #0
}
 80029c0:	4618      	mov	r0, r3
 80029c2:	370c      	adds	r7, #12
 80029c4:	46bd      	mov	sp, r7
 80029c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ca:	4770      	bx	lr

080029cc <ft5336_TS_ClearIT>:
  *         @note : This feature is not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_TS_ClearIT(uint16_t DeviceAddr)
{
 80029cc:	b480      	push	{r7}
 80029ce:	b083      	sub	sp, #12
 80029d0:	af00      	add	r7, sp, #0
 80029d2:	4603      	mov	r3, r0
 80029d4:	80fb      	strh	r3, [r7, #6]
  /* Nothing to be done here for FT5336 */
}
 80029d6:	bf00      	nop
 80029d8:	370c      	adds	r7, #12
 80029da:	46bd      	mov	sp, r7
 80029dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029e0:	4770      	bx	lr

080029e2 <ft5336_TS_GetGestureID>:
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @param  pGestureId : Pointer to get last touch gesture Identification.
  * @retval None.
  */
void ft5336_TS_GetGestureID(uint16_t DeviceAddr, uint32_t * pGestureId)
{
 80029e2:	b580      	push	{r7, lr}
 80029e4:	b084      	sub	sp, #16
 80029e6:	af00      	add	r7, sp, #0
 80029e8:	4603      	mov	r3, r0
 80029ea:	6039      	str	r1, [r7, #0]
 80029ec:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t ucReadData = 0;
 80029ee:	2300      	movs	r3, #0
 80029f0:	73fb      	strb	r3, [r7, #15]

  ucReadData = TS_IO_Read(DeviceAddr, FT5336_GEST_ID_REG);
 80029f2:	88fb      	ldrh	r3, [r7, #6]
 80029f4:	b2db      	uxtb	r3, r3
 80029f6:	2101      	movs	r1, #1
 80029f8:	4618      	mov	r0, r3
 80029fa:	f000 fa91 	bl	8002f20 <TS_IO_Read>
 80029fe:	4603      	mov	r3, r0
 8002a00:	73fb      	strb	r3, [r7, #15]

  * pGestureId = ucReadData;
 8002a02:	7bfb      	ldrb	r3, [r7, #15]
 8002a04:	b2db      	uxtb	r3, r3
 8002a06:	461a      	mov	r2, r3
 8002a08:	683b      	ldr	r3, [r7, #0]
 8002a0a:	601a      	str	r2, [r3, #0]
}
 8002a0c:	bf00      	nop
 8002a0e:	3710      	adds	r7, #16
 8002a10:	46bd      	mov	sp, r7
 8002a12:	bd80      	pop	{r7, pc}

08002a14 <ft5336_TS_GetTouchInfo>:
void ft5336_TS_GetTouchInfo(uint16_t   DeviceAddr,
                            uint32_t   touchIdx,
                            uint32_t * pWeight,
                            uint32_t * pArea,
                            uint32_t * pEvent)
{
 8002a14:	b580      	push	{r7, lr}
 8002a16:	b086      	sub	sp, #24
 8002a18:	af00      	add	r7, sp, #0
 8002a1a:	60b9      	str	r1, [r7, #8]
 8002a1c:	607a      	str	r2, [r7, #4]
 8002a1e:	603b      	str	r3, [r7, #0]
 8002a20:	4603      	mov	r3, r0
 8002a22:	81fb      	strh	r3, [r7, #14]
  volatile uint8_t ucReadData = 0;
 8002a24:	2300      	movs	r3, #0
 8002a26:	753b      	strb	r3, [r7, #20]
  uint8_t regAddressXHigh = 0;
 8002a28:	2300      	movs	r3, #0
 8002a2a:	75fb      	strb	r3, [r7, #23]
  uint8_t regAddressPWeight = 0;
 8002a2c:	2300      	movs	r3, #0
 8002a2e:	75bb      	strb	r3, [r7, #22]
  uint8_t regAddressPMisc = 0;
 8002a30:	2300      	movs	r3, #0
 8002a32:	757b      	strb	r3, [r7, #21]

  if(touchIdx < ft5336_handle.currActiveTouchNb)
 8002a34:	4b4d      	ldr	r3, [pc, #308]	; (8002b6c <ft5336_TS_GetTouchInfo+0x158>)
 8002a36:	785b      	ldrb	r3, [r3, #1]
 8002a38:	461a      	mov	r2, r3
 8002a3a:	68bb      	ldr	r3, [r7, #8]
 8002a3c:	4293      	cmp	r3, r2
 8002a3e:	f080 8090 	bcs.w	8002b62 <ft5336_TS_GetTouchInfo+0x14e>
 8002a42:	68bb      	ldr	r3, [r7, #8]
 8002a44:	2b09      	cmp	r3, #9
 8002a46:	d85d      	bhi.n	8002b04 <ft5336_TS_GetTouchInfo+0xf0>
 8002a48:	a201      	add	r2, pc, #4	; (adr r2, 8002a50 <ft5336_TS_GetTouchInfo+0x3c>)
 8002a4a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002a4e:	bf00      	nop
 8002a50:	08002a79 	.word	0x08002a79
 8002a54:	08002a87 	.word	0x08002a87
 8002a58:	08002a95 	.word	0x08002a95
 8002a5c:	08002aa3 	.word	0x08002aa3
 8002a60:	08002ab1 	.word	0x08002ab1
 8002a64:	08002abf 	.word	0x08002abf
 8002a68:	08002acd 	.word	0x08002acd
 8002a6c:	08002adb 	.word	0x08002adb
 8002a70:	08002ae9 	.word	0x08002ae9
 8002a74:	08002af7 	.word	0x08002af7
  {
    switch(touchIdx)
    {
    case 0 :
      regAddressXHigh   = FT5336_P1_XH_REG;
 8002a78:	2303      	movs	r3, #3
 8002a7a:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P1_WEIGHT_REG;
 8002a7c:	2307      	movs	r3, #7
 8002a7e:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P1_MISC_REG;
 8002a80:	2308      	movs	r3, #8
 8002a82:	757b      	strb	r3, [r7, #21]
      break;
 8002a84:	e03f      	b.n	8002b06 <ft5336_TS_GetTouchInfo+0xf2>

    case 1 :
      regAddressXHigh   = FT5336_P2_XH_REG;
 8002a86:	2309      	movs	r3, #9
 8002a88:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P2_WEIGHT_REG;
 8002a8a:	230d      	movs	r3, #13
 8002a8c:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P2_MISC_REG;
 8002a8e:	230e      	movs	r3, #14
 8002a90:	757b      	strb	r3, [r7, #21]
      break;
 8002a92:	e038      	b.n	8002b06 <ft5336_TS_GetTouchInfo+0xf2>

    case 2 :
      regAddressXHigh   = FT5336_P3_XH_REG;
 8002a94:	230f      	movs	r3, #15
 8002a96:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P3_WEIGHT_REG;
 8002a98:	2313      	movs	r3, #19
 8002a9a:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P3_MISC_REG;
 8002a9c:	2314      	movs	r3, #20
 8002a9e:	757b      	strb	r3, [r7, #21]
      break;
 8002aa0:	e031      	b.n	8002b06 <ft5336_TS_GetTouchInfo+0xf2>

    case 3 :
      regAddressXHigh   = FT5336_P4_XH_REG;
 8002aa2:	2315      	movs	r3, #21
 8002aa4:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P4_WEIGHT_REG;
 8002aa6:	2319      	movs	r3, #25
 8002aa8:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P4_MISC_REG;
 8002aaa:	231a      	movs	r3, #26
 8002aac:	757b      	strb	r3, [r7, #21]
      break;
 8002aae:	e02a      	b.n	8002b06 <ft5336_TS_GetTouchInfo+0xf2>

    case 4 :
      regAddressXHigh   = FT5336_P5_XH_REG;
 8002ab0:	231b      	movs	r3, #27
 8002ab2:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P5_WEIGHT_REG;
 8002ab4:	231f      	movs	r3, #31
 8002ab6:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P5_MISC_REG;
 8002ab8:	2320      	movs	r3, #32
 8002aba:	757b      	strb	r3, [r7, #21]
      break;
 8002abc:	e023      	b.n	8002b06 <ft5336_TS_GetTouchInfo+0xf2>

    case 5 :
      regAddressXHigh   = FT5336_P6_XH_REG;
 8002abe:	2321      	movs	r3, #33	; 0x21
 8002ac0:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P6_WEIGHT_REG;
 8002ac2:	2325      	movs	r3, #37	; 0x25
 8002ac4:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P6_MISC_REG;
 8002ac6:	2326      	movs	r3, #38	; 0x26
 8002ac8:	757b      	strb	r3, [r7, #21]
      break;
 8002aca:	e01c      	b.n	8002b06 <ft5336_TS_GetTouchInfo+0xf2>

    case 6 :
      regAddressXHigh   = FT5336_P7_XH_REG;
 8002acc:	2327      	movs	r3, #39	; 0x27
 8002ace:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P7_WEIGHT_REG;
 8002ad0:	232b      	movs	r3, #43	; 0x2b
 8002ad2:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P7_MISC_REG;
 8002ad4:	232c      	movs	r3, #44	; 0x2c
 8002ad6:	757b      	strb	r3, [r7, #21]
      break;
 8002ad8:	e015      	b.n	8002b06 <ft5336_TS_GetTouchInfo+0xf2>

    case 7 :
      regAddressXHigh   = FT5336_P8_XH_REG;
 8002ada:	232d      	movs	r3, #45	; 0x2d
 8002adc:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P8_WEIGHT_REG;
 8002ade:	2331      	movs	r3, #49	; 0x31
 8002ae0:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P8_MISC_REG;
 8002ae2:	2332      	movs	r3, #50	; 0x32
 8002ae4:	757b      	strb	r3, [r7, #21]
      break;
 8002ae6:	e00e      	b.n	8002b06 <ft5336_TS_GetTouchInfo+0xf2>

    case 8 :
      regAddressXHigh   = FT5336_P9_XH_REG;
 8002ae8:	2333      	movs	r3, #51	; 0x33
 8002aea:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P9_WEIGHT_REG;
 8002aec:	2337      	movs	r3, #55	; 0x37
 8002aee:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P9_MISC_REG;
 8002af0:	2338      	movs	r3, #56	; 0x38
 8002af2:	757b      	strb	r3, [r7, #21]
      break;
 8002af4:	e007      	b.n	8002b06 <ft5336_TS_GetTouchInfo+0xf2>

    case 9 :
      regAddressXHigh   = FT5336_P10_XH_REG;
 8002af6:	2339      	movs	r3, #57	; 0x39
 8002af8:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P10_WEIGHT_REG;
 8002afa:	233d      	movs	r3, #61	; 0x3d
 8002afc:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P10_MISC_REG;
 8002afe:	233e      	movs	r3, #62	; 0x3e
 8002b00:	757b      	strb	r3, [r7, #21]
      break;
 8002b02:	e000      	b.n	8002b06 <ft5336_TS_GetTouchInfo+0xf2>

    default :
      break;
 8002b04:	bf00      	nop

    } /* end switch(touchIdx) */

    /* Read Event Id of touch index */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8002b06:	89fb      	ldrh	r3, [r7, #14]
 8002b08:	b2db      	uxtb	r3, r3
 8002b0a:	7dfa      	ldrb	r2, [r7, #23]
 8002b0c:	4611      	mov	r1, r2
 8002b0e:	4618      	mov	r0, r3
 8002b10:	f000 fa06 	bl	8002f20 <TS_IO_Read>
 8002b14:	4603      	mov	r3, r0
 8002b16:	753b      	strb	r3, [r7, #20]
    * pEvent = (ucReadData & FT5336_TOUCH_EVT_FLAG_MASK) >> FT5336_TOUCH_EVT_FLAG_SHIFT;
 8002b18:	7d3b      	ldrb	r3, [r7, #20]
 8002b1a:	b2db      	uxtb	r3, r3
 8002b1c:	119b      	asrs	r3, r3, #6
 8002b1e:	f003 0203 	and.w	r2, r3, #3
 8002b22:	6a3b      	ldr	r3, [r7, #32]
 8002b24:	601a      	str	r2, [r3, #0]

    /* Read weight of touch index */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressPWeight);
 8002b26:	89fb      	ldrh	r3, [r7, #14]
 8002b28:	b2db      	uxtb	r3, r3
 8002b2a:	7dba      	ldrb	r2, [r7, #22]
 8002b2c:	4611      	mov	r1, r2
 8002b2e:	4618      	mov	r0, r3
 8002b30:	f000 f9f6 	bl	8002f20 <TS_IO_Read>
 8002b34:	4603      	mov	r3, r0
 8002b36:	753b      	strb	r3, [r7, #20]
    * pWeight = (ucReadData & FT5336_TOUCH_WEIGHT_MASK) >> FT5336_TOUCH_WEIGHT_SHIFT;
 8002b38:	7d3b      	ldrb	r3, [r7, #20]
 8002b3a:	b2db      	uxtb	r3, r3
 8002b3c:	461a      	mov	r2, r3
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	601a      	str	r2, [r3, #0]

    /* Read area of touch index */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressPMisc);
 8002b42:	89fb      	ldrh	r3, [r7, #14]
 8002b44:	b2db      	uxtb	r3, r3
 8002b46:	7d7a      	ldrb	r2, [r7, #21]
 8002b48:	4611      	mov	r1, r2
 8002b4a:	4618      	mov	r0, r3
 8002b4c:	f000 f9e8 	bl	8002f20 <TS_IO_Read>
 8002b50:	4603      	mov	r3, r0
 8002b52:	753b      	strb	r3, [r7, #20]
    * pArea = (ucReadData & FT5336_TOUCH_AREA_MASK) >> FT5336_TOUCH_AREA_SHIFT;
 8002b54:	7d3b      	ldrb	r3, [r7, #20]
 8002b56:	b2db      	uxtb	r3, r3
 8002b58:	111b      	asrs	r3, r3, #4
 8002b5a:	f003 0204 	and.w	r2, r3, #4
 8002b5e:	683b      	ldr	r3, [r7, #0]
 8002b60:	601a      	str	r2, [r3, #0]

  } /* of if(touchIdx < ft5336_handle.currActiveTouchNb) */
}
 8002b62:	bf00      	nop
 8002b64:	3718      	adds	r7, #24
 8002b66:	46bd      	mov	sp, r7
 8002b68:	bd80      	pop	{r7, pc}
 8002b6a:	bf00      	nop
 8002b6c:	20000ea0 	.word	0x20000ea0

08002b70 <ft5336_Get_I2C_InitializedStatus>:
  * @brief  Return the status of I2C was initialized or not.
  * @param  None.
  * @retval : I2C initialization status.
  */
static uint8_t ft5336_Get_I2C_InitializedStatus(void)
{
 8002b70:	b480      	push	{r7}
 8002b72:	af00      	add	r7, sp, #0
  return(ft5336_handle.i2cInitialized);
 8002b74:	4b03      	ldr	r3, [pc, #12]	; (8002b84 <ft5336_Get_I2C_InitializedStatus+0x14>)
 8002b76:	781b      	ldrb	r3, [r3, #0]
}
 8002b78:	4618      	mov	r0, r3
 8002b7a:	46bd      	mov	sp, r7
 8002b7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b80:	4770      	bx	lr
 8002b82:	bf00      	nop
 8002b84:	20000ea0 	.word	0x20000ea0

08002b88 <ft5336_I2C_InitializeIfRequired>:
  * @brief  I2C initialize if needed.
  * @param  None.
  * @retval : None.
  */
static void ft5336_I2C_InitializeIfRequired(void)
{
 8002b88:	b580      	push	{r7, lr}
 8002b8a:	af00      	add	r7, sp, #0
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 8002b8c:	f7ff fff0 	bl	8002b70 <ft5336_Get_I2C_InitializedStatus>
 8002b90:	4603      	mov	r3, r0
 8002b92:	2b00      	cmp	r3, #0
 8002b94:	d104      	bne.n	8002ba0 <ft5336_I2C_InitializeIfRequired+0x18>
  {
    /* Initialize TS IO BUS layer (I2C) */
    TS_IO_Init();
 8002b96:	f000 f99f 	bl	8002ed8 <TS_IO_Init>

    /* Set state to initialized */
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8002b9a:	4b02      	ldr	r3, [pc, #8]	; (8002ba4 <ft5336_I2C_InitializeIfRequired+0x1c>)
 8002b9c:	2201      	movs	r2, #1
 8002b9e:	701a      	strb	r2, [r3, #0]
  }
}
 8002ba0:	bf00      	nop
 8002ba2:	bd80      	pop	{r7, pc}
 8002ba4:	20000ea0 	.word	0x20000ea0

08002ba8 <ft5336_TS_Configure>:
  * @brief  Basic static configuration of TouchScreen
  * @param  DeviceAddr: FT5336 Device address for communication on I2C Bus.
  * @retval Status FT5336_STATUS_OK or FT5336_STATUS_NOT_OK.
  */
static uint32_t ft5336_TS_Configure(uint16_t DeviceAddr)
{
 8002ba8:	b480      	push	{r7}
 8002baa:	b085      	sub	sp, #20
 8002bac:	af00      	add	r7, sp, #0
 8002bae:	4603      	mov	r3, r0
 8002bb0:	80fb      	strh	r3, [r7, #6]
  uint32_t status = FT5336_STATUS_OK;
 8002bb2:	2300      	movs	r3, #0
 8002bb4:	60fb      	str	r3, [r7, #12]

  /* Nothing special to be done for FT5336 */

  return(status);
 8002bb6:	68fb      	ldr	r3, [r7, #12]
}
 8002bb8:	4618      	mov	r0, r3
 8002bba:	3714      	adds	r7, #20
 8002bbc:	46bd      	mov	sp, r7
 8002bbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bc2:	4770      	bx	lr

08002bc4 <BSP_LED_Init>:
  *          This parameter can be one of the following values:
  *            @arg  LED1
  * @retval None
  */
void BSP_LED_Init(Led_TypeDef Led)
{
 8002bc4:	b580      	push	{r7, lr}
 8002bc6:	b08a      	sub	sp, #40	; 0x28
 8002bc8:	af00      	add	r7, sp, #0
 8002bca:	4603      	mov	r3, r0
 8002bcc:	71fb      	strb	r3, [r7, #7]
  GPIO_InitTypeDef  gpio_init_structure;
  GPIO_TypeDef*     gpio_led;

  if (Led == LED1)
 8002bce:	79fb      	ldrb	r3, [r7, #7]
 8002bd0:	2b00      	cmp	r3, #0
 8002bd2:	d122      	bne.n	8002c1a <BSP_LED_Init+0x56>
  {
    gpio_led = LED1_GPIO_PORT;
 8002bd4:	4b13      	ldr	r3, [pc, #76]	; (8002c24 <BSP_LED_Init+0x60>)
 8002bd6:	627b      	str	r3, [r7, #36]	; 0x24
    /* Enable the GPIO_LED clock */
    LED1_GPIO_CLK_ENABLE();
 8002bd8:	4b13      	ldr	r3, [pc, #76]	; (8002c28 <BSP_LED_Init+0x64>)
 8002bda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bdc:	4a12      	ldr	r2, [pc, #72]	; (8002c28 <BSP_LED_Init+0x64>)
 8002bde:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002be2:	6313      	str	r3, [r2, #48]	; 0x30
 8002be4:	4b10      	ldr	r3, [pc, #64]	; (8002c28 <BSP_LED_Init+0x64>)
 8002be6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002be8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002bec:	60fb      	str	r3, [r7, #12]
 8002bee:	68fb      	ldr	r3, [r7, #12]

    /* Configure the GPIO_LED pin */
    gpio_init_structure.Pin = GPIO_PIN[Led];
 8002bf0:	2302      	movs	r3, #2
 8002bf2:	613b      	str	r3, [r7, #16]
    gpio_init_structure.Mode = GPIO_MODE_OUTPUT_PP;
 8002bf4:	2301      	movs	r3, #1
 8002bf6:	617b      	str	r3, [r7, #20]
    gpio_init_structure.Pull = GPIO_PULLUP;
 8002bf8:	2301      	movs	r3, #1
 8002bfa:	61bb      	str	r3, [r7, #24]
    gpio_init_structure.Speed = GPIO_SPEED_HIGH;
 8002bfc:	2303      	movs	r3, #3
 8002bfe:	61fb      	str	r3, [r7, #28]
  
    HAL_GPIO_Init(gpio_led, &gpio_init_structure);
 8002c00:	f107 0310 	add.w	r3, r7, #16
 8002c04:	4619      	mov	r1, r3
 8002c06:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8002c08:	f002 f86e 	bl	8004ce8 <HAL_GPIO_Init>
    
    /* By default, turn off LED */
    HAL_GPIO_WritePin(gpio_led, GPIO_PIN[Led], GPIO_PIN_RESET);
 8002c0c:	2302      	movs	r3, #2
 8002c0e:	b29b      	uxth	r3, r3
 8002c10:	2200      	movs	r2, #0
 8002c12:	4619      	mov	r1, r3
 8002c14:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8002c16:	f002 fb1f 	bl	8005258 <HAL_GPIO_WritePin>
  }
}
 8002c1a:	bf00      	nop
 8002c1c:	3728      	adds	r7, #40	; 0x28
 8002c1e:	46bd      	mov	sp, r7
 8002c20:	bd80      	pop	{r7, pc}
 8002c22:	bf00      	nop
 8002c24:	40022000 	.word	0x40022000
 8002c28:	40023800 	.word	0x40023800

08002c2c <I2Cx_MspInit>:
  * @brief  Initializes I2C MSP.
  * @param  i2c_handler : I2C handler
  * @retval None
  */
static void I2Cx_MspInit(I2C_HandleTypeDef *i2c_handler)
{
 8002c2c:	b580      	push	{r7, lr}
 8002c2e:	b08c      	sub	sp, #48	; 0x30
 8002c30:	af00      	add	r7, sp, #0
 8002c32:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef  gpio_init_structure;
  
  if (i2c_handler == (I2C_HandleTypeDef*)(&hI2cAudioHandler))
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	4a51      	ldr	r2, [pc, #324]	; (8002d7c <I2Cx_MspInit+0x150>)
 8002c38:	4293      	cmp	r3, r2
 8002c3a:	d14d      	bne.n	8002cd8 <I2Cx_MspInit+0xac>
  {
    /* AUDIO and LCD I2C MSP init */

    /*** Configure the GPIOs ***/
    /* Enable GPIO clock */
    DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
 8002c3c:	4b50      	ldr	r3, [pc, #320]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002c3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c40:	4a4f      	ldr	r2, [pc, #316]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002c42:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002c46:	6313      	str	r3, [r2, #48]	; 0x30
 8002c48:	4b4d      	ldr	r3, [pc, #308]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002c4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c4c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002c50:	61bb      	str	r3, [r7, #24]
 8002c52:	69bb      	ldr	r3, [r7, #24]

    /* Configure I2C Tx as alternate function */
    gpio_init_structure.Pin = DISCOVERY_AUDIO_I2Cx_SCL_PIN;
 8002c54:	2380      	movs	r3, #128	; 0x80
 8002c56:	61fb      	str	r3, [r7, #28]
    gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8002c58:	2312      	movs	r3, #18
 8002c5a:	623b      	str	r3, [r7, #32]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8002c5c:	2300      	movs	r3, #0
 8002c5e:	627b      	str	r3, [r7, #36]	; 0x24
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8002c60:	2302      	movs	r3, #2
 8002c62:	62bb      	str	r3, [r7, #40]	; 0x28
    gpio_init_structure.Alternate = DISCOVERY_AUDIO_I2Cx_SCL_SDA_AF;
 8002c64:	2304      	movs	r3, #4
 8002c66:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002c68:	f107 031c 	add.w	r3, r7, #28
 8002c6c:	4619      	mov	r1, r3
 8002c6e:	4845      	ldr	r0, [pc, #276]	; (8002d84 <I2Cx_MspInit+0x158>)
 8002c70:	f002 f83a 	bl	8004ce8 <HAL_GPIO_Init>

    /* Configure I2C Rx as alternate function */
    gpio_init_structure.Pin = DISCOVERY_AUDIO_I2Cx_SDA_PIN;
 8002c74:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002c78:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002c7a:	f107 031c 	add.w	r3, r7, #28
 8002c7e:	4619      	mov	r1, r3
 8002c80:	4840      	ldr	r0, [pc, #256]	; (8002d84 <I2Cx_MspInit+0x158>)
 8002c82:	f002 f831 	bl	8004ce8 <HAL_GPIO_Init>

    /*** Configure the I2C peripheral ***/
    /* Enable I2C clock */
    DISCOVERY_AUDIO_I2Cx_CLK_ENABLE();
 8002c86:	4b3e      	ldr	r3, [pc, #248]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002c88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c8a:	4a3d      	ldr	r2, [pc, #244]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002c8c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002c90:	6413      	str	r3, [r2, #64]	; 0x40
 8002c92:	4b3b      	ldr	r3, [pc, #236]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002c94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c96:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002c9a:	617b      	str	r3, [r7, #20]
 8002c9c:	697b      	ldr	r3, [r7, #20]

    /* Force the I2C peripheral clock reset */
    DISCOVERY_AUDIO_I2Cx_FORCE_RESET();
 8002c9e:	4b38      	ldr	r3, [pc, #224]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002ca0:	6a1b      	ldr	r3, [r3, #32]
 8002ca2:	4a37      	ldr	r2, [pc, #220]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002ca4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002ca8:	6213      	str	r3, [r2, #32]

    /* Release the I2C peripheral clock reset */
    DISCOVERY_AUDIO_I2Cx_RELEASE_RESET();
 8002caa:	4b35      	ldr	r3, [pc, #212]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002cac:	6a1b      	ldr	r3, [r3, #32]
 8002cae:	4a34      	ldr	r2, [pc, #208]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002cb0:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002cb4:	6213      	str	r3, [r2, #32]

    /* Enable and set I2Cx Interrupt to a lower priority */
    HAL_NVIC_SetPriority(DISCOVERY_AUDIO_I2Cx_EV_IRQn, 0x0F, 0);
 8002cb6:	2200      	movs	r2, #0
 8002cb8:	210f      	movs	r1, #15
 8002cba:	2048      	movs	r0, #72	; 0x48
 8002cbc:	f001 fb33 	bl	8004326 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DISCOVERY_AUDIO_I2Cx_EV_IRQn);
 8002cc0:	2048      	movs	r0, #72	; 0x48
 8002cc2:	f001 fb4c 	bl	800435e <HAL_NVIC_EnableIRQ>

    /* Enable and set I2Cx Interrupt to a lower priority */
    HAL_NVIC_SetPriority(DISCOVERY_AUDIO_I2Cx_ER_IRQn, 0x0F, 0);
 8002cc6:	2200      	movs	r2, #0
 8002cc8:	210f      	movs	r1, #15
 8002cca:	2049      	movs	r0, #73	; 0x49
 8002ccc:	f001 fb2b 	bl	8004326 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DISCOVERY_AUDIO_I2Cx_ER_IRQn);
 8002cd0:	2049      	movs	r0, #73	; 0x49
 8002cd2:	f001 fb44 	bl	800435e <HAL_NVIC_EnableIRQ>

    /* Enable and set I2Cx Interrupt to a lower priority */
    HAL_NVIC_SetPriority(DISCOVERY_EXT_I2Cx_ER_IRQn, 0x0F, 0);
    HAL_NVIC_EnableIRQ(DISCOVERY_EXT_I2Cx_ER_IRQn);
  }
}
 8002cd6:	e04d      	b.n	8002d74 <I2Cx_MspInit+0x148>
    DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
 8002cd8:	4b29      	ldr	r3, [pc, #164]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002cda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002cdc:	4a28      	ldr	r2, [pc, #160]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002cde:	f043 0302 	orr.w	r3, r3, #2
 8002ce2:	6313      	str	r3, [r2, #48]	; 0x30
 8002ce4:	4b26      	ldr	r3, [pc, #152]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002ce6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ce8:	f003 0302 	and.w	r3, r3, #2
 8002cec:	613b      	str	r3, [r7, #16]
 8002cee:	693b      	ldr	r3, [r7, #16]
    gpio_init_structure.Pin = DISCOVERY_EXT_I2Cx_SCL_PIN;
 8002cf0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002cf4:	61fb      	str	r3, [r7, #28]
    gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8002cf6:	2312      	movs	r3, #18
 8002cf8:	623b      	str	r3, [r7, #32]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8002cfa:	2300      	movs	r3, #0
 8002cfc:	627b      	str	r3, [r7, #36]	; 0x24
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8002cfe:	2302      	movs	r3, #2
 8002d00:	62bb      	str	r3, [r7, #40]	; 0x28
    gpio_init_structure.Alternate = DISCOVERY_EXT_I2Cx_SCL_SDA_AF;
 8002d02:	2304      	movs	r3, #4
 8002d04:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002d06:	f107 031c 	add.w	r3, r7, #28
 8002d0a:	4619      	mov	r1, r3
 8002d0c:	481e      	ldr	r0, [pc, #120]	; (8002d88 <I2Cx_MspInit+0x15c>)
 8002d0e:	f001 ffeb 	bl	8004ce8 <HAL_GPIO_Init>
    gpio_init_structure.Pin = DISCOVERY_EXT_I2Cx_SDA_PIN;
 8002d12:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002d16:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002d18:	f107 031c 	add.w	r3, r7, #28
 8002d1c:	4619      	mov	r1, r3
 8002d1e:	481a      	ldr	r0, [pc, #104]	; (8002d88 <I2Cx_MspInit+0x15c>)
 8002d20:	f001 ffe2 	bl	8004ce8 <HAL_GPIO_Init>
    DISCOVERY_EXT_I2Cx_CLK_ENABLE();
 8002d24:	4b16      	ldr	r3, [pc, #88]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002d26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d28:	4a15      	ldr	r2, [pc, #84]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002d2a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002d2e:	6413      	str	r3, [r2, #64]	; 0x40
 8002d30:	4b13      	ldr	r3, [pc, #76]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002d32:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d34:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002d38:	60fb      	str	r3, [r7, #12]
 8002d3a:	68fb      	ldr	r3, [r7, #12]
    DISCOVERY_EXT_I2Cx_FORCE_RESET();
 8002d3c:	4b10      	ldr	r3, [pc, #64]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002d3e:	6a1b      	ldr	r3, [r3, #32]
 8002d40:	4a0f      	ldr	r2, [pc, #60]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002d42:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002d46:	6213      	str	r3, [r2, #32]
    DISCOVERY_EXT_I2Cx_RELEASE_RESET();
 8002d48:	4b0d      	ldr	r3, [pc, #52]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002d4a:	6a1b      	ldr	r3, [r3, #32]
 8002d4c:	4a0c      	ldr	r2, [pc, #48]	; (8002d80 <I2Cx_MspInit+0x154>)
 8002d4e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8002d52:	6213      	str	r3, [r2, #32]
    HAL_NVIC_SetPriority(DISCOVERY_EXT_I2Cx_EV_IRQn, 0x0F, 0);
 8002d54:	2200      	movs	r2, #0
 8002d56:	210f      	movs	r1, #15
 8002d58:	201f      	movs	r0, #31
 8002d5a:	f001 fae4 	bl	8004326 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DISCOVERY_EXT_I2Cx_EV_IRQn);
 8002d5e:	201f      	movs	r0, #31
 8002d60:	f001 fafd 	bl	800435e <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(DISCOVERY_EXT_I2Cx_ER_IRQn, 0x0F, 0);
 8002d64:	2200      	movs	r2, #0
 8002d66:	210f      	movs	r1, #15
 8002d68:	2020      	movs	r0, #32
 8002d6a:	f001 fadc 	bl	8004326 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DISCOVERY_EXT_I2Cx_ER_IRQn);
 8002d6e:	2020      	movs	r0, #32
 8002d70:	f001 faf5 	bl	800435e <HAL_NVIC_EnableIRQ>
}
 8002d74:	bf00      	nop
 8002d76:	3730      	adds	r7, #48	; 0x30
 8002d78:	46bd      	mov	sp, r7
 8002d7a:	bd80      	pop	{r7, pc}
 8002d7c:	20000ea8 	.word	0x20000ea8
 8002d80:	40023800 	.word	0x40023800
 8002d84:	40021c00 	.word	0x40021c00
 8002d88:	40020400 	.word	0x40020400

08002d8c <I2Cx_Init>:
  * @brief  Initializes I2C HAL.
  * @param  i2c_handler : I2C handler
  * @retval None
  */
static void I2Cx_Init(I2C_HandleTypeDef *i2c_handler)
{
 8002d8c:	b580      	push	{r7, lr}
 8002d8e:	b082      	sub	sp, #8
 8002d90:	af00      	add	r7, sp, #0
 8002d92:	6078      	str	r0, [r7, #4]
  if(HAL_I2C_GetState(i2c_handler) == HAL_I2C_STATE_RESET)
 8002d94:	6878      	ldr	r0, [r7, #4]
 8002d96:	f002 fd67 	bl	8005868 <HAL_I2C_GetState>
 8002d9a:	4603      	mov	r3, r0
 8002d9c:	2b00      	cmp	r3, #0
 8002d9e:	d125      	bne.n	8002dec <I2Cx_Init+0x60>
  {
    if (i2c_handler == (I2C_HandleTypeDef*)(&hI2cAudioHandler))
 8002da0:	687b      	ldr	r3, [r7, #4]
 8002da2:	4a14      	ldr	r2, [pc, #80]	; (8002df4 <I2Cx_Init+0x68>)
 8002da4:	4293      	cmp	r3, r2
 8002da6:	d103      	bne.n	8002db0 <I2Cx_Init+0x24>
    {
      /* Audio and LCD I2C configuration */
      i2c_handler->Instance = DISCOVERY_AUDIO_I2Cx;
 8002da8:	687b      	ldr	r3, [r7, #4]
 8002daa:	4a13      	ldr	r2, [pc, #76]	; (8002df8 <I2Cx_Init+0x6c>)
 8002dac:	601a      	str	r2, [r3, #0]
 8002dae:	e002      	b.n	8002db6 <I2Cx_Init+0x2a>
    }
    else
    {
      /* External, camera and Arduino connector  I2C configuration */
      i2c_handler->Instance = DISCOVERY_EXT_I2Cx;
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	4a12      	ldr	r2, [pc, #72]	; (8002dfc <I2Cx_Init+0x70>)
 8002db4:	601a      	str	r2, [r3, #0]
    }
    i2c_handler->Init.Timing           = DISCOVERY_I2Cx_TIMING;
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	4a11      	ldr	r2, [pc, #68]	; (8002e00 <I2Cx_Init+0x74>)
 8002dba:	605a      	str	r2, [r3, #4]
    i2c_handler->Init.OwnAddress1      = 0;
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	2200      	movs	r2, #0
 8002dc0:	609a      	str	r2, [r3, #8]
    i2c_handler->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 8002dc2:	687b      	ldr	r3, [r7, #4]
 8002dc4:	2201      	movs	r2, #1
 8002dc6:	60da      	str	r2, [r3, #12]
    i2c_handler->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
 8002dc8:	687b      	ldr	r3, [r7, #4]
 8002dca:	2200      	movs	r2, #0
 8002dcc:	611a      	str	r2, [r3, #16]
    i2c_handler->Init.OwnAddress2      = 0;
 8002dce:	687b      	ldr	r3, [r7, #4]
 8002dd0:	2200      	movs	r2, #0
 8002dd2:	615a      	str	r2, [r3, #20]
    i2c_handler->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	2200      	movs	r2, #0
 8002dd8:	61da      	str	r2, [r3, #28]
    i2c_handler->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	2200      	movs	r2, #0
 8002dde:	621a      	str	r2, [r3, #32]

    /* Init the I2C */
    I2Cx_MspInit(i2c_handler);
 8002de0:	6878      	ldr	r0, [r7, #4]
 8002de2:	f7ff ff23 	bl	8002c2c <I2Cx_MspInit>
    HAL_I2C_Init(i2c_handler);
 8002de6:	6878      	ldr	r0, [r7, #4]
 8002de8:	f002 fa50 	bl	800528c <HAL_I2C_Init>
  }
}
 8002dec:	bf00      	nop
 8002dee:	3708      	adds	r7, #8
 8002df0:	46bd      	mov	sp, r7
 8002df2:	bd80      	pop	{r7, pc}
 8002df4:	20000ea8 	.word	0x20000ea8
 8002df8:	40005c00 	.word	0x40005c00
 8002dfc:	40005400 	.word	0x40005400
 8002e00:	40912732 	.word	0x40912732

08002e04 <I2Cx_ReadMultiple>:
                                           uint8_t Addr,
                                           uint16_t Reg,
                                           uint16_t MemAddress,
                                           uint8_t *Buffer,
                                           uint16_t Length)
{
 8002e04:	b580      	push	{r7, lr}
 8002e06:	b08a      	sub	sp, #40	; 0x28
 8002e08:	af04      	add	r7, sp, #16
 8002e0a:	60f8      	str	r0, [r7, #12]
 8002e0c:	4608      	mov	r0, r1
 8002e0e:	4611      	mov	r1, r2
 8002e10:	461a      	mov	r2, r3
 8002e12:	4603      	mov	r3, r0
 8002e14:	72fb      	strb	r3, [r7, #11]
 8002e16:	460b      	mov	r3, r1
 8002e18:	813b      	strh	r3, [r7, #8]
 8002e1a:	4613      	mov	r3, r2
 8002e1c:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef status = HAL_OK;
 8002e1e:	2300      	movs	r3, #0
 8002e20:	75fb      	strb	r3, [r7, #23]

  status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8002e22:	7afb      	ldrb	r3, [r7, #11]
 8002e24:	b299      	uxth	r1, r3
 8002e26:	88f8      	ldrh	r0, [r7, #6]
 8002e28:	893a      	ldrh	r2, [r7, #8]
 8002e2a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002e2e:	9302      	str	r3, [sp, #8]
 8002e30:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8002e32:	9301      	str	r3, [sp, #4]
 8002e34:	6a3b      	ldr	r3, [r7, #32]
 8002e36:	9300      	str	r3, [sp, #0]
 8002e38:	4603      	mov	r3, r0
 8002e3a:	68f8      	ldr	r0, [r7, #12]
 8002e3c:	f002 fbfa 	bl	8005634 <HAL_I2C_Mem_Read>
 8002e40:	4603      	mov	r3, r0
 8002e42:	75fb      	strb	r3, [r7, #23]

  /* Check the communication status */
  if(status != HAL_OK)
 8002e44:	7dfb      	ldrb	r3, [r7, #23]
 8002e46:	2b00      	cmp	r3, #0
 8002e48:	d004      	beq.n	8002e54 <I2Cx_ReadMultiple+0x50>
  {
    /* I2C error occurred */
    I2Cx_Error(i2c_handler, Addr);
 8002e4a:	7afb      	ldrb	r3, [r7, #11]
 8002e4c:	4619      	mov	r1, r3
 8002e4e:	68f8      	ldr	r0, [r7, #12]
 8002e50:	f000 f832 	bl	8002eb8 <I2Cx_Error>
  }
  return status;    
 8002e54:	7dfb      	ldrb	r3, [r7, #23]
}
 8002e56:	4618      	mov	r0, r3
 8002e58:	3718      	adds	r7, #24
 8002e5a:	46bd      	mov	sp, r7
 8002e5c:	bd80      	pop	{r7, pc}

08002e5e <I2Cx_WriteMultiple>:
                                            uint8_t Addr,
                                            uint16_t Reg,
                                            uint16_t MemAddress,
                                            uint8_t *Buffer,
                                            uint16_t Length)
{
 8002e5e:	b580      	push	{r7, lr}
 8002e60:	b08a      	sub	sp, #40	; 0x28
 8002e62:	af04      	add	r7, sp, #16
 8002e64:	60f8      	str	r0, [r7, #12]
 8002e66:	4608      	mov	r0, r1
 8002e68:	4611      	mov	r1, r2
 8002e6a:	461a      	mov	r2, r3
 8002e6c:	4603      	mov	r3, r0
 8002e6e:	72fb      	strb	r3, [r7, #11]
 8002e70:	460b      	mov	r3, r1
 8002e72:	813b      	strh	r3, [r7, #8]
 8002e74:	4613      	mov	r3, r2
 8002e76:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef status = HAL_OK;
 8002e78:	2300      	movs	r3, #0
 8002e7a:	75fb      	strb	r3, [r7, #23]
  
  status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 8002e7c:	7afb      	ldrb	r3, [r7, #11]
 8002e7e:	b299      	uxth	r1, r3
 8002e80:	88f8      	ldrh	r0, [r7, #6]
 8002e82:	893a      	ldrh	r2, [r7, #8]
 8002e84:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002e88:	9302      	str	r3, [sp, #8]
 8002e8a:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8002e8c:	9301      	str	r3, [sp, #4]
 8002e8e:	6a3b      	ldr	r3, [r7, #32]
 8002e90:	9300      	str	r3, [sp, #0]
 8002e92:	4603      	mov	r3, r0
 8002e94:	68f8      	ldr	r0, [r7, #12]
 8002e96:	f002 fab9 	bl	800540c <HAL_I2C_Mem_Write>
 8002e9a:	4603      	mov	r3, r0
 8002e9c:	75fb      	strb	r3, [r7, #23]
  
  /* Check the communication status */
  if(status != HAL_OK)
 8002e9e:	7dfb      	ldrb	r3, [r7, #23]
 8002ea0:	2b00      	cmp	r3, #0
 8002ea2:	d004      	beq.n	8002eae <I2Cx_WriteMultiple+0x50>
  {
    /* Re-Initiaize the I2C Bus */
    I2Cx_Error(i2c_handler, Addr);
 8002ea4:	7afb      	ldrb	r3, [r7, #11]
 8002ea6:	4619      	mov	r1, r3
 8002ea8:	68f8      	ldr	r0, [r7, #12]
 8002eaa:	f000 f805 	bl	8002eb8 <I2Cx_Error>
  }
  return status;
 8002eae:	7dfb      	ldrb	r3, [r7, #23]
}
 8002eb0:	4618      	mov	r0, r3
 8002eb2:	3718      	adds	r7, #24
 8002eb4:	46bd      	mov	sp, r7
 8002eb6:	bd80      	pop	{r7, pc}

08002eb8 <I2Cx_Error>:
  * @param  i2c_handler : I2C handler
  * @param  Addr: I2C Address
  * @retval None
  */
static void I2Cx_Error(I2C_HandleTypeDef *i2c_handler, uint8_t Addr)
{
 8002eb8:	b580      	push	{r7, lr}
 8002eba:	b082      	sub	sp, #8
 8002ebc:	af00      	add	r7, sp, #0
 8002ebe:	6078      	str	r0, [r7, #4]
 8002ec0:	460b      	mov	r3, r1
 8002ec2:	70fb      	strb	r3, [r7, #3]
  /* De-initialize the I2C communication bus */
  HAL_I2C_DeInit(i2c_handler);
 8002ec4:	6878      	ldr	r0, [r7, #4]
 8002ec6:	f002 fa71 	bl	80053ac <HAL_I2C_DeInit>
  
  /* Re-Initialize the I2C communication bus */
  I2Cx_Init(i2c_handler);
 8002eca:	6878      	ldr	r0, [r7, #4]
 8002ecc:	f7ff ff5e 	bl	8002d8c <I2Cx_Init>
}
 8002ed0:	bf00      	nop
 8002ed2:	3708      	adds	r7, #8
 8002ed4:	46bd      	mov	sp, r7
 8002ed6:	bd80      	pop	{r7, pc}

08002ed8 <TS_IO_Init>:
/**
  * @brief  Initializes Touchscreen low level.
  * @retval None
  */
void TS_IO_Init(void)
{
 8002ed8:	b580      	push	{r7, lr}
 8002eda:	af00      	add	r7, sp, #0
  I2Cx_Init(&hI2cAudioHandler);
 8002edc:	4802      	ldr	r0, [pc, #8]	; (8002ee8 <TS_IO_Init+0x10>)
 8002ede:	f7ff ff55 	bl	8002d8c <I2Cx_Init>
}
 8002ee2:	bf00      	nop
 8002ee4:	bd80      	pop	{r7, pc}
 8002ee6:	bf00      	nop
 8002ee8:	20000ea8 	.word	0x20000ea8

08002eec <TS_IO_Write>:
  * @param  Reg: Reg address
  * @param  Value: Data to be written
  * @retval None
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8002eec:	b580      	push	{r7, lr}
 8002eee:	b084      	sub	sp, #16
 8002ef0:	af02      	add	r7, sp, #8
 8002ef2:	4603      	mov	r3, r0
 8002ef4:	71fb      	strb	r3, [r7, #7]
 8002ef6:	460b      	mov	r3, r1
 8002ef8:	71bb      	strb	r3, [r7, #6]
 8002efa:	4613      	mov	r3, r2
 8002efc:	717b      	strb	r3, [r7, #5]
  I2Cx_WriteMultiple(&hI2cAudioHandler, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT,(uint8_t*)&Value, 1);
 8002efe:	79bb      	ldrb	r3, [r7, #6]
 8002f00:	b29a      	uxth	r2, r3
 8002f02:	79f9      	ldrb	r1, [r7, #7]
 8002f04:	2301      	movs	r3, #1
 8002f06:	9301      	str	r3, [sp, #4]
 8002f08:	1d7b      	adds	r3, r7, #5
 8002f0a:	9300      	str	r3, [sp, #0]
 8002f0c:	2301      	movs	r3, #1
 8002f0e:	4803      	ldr	r0, [pc, #12]	; (8002f1c <TS_IO_Write+0x30>)
 8002f10:	f7ff ffa5 	bl	8002e5e <I2Cx_WriteMultiple>
}
 8002f14:	bf00      	nop
 8002f16:	3708      	adds	r7, #8
 8002f18:	46bd      	mov	sp, r7
 8002f1a:	bd80      	pop	{r7, pc}
 8002f1c:	20000ea8 	.word	0x20000ea8

08002f20 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Reg address
  * @retval Data to be read
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8002f20:	b580      	push	{r7, lr}
 8002f22:	b086      	sub	sp, #24
 8002f24:	af02      	add	r7, sp, #8
 8002f26:	4603      	mov	r3, r0
 8002f28:	460a      	mov	r2, r1
 8002f2a:	71fb      	strb	r3, [r7, #7]
 8002f2c:	4613      	mov	r3, r2
 8002f2e:	71bb      	strb	r3, [r7, #6]
  uint8_t read_value = 0;
 8002f30:	2300      	movs	r3, #0
 8002f32:	73fb      	strb	r3, [r7, #15]

  I2Cx_ReadMultiple(&hI2cAudioHandler, Addr, Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&read_value, 1);
 8002f34:	79bb      	ldrb	r3, [r7, #6]
 8002f36:	b29a      	uxth	r2, r3
 8002f38:	79f9      	ldrb	r1, [r7, #7]
 8002f3a:	2301      	movs	r3, #1
 8002f3c:	9301      	str	r3, [sp, #4]
 8002f3e:	f107 030f 	add.w	r3, r7, #15
 8002f42:	9300      	str	r3, [sp, #0]
 8002f44:	2301      	movs	r3, #1
 8002f46:	4804      	ldr	r0, [pc, #16]	; (8002f58 <TS_IO_Read+0x38>)
 8002f48:	f7ff ff5c 	bl	8002e04 <I2Cx_ReadMultiple>

  return read_value;
 8002f4c:	7bfb      	ldrb	r3, [r7, #15]
}
 8002f4e:	4618      	mov	r0, r3
 8002f50:	3710      	adds	r7, #16
 8002f52:	46bd      	mov	sp, r7
 8002f54:	bd80      	pop	{r7, pc}
 8002f56:	bf00      	nop
 8002f58:	20000ea8 	.word	0x20000ea8

08002f5c <TS_IO_Delay>:
  * @brief  TS delay
  * @param  Delay: Delay in ms
  * @retval None
  */
void TS_IO_Delay(uint32_t Delay)
{
 8002f5c:	b580      	push	{r7, lr}
 8002f5e:	b082      	sub	sp, #8
 8002f60:	af00      	add	r7, sp, #0
 8002f62:	6078      	str	r0, [r7, #4]
  HAL_Delay(Delay);
 8002f64:	6878      	ldr	r0, [r7, #4]
 8002f66:	f000 fcb9 	bl	80038dc <HAL_Delay>
}
 8002f6a:	bf00      	nop
 8002f6c:	3708      	adds	r7, #8
 8002f6e:	46bd      	mov	sp, r7
 8002f70:	bd80      	pop	{r7, pc}
	...

08002f74 <BSP_SDRAM_Init>:
 8002f74:	b580      	push	{r7, lr}
 8002f76:	af00      	add	r7, sp, #0
 8002f78:	4b29      	ldr	r3, [pc, #164]	; (8003020 <BSP_SDRAM_Init+0xac>)
 8002f7a:	4a2a      	ldr	r2, [pc, #168]	; (8003024 <BSP_SDRAM_Init+0xb0>)
 8002f7c:	601a      	str	r2, [r3, #0]
 8002f7e:	4b2a      	ldr	r3, [pc, #168]	; (8003028 <BSP_SDRAM_Init+0xb4>)
 8002f80:	2202      	movs	r2, #2
 8002f82:	601a      	str	r2, [r3, #0]
 8002f84:	4b28      	ldr	r3, [pc, #160]	; (8003028 <BSP_SDRAM_Init+0xb4>)
 8002f86:	2207      	movs	r2, #7
 8002f88:	605a      	str	r2, [r3, #4]
 8002f8a:	4b27      	ldr	r3, [pc, #156]	; (8003028 <BSP_SDRAM_Init+0xb4>)
 8002f8c:	2204      	movs	r2, #4
 8002f8e:	609a      	str	r2, [r3, #8]
 8002f90:	4b25      	ldr	r3, [pc, #148]	; (8003028 <BSP_SDRAM_Init+0xb4>)
 8002f92:	2207      	movs	r2, #7
 8002f94:	60da      	str	r2, [r3, #12]
 8002f96:	4b24      	ldr	r3, [pc, #144]	; (8003028 <BSP_SDRAM_Init+0xb4>)
 8002f98:	2202      	movs	r2, #2
 8002f9a:	611a      	str	r2, [r3, #16]
 8002f9c:	4b22      	ldr	r3, [pc, #136]	; (8003028 <BSP_SDRAM_Init+0xb4>)
 8002f9e:	2202      	movs	r2, #2
 8002fa0:	615a      	str	r2, [r3, #20]
 8002fa2:	4b21      	ldr	r3, [pc, #132]	; (8003028 <BSP_SDRAM_Init+0xb4>)
 8002fa4:	2202      	movs	r2, #2
 8002fa6:	619a      	str	r2, [r3, #24]
 8002fa8:	4b1d      	ldr	r3, [pc, #116]	; (8003020 <BSP_SDRAM_Init+0xac>)
 8002faa:	2200      	movs	r2, #0
 8002fac:	605a      	str	r2, [r3, #4]
 8002fae:	4b1c      	ldr	r3, [pc, #112]	; (8003020 <BSP_SDRAM_Init+0xac>)
 8002fb0:	2200      	movs	r2, #0
 8002fb2:	609a      	str	r2, [r3, #8]
 8002fb4:	4b1a      	ldr	r3, [pc, #104]	; (8003020 <BSP_SDRAM_Init+0xac>)
 8002fb6:	2204      	movs	r2, #4
 8002fb8:	60da      	str	r2, [r3, #12]
 8002fba:	4b19      	ldr	r3, [pc, #100]	; (8003020 <BSP_SDRAM_Init+0xac>)
 8002fbc:	2210      	movs	r2, #16
 8002fbe:	611a      	str	r2, [r3, #16]
 8002fc0:	4b17      	ldr	r3, [pc, #92]	; (8003020 <BSP_SDRAM_Init+0xac>)
 8002fc2:	2240      	movs	r2, #64	; 0x40
 8002fc4:	615a      	str	r2, [r3, #20]
 8002fc6:	4b16      	ldr	r3, [pc, #88]	; (8003020 <BSP_SDRAM_Init+0xac>)
 8002fc8:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002fcc:	619a      	str	r2, [r3, #24]
 8002fce:	4b14      	ldr	r3, [pc, #80]	; (8003020 <BSP_SDRAM_Init+0xac>)
 8002fd0:	2200      	movs	r2, #0
 8002fd2:	61da      	str	r2, [r3, #28]
 8002fd4:	4b12      	ldr	r3, [pc, #72]	; (8003020 <BSP_SDRAM_Init+0xac>)
 8002fd6:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002fda:	621a      	str	r2, [r3, #32]
 8002fdc:	4b10      	ldr	r3, [pc, #64]	; (8003020 <BSP_SDRAM_Init+0xac>)
 8002fde:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002fe2:	625a      	str	r2, [r3, #36]	; 0x24
 8002fe4:	4b0e      	ldr	r3, [pc, #56]	; (8003020 <BSP_SDRAM_Init+0xac>)
 8002fe6:	2200      	movs	r2, #0
 8002fe8:	629a      	str	r2, [r3, #40]	; 0x28
 8002fea:	2100      	movs	r1, #0
 8002fec:	480c      	ldr	r0, [pc, #48]	; (8003020 <BSP_SDRAM_Init+0xac>)
 8002fee:	f000 f87f 	bl	80030f0 <BSP_SDRAM_MspInit>
 8002ff2:	490d      	ldr	r1, [pc, #52]	; (8003028 <BSP_SDRAM_Init+0xb4>)
 8002ff4:	480a      	ldr	r0, [pc, #40]	; (8003020 <BSP_SDRAM_Init+0xac>)
 8002ff6:	f004 fccf 	bl	8007998 <HAL_SDRAM_Init>
 8002ffa:	4603      	mov	r3, r0
 8002ffc:	2b00      	cmp	r3, #0
 8002ffe:	d003      	beq.n	8003008 <BSP_SDRAM_Init+0x94>
 8003000:	4b0a      	ldr	r3, [pc, #40]	; (800302c <BSP_SDRAM_Init+0xb8>)
 8003002:	2201      	movs	r2, #1
 8003004:	701a      	strb	r2, [r3, #0]
 8003006:	e002      	b.n	800300e <BSP_SDRAM_Init+0x9a>
 8003008:	4b08      	ldr	r3, [pc, #32]	; (800302c <BSP_SDRAM_Init+0xb8>)
 800300a:	2200      	movs	r2, #0
 800300c:	701a      	strb	r2, [r3, #0]
 800300e:	f240 6003 	movw	r0, #1539	; 0x603
 8003012:	f000 f80d 	bl	8003030 <BSP_SDRAM_Initialization_sequence>
 8003016:	4b05      	ldr	r3, [pc, #20]	; (800302c <BSP_SDRAM_Init+0xb8>)
 8003018:	781b      	ldrb	r3, [r3, #0]
 800301a:	4618      	mov	r0, r3
 800301c:	bd80      	pop	{r7, pc}
 800301e:	bf00      	nop
 8003020:	200080cc 	.word	0x200080cc
 8003024:	a0000140 	.word	0xa0000140
 8003028:	20000ef4 	.word	0x20000ef4
 800302c:	200000ec 	.word	0x200000ec

08003030 <BSP_SDRAM_Initialization_sequence>:
 8003030:	b580      	push	{r7, lr}
 8003032:	b084      	sub	sp, #16
 8003034:	af00      	add	r7, sp, #0
 8003036:	6078      	str	r0, [r7, #4]
 8003038:	2300      	movs	r3, #0
 800303a:	60fb      	str	r3, [r7, #12]
 800303c:	4b2a      	ldr	r3, [pc, #168]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 800303e:	2201      	movs	r2, #1
 8003040:	601a      	str	r2, [r3, #0]
 8003042:	4b29      	ldr	r3, [pc, #164]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8003044:	2210      	movs	r2, #16
 8003046:	605a      	str	r2, [r3, #4]
 8003048:	4b27      	ldr	r3, [pc, #156]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 800304a:	2201      	movs	r2, #1
 800304c:	609a      	str	r2, [r3, #8]
 800304e:	4b26      	ldr	r3, [pc, #152]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8003050:	2200      	movs	r2, #0
 8003052:	60da      	str	r2, [r3, #12]
 8003054:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003058:	4923      	ldr	r1, [pc, #140]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 800305a:	4824      	ldr	r0, [pc, #144]	; (80030ec <BSP_SDRAM_Initialization_sequence+0xbc>)
 800305c:	f004 fcd0 	bl	8007a00 <HAL_SDRAM_SendCommand>
 8003060:	2001      	movs	r0, #1
 8003062:	f000 fc3b 	bl	80038dc <HAL_Delay>
 8003066:	4b20      	ldr	r3, [pc, #128]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8003068:	2202      	movs	r2, #2
 800306a:	601a      	str	r2, [r3, #0]
 800306c:	4b1e      	ldr	r3, [pc, #120]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 800306e:	2210      	movs	r2, #16
 8003070:	605a      	str	r2, [r3, #4]
 8003072:	4b1d      	ldr	r3, [pc, #116]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8003074:	2201      	movs	r2, #1
 8003076:	609a      	str	r2, [r3, #8]
 8003078:	4b1b      	ldr	r3, [pc, #108]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 800307a:	2200      	movs	r2, #0
 800307c:	60da      	str	r2, [r3, #12]
 800307e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003082:	4919      	ldr	r1, [pc, #100]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8003084:	4819      	ldr	r0, [pc, #100]	; (80030ec <BSP_SDRAM_Initialization_sequence+0xbc>)
 8003086:	f004 fcbb 	bl	8007a00 <HAL_SDRAM_SendCommand>
 800308a:	4b17      	ldr	r3, [pc, #92]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 800308c:	2203      	movs	r2, #3
 800308e:	601a      	str	r2, [r3, #0]
 8003090:	4b15      	ldr	r3, [pc, #84]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8003092:	2210      	movs	r2, #16
 8003094:	605a      	str	r2, [r3, #4]
 8003096:	4b14      	ldr	r3, [pc, #80]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 8003098:	2208      	movs	r2, #8
 800309a:	609a      	str	r2, [r3, #8]
 800309c:	4b12      	ldr	r3, [pc, #72]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 800309e:	2200      	movs	r2, #0
 80030a0:	60da      	str	r2, [r3, #12]
 80030a2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80030a6:	4910      	ldr	r1, [pc, #64]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 80030a8:	4810      	ldr	r0, [pc, #64]	; (80030ec <BSP_SDRAM_Initialization_sequence+0xbc>)
 80030aa:	f004 fca9 	bl	8007a00 <HAL_SDRAM_SendCommand>
 80030ae:	f44f 7308 	mov.w	r3, #544	; 0x220
 80030b2:	60fb      	str	r3, [r7, #12]
 80030b4:	4b0c      	ldr	r3, [pc, #48]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 80030b6:	2204      	movs	r2, #4
 80030b8:	601a      	str	r2, [r3, #0]
 80030ba:	4b0b      	ldr	r3, [pc, #44]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 80030bc:	2210      	movs	r2, #16
 80030be:	605a      	str	r2, [r3, #4]
 80030c0:	4b09      	ldr	r3, [pc, #36]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 80030c2:	2201      	movs	r2, #1
 80030c4:	609a      	str	r2, [r3, #8]
 80030c6:	68fb      	ldr	r3, [r7, #12]
 80030c8:	4a07      	ldr	r2, [pc, #28]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 80030ca:	60d3      	str	r3, [r2, #12]
 80030cc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80030d0:	4905      	ldr	r1, [pc, #20]	; (80030e8 <BSP_SDRAM_Initialization_sequence+0xb8>)
 80030d2:	4806      	ldr	r0, [pc, #24]	; (80030ec <BSP_SDRAM_Initialization_sequence+0xbc>)
 80030d4:	f004 fc94 	bl	8007a00 <HAL_SDRAM_SendCommand>
 80030d8:	6879      	ldr	r1, [r7, #4]
 80030da:	4804      	ldr	r0, [pc, #16]	; (80030ec <BSP_SDRAM_Initialization_sequence+0xbc>)
 80030dc:	f004 fcbb 	bl	8007a56 <HAL_SDRAM_ProgramRefreshRate>
 80030e0:	bf00      	nop
 80030e2:	3710      	adds	r7, #16
 80030e4:	46bd      	mov	sp, r7
 80030e6:	bd80      	pop	{r7, pc}
 80030e8:	20000f10 	.word	0x20000f10
 80030ec:	200080cc 	.word	0x200080cc

080030f0 <BSP_SDRAM_MspInit>:
 80030f0:	b580      	push	{r7, lr}
 80030f2:	b090      	sub	sp, #64	; 0x40
 80030f4:	af00      	add	r7, sp, #0
 80030f6:	6078      	str	r0, [r7, #4]
 80030f8:	6039      	str	r1, [r7, #0]
 80030fa:	4b70      	ldr	r3, [pc, #448]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 80030fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80030fe:	4a6f      	ldr	r2, [pc, #444]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003100:	f043 0301 	orr.w	r3, r3, #1
 8003104:	6393      	str	r3, [r2, #56]	; 0x38
 8003106:	4b6d      	ldr	r3, [pc, #436]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003108:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800310a:	f003 0301 	and.w	r3, r3, #1
 800310e:	62bb      	str	r3, [r7, #40]	; 0x28
 8003110:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003112:	4b6a      	ldr	r3, [pc, #424]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003114:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003116:	4a69      	ldr	r2, [pc, #420]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003118:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800311c:	6313      	str	r3, [r2, #48]	; 0x30
 800311e:	4b67      	ldr	r3, [pc, #412]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003120:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003122:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003126:	627b      	str	r3, [r7, #36]	; 0x24
 8003128:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800312a:	4b64      	ldr	r3, [pc, #400]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 800312c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800312e:	4a63      	ldr	r2, [pc, #396]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003130:	f043 0304 	orr.w	r3, r3, #4
 8003134:	6313      	str	r3, [r2, #48]	; 0x30
 8003136:	4b61      	ldr	r3, [pc, #388]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003138:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800313a:	f003 0304 	and.w	r3, r3, #4
 800313e:	623b      	str	r3, [r7, #32]
 8003140:	6a3b      	ldr	r3, [r7, #32]
 8003142:	4b5e      	ldr	r3, [pc, #376]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003144:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003146:	4a5d      	ldr	r2, [pc, #372]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003148:	f043 0308 	orr.w	r3, r3, #8
 800314c:	6313      	str	r3, [r2, #48]	; 0x30
 800314e:	4b5b      	ldr	r3, [pc, #364]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003150:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003152:	f003 0308 	and.w	r3, r3, #8
 8003156:	61fb      	str	r3, [r7, #28]
 8003158:	69fb      	ldr	r3, [r7, #28]
 800315a:	4b58      	ldr	r3, [pc, #352]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 800315c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800315e:	4a57      	ldr	r2, [pc, #348]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003160:	f043 0310 	orr.w	r3, r3, #16
 8003164:	6313      	str	r3, [r2, #48]	; 0x30
 8003166:	4b55      	ldr	r3, [pc, #340]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003168:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800316a:	f003 0310 	and.w	r3, r3, #16
 800316e:	61bb      	str	r3, [r7, #24]
 8003170:	69bb      	ldr	r3, [r7, #24]
 8003172:	4b52      	ldr	r3, [pc, #328]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003174:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003176:	4a51      	ldr	r2, [pc, #324]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003178:	f043 0320 	orr.w	r3, r3, #32
 800317c:	6313      	str	r3, [r2, #48]	; 0x30
 800317e:	4b4f      	ldr	r3, [pc, #316]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003180:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003182:	f003 0320 	and.w	r3, r3, #32
 8003186:	617b      	str	r3, [r7, #20]
 8003188:	697b      	ldr	r3, [r7, #20]
 800318a:	4b4c      	ldr	r3, [pc, #304]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 800318c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800318e:	4a4b      	ldr	r2, [pc, #300]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003190:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003194:	6313      	str	r3, [r2, #48]	; 0x30
 8003196:	4b49      	ldr	r3, [pc, #292]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 8003198:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800319a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800319e:	613b      	str	r3, [r7, #16]
 80031a0:	693b      	ldr	r3, [r7, #16]
 80031a2:	4b46      	ldr	r3, [pc, #280]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 80031a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031a6:	4a45      	ldr	r2, [pc, #276]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 80031a8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80031ac:	6313      	str	r3, [r2, #48]	; 0x30
 80031ae:	4b43      	ldr	r3, [pc, #268]	; (80032bc <BSP_SDRAM_MspInit+0x1cc>)
 80031b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80031b2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80031b6:	60fb      	str	r3, [r7, #12]
 80031b8:	68fb      	ldr	r3, [r7, #12]
 80031ba:	2302      	movs	r3, #2
 80031bc:	633b      	str	r3, [r7, #48]	; 0x30
 80031be:	2301      	movs	r3, #1
 80031c0:	637b      	str	r3, [r7, #52]	; 0x34
 80031c2:	2302      	movs	r3, #2
 80031c4:	63bb      	str	r3, [r7, #56]	; 0x38
 80031c6:	230c      	movs	r3, #12
 80031c8:	63fb      	str	r3, [r7, #60]	; 0x3c
 80031ca:	2308      	movs	r3, #8
 80031cc:	62fb      	str	r3, [r7, #44]	; 0x2c
 80031ce:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80031d2:	4619      	mov	r1, r3
 80031d4:	483a      	ldr	r0, [pc, #232]	; (80032c0 <BSP_SDRAM_MspInit+0x1d0>)
 80031d6:	f001 fd87 	bl	8004ce8 <HAL_GPIO_Init>
 80031da:	f24c 7303 	movw	r3, #50947	; 0xc703
 80031de:	62fb      	str	r3, [r7, #44]	; 0x2c
 80031e0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80031e4:	4619      	mov	r1, r3
 80031e6:	4837      	ldr	r0, [pc, #220]	; (80032c4 <BSP_SDRAM_MspInit+0x1d4>)
 80031e8:	f001 fd7e 	bl	8004ce8 <HAL_GPIO_Init>
 80031ec:	f64f 7383 	movw	r3, #65411	; 0xff83
 80031f0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80031f2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80031f6:	4619      	mov	r1, r3
 80031f8:	4833      	ldr	r0, [pc, #204]	; (80032c8 <BSP_SDRAM_MspInit+0x1d8>)
 80031fa:	f001 fd75 	bl	8004ce8 <HAL_GPIO_Init>
 80031fe:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8003202:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003204:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003208:	4619      	mov	r1, r3
 800320a:	4830      	ldr	r0, [pc, #192]	; (80032cc <BSP_SDRAM_MspInit+0x1dc>)
 800320c:	f001 fd6c 	bl	8004ce8 <HAL_GPIO_Init>
 8003210:	f248 1333 	movw	r3, #33075	; 0x8133
 8003214:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003216:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800321a:	4619      	mov	r1, r3
 800321c:	482c      	ldr	r0, [pc, #176]	; (80032d0 <BSP_SDRAM_MspInit+0x1e0>)
 800321e:	f001 fd63 	bl	8004ce8 <HAL_GPIO_Init>
 8003222:	2328      	movs	r3, #40	; 0x28
 8003224:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003226:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800322a:	4619      	mov	r1, r3
 800322c:	4829      	ldr	r0, [pc, #164]	; (80032d4 <BSP_SDRAM_MspInit+0x1e4>)
 800322e:	f001 fd5b 	bl	8004ce8 <HAL_GPIO_Init>
 8003232:	4b29      	ldr	r3, [pc, #164]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 8003234:	2200      	movs	r2, #0
 8003236:	605a      	str	r2, [r3, #4]
 8003238:	4b27      	ldr	r3, [pc, #156]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 800323a:	2280      	movs	r2, #128	; 0x80
 800323c:	609a      	str	r2, [r3, #8]
 800323e:	4b26      	ldr	r3, [pc, #152]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 8003240:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003244:	60da      	str	r2, [r3, #12]
 8003246:	4b24      	ldr	r3, [pc, #144]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 8003248:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800324c:	611a      	str	r2, [r3, #16]
 800324e:	4b22      	ldr	r3, [pc, #136]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 8003250:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003254:	615a      	str	r2, [r3, #20]
 8003256:	4b20      	ldr	r3, [pc, #128]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 8003258:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800325c:	619a      	str	r2, [r3, #24]
 800325e:	4b1e      	ldr	r3, [pc, #120]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 8003260:	2200      	movs	r2, #0
 8003262:	61da      	str	r2, [r3, #28]
 8003264:	4b1c      	ldr	r3, [pc, #112]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 8003266:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800326a:	621a      	str	r2, [r3, #32]
 800326c:	4b1a      	ldr	r3, [pc, #104]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 800326e:	2200      	movs	r2, #0
 8003270:	625a      	str	r2, [r3, #36]	; 0x24
 8003272:	4b19      	ldr	r3, [pc, #100]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 8003274:	2203      	movs	r2, #3
 8003276:	629a      	str	r2, [r3, #40]	; 0x28
 8003278:	4b17      	ldr	r3, [pc, #92]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 800327a:	2200      	movs	r2, #0
 800327c:	62da      	str	r2, [r3, #44]	; 0x2c
 800327e:	4b16      	ldr	r3, [pc, #88]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 8003280:	2200      	movs	r2, #0
 8003282:	631a      	str	r2, [r3, #48]	; 0x30
 8003284:	4b14      	ldr	r3, [pc, #80]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 8003286:	4a15      	ldr	r2, [pc, #84]	; (80032dc <BSP_SDRAM_MspInit+0x1ec>)
 8003288:	601a      	str	r2, [r3, #0]
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	4a12      	ldr	r2, [pc, #72]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 800328e:	631a      	str	r2, [r3, #48]	; 0x30
 8003290:	4a11      	ldr	r2, [pc, #68]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	6393      	str	r3, [r2, #56]	; 0x38
 8003296:	4810      	ldr	r0, [pc, #64]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 8003298:	f001 f9b4 	bl	8004604 <HAL_DMA_DeInit>
 800329c:	480e      	ldr	r0, [pc, #56]	; (80032d8 <BSP_SDRAM_MspInit+0x1e8>)
 800329e:	f001 f903 	bl	80044a8 <HAL_DMA_Init>
 80032a2:	2200      	movs	r2, #0
 80032a4:	210f      	movs	r1, #15
 80032a6:	2038      	movs	r0, #56	; 0x38
 80032a8:	f001 f83d 	bl	8004326 <HAL_NVIC_SetPriority>
 80032ac:	2038      	movs	r0, #56	; 0x38
 80032ae:	f001 f856 	bl	800435e <HAL_NVIC_EnableIRQ>
 80032b2:	bf00      	nop
 80032b4:	3740      	adds	r7, #64	; 0x40
 80032b6:	46bd      	mov	sp, r7
 80032b8:	bd80      	pop	{r7, pc}
 80032ba:	bf00      	nop
 80032bc:	40023800 	.word	0x40023800
 80032c0:	40020800 	.word	0x40020800
 80032c4:	40020c00 	.word	0x40020c00
 80032c8:	40021000 	.word	0x40021000
 80032cc:	40021400 	.word	0x40021400
 80032d0:	40021800 	.word	0x40021800
 80032d4:	40021c00 	.word	0x40021c00
 80032d8:	20000f20 	.word	0x20000f20
 80032dc:	40026410 	.word	0x40026410

080032e0 <BSP_TS_Init>:
 80032e0:	b580      	push	{r7, lr}
 80032e2:	b084      	sub	sp, #16
 80032e4:	af00      	add	r7, sp, #0
 80032e6:	4603      	mov	r3, r0
 80032e8:	460a      	mov	r2, r1
 80032ea:	80fb      	strh	r3, [r7, #6]
 80032ec:	4613      	mov	r3, r2
 80032ee:	80bb      	strh	r3, [r7, #4]
 80032f0:	2300      	movs	r3, #0
 80032f2:	73fb      	strb	r3, [r7, #15]
 80032f4:	4a14      	ldr	r2, [pc, #80]	; (8003348 <BSP_TS_Init+0x68>)
 80032f6:	88fb      	ldrh	r3, [r7, #6]
 80032f8:	8013      	strh	r3, [r2, #0]
 80032fa:	4a14      	ldr	r2, [pc, #80]	; (800334c <BSP_TS_Init+0x6c>)
 80032fc:	88bb      	ldrh	r3, [r7, #4]
 80032fe:	8013      	strh	r3, [r2, #0]
 8003300:	4b13      	ldr	r3, [pc, #76]	; (8003350 <BSP_TS_Init+0x70>)
 8003302:	681b      	ldr	r3, [r3, #0]
 8003304:	2070      	movs	r0, #112	; 0x70
 8003306:	4798      	blx	r3
 8003308:	4b11      	ldr	r3, [pc, #68]	; (8003350 <BSP_TS_Init+0x70>)
 800330a:	685b      	ldr	r3, [r3, #4]
 800330c:	2070      	movs	r0, #112	; 0x70
 800330e:	4798      	blx	r3
 8003310:	4603      	mov	r3, r0
 8003312:	2b51      	cmp	r3, #81	; 0x51
 8003314:	d111      	bne.n	800333a <BSP_TS_Init+0x5a>
 8003316:	4b0f      	ldr	r3, [pc, #60]	; (8003354 <BSP_TS_Init+0x74>)
 8003318:	4a0d      	ldr	r2, [pc, #52]	; (8003350 <BSP_TS_Init+0x70>)
 800331a:	601a      	str	r2, [r3, #0]
 800331c:	4b0e      	ldr	r3, [pc, #56]	; (8003358 <BSP_TS_Init+0x78>)
 800331e:	2270      	movs	r2, #112	; 0x70
 8003320:	701a      	strb	r2, [r3, #0]
 8003322:	4b0e      	ldr	r3, [pc, #56]	; (800335c <BSP_TS_Init+0x7c>)
 8003324:	2208      	movs	r2, #8
 8003326:	701a      	strb	r2, [r3, #0]
 8003328:	4b0a      	ldr	r3, [pc, #40]	; (8003354 <BSP_TS_Init+0x74>)
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	68db      	ldr	r3, [r3, #12]
 800332e:	4a0a      	ldr	r2, [pc, #40]	; (8003358 <BSP_TS_Init+0x78>)
 8003330:	7812      	ldrb	r2, [r2, #0]
 8003332:	b292      	uxth	r2, r2
 8003334:	4610      	mov	r0, r2
 8003336:	4798      	blx	r3
 8003338:	e001      	b.n	800333e <BSP_TS_Init+0x5e>
 800333a:	2303      	movs	r3, #3
 800333c:	73fb      	strb	r3, [r7, #15]
 800333e:	7bfb      	ldrb	r3, [r7, #15]
 8003340:	4618      	mov	r0, r3
 8003342:	3710      	adds	r7, #16
 8003344:	46bd      	mov	sp, r7
 8003346:	bd80      	pop	{r7, pc}
 8003348:	20000f84 	.word	0x20000f84
 800334c:	20000f86 	.word	0x20000f86
 8003350:	200000c4 	.word	0x200000c4
 8003354:	20000f80 	.word	0x20000f80
 8003358:	20000f89 	.word	0x20000f89
 800335c:	20000f88 	.word	0x20000f88

08003360 <BSP_TS_GetState>:
 8003360:	b590      	push	{r4, r7, lr}
 8003362:	b097      	sub	sp, #92	; 0x5c
 8003364:	af02      	add	r7, sp, #8
 8003366:	6078      	str	r0, [r7, #4]
 8003368:	2300      	movs	r3, #0
 800336a:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 800336e:	2300      	movs	r3, #0
 8003370:	613b      	str	r3, [r7, #16]
 8003372:	2300      	movs	r3, #0
 8003374:	60fb      	str	r3, [r7, #12]
 8003376:	2300      	movs	r3, #0
 8003378:	60bb      	str	r3, [r7, #8]
 800337a:	4b97      	ldr	r3, [pc, #604]	; (80035d8 <BSP_TS_GetState+0x278>)
 800337c:	681b      	ldr	r3, [r3, #0]
 800337e:	691b      	ldr	r3, [r3, #16]
 8003380:	4a96      	ldr	r2, [pc, #600]	; (80035dc <BSP_TS_GetState+0x27c>)
 8003382:	7812      	ldrb	r2, [r2, #0]
 8003384:	b292      	uxth	r2, r2
 8003386:	4610      	mov	r0, r2
 8003388:	4798      	blx	r3
 800338a:	4603      	mov	r3, r0
 800338c:	461a      	mov	r2, r3
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	701a      	strb	r2, [r3, #0]
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	781b      	ldrb	r3, [r3, #0]
 8003396:	2b00      	cmp	r3, #0
 8003398:	f000 81a8 	beq.w	80036ec <BSP_TS_GetState+0x38c>
 800339c:	2300      	movs	r3, #0
 800339e:	64bb      	str	r3, [r7, #72]	; 0x48
 80033a0:	e197      	b.n	80036d2 <BSP_TS_GetState+0x372>
 80033a2:	4b8d      	ldr	r3, [pc, #564]	; (80035d8 <BSP_TS_GetState+0x278>)
 80033a4:	681b      	ldr	r3, [r3, #0]
 80033a6:	695b      	ldr	r3, [r3, #20]
 80033a8:	4a8c      	ldr	r2, [pc, #560]	; (80035dc <BSP_TS_GetState+0x27c>)
 80033aa:	7812      	ldrb	r2, [r2, #0]
 80033ac:	b290      	uxth	r0, r2
 80033ae:	f107 0120 	add.w	r1, r7, #32
 80033b2:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80033b4:	0052      	lsls	r2, r2, #1
 80033b6:	188c      	adds	r4, r1, r2
 80033b8:	f107 0114 	add.w	r1, r7, #20
 80033bc:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80033be:	0052      	lsls	r2, r2, #1
 80033c0:	440a      	add	r2, r1
 80033c2:	4621      	mov	r1, r4
 80033c4:	4798      	blx	r3
 80033c6:	4b86      	ldr	r3, [pc, #536]	; (80035e0 <BSP_TS_GetState+0x280>)
 80033c8:	781b      	ldrb	r3, [r3, #0]
 80033ca:	2b01      	cmp	r3, #1
 80033cc:	d11b      	bne.n	8003406 <BSP_TS_GetState+0xa6>
 80033ce:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80033d0:	005b      	lsls	r3, r3, #1
 80033d2:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80033d6:	4413      	add	r3, r2
 80033d8:	f833 2c30 	ldrh.w	r2, [r3, #-48]
 80033dc:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80033de:	005b      	lsls	r3, r3, #1
 80033e0:	f107 0150 	add.w	r1, r7, #80	; 0x50
 80033e4:	440b      	add	r3, r1
 80033e6:	f823 2c18 	strh.w	r2, [r3, #-24]
 80033ea:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80033ec:	005b      	lsls	r3, r3, #1
 80033ee:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80033f2:	4413      	add	r3, r2
 80033f4:	f833 2c3c 	ldrh.w	r2, [r3, #-60]
 80033f8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80033fa:	005b      	lsls	r3, r3, #1
 80033fc:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8003400:	440b      	add	r3, r1
 8003402:	f823 2c24 	strh.w	r2, [r3, #-36]
 8003406:	4b76      	ldr	r3, [pc, #472]	; (80035e0 <BSP_TS_GetState+0x280>)
 8003408:	781b      	ldrb	r3, [r3, #0]
 800340a:	f003 0302 	and.w	r3, r3, #2
 800340e:	2b00      	cmp	r3, #0
 8003410:	d010      	beq.n	8003434 <BSP_TS_GetState+0xd4>
 8003412:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003414:	005b      	lsls	r3, r3, #1
 8003416:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800341a:	4413      	add	r3, r2
 800341c:	f833 3c30 	ldrh.w	r3, [r3, #-48]
 8003420:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
 8003424:	b29a      	uxth	r2, r3
 8003426:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003428:	005b      	lsls	r3, r3, #1
 800342a:	f107 0150 	add.w	r1, r7, #80	; 0x50
 800342e:	440b      	add	r3, r1
 8003430:	f823 2c18 	strh.w	r2, [r3, #-24]
 8003434:	4b6a      	ldr	r3, [pc, #424]	; (80035e0 <BSP_TS_GetState+0x280>)
 8003436:	781b      	ldrb	r3, [r3, #0]
 8003438:	f003 0304 	and.w	r3, r3, #4
 800343c:	2b00      	cmp	r3, #0
 800343e:	d010      	beq.n	8003462 <BSP_TS_GetState+0x102>
 8003440:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003442:	005b      	lsls	r3, r3, #1
 8003444:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8003448:	4413      	add	r3, r2
 800344a:	f833 3c3c 	ldrh.w	r3, [r3, #-60]
 800344e:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
 8003452:	b29a      	uxth	r2, r3
 8003454:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003456:	005b      	lsls	r3, r3, #1
 8003458:	f107 0150 	add.w	r1, r7, #80	; 0x50
 800345c:	440b      	add	r3, r1
 800345e:	f823 2c24 	strh.w	r2, [r3, #-36]
 8003462:	4b5f      	ldr	r3, [pc, #380]	; (80035e0 <BSP_TS_GetState+0x280>)
 8003464:	781b      	ldrb	r3, [r3, #0]
 8003466:	f003 0308 	and.w	r3, r3, #8
 800346a:	2b00      	cmp	r3, #0
 800346c:	d01b      	beq.n	80034a6 <BSP_TS_GetState+0x146>
 800346e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003470:	005b      	lsls	r3, r3, #1
 8003472:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8003476:	4413      	add	r3, r2
 8003478:	f833 2c30 	ldrh.w	r2, [r3, #-48]
 800347c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800347e:	005b      	lsls	r3, r3, #1
 8003480:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8003484:	440b      	add	r3, r1
 8003486:	f823 2c24 	strh.w	r2, [r3, #-36]
 800348a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800348c:	005b      	lsls	r3, r3, #1
 800348e:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8003492:	4413      	add	r3, r2
 8003494:	f833 2c3c 	ldrh.w	r2, [r3, #-60]
 8003498:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800349a:	005b      	lsls	r3, r3, #1
 800349c:	f107 0150 	add.w	r1, r7, #80	; 0x50
 80034a0:	440b      	add	r3, r1
 80034a2:	f823 2c18 	strh.w	r2, [r3, #-24]
 80034a6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80034a8:	005b      	lsls	r3, r3, #1
 80034aa:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80034ae:	4413      	add	r3, r2
 80034b0:	f833 3c18 	ldrh.w	r3, [r3, #-24]
 80034b4:	4619      	mov	r1, r3
 80034b6:	4a4b      	ldr	r2, [pc, #300]	; (80035e4 <BSP_TS_GetState+0x284>)
 80034b8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80034ba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80034be:	4299      	cmp	r1, r3
 80034c0:	d90e      	bls.n	80034e0 <BSP_TS_GetState+0x180>
 80034c2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80034c4:	005b      	lsls	r3, r3, #1
 80034c6:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80034ca:	4413      	add	r3, r2
 80034cc:	f833 2c18 	ldrh.w	r2, [r3, #-24]
 80034d0:	4944      	ldr	r1, [pc, #272]	; (80035e4 <BSP_TS_GetState+0x284>)
 80034d2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80034d4:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80034d8:	b29b      	uxth	r3, r3
 80034da:	1ad3      	subs	r3, r2, r3
 80034dc:	b29b      	uxth	r3, r3
 80034de:	e00d      	b.n	80034fc <BSP_TS_GetState+0x19c>
 80034e0:	4a40      	ldr	r2, [pc, #256]	; (80035e4 <BSP_TS_GetState+0x284>)
 80034e2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80034e4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80034e8:	b29a      	uxth	r2, r3
 80034ea:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80034ec:	005b      	lsls	r3, r3, #1
 80034ee:	f107 0150 	add.w	r1, r7, #80	; 0x50
 80034f2:	440b      	add	r3, r1
 80034f4:	f833 3c18 	ldrh.w	r3, [r3, #-24]
 80034f8:	1ad3      	subs	r3, r2, r3
 80034fa:	b29b      	uxth	r3, r3
 80034fc:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 8003500:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003502:	005b      	lsls	r3, r3, #1
 8003504:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8003508:	4413      	add	r3, r2
 800350a:	f833 3c24 	ldrh.w	r3, [r3, #-36]
 800350e:	4619      	mov	r1, r3
 8003510:	4a35      	ldr	r2, [pc, #212]	; (80035e8 <BSP_TS_GetState+0x288>)
 8003512:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003514:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003518:	4299      	cmp	r1, r3
 800351a:	d90e      	bls.n	800353a <BSP_TS_GetState+0x1da>
 800351c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800351e:	005b      	lsls	r3, r3, #1
 8003520:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8003524:	4413      	add	r3, r2
 8003526:	f833 2c24 	ldrh.w	r2, [r3, #-36]
 800352a:	492f      	ldr	r1, [pc, #188]	; (80035e8 <BSP_TS_GetState+0x288>)
 800352c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800352e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8003532:	b29b      	uxth	r3, r3
 8003534:	1ad3      	subs	r3, r2, r3
 8003536:	b29b      	uxth	r3, r3
 8003538:	e00d      	b.n	8003556 <BSP_TS_GetState+0x1f6>
 800353a:	4a2b      	ldr	r2, [pc, #172]	; (80035e8 <BSP_TS_GetState+0x288>)
 800353c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800353e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003542:	b29a      	uxth	r2, r3
 8003544:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003546:	005b      	lsls	r3, r3, #1
 8003548:	f107 0150 	add.w	r1, r7, #80	; 0x50
 800354c:	440b      	add	r3, r1
 800354e:	f833 3c24 	ldrh.w	r3, [r3, #-36]
 8003552:	1ad3      	subs	r3, r2, r3
 8003554:	b29b      	uxth	r3, r3
 8003556:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44
 800355a:	f8b7 2046 	ldrh.w	r2, [r7, #70]	; 0x46
 800355e:	f8b7 3044 	ldrh.w	r3, [r7, #68]	; 0x44
 8003562:	4413      	add	r3, r2
 8003564:	2b05      	cmp	r3, #5
 8003566:	dd17      	ble.n	8003598 <BSP_TS_GetState+0x238>
 8003568:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800356a:	005b      	lsls	r3, r3, #1
 800356c:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8003570:	4413      	add	r3, r2
 8003572:	f833 3c18 	ldrh.w	r3, [r3, #-24]
 8003576:	4619      	mov	r1, r3
 8003578:	4a1a      	ldr	r2, [pc, #104]	; (80035e4 <BSP_TS_GetState+0x284>)
 800357a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800357c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8003580:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003582:	005b      	lsls	r3, r3, #1
 8003584:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8003588:	4413      	add	r3, r2
 800358a:	f833 3c24 	ldrh.w	r3, [r3, #-36]
 800358e:	4619      	mov	r1, r3
 8003590:	4a15      	ldr	r2, [pc, #84]	; (80035e8 <BSP_TS_GetState+0x288>)
 8003592:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003594:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8003598:	4b10      	ldr	r3, [pc, #64]	; (80035dc <BSP_TS_GetState+0x27c>)
 800359a:	781b      	ldrb	r3, [r3, #0]
 800359c:	2b70      	cmp	r3, #112	; 0x70
 800359e:	d125      	bne.n	80035ec <BSP_TS_GetState+0x28c>
 80035a0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80035a2:	005b      	lsls	r3, r3, #1
 80035a4:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80035a8:	4413      	add	r3, r2
 80035aa:	f833 1c18 	ldrh.w	r1, [r3, #-24]
 80035ae:	687a      	ldr	r2, [r7, #4]
 80035b0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80035b2:	005b      	lsls	r3, r3, #1
 80035b4:	4413      	add	r3, r2
 80035b6:	460a      	mov	r2, r1
 80035b8:	805a      	strh	r2, [r3, #2]
 80035ba:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80035bc:	005b      	lsls	r3, r3, #1
 80035be:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80035c2:	4413      	add	r3, r2
 80035c4:	f833 1c24 	ldrh.w	r1, [r3, #-36]
 80035c8:	687a      	ldr	r2, [r7, #4]
 80035ca:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80035cc:	3304      	adds	r3, #4
 80035ce:	005b      	lsls	r3, r3, #1
 80035d0:	4413      	add	r3, r2
 80035d2:	460a      	mov	r2, r1
 80035d4:	809a      	strh	r2, [r3, #4]
 80035d6:	e02c      	b.n	8003632 <BSP_TS_GetState+0x2d2>
 80035d8:	20000f80 	.word	0x20000f80
 80035dc:	20000f89 	.word	0x20000f89
 80035e0:	20000f88 	.word	0x20000f88
 80035e4:	20000f8c 	.word	0x20000f8c
 80035e8:	20000fa0 	.word	0x20000fa0
 80035ec:	4b42      	ldr	r3, [pc, #264]	; (80036f8 <BSP_TS_GetState+0x398>)
 80035ee:	881b      	ldrh	r3, [r3, #0]
 80035f0:	4619      	mov	r1, r3
 80035f2:	4a42      	ldr	r2, [pc, #264]	; (80036fc <BSP_TS_GetState+0x39c>)
 80035f4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80035f6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80035fa:	fb03 f301 	mul.w	r3, r3, r1
 80035fe:	0b1b      	lsrs	r3, r3, #12
 8003600:	b299      	uxth	r1, r3
 8003602:	687a      	ldr	r2, [r7, #4]
 8003604:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003606:	005b      	lsls	r3, r3, #1
 8003608:	4413      	add	r3, r2
 800360a:	460a      	mov	r2, r1
 800360c:	805a      	strh	r2, [r3, #2]
 800360e:	4b3c      	ldr	r3, [pc, #240]	; (8003700 <BSP_TS_GetState+0x3a0>)
 8003610:	881b      	ldrh	r3, [r3, #0]
 8003612:	4619      	mov	r1, r3
 8003614:	4a3b      	ldr	r2, [pc, #236]	; (8003704 <BSP_TS_GetState+0x3a4>)
 8003616:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003618:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800361c:	fb03 f301 	mul.w	r3, r3, r1
 8003620:	0b1b      	lsrs	r3, r3, #12
 8003622:	b299      	uxth	r1, r3
 8003624:	687a      	ldr	r2, [r7, #4]
 8003626:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003628:	3304      	adds	r3, #4
 800362a:	005b      	lsls	r3, r3, #1
 800362c:	4413      	add	r3, r2
 800362e:	460a      	mov	r2, r1
 8003630:	809a      	strh	r2, [r3, #4]
 8003632:	4b35      	ldr	r3, [pc, #212]	; (8003708 <BSP_TS_GetState+0x3a8>)
 8003634:	781b      	ldrb	r3, [r3, #0]
 8003636:	b298      	uxth	r0, r3
 8003638:	f107 010c 	add.w	r1, r7, #12
 800363c:	f107 0210 	add.w	r2, r7, #16
 8003640:	f107 0308 	add.w	r3, r7, #8
 8003644:	9300      	str	r3, [sp, #0]
 8003646:	460b      	mov	r3, r1
 8003648:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800364a:	f7ff f9e3 	bl	8002a14 <ft5336_TS_GetTouchInfo>
 800364e:	693b      	ldr	r3, [r7, #16]
 8003650:	b2d9      	uxtb	r1, r3
 8003652:	687a      	ldr	r2, [r7, #4]
 8003654:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003656:	4413      	add	r3, r2
 8003658:	3316      	adds	r3, #22
 800365a:	460a      	mov	r2, r1
 800365c:	701a      	strb	r2, [r3, #0]
 800365e:	68fb      	ldr	r3, [r7, #12]
 8003660:	b2d9      	uxtb	r1, r3
 8003662:	687a      	ldr	r2, [r7, #4]
 8003664:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003666:	4413      	add	r3, r2
 8003668:	3320      	adds	r3, #32
 800366a:	460a      	mov	r2, r1
 800366c:	701a      	strb	r2, [r3, #0]
 800366e:	68bb      	ldr	r3, [r7, #8]
 8003670:	2b03      	cmp	r3, #3
 8003672:	d827      	bhi.n	80036c4 <BSP_TS_GetState+0x364>
 8003674:	a201      	add	r2, pc, #4	; (adr r2, 800367c <BSP_TS_GetState+0x31c>)
 8003676:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800367a:	bf00      	nop
 800367c:	0800368d 	.word	0x0800368d
 8003680:	0800369b 	.word	0x0800369b
 8003684:	080036a9 	.word	0x080036a9
 8003688:	080036b7 	.word	0x080036b7
 800368c:	687a      	ldr	r2, [r7, #4]
 800368e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003690:	4413      	add	r3, r2
 8003692:	331b      	adds	r3, #27
 8003694:	2201      	movs	r2, #1
 8003696:	701a      	strb	r2, [r3, #0]
 8003698:	e018      	b.n	80036cc <BSP_TS_GetState+0x36c>
 800369a:	687a      	ldr	r2, [r7, #4]
 800369c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800369e:	4413      	add	r3, r2
 80036a0:	331b      	adds	r3, #27
 80036a2:	2202      	movs	r2, #2
 80036a4:	701a      	strb	r2, [r3, #0]
 80036a6:	e011      	b.n	80036cc <BSP_TS_GetState+0x36c>
 80036a8:	687a      	ldr	r2, [r7, #4]
 80036aa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80036ac:	4413      	add	r3, r2
 80036ae:	331b      	adds	r3, #27
 80036b0:	2203      	movs	r2, #3
 80036b2:	701a      	strb	r2, [r3, #0]
 80036b4:	e00a      	b.n	80036cc <BSP_TS_GetState+0x36c>
 80036b6:	687a      	ldr	r2, [r7, #4]
 80036b8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80036ba:	4413      	add	r3, r2
 80036bc:	331b      	adds	r3, #27
 80036be:	2200      	movs	r2, #0
 80036c0:	701a      	strb	r2, [r3, #0]
 80036c2:	e003      	b.n	80036cc <BSP_TS_GetState+0x36c>
 80036c4:	2301      	movs	r3, #1
 80036c6:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80036ca:	bf00      	nop
 80036cc:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80036ce:	3301      	adds	r3, #1
 80036d0:	64bb      	str	r3, [r7, #72]	; 0x48
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	781b      	ldrb	r3, [r3, #0]
 80036d6:	461a      	mov	r2, r3
 80036d8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80036da:	4293      	cmp	r3, r2
 80036dc:	f4ff ae61 	bcc.w	80033a2 <BSP_TS_GetState+0x42>
 80036e0:	6878      	ldr	r0, [r7, #4]
 80036e2:	f000 f813 	bl	800370c <BSP_TS_Get_GestureId>
 80036e6:	4603      	mov	r3, r0
 80036e8:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80036ec:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 80036f0:	4618      	mov	r0, r3
 80036f2:	3754      	adds	r7, #84	; 0x54
 80036f4:	46bd      	mov	sp, r7
 80036f6:	bd90      	pop	{r4, r7, pc}
 80036f8:	20000f84 	.word	0x20000f84
 80036fc:	20000f8c 	.word	0x20000f8c
 8003700:	20000f86 	.word	0x20000f86
 8003704:	20000fa0 	.word	0x20000fa0
 8003708:	20000f89 	.word	0x20000f89

0800370c <BSP_TS_Get_GestureId>:
 800370c:	b580      	push	{r7, lr}
 800370e:	b084      	sub	sp, #16
 8003710:	af00      	add	r7, sp, #0
 8003712:	6078      	str	r0, [r7, #4]
 8003714:	2300      	movs	r3, #0
 8003716:	60bb      	str	r3, [r7, #8]
 8003718:	2300      	movs	r3, #0
 800371a:	73fb      	strb	r3, [r7, #15]
 800371c:	4b3b      	ldr	r3, [pc, #236]	; (800380c <BSP_TS_Get_GestureId+0x100>)
 800371e:	781b      	ldrb	r3, [r3, #0]
 8003720:	b29b      	uxth	r3, r3
 8003722:	f107 0208 	add.w	r2, r7, #8
 8003726:	4611      	mov	r1, r2
 8003728:	4618      	mov	r0, r3
 800372a:	f7ff f95a 	bl	80029e2 <ft5336_TS_GetGestureID>
 800372e:	68bb      	ldr	r3, [r7, #8]
 8003730:	2b49      	cmp	r3, #73	; 0x49
 8003732:	d05e      	beq.n	80037f2 <BSP_TS_Get_GestureId+0xe6>
 8003734:	2b49      	cmp	r3, #73	; 0x49
 8003736:	d860      	bhi.n	80037fa <BSP_TS_Get_GestureId+0xee>
 8003738:	2b1c      	cmp	r3, #28
 800373a:	d83f      	bhi.n	80037bc <BSP_TS_Get_GestureId+0xb0>
 800373c:	2b1c      	cmp	r3, #28
 800373e:	d85c      	bhi.n	80037fa <BSP_TS_Get_GestureId+0xee>
 8003740:	a201      	add	r2, pc, #4	; (adr r2, 8003748 <BSP_TS_Get_GestureId+0x3c>)
 8003742:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003746:	bf00      	nop
 8003748:	080037c3 	.word	0x080037c3
 800374c:	080037fb 	.word	0x080037fb
 8003750:	080037fb 	.word	0x080037fb
 8003754:	080037fb 	.word	0x080037fb
 8003758:	080037fb 	.word	0x080037fb
 800375c:	080037fb 	.word	0x080037fb
 8003760:	080037fb 	.word	0x080037fb
 8003764:	080037fb 	.word	0x080037fb
 8003768:	080037fb 	.word	0x080037fb
 800376c:	080037fb 	.word	0x080037fb
 8003770:	080037fb 	.word	0x080037fb
 8003774:	080037fb 	.word	0x080037fb
 8003778:	080037fb 	.word	0x080037fb
 800377c:	080037fb 	.word	0x080037fb
 8003780:	080037fb 	.word	0x080037fb
 8003784:	080037fb 	.word	0x080037fb
 8003788:	080037cb 	.word	0x080037cb
 800378c:	080037fb 	.word	0x080037fb
 8003790:	080037fb 	.word	0x080037fb
 8003794:	080037fb 	.word	0x080037fb
 8003798:	080037d3 	.word	0x080037d3
 800379c:	080037fb 	.word	0x080037fb
 80037a0:	080037fb 	.word	0x080037fb
 80037a4:	080037fb 	.word	0x080037fb
 80037a8:	080037db 	.word	0x080037db
 80037ac:	080037fb 	.word	0x080037fb
 80037b0:	080037fb 	.word	0x080037fb
 80037b4:	080037fb 	.word	0x080037fb
 80037b8:	080037e3 	.word	0x080037e3
 80037bc:	2b40      	cmp	r3, #64	; 0x40
 80037be:	d014      	beq.n	80037ea <BSP_TS_Get_GestureId+0xde>
 80037c0:	e01b      	b.n	80037fa <BSP_TS_Get_GestureId+0xee>
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	2200      	movs	r2, #0
 80037c6:	629a      	str	r2, [r3, #40]	; 0x28
 80037c8:	e01a      	b.n	8003800 <BSP_TS_Get_GestureId+0xf4>
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	2201      	movs	r2, #1
 80037ce:	629a      	str	r2, [r3, #40]	; 0x28
 80037d0:	e016      	b.n	8003800 <BSP_TS_Get_GestureId+0xf4>
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	2202      	movs	r2, #2
 80037d6:	629a      	str	r2, [r3, #40]	; 0x28
 80037d8:	e012      	b.n	8003800 <BSP_TS_Get_GestureId+0xf4>
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	2203      	movs	r2, #3
 80037de:	629a      	str	r2, [r3, #40]	; 0x28
 80037e0:	e00e      	b.n	8003800 <BSP_TS_Get_GestureId+0xf4>
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	2204      	movs	r2, #4
 80037e6:	629a      	str	r2, [r3, #40]	; 0x28
 80037e8:	e00a      	b.n	8003800 <BSP_TS_Get_GestureId+0xf4>
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	2205      	movs	r2, #5
 80037ee:	629a      	str	r2, [r3, #40]	; 0x28
 80037f0:	e006      	b.n	8003800 <BSP_TS_Get_GestureId+0xf4>
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	2206      	movs	r2, #6
 80037f6:	629a      	str	r2, [r3, #40]	; 0x28
 80037f8:	e002      	b.n	8003800 <BSP_TS_Get_GestureId+0xf4>
 80037fa:	2301      	movs	r3, #1
 80037fc:	73fb      	strb	r3, [r7, #15]
 80037fe:	bf00      	nop
 8003800:	7bfb      	ldrb	r3, [r7, #15]
 8003802:	4618      	mov	r0, r3
 8003804:	3710      	adds	r7, #16
 8003806:	46bd      	mov	sp, r7
 8003808:	bd80      	pop	{r7, pc}
 800380a:	bf00      	nop
 800380c:	20000f89 	.word	0x20000f89

08003810 <HAL_Init>:
 8003810:	b580      	push	{r7, lr}
 8003812:	af00      	add	r7, sp, #0
 8003814:	4b08      	ldr	r3, [pc, #32]	; (8003838 <HAL_Init+0x28>)
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	4a07      	ldr	r2, [pc, #28]	; (8003838 <HAL_Init+0x28>)
 800381a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800381e:	6013      	str	r3, [r2, #0]
 8003820:	2003      	movs	r0, #3
 8003822:	f000 fd75 	bl	8004310 <HAL_NVIC_SetPriorityGrouping>
 8003826:	200f      	movs	r0, #15
 8003828:	f000 f808 	bl	800383c <HAL_InitTick>
 800382c:	f7fe fab6 	bl	8001d9c <HAL_MspInit>
 8003830:	2300      	movs	r3, #0
 8003832:	4618      	mov	r0, r3
 8003834:	bd80      	pop	{r7, pc}
 8003836:	bf00      	nop
 8003838:	40023c00 	.word	0x40023c00

0800383c <HAL_InitTick>:
 800383c:	b580      	push	{r7, lr}
 800383e:	b082      	sub	sp, #8
 8003840:	af00      	add	r7, sp, #0
 8003842:	6078      	str	r0, [r7, #4]
 8003844:	4b12      	ldr	r3, [pc, #72]	; (8003890 <HAL_InitTick+0x54>)
 8003846:	681a      	ldr	r2, [r3, #0]
 8003848:	4b12      	ldr	r3, [pc, #72]	; (8003894 <HAL_InitTick+0x58>)
 800384a:	781b      	ldrb	r3, [r3, #0]
 800384c:	4619      	mov	r1, r3
 800384e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003852:	fbb3 f3f1 	udiv	r3, r3, r1
 8003856:	fbb2 f3f3 	udiv	r3, r2, r3
 800385a:	4618      	mov	r0, r3
 800385c:	f000 fd9b 	bl	8004396 <HAL_SYSTICK_Config>
 8003860:	4603      	mov	r3, r0
 8003862:	2b00      	cmp	r3, #0
 8003864:	d001      	beq.n	800386a <HAL_InitTick+0x2e>
 8003866:	2301      	movs	r3, #1
 8003868:	e00e      	b.n	8003888 <HAL_InitTick+0x4c>
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	2b0f      	cmp	r3, #15
 800386e:	d80a      	bhi.n	8003886 <HAL_InitTick+0x4a>
 8003870:	2200      	movs	r2, #0
 8003872:	6879      	ldr	r1, [r7, #4]
 8003874:	f04f 30ff 	mov.w	r0, #4294967295
 8003878:	f000 fd55 	bl	8004326 <HAL_NVIC_SetPriority>
 800387c:	4a06      	ldr	r2, [pc, #24]	; (8003898 <HAL_InitTick+0x5c>)
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	6013      	str	r3, [r2, #0]
 8003882:	2300      	movs	r3, #0
 8003884:	e000      	b.n	8003888 <HAL_InitTick+0x4c>
 8003886:	2301      	movs	r3, #1
 8003888:	4618      	mov	r0, r3
 800388a:	3708      	adds	r7, #8
 800388c:	46bd      	mov	sp, r7
 800388e:	bd80      	pop	{r7, pc}
 8003890:	200000c0 	.word	0x200000c0
 8003894:	200000f4 	.word	0x200000f4
 8003898:	200000f0 	.word	0x200000f0

0800389c <HAL_IncTick>:
 800389c:	b480      	push	{r7}
 800389e:	af00      	add	r7, sp, #0
 80038a0:	4b06      	ldr	r3, [pc, #24]	; (80038bc <HAL_IncTick+0x20>)
 80038a2:	781b      	ldrb	r3, [r3, #0]
 80038a4:	461a      	mov	r2, r3
 80038a6:	4b06      	ldr	r3, [pc, #24]	; (80038c0 <HAL_IncTick+0x24>)
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	4413      	add	r3, r2
 80038ac:	4a04      	ldr	r2, [pc, #16]	; (80038c0 <HAL_IncTick+0x24>)
 80038ae:	6013      	str	r3, [r2, #0]
 80038b0:	bf00      	nop
 80038b2:	46bd      	mov	sp, r7
 80038b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038b8:	4770      	bx	lr
 80038ba:	bf00      	nop
 80038bc:	200000f4 	.word	0x200000f4
 80038c0:	20008100 	.word	0x20008100

080038c4 <HAL_GetTick>:
 80038c4:	b480      	push	{r7}
 80038c6:	af00      	add	r7, sp, #0
 80038c8:	4b03      	ldr	r3, [pc, #12]	; (80038d8 <HAL_GetTick+0x14>)
 80038ca:	681b      	ldr	r3, [r3, #0]
 80038cc:	4618      	mov	r0, r3
 80038ce:	46bd      	mov	sp, r7
 80038d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038d4:	4770      	bx	lr
 80038d6:	bf00      	nop
 80038d8:	20008100 	.word	0x20008100

080038dc <HAL_Delay>:
 80038dc:	b580      	push	{r7, lr}
 80038de:	b084      	sub	sp, #16
 80038e0:	af00      	add	r7, sp, #0
 80038e2:	6078      	str	r0, [r7, #4]
 80038e4:	f7ff ffee 	bl	80038c4 <HAL_GetTick>
 80038e8:	60b8      	str	r0, [r7, #8]
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	60fb      	str	r3, [r7, #12]
 80038ee:	68fb      	ldr	r3, [r7, #12]
 80038f0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80038f4:	d005      	beq.n	8003902 <HAL_Delay+0x26>
 80038f6:	4b0a      	ldr	r3, [pc, #40]	; (8003920 <HAL_Delay+0x44>)
 80038f8:	781b      	ldrb	r3, [r3, #0]
 80038fa:	461a      	mov	r2, r3
 80038fc:	68fb      	ldr	r3, [r7, #12]
 80038fe:	4413      	add	r3, r2
 8003900:	60fb      	str	r3, [r7, #12]
 8003902:	bf00      	nop
 8003904:	f7ff ffde 	bl	80038c4 <HAL_GetTick>
 8003908:	4602      	mov	r2, r0
 800390a:	68bb      	ldr	r3, [r7, #8]
 800390c:	1ad3      	subs	r3, r2, r3
 800390e:	68fa      	ldr	r2, [r7, #12]
 8003910:	429a      	cmp	r2, r3
 8003912:	d8f7      	bhi.n	8003904 <HAL_Delay+0x28>
 8003914:	bf00      	nop
 8003916:	bf00      	nop
 8003918:	3710      	adds	r7, #16
 800391a:	46bd      	mov	sp, r7
 800391c:	bd80      	pop	{r7, pc}
 800391e:	bf00      	nop
 8003920:	200000f4 	.word	0x200000f4

08003924 <HAL_ADC_Init>:
 8003924:	b580      	push	{r7, lr}
 8003926:	b084      	sub	sp, #16
 8003928:	af00      	add	r7, sp, #0
 800392a:	6078      	str	r0, [r7, #4]
 800392c:	2300      	movs	r3, #0
 800392e:	73fb      	strb	r3, [r7, #15]
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	2b00      	cmp	r3, #0
 8003934:	d101      	bne.n	800393a <HAL_ADC_Init+0x16>
 8003936:	2301      	movs	r3, #1
 8003938:	e031      	b.n	800399e <HAL_ADC_Init+0x7a>
 800393a:	687b      	ldr	r3, [r7, #4]
 800393c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800393e:	2b00      	cmp	r3, #0
 8003940:	d109      	bne.n	8003956 <HAL_ADC_Init+0x32>
 8003942:	6878      	ldr	r0, [r7, #4]
 8003944:	f7fd fc3a 	bl	80011bc <HAL_ADC_MspInit>
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	2200      	movs	r2, #0
 800394c:	645a      	str	r2, [r3, #68]	; 0x44
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	2200      	movs	r2, #0
 8003952:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800395a:	f003 0310 	and.w	r3, r3, #16
 800395e:	2b00      	cmp	r3, #0
 8003960:	d116      	bne.n	8003990 <HAL_ADC_Init+0x6c>
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003966:	4b10      	ldr	r3, [pc, #64]	; (80039a8 <HAL_ADC_Init+0x84>)
 8003968:	4013      	ands	r3, r2
 800396a:	f043 0202 	orr.w	r2, r3, #2
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	641a      	str	r2, [r3, #64]	; 0x40
 8003972:	6878      	ldr	r0, [r7, #4]
 8003974:	f000 fa5c 	bl	8003e30 <ADC_Init>
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	2200      	movs	r2, #0
 800397c:	645a      	str	r2, [r3, #68]	; 0x44
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003982:	f023 0303 	bic.w	r3, r3, #3
 8003986:	f043 0201 	orr.w	r2, r3, #1
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	641a      	str	r2, [r3, #64]	; 0x40
 800398e:	e001      	b.n	8003994 <HAL_ADC_Init+0x70>
 8003990:	2301      	movs	r3, #1
 8003992:	73fb      	strb	r3, [r7, #15]
 8003994:	687b      	ldr	r3, [r7, #4]
 8003996:	2200      	movs	r2, #0
 8003998:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800399c:	7bfb      	ldrb	r3, [r7, #15]
 800399e:	4618      	mov	r0, r3
 80039a0:	3710      	adds	r7, #16
 80039a2:	46bd      	mov	sp, r7
 80039a4:	bd80      	pop	{r7, pc}
 80039a6:	bf00      	nop
 80039a8:	ffffeefd 	.word	0xffffeefd

080039ac <HAL_ADC_Start_DMA>:
 80039ac:	b580      	push	{r7, lr}
 80039ae:	b086      	sub	sp, #24
 80039b0:	af00      	add	r7, sp, #0
 80039b2:	60f8      	str	r0, [r7, #12]
 80039b4:	60b9      	str	r1, [r7, #8]
 80039b6:	607a      	str	r2, [r7, #4]
 80039b8:	2300      	movs	r3, #0
 80039ba:	617b      	str	r3, [r7, #20]
 80039bc:	68fb      	ldr	r3, [r7, #12]
 80039be:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80039c2:	2b01      	cmp	r3, #1
 80039c4:	d101      	bne.n	80039ca <HAL_ADC_Start_DMA+0x1e>
 80039c6:	2302      	movs	r3, #2
 80039c8:	e0c7      	b.n	8003b5a <HAL_ADC_Start_DMA+0x1ae>
 80039ca:	68fb      	ldr	r3, [r7, #12]
 80039cc:	2201      	movs	r2, #1
 80039ce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80039d2:	68fb      	ldr	r3, [r7, #12]
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	689b      	ldr	r3, [r3, #8]
 80039d8:	f003 0301 	and.w	r3, r3, #1
 80039dc:	2b01      	cmp	r3, #1
 80039de:	d018      	beq.n	8003a12 <HAL_ADC_Start_DMA+0x66>
 80039e0:	68fb      	ldr	r3, [r7, #12]
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	689a      	ldr	r2, [r3, #8]
 80039e6:	68fb      	ldr	r3, [r7, #12]
 80039e8:	681b      	ldr	r3, [r3, #0]
 80039ea:	f042 0201 	orr.w	r2, r2, #1
 80039ee:	609a      	str	r2, [r3, #8]
 80039f0:	4b5c      	ldr	r3, [pc, #368]	; (8003b64 <HAL_ADC_Start_DMA+0x1b8>)
 80039f2:	681b      	ldr	r3, [r3, #0]
 80039f4:	4a5c      	ldr	r2, [pc, #368]	; (8003b68 <HAL_ADC_Start_DMA+0x1bc>)
 80039f6:	fba2 2303 	umull	r2, r3, r2, r3
 80039fa:	0c9a      	lsrs	r2, r3, #18
 80039fc:	4613      	mov	r3, r2
 80039fe:	005b      	lsls	r3, r3, #1
 8003a00:	4413      	add	r3, r2
 8003a02:	617b      	str	r3, [r7, #20]
 8003a04:	e002      	b.n	8003a0c <HAL_ADC_Start_DMA+0x60>
 8003a06:	697b      	ldr	r3, [r7, #20]
 8003a08:	3b01      	subs	r3, #1
 8003a0a:	617b      	str	r3, [r7, #20]
 8003a0c:	697b      	ldr	r3, [r7, #20]
 8003a0e:	2b00      	cmp	r3, #0
 8003a10:	d1f9      	bne.n	8003a06 <HAL_ADC_Start_DMA+0x5a>
 8003a12:	68fb      	ldr	r3, [r7, #12]
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	689b      	ldr	r3, [r3, #8]
 8003a18:	f003 0301 	and.w	r3, r3, #1
 8003a1c:	2b01      	cmp	r3, #1
 8003a1e:	f040 809b 	bne.w	8003b58 <HAL_ADC_Start_DMA+0x1ac>
 8003a22:	68fb      	ldr	r3, [r7, #12]
 8003a24:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003a26:	4b51      	ldr	r3, [pc, #324]	; (8003b6c <HAL_ADC_Start_DMA+0x1c0>)
 8003a28:	4013      	ands	r3, r2
 8003a2a:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8003a2e:	68fb      	ldr	r3, [r7, #12]
 8003a30:	641a      	str	r2, [r3, #64]	; 0x40
 8003a32:	68fb      	ldr	r3, [r7, #12]
 8003a34:	681b      	ldr	r3, [r3, #0]
 8003a36:	685b      	ldr	r3, [r3, #4]
 8003a38:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003a3c:	2b00      	cmp	r3, #0
 8003a3e:	d007      	beq.n	8003a50 <HAL_ADC_Start_DMA+0xa4>
 8003a40:	68fb      	ldr	r3, [r7, #12]
 8003a42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a44:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8003a48:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8003a4c:	68fb      	ldr	r3, [r7, #12]
 8003a4e:	641a      	str	r2, [r3, #64]	; 0x40
 8003a50:	68fb      	ldr	r3, [r7, #12]
 8003a52:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a54:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003a58:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003a5c:	d106      	bne.n	8003a6c <HAL_ADC_Start_DMA+0xc0>
 8003a5e:	68fb      	ldr	r3, [r7, #12]
 8003a60:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003a62:	f023 0206 	bic.w	r2, r3, #6
 8003a66:	68fb      	ldr	r3, [r7, #12]
 8003a68:	645a      	str	r2, [r3, #68]	; 0x44
 8003a6a:	e002      	b.n	8003a72 <HAL_ADC_Start_DMA+0xc6>
 8003a6c:	68fb      	ldr	r3, [r7, #12]
 8003a6e:	2200      	movs	r2, #0
 8003a70:	645a      	str	r2, [r3, #68]	; 0x44
 8003a72:	68fb      	ldr	r3, [r7, #12]
 8003a74:	2200      	movs	r2, #0
 8003a76:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003a7a:	68fb      	ldr	r3, [r7, #12]
 8003a7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003a7e:	4a3c      	ldr	r2, [pc, #240]	; (8003b70 <HAL_ADC_Start_DMA+0x1c4>)
 8003a80:	63da      	str	r2, [r3, #60]	; 0x3c
 8003a82:	68fb      	ldr	r3, [r7, #12]
 8003a84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003a86:	4a3b      	ldr	r2, [pc, #236]	; (8003b74 <HAL_ADC_Start_DMA+0x1c8>)
 8003a88:	641a      	str	r2, [r3, #64]	; 0x40
 8003a8a:	68fb      	ldr	r3, [r7, #12]
 8003a8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003a8e:	4a3a      	ldr	r2, [pc, #232]	; (8003b78 <HAL_ADC_Start_DMA+0x1cc>)
 8003a90:	64da      	str	r2, [r3, #76]	; 0x4c
 8003a92:	68fb      	ldr	r3, [r7, #12]
 8003a94:	681b      	ldr	r3, [r3, #0]
 8003a96:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8003a9a:	601a      	str	r2, [r3, #0]
 8003a9c:	68fb      	ldr	r3, [r7, #12]
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	685a      	ldr	r2, [r3, #4]
 8003aa2:	68fb      	ldr	r3, [r7, #12]
 8003aa4:	681b      	ldr	r3, [r3, #0]
 8003aa6:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8003aaa:	605a      	str	r2, [r3, #4]
 8003aac:	68fb      	ldr	r3, [r7, #12]
 8003aae:	681b      	ldr	r3, [r3, #0]
 8003ab0:	689a      	ldr	r2, [r3, #8]
 8003ab2:	68fb      	ldr	r3, [r7, #12]
 8003ab4:	681b      	ldr	r3, [r3, #0]
 8003ab6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003aba:	609a      	str	r2, [r3, #8]
 8003abc:	68fb      	ldr	r3, [r7, #12]
 8003abe:	6b98      	ldr	r0, [r3, #56]	; 0x38
 8003ac0:	68fb      	ldr	r3, [r7, #12]
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	334c      	adds	r3, #76	; 0x4c
 8003ac6:	4619      	mov	r1, r3
 8003ac8:	68ba      	ldr	r2, [r7, #8]
 8003aca:	687b      	ldr	r3, [r7, #4]
 8003acc:	f000 fdf8 	bl	80046c0 <HAL_DMA_Start_IT>
 8003ad0:	4b2a      	ldr	r3, [pc, #168]	; (8003b7c <HAL_ADC_Start_DMA+0x1d0>)
 8003ad2:	685b      	ldr	r3, [r3, #4]
 8003ad4:	f003 031f 	and.w	r3, r3, #31
 8003ad8:	2b00      	cmp	r3, #0
 8003ada:	d10f      	bne.n	8003afc <HAL_ADC_Start_DMA+0x150>
 8003adc:	68fb      	ldr	r3, [r7, #12]
 8003ade:	681b      	ldr	r3, [r3, #0]
 8003ae0:	689b      	ldr	r3, [r3, #8]
 8003ae2:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8003ae6:	2b00      	cmp	r3, #0
 8003ae8:	d136      	bne.n	8003b58 <HAL_ADC_Start_DMA+0x1ac>
 8003aea:	68fb      	ldr	r3, [r7, #12]
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	689a      	ldr	r2, [r3, #8]
 8003af0:	68fb      	ldr	r3, [r7, #12]
 8003af2:	681b      	ldr	r3, [r3, #0]
 8003af4:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003af8:	609a      	str	r2, [r3, #8]
 8003afa:	e02d      	b.n	8003b58 <HAL_ADC_Start_DMA+0x1ac>
 8003afc:	68fb      	ldr	r3, [r7, #12]
 8003afe:	681b      	ldr	r3, [r3, #0]
 8003b00:	4a1f      	ldr	r2, [pc, #124]	; (8003b80 <HAL_ADC_Start_DMA+0x1d4>)
 8003b02:	4293      	cmp	r3, r2
 8003b04:	d10e      	bne.n	8003b24 <HAL_ADC_Start_DMA+0x178>
 8003b06:	68fb      	ldr	r3, [r7, #12]
 8003b08:	681b      	ldr	r3, [r3, #0]
 8003b0a:	689b      	ldr	r3, [r3, #8]
 8003b0c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8003b10:	2b00      	cmp	r3, #0
 8003b12:	d107      	bne.n	8003b24 <HAL_ADC_Start_DMA+0x178>
 8003b14:	68fb      	ldr	r3, [r7, #12]
 8003b16:	681b      	ldr	r3, [r3, #0]
 8003b18:	689a      	ldr	r2, [r3, #8]
 8003b1a:	68fb      	ldr	r3, [r7, #12]
 8003b1c:	681b      	ldr	r3, [r3, #0]
 8003b1e:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003b22:	609a      	str	r2, [r3, #8]
 8003b24:	4b15      	ldr	r3, [pc, #84]	; (8003b7c <HAL_ADC_Start_DMA+0x1d0>)
 8003b26:	685b      	ldr	r3, [r3, #4]
 8003b28:	f003 0310 	and.w	r3, r3, #16
 8003b2c:	2b00      	cmp	r3, #0
 8003b2e:	d113      	bne.n	8003b58 <HAL_ADC_Start_DMA+0x1ac>
 8003b30:	68fb      	ldr	r3, [r7, #12]
 8003b32:	681b      	ldr	r3, [r3, #0]
 8003b34:	4a13      	ldr	r2, [pc, #76]	; (8003b84 <HAL_ADC_Start_DMA+0x1d8>)
 8003b36:	4293      	cmp	r3, r2
 8003b38:	d10e      	bne.n	8003b58 <HAL_ADC_Start_DMA+0x1ac>
 8003b3a:	68fb      	ldr	r3, [r7, #12]
 8003b3c:	681b      	ldr	r3, [r3, #0]
 8003b3e:	689b      	ldr	r3, [r3, #8]
 8003b40:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8003b44:	2b00      	cmp	r3, #0
 8003b46:	d107      	bne.n	8003b58 <HAL_ADC_Start_DMA+0x1ac>
 8003b48:	68fb      	ldr	r3, [r7, #12]
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	689a      	ldr	r2, [r3, #8]
 8003b4e:	68fb      	ldr	r3, [r7, #12]
 8003b50:	681b      	ldr	r3, [r3, #0]
 8003b52:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8003b56:	609a      	str	r2, [r3, #8]
 8003b58:	2300      	movs	r3, #0
 8003b5a:	4618      	mov	r0, r3
 8003b5c:	3718      	adds	r7, #24
 8003b5e:	46bd      	mov	sp, r7
 8003b60:	bd80      	pop	{r7, pc}
 8003b62:	bf00      	nop
 8003b64:	200000c0 	.word	0x200000c0
 8003b68:	431bde83 	.word	0x431bde83
 8003b6c:	fffff8fe 	.word	0xfffff8fe
 8003b70:	08004025 	.word	0x08004025
 8003b74:	080040df 	.word	0x080040df
 8003b78:	080040fb 	.word	0x080040fb
 8003b7c:	40012300 	.word	0x40012300
 8003b80:	40012000 	.word	0x40012000
 8003b84:	40012200 	.word	0x40012200

08003b88 <HAL_ADC_ErrorCallback>:
 8003b88:	b480      	push	{r7}
 8003b8a:	b083      	sub	sp, #12
 8003b8c:	af00      	add	r7, sp, #0
 8003b8e:	6078      	str	r0, [r7, #4]
 8003b90:	bf00      	nop
 8003b92:	370c      	adds	r7, #12
 8003b94:	46bd      	mov	sp, r7
 8003b96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b9a:	4770      	bx	lr

08003b9c <HAL_ADC_ConfigChannel>:
 8003b9c:	b480      	push	{r7}
 8003b9e:	b085      	sub	sp, #20
 8003ba0:	af00      	add	r7, sp, #0
 8003ba2:	6078      	str	r0, [r7, #4]
 8003ba4:	6039      	str	r1, [r7, #0]
 8003ba6:	2300      	movs	r3, #0
 8003ba8:	60fb      	str	r3, [r7, #12]
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003bb0:	2b01      	cmp	r3, #1
 8003bb2:	d101      	bne.n	8003bb8 <HAL_ADC_ConfigChannel+0x1c>
 8003bb4:	2302      	movs	r3, #2
 8003bb6:	e12a      	b.n	8003e0e <HAL_ADC_ConfigChannel+0x272>
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	2201      	movs	r2, #1
 8003bbc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003bc0:	683b      	ldr	r3, [r7, #0]
 8003bc2:	681b      	ldr	r3, [r3, #0]
 8003bc4:	2b09      	cmp	r3, #9
 8003bc6:	d93a      	bls.n	8003c3e <HAL_ADC_ConfigChannel+0xa2>
 8003bc8:	683b      	ldr	r3, [r7, #0]
 8003bca:	681b      	ldr	r3, [r3, #0]
 8003bcc:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8003bd0:	d035      	beq.n	8003c3e <HAL_ADC_ConfigChannel+0xa2>
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	681b      	ldr	r3, [r3, #0]
 8003bd6:	68d9      	ldr	r1, [r3, #12]
 8003bd8:	683b      	ldr	r3, [r7, #0]
 8003bda:	681b      	ldr	r3, [r3, #0]
 8003bdc:	b29b      	uxth	r3, r3
 8003bde:	461a      	mov	r2, r3
 8003be0:	4613      	mov	r3, r2
 8003be2:	005b      	lsls	r3, r3, #1
 8003be4:	4413      	add	r3, r2
 8003be6:	3b1e      	subs	r3, #30
 8003be8:	2207      	movs	r2, #7
 8003bea:	fa02 f303 	lsl.w	r3, r2, r3
 8003bee:	43da      	mvns	r2, r3
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	681b      	ldr	r3, [r3, #0]
 8003bf4:	400a      	ands	r2, r1
 8003bf6:	60da      	str	r2, [r3, #12]
 8003bf8:	683b      	ldr	r3, [r7, #0]
 8003bfa:	681b      	ldr	r3, [r3, #0]
 8003bfc:	4a87      	ldr	r2, [pc, #540]	; (8003e1c <HAL_ADC_ConfigChannel+0x280>)
 8003bfe:	4293      	cmp	r3, r2
 8003c00:	d10a      	bne.n	8003c18 <HAL_ADC_ConfigChannel+0x7c>
 8003c02:	687b      	ldr	r3, [r7, #4]
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	68d9      	ldr	r1, [r3, #12]
 8003c08:	683b      	ldr	r3, [r7, #0]
 8003c0a:	689b      	ldr	r3, [r3, #8]
 8003c0c:	061a      	lsls	r2, r3, #24
 8003c0e:	687b      	ldr	r3, [r7, #4]
 8003c10:	681b      	ldr	r3, [r3, #0]
 8003c12:	430a      	orrs	r2, r1
 8003c14:	60da      	str	r2, [r3, #12]
 8003c16:	e035      	b.n	8003c84 <HAL_ADC_ConfigChannel+0xe8>
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	68d9      	ldr	r1, [r3, #12]
 8003c1e:	683b      	ldr	r3, [r7, #0]
 8003c20:	689a      	ldr	r2, [r3, #8]
 8003c22:	683b      	ldr	r3, [r7, #0]
 8003c24:	681b      	ldr	r3, [r3, #0]
 8003c26:	b29b      	uxth	r3, r3
 8003c28:	4618      	mov	r0, r3
 8003c2a:	4603      	mov	r3, r0
 8003c2c:	005b      	lsls	r3, r3, #1
 8003c2e:	4403      	add	r3, r0
 8003c30:	3b1e      	subs	r3, #30
 8003c32:	409a      	lsls	r2, r3
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	430a      	orrs	r2, r1
 8003c3a:	60da      	str	r2, [r3, #12]
 8003c3c:	e022      	b.n	8003c84 <HAL_ADC_ConfigChannel+0xe8>
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	681b      	ldr	r3, [r3, #0]
 8003c42:	6919      	ldr	r1, [r3, #16]
 8003c44:	683b      	ldr	r3, [r7, #0]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	b29b      	uxth	r3, r3
 8003c4a:	461a      	mov	r2, r3
 8003c4c:	4613      	mov	r3, r2
 8003c4e:	005b      	lsls	r3, r3, #1
 8003c50:	4413      	add	r3, r2
 8003c52:	2207      	movs	r2, #7
 8003c54:	fa02 f303 	lsl.w	r3, r2, r3
 8003c58:	43da      	mvns	r2, r3
 8003c5a:	687b      	ldr	r3, [r7, #4]
 8003c5c:	681b      	ldr	r3, [r3, #0]
 8003c5e:	400a      	ands	r2, r1
 8003c60:	611a      	str	r2, [r3, #16]
 8003c62:	687b      	ldr	r3, [r7, #4]
 8003c64:	681b      	ldr	r3, [r3, #0]
 8003c66:	6919      	ldr	r1, [r3, #16]
 8003c68:	683b      	ldr	r3, [r7, #0]
 8003c6a:	689a      	ldr	r2, [r3, #8]
 8003c6c:	683b      	ldr	r3, [r7, #0]
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	b29b      	uxth	r3, r3
 8003c72:	4618      	mov	r0, r3
 8003c74:	4603      	mov	r3, r0
 8003c76:	005b      	lsls	r3, r3, #1
 8003c78:	4403      	add	r3, r0
 8003c7a:	409a      	lsls	r2, r3
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	430a      	orrs	r2, r1
 8003c82:	611a      	str	r2, [r3, #16]
 8003c84:	683b      	ldr	r3, [r7, #0]
 8003c86:	685b      	ldr	r3, [r3, #4]
 8003c88:	2b06      	cmp	r3, #6
 8003c8a:	d824      	bhi.n	8003cd6 <HAL_ADC_ConfigChannel+0x13a>
 8003c8c:	687b      	ldr	r3, [r7, #4]
 8003c8e:	681b      	ldr	r3, [r3, #0]
 8003c90:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8003c92:	683b      	ldr	r3, [r7, #0]
 8003c94:	685a      	ldr	r2, [r3, #4]
 8003c96:	4613      	mov	r3, r2
 8003c98:	009b      	lsls	r3, r3, #2
 8003c9a:	4413      	add	r3, r2
 8003c9c:	3b05      	subs	r3, #5
 8003c9e:	221f      	movs	r2, #31
 8003ca0:	fa02 f303 	lsl.w	r3, r2, r3
 8003ca4:	43da      	mvns	r2, r3
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	681b      	ldr	r3, [r3, #0]
 8003caa:	400a      	ands	r2, r1
 8003cac:	635a      	str	r2, [r3, #52]	; 0x34
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8003cb4:	683b      	ldr	r3, [r7, #0]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	b29b      	uxth	r3, r3
 8003cba:	4618      	mov	r0, r3
 8003cbc:	683b      	ldr	r3, [r7, #0]
 8003cbe:	685a      	ldr	r2, [r3, #4]
 8003cc0:	4613      	mov	r3, r2
 8003cc2:	009b      	lsls	r3, r3, #2
 8003cc4:	4413      	add	r3, r2
 8003cc6:	3b05      	subs	r3, #5
 8003cc8:	fa00 f203 	lsl.w	r2, r0, r3
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	681b      	ldr	r3, [r3, #0]
 8003cd0:	430a      	orrs	r2, r1
 8003cd2:	635a      	str	r2, [r3, #52]	; 0x34
 8003cd4:	e04c      	b.n	8003d70 <HAL_ADC_ConfigChannel+0x1d4>
 8003cd6:	683b      	ldr	r3, [r7, #0]
 8003cd8:	685b      	ldr	r3, [r3, #4]
 8003cda:	2b0c      	cmp	r3, #12
 8003cdc:	d824      	bhi.n	8003d28 <HAL_ADC_ConfigChannel+0x18c>
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	681b      	ldr	r3, [r3, #0]
 8003ce2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8003ce4:	683b      	ldr	r3, [r7, #0]
 8003ce6:	685a      	ldr	r2, [r3, #4]
 8003ce8:	4613      	mov	r3, r2
 8003cea:	009b      	lsls	r3, r3, #2
 8003cec:	4413      	add	r3, r2
 8003cee:	3b23      	subs	r3, #35	; 0x23
 8003cf0:	221f      	movs	r2, #31
 8003cf2:	fa02 f303 	lsl.w	r3, r2, r3
 8003cf6:	43da      	mvns	r2, r3
 8003cf8:	687b      	ldr	r3, [r7, #4]
 8003cfa:	681b      	ldr	r3, [r3, #0]
 8003cfc:	400a      	ands	r2, r1
 8003cfe:	631a      	str	r2, [r3, #48]	; 0x30
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8003d06:	683b      	ldr	r3, [r7, #0]
 8003d08:	681b      	ldr	r3, [r3, #0]
 8003d0a:	b29b      	uxth	r3, r3
 8003d0c:	4618      	mov	r0, r3
 8003d0e:	683b      	ldr	r3, [r7, #0]
 8003d10:	685a      	ldr	r2, [r3, #4]
 8003d12:	4613      	mov	r3, r2
 8003d14:	009b      	lsls	r3, r3, #2
 8003d16:	4413      	add	r3, r2
 8003d18:	3b23      	subs	r3, #35	; 0x23
 8003d1a:	fa00 f203 	lsl.w	r2, r0, r3
 8003d1e:	687b      	ldr	r3, [r7, #4]
 8003d20:	681b      	ldr	r3, [r3, #0]
 8003d22:	430a      	orrs	r2, r1
 8003d24:	631a      	str	r2, [r3, #48]	; 0x30
 8003d26:	e023      	b.n	8003d70 <HAL_ADC_ConfigChannel+0x1d4>
 8003d28:	687b      	ldr	r3, [r7, #4]
 8003d2a:	681b      	ldr	r3, [r3, #0]
 8003d2c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003d2e:	683b      	ldr	r3, [r7, #0]
 8003d30:	685a      	ldr	r2, [r3, #4]
 8003d32:	4613      	mov	r3, r2
 8003d34:	009b      	lsls	r3, r3, #2
 8003d36:	4413      	add	r3, r2
 8003d38:	3b41      	subs	r3, #65	; 0x41
 8003d3a:	221f      	movs	r2, #31
 8003d3c:	fa02 f303 	lsl.w	r3, r2, r3
 8003d40:	43da      	mvns	r2, r3
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	681b      	ldr	r3, [r3, #0]
 8003d46:	400a      	ands	r2, r1
 8003d48:	62da      	str	r2, [r3, #44]	; 0x2c
 8003d4a:	687b      	ldr	r3, [r7, #4]
 8003d4c:	681b      	ldr	r3, [r3, #0]
 8003d4e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003d50:	683b      	ldr	r3, [r7, #0]
 8003d52:	681b      	ldr	r3, [r3, #0]
 8003d54:	b29b      	uxth	r3, r3
 8003d56:	4618      	mov	r0, r3
 8003d58:	683b      	ldr	r3, [r7, #0]
 8003d5a:	685a      	ldr	r2, [r3, #4]
 8003d5c:	4613      	mov	r3, r2
 8003d5e:	009b      	lsls	r3, r3, #2
 8003d60:	4413      	add	r3, r2
 8003d62:	3b41      	subs	r3, #65	; 0x41
 8003d64:	fa00 f203 	lsl.w	r2, r0, r3
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	681b      	ldr	r3, [r3, #0]
 8003d6c:	430a      	orrs	r2, r1
 8003d6e:	62da      	str	r2, [r3, #44]	; 0x2c
 8003d70:	687b      	ldr	r3, [r7, #4]
 8003d72:	681b      	ldr	r3, [r3, #0]
 8003d74:	4a2a      	ldr	r2, [pc, #168]	; (8003e20 <HAL_ADC_ConfigChannel+0x284>)
 8003d76:	4293      	cmp	r3, r2
 8003d78:	d10a      	bne.n	8003d90 <HAL_ADC_ConfigChannel+0x1f4>
 8003d7a:	683b      	ldr	r3, [r7, #0]
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8003d82:	d105      	bne.n	8003d90 <HAL_ADC_ConfigChannel+0x1f4>
 8003d84:	4b27      	ldr	r3, [pc, #156]	; (8003e24 <HAL_ADC_ConfigChannel+0x288>)
 8003d86:	685b      	ldr	r3, [r3, #4]
 8003d88:	4a26      	ldr	r2, [pc, #152]	; (8003e24 <HAL_ADC_ConfigChannel+0x288>)
 8003d8a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8003d8e:	6053      	str	r3, [r2, #4]
 8003d90:	687b      	ldr	r3, [r7, #4]
 8003d92:	681b      	ldr	r3, [r3, #0]
 8003d94:	4a22      	ldr	r2, [pc, #136]	; (8003e20 <HAL_ADC_ConfigChannel+0x284>)
 8003d96:	4293      	cmp	r3, r2
 8003d98:	d109      	bne.n	8003dae <HAL_ADC_ConfigChannel+0x212>
 8003d9a:	683b      	ldr	r3, [r7, #0]
 8003d9c:	681b      	ldr	r3, [r3, #0]
 8003d9e:	2b12      	cmp	r3, #18
 8003da0:	d105      	bne.n	8003dae <HAL_ADC_ConfigChannel+0x212>
 8003da2:	4b20      	ldr	r3, [pc, #128]	; (8003e24 <HAL_ADC_ConfigChannel+0x288>)
 8003da4:	685b      	ldr	r3, [r3, #4]
 8003da6:	4a1f      	ldr	r2, [pc, #124]	; (8003e24 <HAL_ADC_ConfigChannel+0x288>)
 8003da8:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8003dac:	6053      	str	r3, [r2, #4]
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	681b      	ldr	r3, [r3, #0]
 8003db2:	4a1b      	ldr	r2, [pc, #108]	; (8003e20 <HAL_ADC_ConfigChannel+0x284>)
 8003db4:	4293      	cmp	r3, r2
 8003db6:	d125      	bne.n	8003e04 <HAL_ADC_ConfigChannel+0x268>
 8003db8:	683b      	ldr	r3, [r7, #0]
 8003dba:	681b      	ldr	r3, [r3, #0]
 8003dbc:	4a17      	ldr	r2, [pc, #92]	; (8003e1c <HAL_ADC_ConfigChannel+0x280>)
 8003dbe:	4293      	cmp	r3, r2
 8003dc0:	d003      	beq.n	8003dca <HAL_ADC_ConfigChannel+0x22e>
 8003dc2:	683b      	ldr	r3, [r7, #0]
 8003dc4:	681b      	ldr	r3, [r3, #0]
 8003dc6:	2b11      	cmp	r3, #17
 8003dc8:	d11c      	bne.n	8003e04 <HAL_ADC_ConfigChannel+0x268>
 8003dca:	4b16      	ldr	r3, [pc, #88]	; (8003e24 <HAL_ADC_ConfigChannel+0x288>)
 8003dcc:	685b      	ldr	r3, [r3, #4]
 8003dce:	4a15      	ldr	r2, [pc, #84]	; (8003e24 <HAL_ADC_ConfigChannel+0x288>)
 8003dd0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8003dd4:	6053      	str	r3, [r2, #4]
 8003dd6:	683b      	ldr	r3, [r7, #0]
 8003dd8:	681b      	ldr	r3, [r3, #0]
 8003dda:	4a10      	ldr	r2, [pc, #64]	; (8003e1c <HAL_ADC_ConfigChannel+0x280>)
 8003ddc:	4293      	cmp	r3, r2
 8003dde:	d111      	bne.n	8003e04 <HAL_ADC_ConfigChannel+0x268>
 8003de0:	4b11      	ldr	r3, [pc, #68]	; (8003e28 <HAL_ADC_ConfigChannel+0x28c>)
 8003de2:	681b      	ldr	r3, [r3, #0]
 8003de4:	4a11      	ldr	r2, [pc, #68]	; (8003e2c <HAL_ADC_ConfigChannel+0x290>)
 8003de6:	fba2 2303 	umull	r2, r3, r2, r3
 8003dea:	0c9a      	lsrs	r2, r3, #18
 8003dec:	4613      	mov	r3, r2
 8003dee:	009b      	lsls	r3, r3, #2
 8003df0:	4413      	add	r3, r2
 8003df2:	005b      	lsls	r3, r3, #1
 8003df4:	60fb      	str	r3, [r7, #12]
 8003df6:	e002      	b.n	8003dfe <HAL_ADC_ConfigChannel+0x262>
 8003df8:	68fb      	ldr	r3, [r7, #12]
 8003dfa:	3b01      	subs	r3, #1
 8003dfc:	60fb      	str	r3, [r7, #12]
 8003dfe:	68fb      	ldr	r3, [r7, #12]
 8003e00:	2b00      	cmp	r3, #0
 8003e02:	d1f9      	bne.n	8003df8 <HAL_ADC_ConfigChannel+0x25c>
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	2200      	movs	r2, #0
 8003e08:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003e0c:	2300      	movs	r3, #0
 8003e0e:	4618      	mov	r0, r3
 8003e10:	3714      	adds	r7, #20
 8003e12:	46bd      	mov	sp, r7
 8003e14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e18:	4770      	bx	lr
 8003e1a:	bf00      	nop
 8003e1c:	10000012 	.word	0x10000012
 8003e20:	40012000 	.word	0x40012000
 8003e24:	40012300 	.word	0x40012300
 8003e28:	200000c0 	.word	0x200000c0
 8003e2c:	431bde83 	.word	0x431bde83

08003e30 <ADC_Init>:
 8003e30:	b480      	push	{r7}
 8003e32:	b083      	sub	sp, #12
 8003e34:	af00      	add	r7, sp, #0
 8003e36:	6078      	str	r0, [r7, #4]
 8003e38:	4b78      	ldr	r3, [pc, #480]	; (800401c <ADC_Init+0x1ec>)
 8003e3a:	685b      	ldr	r3, [r3, #4]
 8003e3c:	4a77      	ldr	r2, [pc, #476]	; (800401c <ADC_Init+0x1ec>)
 8003e3e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003e42:	6053      	str	r3, [r2, #4]
 8003e44:	4b75      	ldr	r3, [pc, #468]	; (800401c <ADC_Init+0x1ec>)
 8003e46:	685a      	ldr	r2, [r3, #4]
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	685b      	ldr	r3, [r3, #4]
 8003e4c:	4973      	ldr	r1, [pc, #460]	; (800401c <ADC_Init+0x1ec>)
 8003e4e:	4313      	orrs	r3, r2
 8003e50:	604b      	str	r3, [r1, #4]
 8003e52:	687b      	ldr	r3, [r7, #4]
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	685a      	ldr	r2, [r3, #4]
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	681b      	ldr	r3, [r3, #0]
 8003e5c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003e60:	605a      	str	r2, [r3, #4]
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	681b      	ldr	r3, [r3, #0]
 8003e66:	6859      	ldr	r1, [r3, #4]
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	691b      	ldr	r3, [r3, #16]
 8003e6c:	021a      	lsls	r2, r3, #8
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	430a      	orrs	r2, r1
 8003e74:	605a      	str	r2, [r3, #4]
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	685a      	ldr	r2, [r3, #4]
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	681b      	ldr	r3, [r3, #0]
 8003e80:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8003e84:	605a      	str	r2, [r3, #4]
 8003e86:	687b      	ldr	r3, [r7, #4]
 8003e88:	681b      	ldr	r3, [r3, #0]
 8003e8a:	6859      	ldr	r1, [r3, #4]
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	689a      	ldr	r2, [r3, #8]
 8003e90:	687b      	ldr	r3, [r7, #4]
 8003e92:	681b      	ldr	r3, [r3, #0]
 8003e94:	430a      	orrs	r2, r1
 8003e96:	605a      	str	r2, [r3, #4]
 8003e98:	687b      	ldr	r3, [r7, #4]
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	689a      	ldr	r2, [r3, #8]
 8003e9e:	687b      	ldr	r3, [r7, #4]
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003ea6:	609a      	str	r2, [r3, #8]
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	681b      	ldr	r3, [r3, #0]
 8003eac:	6899      	ldr	r1, [r3, #8]
 8003eae:	687b      	ldr	r3, [r7, #4]
 8003eb0:	68da      	ldr	r2, [r3, #12]
 8003eb2:	687b      	ldr	r3, [r7, #4]
 8003eb4:	681b      	ldr	r3, [r3, #0]
 8003eb6:	430a      	orrs	r2, r1
 8003eb8:	609a      	str	r2, [r3, #8]
 8003eba:	687b      	ldr	r3, [r7, #4]
 8003ebc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003ebe:	4a58      	ldr	r2, [pc, #352]	; (8004020 <ADC_Init+0x1f0>)
 8003ec0:	4293      	cmp	r3, r2
 8003ec2:	d022      	beq.n	8003f0a <ADC_Init+0xda>
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	681b      	ldr	r3, [r3, #0]
 8003ec8:	689a      	ldr	r2, [r3, #8]
 8003eca:	687b      	ldr	r3, [r7, #4]
 8003ecc:	681b      	ldr	r3, [r3, #0]
 8003ece:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8003ed2:	609a      	str	r2, [r3, #8]
 8003ed4:	687b      	ldr	r3, [r7, #4]
 8003ed6:	681b      	ldr	r3, [r3, #0]
 8003ed8:	6899      	ldr	r1, [r3, #8]
 8003eda:	687b      	ldr	r3, [r7, #4]
 8003edc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003ede:	687b      	ldr	r3, [r7, #4]
 8003ee0:	681b      	ldr	r3, [r3, #0]
 8003ee2:	430a      	orrs	r2, r1
 8003ee4:	609a      	str	r2, [r3, #8]
 8003ee6:	687b      	ldr	r3, [r7, #4]
 8003ee8:	681b      	ldr	r3, [r3, #0]
 8003eea:	689a      	ldr	r2, [r3, #8]
 8003eec:	687b      	ldr	r3, [r7, #4]
 8003eee:	681b      	ldr	r3, [r3, #0]
 8003ef0:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8003ef4:	609a      	str	r2, [r3, #8]
 8003ef6:	687b      	ldr	r3, [r7, #4]
 8003ef8:	681b      	ldr	r3, [r3, #0]
 8003efa:	6899      	ldr	r1, [r3, #8]
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003f00:	687b      	ldr	r3, [r7, #4]
 8003f02:	681b      	ldr	r3, [r3, #0]
 8003f04:	430a      	orrs	r2, r1
 8003f06:	609a      	str	r2, [r3, #8]
 8003f08:	e00f      	b.n	8003f2a <ADC_Init+0xfa>
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	681b      	ldr	r3, [r3, #0]
 8003f0e:	689a      	ldr	r2, [r3, #8]
 8003f10:	687b      	ldr	r3, [r7, #4]
 8003f12:	681b      	ldr	r3, [r3, #0]
 8003f14:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8003f18:	609a      	str	r2, [r3, #8]
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	681b      	ldr	r3, [r3, #0]
 8003f1e:	689a      	ldr	r2, [r3, #8]
 8003f20:	687b      	ldr	r3, [r7, #4]
 8003f22:	681b      	ldr	r3, [r3, #0]
 8003f24:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8003f28:	609a      	str	r2, [r3, #8]
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	681b      	ldr	r3, [r3, #0]
 8003f2e:	689a      	ldr	r2, [r3, #8]
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	681b      	ldr	r3, [r3, #0]
 8003f34:	f022 0202 	bic.w	r2, r2, #2
 8003f38:	609a      	str	r2, [r3, #8]
 8003f3a:	687b      	ldr	r3, [r7, #4]
 8003f3c:	681b      	ldr	r3, [r3, #0]
 8003f3e:	6899      	ldr	r1, [r3, #8]
 8003f40:	687b      	ldr	r3, [r7, #4]
 8003f42:	699b      	ldr	r3, [r3, #24]
 8003f44:	005a      	lsls	r2, r3, #1
 8003f46:	687b      	ldr	r3, [r7, #4]
 8003f48:	681b      	ldr	r3, [r3, #0]
 8003f4a:	430a      	orrs	r2, r1
 8003f4c:	609a      	str	r2, [r3, #8]
 8003f4e:	687b      	ldr	r3, [r7, #4]
 8003f50:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003f54:	2b00      	cmp	r3, #0
 8003f56:	d01b      	beq.n	8003f90 <ADC_Init+0x160>
 8003f58:	687b      	ldr	r3, [r7, #4]
 8003f5a:	681b      	ldr	r3, [r3, #0]
 8003f5c:	685a      	ldr	r2, [r3, #4]
 8003f5e:	687b      	ldr	r3, [r7, #4]
 8003f60:	681b      	ldr	r3, [r3, #0]
 8003f62:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003f66:	605a      	str	r2, [r3, #4]
 8003f68:	687b      	ldr	r3, [r7, #4]
 8003f6a:	681b      	ldr	r3, [r3, #0]
 8003f6c:	685a      	ldr	r2, [r3, #4]
 8003f6e:	687b      	ldr	r3, [r7, #4]
 8003f70:	681b      	ldr	r3, [r3, #0]
 8003f72:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8003f76:	605a      	str	r2, [r3, #4]
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	6859      	ldr	r1, [r3, #4]
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f82:	3b01      	subs	r3, #1
 8003f84:	035a      	lsls	r2, r3, #13
 8003f86:	687b      	ldr	r3, [r7, #4]
 8003f88:	681b      	ldr	r3, [r3, #0]
 8003f8a:	430a      	orrs	r2, r1
 8003f8c:	605a      	str	r2, [r3, #4]
 8003f8e:	e007      	b.n	8003fa0 <ADC_Init+0x170>
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	681b      	ldr	r3, [r3, #0]
 8003f94:	685a      	ldr	r2, [r3, #4]
 8003f96:	687b      	ldr	r3, [r7, #4]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003f9e:	605a      	str	r2, [r3, #4]
 8003fa0:	687b      	ldr	r3, [r7, #4]
 8003fa2:	681b      	ldr	r3, [r3, #0]
 8003fa4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	681b      	ldr	r3, [r3, #0]
 8003faa:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8003fae:	62da      	str	r2, [r3, #44]	; 0x2c
 8003fb0:	687b      	ldr	r3, [r7, #4]
 8003fb2:	681b      	ldr	r3, [r3, #0]
 8003fb4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	69db      	ldr	r3, [r3, #28]
 8003fba:	3b01      	subs	r3, #1
 8003fbc:	051a      	lsls	r2, r3, #20
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	430a      	orrs	r2, r1
 8003fc4:	62da      	str	r2, [r3, #44]	; 0x2c
 8003fc6:	687b      	ldr	r3, [r7, #4]
 8003fc8:	681b      	ldr	r3, [r3, #0]
 8003fca:	689a      	ldr	r2, [r3, #8]
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	681b      	ldr	r3, [r3, #0]
 8003fd0:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8003fd4:	609a      	str	r2, [r3, #8]
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	681b      	ldr	r3, [r3, #0]
 8003fda:	6899      	ldr	r1, [r3, #8]
 8003fdc:	687b      	ldr	r3, [r7, #4]
 8003fde:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8003fe2:	025a      	lsls	r2, r3, #9
 8003fe4:	687b      	ldr	r3, [r7, #4]
 8003fe6:	681b      	ldr	r3, [r3, #0]
 8003fe8:	430a      	orrs	r2, r1
 8003fea:	609a      	str	r2, [r3, #8]
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	681b      	ldr	r3, [r3, #0]
 8003ff0:	689a      	ldr	r2, [r3, #8]
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	681b      	ldr	r3, [r3, #0]
 8003ff6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003ffa:	609a      	str	r2, [r3, #8]
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	681b      	ldr	r3, [r3, #0]
 8004000:	6899      	ldr	r1, [r3, #8]
 8004002:	687b      	ldr	r3, [r7, #4]
 8004004:	695b      	ldr	r3, [r3, #20]
 8004006:	029a      	lsls	r2, r3, #10
 8004008:	687b      	ldr	r3, [r7, #4]
 800400a:	681b      	ldr	r3, [r3, #0]
 800400c:	430a      	orrs	r2, r1
 800400e:	609a      	str	r2, [r3, #8]
 8004010:	bf00      	nop
 8004012:	370c      	adds	r7, #12
 8004014:	46bd      	mov	sp, r7
 8004016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800401a:	4770      	bx	lr
 800401c:	40012300 	.word	0x40012300
 8004020:	0f000001 	.word	0x0f000001

08004024 <ADC_DMAConvCplt>:
 8004024:	b580      	push	{r7, lr}
 8004026:	b084      	sub	sp, #16
 8004028:	af00      	add	r7, sp, #0
 800402a:	6078      	str	r0, [r7, #4]
 800402c:	687b      	ldr	r3, [r7, #4]
 800402e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004030:	60fb      	str	r3, [r7, #12]
 8004032:	68fb      	ldr	r3, [r7, #12]
 8004034:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004036:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800403a:	2b00      	cmp	r3, #0
 800403c:	d13c      	bne.n	80040b8 <ADC_DMAConvCplt+0x94>
 800403e:	68fb      	ldr	r3, [r7, #12]
 8004040:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004042:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8004046:	68fb      	ldr	r3, [r7, #12]
 8004048:	641a      	str	r2, [r3, #64]	; 0x40
 800404a:	68fb      	ldr	r3, [r7, #12]
 800404c:	681b      	ldr	r3, [r3, #0]
 800404e:	689b      	ldr	r3, [r3, #8]
 8004050:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8004054:	2b00      	cmp	r3, #0
 8004056:	d12b      	bne.n	80040b0 <ADC_DMAConvCplt+0x8c>
 8004058:	68fb      	ldr	r3, [r7, #12]
 800405a:	699b      	ldr	r3, [r3, #24]
 800405c:	2b00      	cmp	r3, #0
 800405e:	d127      	bne.n	80040b0 <ADC_DMAConvCplt+0x8c>
 8004060:	68fb      	ldr	r3, [r7, #12]
 8004062:	681b      	ldr	r3, [r3, #0]
 8004064:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004066:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 800406a:	2b00      	cmp	r3, #0
 800406c:	d006      	beq.n	800407c <ADC_DMAConvCplt+0x58>
 800406e:	68fb      	ldr	r3, [r7, #12]
 8004070:	681b      	ldr	r3, [r3, #0]
 8004072:	689b      	ldr	r3, [r3, #8]
 8004074:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004078:	2b00      	cmp	r3, #0
 800407a:	d119      	bne.n	80040b0 <ADC_DMAConvCplt+0x8c>
 800407c:	68fb      	ldr	r3, [r7, #12]
 800407e:	681b      	ldr	r3, [r3, #0]
 8004080:	685a      	ldr	r2, [r3, #4]
 8004082:	68fb      	ldr	r3, [r7, #12]
 8004084:	681b      	ldr	r3, [r3, #0]
 8004086:	f022 0220 	bic.w	r2, r2, #32
 800408a:	605a      	str	r2, [r3, #4]
 800408c:	68fb      	ldr	r3, [r7, #12]
 800408e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004090:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8004094:	68fb      	ldr	r3, [r7, #12]
 8004096:	641a      	str	r2, [r3, #64]	; 0x40
 8004098:	68fb      	ldr	r3, [r7, #12]
 800409a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800409c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80040a0:	2b00      	cmp	r3, #0
 80040a2:	d105      	bne.n	80040b0 <ADC_DMAConvCplt+0x8c>
 80040a4:	68fb      	ldr	r3, [r7, #12]
 80040a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80040a8:	f043 0201 	orr.w	r2, r3, #1
 80040ac:	68fb      	ldr	r3, [r7, #12]
 80040ae:	641a      	str	r2, [r3, #64]	; 0x40
 80040b0:	68f8      	ldr	r0, [r7, #12]
 80040b2:	f7fd fa25 	bl	8001500 <HAL_ADC_ConvCpltCallback>
 80040b6:	e00e      	b.n	80040d6 <ADC_DMAConvCplt+0xb2>
 80040b8:	68fb      	ldr	r3, [r7, #12]
 80040ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80040bc:	f003 0310 	and.w	r3, r3, #16
 80040c0:	2b00      	cmp	r3, #0
 80040c2:	d003      	beq.n	80040cc <ADC_DMAConvCplt+0xa8>
 80040c4:	68f8      	ldr	r0, [r7, #12]
 80040c6:	f7ff fd5f 	bl	8003b88 <HAL_ADC_ErrorCallback>
 80040ca:	e004      	b.n	80040d6 <ADC_DMAConvCplt+0xb2>
 80040cc:	68fb      	ldr	r3, [r7, #12]
 80040ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80040d0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80040d2:	6878      	ldr	r0, [r7, #4]
 80040d4:	4798      	blx	r3
 80040d6:	bf00      	nop
 80040d8:	3710      	adds	r7, #16
 80040da:	46bd      	mov	sp, r7
 80040dc:	bd80      	pop	{r7, pc}

080040de <ADC_DMAHalfConvCplt>:
 80040de:	b580      	push	{r7, lr}
 80040e0:	b084      	sub	sp, #16
 80040e2:	af00      	add	r7, sp, #0
 80040e4:	6078      	str	r0, [r7, #4]
 80040e6:	687b      	ldr	r3, [r7, #4]
 80040e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80040ea:	60fb      	str	r3, [r7, #12]
 80040ec:	68f8      	ldr	r0, [r7, #12]
 80040ee:	f7fd f9eb 	bl	80014c8 <HAL_ADC_ConvHalfCpltCallback>
 80040f2:	bf00      	nop
 80040f4:	3710      	adds	r7, #16
 80040f6:	46bd      	mov	sp, r7
 80040f8:	bd80      	pop	{r7, pc}

080040fa <ADC_DMAError>:
 80040fa:	b580      	push	{r7, lr}
 80040fc:	b084      	sub	sp, #16
 80040fe:	af00      	add	r7, sp, #0
 8004100:	6078      	str	r0, [r7, #4]
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004106:	60fb      	str	r3, [r7, #12]
 8004108:	68fb      	ldr	r3, [r7, #12]
 800410a:	2240      	movs	r2, #64	; 0x40
 800410c:	641a      	str	r2, [r3, #64]	; 0x40
 800410e:	68fb      	ldr	r3, [r7, #12]
 8004110:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004112:	f043 0204 	orr.w	r2, r3, #4
 8004116:	68fb      	ldr	r3, [r7, #12]
 8004118:	645a      	str	r2, [r3, #68]	; 0x44
 800411a:	68f8      	ldr	r0, [r7, #12]
 800411c:	f7ff fd34 	bl	8003b88 <HAL_ADC_ErrorCallback>
 8004120:	bf00      	nop
 8004122:	3710      	adds	r7, #16
 8004124:	46bd      	mov	sp, r7
 8004126:	bd80      	pop	{r7, pc}

08004128 <__NVIC_SetPriorityGrouping>:
 8004128:	b480      	push	{r7}
 800412a:	b085      	sub	sp, #20
 800412c:	af00      	add	r7, sp, #0
 800412e:	6078      	str	r0, [r7, #4]
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	f003 0307 	and.w	r3, r3, #7
 8004136:	60fb      	str	r3, [r7, #12]
 8004138:	4b0b      	ldr	r3, [pc, #44]	; (8004168 <__NVIC_SetPriorityGrouping+0x40>)
 800413a:	68db      	ldr	r3, [r3, #12]
 800413c:	60bb      	str	r3, [r7, #8]
 800413e:	68ba      	ldr	r2, [r7, #8]
 8004140:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8004144:	4013      	ands	r3, r2
 8004146:	60bb      	str	r3, [r7, #8]
 8004148:	68fb      	ldr	r3, [r7, #12]
 800414a:	021a      	lsls	r2, r3, #8
 800414c:	68bb      	ldr	r3, [r7, #8]
 800414e:	431a      	orrs	r2, r3
 8004150:	4b06      	ldr	r3, [pc, #24]	; (800416c <__NVIC_SetPriorityGrouping+0x44>)
 8004152:	4313      	orrs	r3, r2
 8004154:	60bb      	str	r3, [r7, #8]
 8004156:	4a04      	ldr	r2, [pc, #16]	; (8004168 <__NVIC_SetPriorityGrouping+0x40>)
 8004158:	68bb      	ldr	r3, [r7, #8]
 800415a:	60d3      	str	r3, [r2, #12]
 800415c:	bf00      	nop
 800415e:	3714      	adds	r7, #20
 8004160:	46bd      	mov	sp, r7
 8004162:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004166:	4770      	bx	lr
 8004168:	e000ed00 	.word	0xe000ed00
 800416c:	05fa0000 	.word	0x05fa0000

08004170 <__NVIC_GetPriorityGrouping>:
 8004170:	b480      	push	{r7}
 8004172:	af00      	add	r7, sp, #0
 8004174:	4b04      	ldr	r3, [pc, #16]	; (8004188 <__NVIC_GetPriorityGrouping+0x18>)
 8004176:	68db      	ldr	r3, [r3, #12]
 8004178:	0a1b      	lsrs	r3, r3, #8
 800417a:	f003 0307 	and.w	r3, r3, #7
 800417e:	4618      	mov	r0, r3
 8004180:	46bd      	mov	sp, r7
 8004182:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004186:	4770      	bx	lr
 8004188:	e000ed00 	.word	0xe000ed00

0800418c <__NVIC_EnableIRQ>:
 800418c:	b480      	push	{r7}
 800418e:	b083      	sub	sp, #12
 8004190:	af00      	add	r7, sp, #0
 8004192:	4603      	mov	r3, r0
 8004194:	71fb      	strb	r3, [r7, #7]
 8004196:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800419a:	2b00      	cmp	r3, #0
 800419c:	db0b      	blt.n	80041b6 <__NVIC_EnableIRQ+0x2a>
 800419e:	79fb      	ldrb	r3, [r7, #7]
 80041a0:	f003 021f 	and.w	r2, r3, #31
 80041a4:	4907      	ldr	r1, [pc, #28]	; (80041c4 <__NVIC_EnableIRQ+0x38>)
 80041a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80041aa:	095b      	lsrs	r3, r3, #5
 80041ac:	2001      	movs	r0, #1
 80041ae:	fa00 f202 	lsl.w	r2, r0, r2
 80041b2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80041b6:	bf00      	nop
 80041b8:	370c      	adds	r7, #12
 80041ba:	46bd      	mov	sp, r7
 80041bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041c0:	4770      	bx	lr
 80041c2:	bf00      	nop
 80041c4:	e000e100 	.word	0xe000e100

080041c8 <__NVIC_DisableIRQ>:
 80041c8:	b480      	push	{r7}
 80041ca:	b083      	sub	sp, #12
 80041cc:	af00      	add	r7, sp, #0
 80041ce:	4603      	mov	r3, r0
 80041d0:	71fb      	strb	r3, [r7, #7]
 80041d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80041d6:	2b00      	cmp	r3, #0
 80041d8:	db12      	blt.n	8004200 <__NVIC_DisableIRQ+0x38>
 80041da:	79fb      	ldrb	r3, [r7, #7]
 80041dc:	f003 021f 	and.w	r2, r3, #31
 80041e0:	490a      	ldr	r1, [pc, #40]	; (800420c <__NVIC_DisableIRQ+0x44>)
 80041e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80041e6:	095b      	lsrs	r3, r3, #5
 80041e8:	2001      	movs	r0, #1
 80041ea:	fa00 f202 	lsl.w	r2, r0, r2
 80041ee:	3320      	adds	r3, #32
 80041f0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80041f4:	f3bf 8f4f 	dsb	sy
 80041f8:	bf00      	nop
 80041fa:	f3bf 8f6f 	isb	sy
 80041fe:	bf00      	nop
 8004200:	bf00      	nop
 8004202:	370c      	adds	r7, #12
 8004204:	46bd      	mov	sp, r7
 8004206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800420a:	4770      	bx	lr
 800420c:	e000e100 	.word	0xe000e100

08004210 <__NVIC_SetPriority>:
 8004210:	b480      	push	{r7}
 8004212:	b083      	sub	sp, #12
 8004214:	af00      	add	r7, sp, #0
 8004216:	4603      	mov	r3, r0
 8004218:	6039      	str	r1, [r7, #0]
 800421a:	71fb      	strb	r3, [r7, #7]
 800421c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004220:	2b00      	cmp	r3, #0
 8004222:	db0a      	blt.n	800423a <__NVIC_SetPriority+0x2a>
 8004224:	683b      	ldr	r3, [r7, #0]
 8004226:	b2da      	uxtb	r2, r3
 8004228:	490c      	ldr	r1, [pc, #48]	; (800425c <__NVIC_SetPriority+0x4c>)
 800422a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800422e:	0112      	lsls	r2, r2, #4
 8004230:	b2d2      	uxtb	r2, r2
 8004232:	440b      	add	r3, r1
 8004234:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8004238:	e00a      	b.n	8004250 <__NVIC_SetPriority+0x40>
 800423a:	683b      	ldr	r3, [r7, #0]
 800423c:	b2da      	uxtb	r2, r3
 800423e:	4908      	ldr	r1, [pc, #32]	; (8004260 <__NVIC_SetPriority+0x50>)
 8004240:	79fb      	ldrb	r3, [r7, #7]
 8004242:	f003 030f 	and.w	r3, r3, #15
 8004246:	3b04      	subs	r3, #4
 8004248:	0112      	lsls	r2, r2, #4
 800424a:	b2d2      	uxtb	r2, r2
 800424c:	440b      	add	r3, r1
 800424e:	761a      	strb	r2, [r3, #24]
 8004250:	bf00      	nop
 8004252:	370c      	adds	r7, #12
 8004254:	46bd      	mov	sp, r7
 8004256:	f85d 7b04 	ldr.w	r7, [sp], #4
 800425a:	4770      	bx	lr
 800425c:	e000e100 	.word	0xe000e100
 8004260:	e000ed00 	.word	0xe000ed00

08004264 <NVIC_EncodePriority>:
 8004264:	b480      	push	{r7}
 8004266:	b089      	sub	sp, #36	; 0x24
 8004268:	af00      	add	r7, sp, #0
 800426a:	60f8      	str	r0, [r7, #12]
 800426c:	60b9      	str	r1, [r7, #8]
 800426e:	607a      	str	r2, [r7, #4]
 8004270:	68fb      	ldr	r3, [r7, #12]
 8004272:	f003 0307 	and.w	r3, r3, #7
 8004276:	61fb      	str	r3, [r7, #28]
 8004278:	69fb      	ldr	r3, [r7, #28]
 800427a:	f1c3 0307 	rsb	r3, r3, #7
 800427e:	2b04      	cmp	r3, #4
 8004280:	bf28      	it	cs
 8004282:	2304      	movcs	r3, #4
 8004284:	61bb      	str	r3, [r7, #24]
 8004286:	69fb      	ldr	r3, [r7, #28]
 8004288:	3304      	adds	r3, #4
 800428a:	2b06      	cmp	r3, #6
 800428c:	d902      	bls.n	8004294 <NVIC_EncodePriority+0x30>
 800428e:	69fb      	ldr	r3, [r7, #28]
 8004290:	3b03      	subs	r3, #3
 8004292:	e000      	b.n	8004296 <NVIC_EncodePriority+0x32>
 8004294:	2300      	movs	r3, #0
 8004296:	617b      	str	r3, [r7, #20]
 8004298:	f04f 32ff 	mov.w	r2, #4294967295
 800429c:	69bb      	ldr	r3, [r7, #24]
 800429e:	fa02 f303 	lsl.w	r3, r2, r3
 80042a2:	43da      	mvns	r2, r3
 80042a4:	68bb      	ldr	r3, [r7, #8]
 80042a6:	401a      	ands	r2, r3
 80042a8:	697b      	ldr	r3, [r7, #20]
 80042aa:	409a      	lsls	r2, r3
 80042ac:	f04f 31ff 	mov.w	r1, #4294967295
 80042b0:	697b      	ldr	r3, [r7, #20]
 80042b2:	fa01 f303 	lsl.w	r3, r1, r3
 80042b6:	43d9      	mvns	r1, r3
 80042b8:	687b      	ldr	r3, [r7, #4]
 80042ba:	400b      	ands	r3, r1
 80042bc:	4313      	orrs	r3, r2
 80042be:	4618      	mov	r0, r3
 80042c0:	3724      	adds	r7, #36	; 0x24
 80042c2:	46bd      	mov	sp, r7
 80042c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042c8:	4770      	bx	lr
	...

080042cc <SysTick_Config>:
 80042cc:	b580      	push	{r7, lr}
 80042ce:	b082      	sub	sp, #8
 80042d0:	af00      	add	r7, sp, #0
 80042d2:	6078      	str	r0, [r7, #4]
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	3b01      	subs	r3, #1
 80042d8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80042dc:	d301      	bcc.n	80042e2 <SysTick_Config+0x16>
 80042de:	2301      	movs	r3, #1
 80042e0:	e00f      	b.n	8004302 <SysTick_Config+0x36>
 80042e2:	4a0a      	ldr	r2, [pc, #40]	; (800430c <SysTick_Config+0x40>)
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	3b01      	subs	r3, #1
 80042e8:	6053      	str	r3, [r2, #4]
 80042ea:	210f      	movs	r1, #15
 80042ec:	f04f 30ff 	mov.w	r0, #4294967295
 80042f0:	f7ff ff8e 	bl	8004210 <__NVIC_SetPriority>
 80042f4:	4b05      	ldr	r3, [pc, #20]	; (800430c <SysTick_Config+0x40>)
 80042f6:	2200      	movs	r2, #0
 80042f8:	609a      	str	r2, [r3, #8]
 80042fa:	4b04      	ldr	r3, [pc, #16]	; (800430c <SysTick_Config+0x40>)
 80042fc:	2207      	movs	r2, #7
 80042fe:	601a      	str	r2, [r3, #0]
 8004300:	2300      	movs	r3, #0
 8004302:	4618      	mov	r0, r3
 8004304:	3708      	adds	r7, #8
 8004306:	46bd      	mov	sp, r7
 8004308:	bd80      	pop	{r7, pc}
 800430a:	bf00      	nop
 800430c:	e000e010 	.word	0xe000e010

08004310 <HAL_NVIC_SetPriorityGrouping>:
 8004310:	b580      	push	{r7, lr}
 8004312:	b082      	sub	sp, #8
 8004314:	af00      	add	r7, sp, #0
 8004316:	6078      	str	r0, [r7, #4]
 8004318:	6878      	ldr	r0, [r7, #4]
 800431a:	f7ff ff05 	bl	8004128 <__NVIC_SetPriorityGrouping>
 800431e:	bf00      	nop
 8004320:	3708      	adds	r7, #8
 8004322:	46bd      	mov	sp, r7
 8004324:	bd80      	pop	{r7, pc}

08004326 <HAL_NVIC_SetPriority>:
 8004326:	b580      	push	{r7, lr}
 8004328:	b086      	sub	sp, #24
 800432a:	af00      	add	r7, sp, #0
 800432c:	4603      	mov	r3, r0
 800432e:	60b9      	str	r1, [r7, #8]
 8004330:	607a      	str	r2, [r7, #4]
 8004332:	73fb      	strb	r3, [r7, #15]
 8004334:	2300      	movs	r3, #0
 8004336:	617b      	str	r3, [r7, #20]
 8004338:	f7ff ff1a 	bl	8004170 <__NVIC_GetPriorityGrouping>
 800433c:	6178      	str	r0, [r7, #20]
 800433e:	687a      	ldr	r2, [r7, #4]
 8004340:	68b9      	ldr	r1, [r7, #8]
 8004342:	6978      	ldr	r0, [r7, #20]
 8004344:	f7ff ff8e 	bl	8004264 <NVIC_EncodePriority>
 8004348:	4602      	mov	r2, r0
 800434a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800434e:	4611      	mov	r1, r2
 8004350:	4618      	mov	r0, r3
 8004352:	f7ff ff5d 	bl	8004210 <__NVIC_SetPriority>
 8004356:	bf00      	nop
 8004358:	3718      	adds	r7, #24
 800435a:	46bd      	mov	sp, r7
 800435c:	bd80      	pop	{r7, pc}

0800435e <HAL_NVIC_EnableIRQ>:
 800435e:	b580      	push	{r7, lr}
 8004360:	b082      	sub	sp, #8
 8004362:	af00      	add	r7, sp, #0
 8004364:	4603      	mov	r3, r0
 8004366:	71fb      	strb	r3, [r7, #7]
 8004368:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800436c:	4618      	mov	r0, r3
 800436e:	f7ff ff0d 	bl	800418c <__NVIC_EnableIRQ>
 8004372:	bf00      	nop
 8004374:	3708      	adds	r7, #8
 8004376:	46bd      	mov	sp, r7
 8004378:	bd80      	pop	{r7, pc}

0800437a <HAL_NVIC_DisableIRQ>:
 800437a:	b580      	push	{r7, lr}
 800437c:	b082      	sub	sp, #8
 800437e:	af00      	add	r7, sp, #0
 8004380:	4603      	mov	r3, r0
 8004382:	71fb      	strb	r3, [r7, #7]
 8004384:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004388:	4618      	mov	r0, r3
 800438a:	f7ff ff1d 	bl	80041c8 <__NVIC_DisableIRQ>
 800438e:	bf00      	nop
 8004390:	3708      	adds	r7, #8
 8004392:	46bd      	mov	sp, r7
 8004394:	bd80      	pop	{r7, pc}

08004396 <HAL_SYSTICK_Config>:
 8004396:	b580      	push	{r7, lr}
 8004398:	b082      	sub	sp, #8
 800439a:	af00      	add	r7, sp, #0
 800439c:	6078      	str	r0, [r7, #4]
 800439e:	6878      	ldr	r0, [r7, #4]
 80043a0:	f7ff ff94 	bl	80042cc <SysTick_Config>
 80043a4:	4603      	mov	r3, r0
 80043a6:	4618      	mov	r0, r3
 80043a8:	3708      	adds	r7, #8
 80043aa:	46bd      	mov	sp, r7
 80043ac:	bd80      	pop	{r7, pc}
	...

080043b0 <HAL_MPU_Disable>:
 80043b0:	b480      	push	{r7}
 80043b2:	af00      	add	r7, sp, #0
 80043b4:	f3bf 8f5f 	dmb	sy
 80043b8:	bf00      	nop
 80043ba:	4b07      	ldr	r3, [pc, #28]	; (80043d8 <HAL_MPU_Disable+0x28>)
 80043bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043be:	4a06      	ldr	r2, [pc, #24]	; (80043d8 <HAL_MPU_Disable+0x28>)
 80043c0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80043c4:	6253      	str	r3, [r2, #36]	; 0x24
 80043c6:	4b05      	ldr	r3, [pc, #20]	; (80043dc <HAL_MPU_Disable+0x2c>)
 80043c8:	2200      	movs	r2, #0
 80043ca:	605a      	str	r2, [r3, #4]
 80043cc:	bf00      	nop
 80043ce:	46bd      	mov	sp, r7
 80043d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043d4:	4770      	bx	lr
 80043d6:	bf00      	nop
 80043d8:	e000ed00 	.word	0xe000ed00
 80043dc:	e000ed90 	.word	0xe000ed90

080043e0 <HAL_MPU_Enable>:
 80043e0:	b480      	push	{r7}
 80043e2:	b083      	sub	sp, #12
 80043e4:	af00      	add	r7, sp, #0
 80043e6:	6078      	str	r0, [r7, #4]
 80043e8:	4a0b      	ldr	r2, [pc, #44]	; (8004418 <HAL_MPU_Enable+0x38>)
 80043ea:	687b      	ldr	r3, [r7, #4]
 80043ec:	f043 0301 	orr.w	r3, r3, #1
 80043f0:	6053      	str	r3, [r2, #4]
 80043f2:	4b0a      	ldr	r3, [pc, #40]	; (800441c <HAL_MPU_Enable+0x3c>)
 80043f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80043f6:	4a09      	ldr	r2, [pc, #36]	; (800441c <HAL_MPU_Enable+0x3c>)
 80043f8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80043fc:	6253      	str	r3, [r2, #36]	; 0x24
 80043fe:	f3bf 8f4f 	dsb	sy
 8004402:	bf00      	nop
 8004404:	f3bf 8f6f 	isb	sy
 8004408:	bf00      	nop
 800440a:	bf00      	nop
 800440c:	370c      	adds	r7, #12
 800440e:	46bd      	mov	sp, r7
 8004410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004414:	4770      	bx	lr
 8004416:	bf00      	nop
 8004418:	e000ed90 	.word	0xe000ed90
 800441c:	e000ed00 	.word	0xe000ed00

08004420 <HAL_MPU_ConfigRegion>:
 8004420:	b480      	push	{r7}
 8004422:	b083      	sub	sp, #12
 8004424:	af00      	add	r7, sp, #0
 8004426:	6078      	str	r0, [r7, #4]
 8004428:	687b      	ldr	r3, [r7, #4]
 800442a:	785a      	ldrb	r2, [r3, #1]
 800442c:	4b1d      	ldr	r3, [pc, #116]	; (80044a4 <HAL_MPU_ConfigRegion+0x84>)
 800442e:	609a      	str	r2, [r3, #8]
 8004430:	687b      	ldr	r3, [r7, #4]
 8004432:	781b      	ldrb	r3, [r3, #0]
 8004434:	2b00      	cmp	r3, #0
 8004436:	d029      	beq.n	800448c <HAL_MPU_ConfigRegion+0x6c>
 8004438:	4a1a      	ldr	r2, [pc, #104]	; (80044a4 <HAL_MPU_ConfigRegion+0x84>)
 800443a:	687b      	ldr	r3, [r7, #4]
 800443c:	685b      	ldr	r3, [r3, #4]
 800443e:	60d3      	str	r3, [r2, #12]
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	7b1b      	ldrb	r3, [r3, #12]
 8004444:	071a      	lsls	r2, r3, #28
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	7adb      	ldrb	r3, [r3, #11]
 800444a:	061b      	lsls	r3, r3, #24
 800444c:	431a      	orrs	r2, r3
 800444e:	687b      	ldr	r3, [r7, #4]
 8004450:	7a9b      	ldrb	r3, [r3, #10]
 8004452:	04db      	lsls	r3, r3, #19
 8004454:	431a      	orrs	r2, r3
 8004456:	687b      	ldr	r3, [r7, #4]
 8004458:	7b5b      	ldrb	r3, [r3, #13]
 800445a:	049b      	lsls	r3, r3, #18
 800445c:	431a      	orrs	r2, r3
 800445e:	687b      	ldr	r3, [r7, #4]
 8004460:	7b9b      	ldrb	r3, [r3, #14]
 8004462:	045b      	lsls	r3, r3, #17
 8004464:	431a      	orrs	r2, r3
 8004466:	687b      	ldr	r3, [r7, #4]
 8004468:	7bdb      	ldrb	r3, [r3, #15]
 800446a:	041b      	lsls	r3, r3, #16
 800446c:	431a      	orrs	r2, r3
 800446e:	687b      	ldr	r3, [r7, #4]
 8004470:	7a5b      	ldrb	r3, [r3, #9]
 8004472:	021b      	lsls	r3, r3, #8
 8004474:	431a      	orrs	r2, r3
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	7a1b      	ldrb	r3, [r3, #8]
 800447a:	005b      	lsls	r3, r3, #1
 800447c:	4313      	orrs	r3, r2
 800447e:	687a      	ldr	r2, [r7, #4]
 8004480:	7812      	ldrb	r2, [r2, #0]
 8004482:	4611      	mov	r1, r2
 8004484:	4a07      	ldr	r2, [pc, #28]	; (80044a4 <HAL_MPU_ConfigRegion+0x84>)
 8004486:	430b      	orrs	r3, r1
 8004488:	6113      	str	r3, [r2, #16]
 800448a:	e005      	b.n	8004498 <HAL_MPU_ConfigRegion+0x78>
 800448c:	4b05      	ldr	r3, [pc, #20]	; (80044a4 <HAL_MPU_ConfigRegion+0x84>)
 800448e:	2200      	movs	r2, #0
 8004490:	60da      	str	r2, [r3, #12]
 8004492:	4b04      	ldr	r3, [pc, #16]	; (80044a4 <HAL_MPU_ConfigRegion+0x84>)
 8004494:	2200      	movs	r2, #0
 8004496:	611a      	str	r2, [r3, #16]
 8004498:	bf00      	nop
 800449a:	370c      	adds	r7, #12
 800449c:	46bd      	mov	sp, r7
 800449e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044a2:	4770      	bx	lr
 80044a4:	e000ed90 	.word	0xe000ed90

080044a8 <HAL_DMA_Init>:
 80044a8:	b580      	push	{r7, lr}
 80044aa:	b086      	sub	sp, #24
 80044ac:	af00      	add	r7, sp, #0
 80044ae:	6078      	str	r0, [r7, #4]
 80044b0:	2300      	movs	r3, #0
 80044b2:	617b      	str	r3, [r7, #20]
 80044b4:	f7ff fa06 	bl	80038c4 <HAL_GetTick>
 80044b8:	6138      	str	r0, [r7, #16]
 80044ba:	687b      	ldr	r3, [r7, #4]
 80044bc:	2b00      	cmp	r3, #0
 80044be:	d101      	bne.n	80044c4 <HAL_DMA_Init+0x1c>
 80044c0:	2301      	movs	r3, #1
 80044c2:	e099      	b.n	80045f8 <HAL_DMA_Init+0x150>
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	2200      	movs	r2, #0
 80044c8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	2202      	movs	r2, #2
 80044d0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	681b      	ldr	r3, [r3, #0]
 80044d8:	681a      	ldr	r2, [r3, #0]
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	f022 0201 	bic.w	r2, r2, #1
 80044e2:	601a      	str	r2, [r3, #0]
 80044e4:	e00f      	b.n	8004506 <HAL_DMA_Init+0x5e>
 80044e6:	f7ff f9ed 	bl	80038c4 <HAL_GetTick>
 80044ea:	4602      	mov	r2, r0
 80044ec:	693b      	ldr	r3, [r7, #16]
 80044ee:	1ad3      	subs	r3, r2, r3
 80044f0:	2b05      	cmp	r3, #5
 80044f2:	d908      	bls.n	8004506 <HAL_DMA_Init+0x5e>
 80044f4:	687b      	ldr	r3, [r7, #4]
 80044f6:	2220      	movs	r2, #32
 80044f8:	655a      	str	r2, [r3, #84]	; 0x54
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	2203      	movs	r2, #3
 80044fe:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004502:	2303      	movs	r3, #3
 8004504:	e078      	b.n	80045f8 <HAL_DMA_Init+0x150>
 8004506:	687b      	ldr	r3, [r7, #4]
 8004508:	681b      	ldr	r3, [r3, #0]
 800450a:	681b      	ldr	r3, [r3, #0]
 800450c:	f003 0301 	and.w	r3, r3, #1
 8004510:	2b00      	cmp	r3, #0
 8004512:	d1e8      	bne.n	80044e6 <HAL_DMA_Init+0x3e>
 8004514:	687b      	ldr	r3, [r7, #4]
 8004516:	681b      	ldr	r3, [r3, #0]
 8004518:	681b      	ldr	r3, [r3, #0]
 800451a:	617b      	str	r3, [r7, #20]
 800451c:	697a      	ldr	r2, [r7, #20]
 800451e:	4b38      	ldr	r3, [pc, #224]	; (8004600 <HAL_DMA_Init+0x158>)
 8004520:	4013      	ands	r3, r2
 8004522:	617b      	str	r3, [r7, #20]
 8004524:	687b      	ldr	r3, [r7, #4]
 8004526:	685a      	ldr	r2, [r3, #4]
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	689b      	ldr	r3, [r3, #8]
 800452c:	431a      	orrs	r2, r3
 800452e:	687b      	ldr	r3, [r7, #4]
 8004530:	68db      	ldr	r3, [r3, #12]
 8004532:	431a      	orrs	r2, r3
 8004534:	687b      	ldr	r3, [r7, #4]
 8004536:	691b      	ldr	r3, [r3, #16]
 8004538:	431a      	orrs	r2, r3
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	695b      	ldr	r3, [r3, #20]
 800453e:	431a      	orrs	r2, r3
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	699b      	ldr	r3, [r3, #24]
 8004544:	431a      	orrs	r2, r3
 8004546:	687b      	ldr	r3, [r7, #4]
 8004548:	69db      	ldr	r3, [r3, #28]
 800454a:	431a      	orrs	r2, r3
 800454c:	687b      	ldr	r3, [r7, #4]
 800454e:	6a1b      	ldr	r3, [r3, #32]
 8004550:	4313      	orrs	r3, r2
 8004552:	697a      	ldr	r2, [r7, #20]
 8004554:	4313      	orrs	r3, r2
 8004556:	617b      	str	r3, [r7, #20]
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800455c:	2b04      	cmp	r3, #4
 800455e:	d107      	bne.n	8004570 <HAL_DMA_Init+0xc8>
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004568:	4313      	orrs	r3, r2
 800456a:	697a      	ldr	r2, [r7, #20]
 800456c:	4313      	orrs	r3, r2
 800456e:	617b      	str	r3, [r7, #20]
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	697a      	ldr	r2, [r7, #20]
 8004576:	601a      	str	r2, [r3, #0]
 8004578:	687b      	ldr	r3, [r7, #4]
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	695b      	ldr	r3, [r3, #20]
 800457e:	617b      	str	r3, [r7, #20]
 8004580:	697b      	ldr	r3, [r7, #20]
 8004582:	f023 0307 	bic.w	r3, r3, #7
 8004586:	617b      	str	r3, [r7, #20]
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800458c:	697a      	ldr	r2, [r7, #20]
 800458e:	4313      	orrs	r3, r2
 8004590:	617b      	str	r3, [r7, #20]
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004596:	2b04      	cmp	r3, #4
 8004598:	d117      	bne.n	80045ca <HAL_DMA_Init+0x122>
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800459e:	697a      	ldr	r2, [r7, #20]
 80045a0:	4313      	orrs	r3, r2
 80045a2:	617b      	str	r3, [r7, #20]
 80045a4:	687b      	ldr	r3, [r7, #4]
 80045a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80045a8:	2b00      	cmp	r3, #0
 80045aa:	d00e      	beq.n	80045ca <HAL_DMA_Init+0x122>
 80045ac:	6878      	ldr	r0, [r7, #4]
 80045ae:	f000 fad5 	bl	8004b5c <DMA_CheckFifoParam>
 80045b2:	4603      	mov	r3, r0
 80045b4:	2b00      	cmp	r3, #0
 80045b6:	d008      	beq.n	80045ca <HAL_DMA_Init+0x122>
 80045b8:	687b      	ldr	r3, [r7, #4]
 80045ba:	2240      	movs	r2, #64	; 0x40
 80045bc:	655a      	str	r2, [r3, #84]	; 0x54
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	2201      	movs	r2, #1
 80045c2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80045c6:	2301      	movs	r3, #1
 80045c8:	e016      	b.n	80045f8 <HAL_DMA_Init+0x150>
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	697a      	ldr	r2, [r7, #20]
 80045d0:	615a      	str	r2, [r3, #20]
 80045d2:	6878      	ldr	r0, [r7, #4]
 80045d4:	f000 fa8c 	bl	8004af0 <DMA_CalcBaseAndBitshift>
 80045d8:	4603      	mov	r3, r0
 80045da:	60fb      	str	r3, [r7, #12]
 80045dc:	687b      	ldr	r3, [r7, #4]
 80045de:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80045e0:	223f      	movs	r2, #63	; 0x3f
 80045e2:	409a      	lsls	r2, r3
 80045e4:	68fb      	ldr	r3, [r7, #12]
 80045e6:	609a      	str	r2, [r3, #8]
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	2200      	movs	r2, #0
 80045ec:	655a      	str	r2, [r3, #84]	; 0x54
 80045ee:	687b      	ldr	r3, [r7, #4]
 80045f0:	2201      	movs	r2, #1
 80045f2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80045f6:	2300      	movs	r3, #0
 80045f8:	4618      	mov	r0, r3
 80045fa:	3718      	adds	r7, #24
 80045fc:	46bd      	mov	sp, r7
 80045fe:	bd80      	pop	{r7, pc}
 8004600:	f010803f 	.word	0xf010803f

08004604 <HAL_DMA_DeInit>:
 8004604:	b580      	push	{r7, lr}
 8004606:	b084      	sub	sp, #16
 8004608:	af00      	add	r7, sp, #0
 800460a:	6078      	str	r0, [r7, #4]
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	2b00      	cmp	r3, #0
 8004610:	d101      	bne.n	8004616 <HAL_DMA_DeInit+0x12>
 8004612:	2301      	movs	r3, #1
 8004614:	e050      	b.n	80046b8 <HAL_DMA_DeInit+0xb4>
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800461c:	b2db      	uxtb	r3, r3
 800461e:	2b02      	cmp	r3, #2
 8004620:	d101      	bne.n	8004626 <HAL_DMA_DeInit+0x22>
 8004622:	2302      	movs	r3, #2
 8004624:	e048      	b.n	80046b8 <HAL_DMA_DeInit+0xb4>
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	681b      	ldr	r3, [r3, #0]
 800462a:	681a      	ldr	r2, [r3, #0]
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	f022 0201 	bic.w	r2, r2, #1
 8004634:	601a      	str	r2, [r3, #0]
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	2200      	movs	r2, #0
 800463c:	601a      	str	r2, [r3, #0]
 800463e:	687b      	ldr	r3, [r7, #4]
 8004640:	681b      	ldr	r3, [r3, #0]
 8004642:	2200      	movs	r2, #0
 8004644:	605a      	str	r2, [r3, #4]
 8004646:	687b      	ldr	r3, [r7, #4]
 8004648:	681b      	ldr	r3, [r3, #0]
 800464a:	2200      	movs	r2, #0
 800464c:	609a      	str	r2, [r3, #8]
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	681b      	ldr	r3, [r3, #0]
 8004652:	2200      	movs	r2, #0
 8004654:	60da      	str	r2, [r3, #12]
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	2200      	movs	r2, #0
 800465c:	611a      	str	r2, [r3, #16]
 800465e:	687b      	ldr	r3, [r7, #4]
 8004660:	681b      	ldr	r3, [r3, #0]
 8004662:	2221      	movs	r2, #33	; 0x21
 8004664:	615a      	str	r2, [r3, #20]
 8004666:	6878      	ldr	r0, [r7, #4]
 8004668:	f000 fa42 	bl	8004af0 <DMA_CalcBaseAndBitshift>
 800466c:	4603      	mov	r3, r0
 800466e:	60fb      	str	r3, [r7, #12]
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004674:	223f      	movs	r2, #63	; 0x3f
 8004676:	409a      	lsls	r2, r3
 8004678:	68fb      	ldr	r3, [r7, #12]
 800467a:	609a      	str	r2, [r3, #8]
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	2200      	movs	r2, #0
 8004680:	63da      	str	r2, [r3, #60]	; 0x3c
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	2200      	movs	r2, #0
 8004686:	641a      	str	r2, [r3, #64]	; 0x40
 8004688:	687b      	ldr	r3, [r7, #4]
 800468a:	2200      	movs	r2, #0
 800468c:	645a      	str	r2, [r3, #68]	; 0x44
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	2200      	movs	r2, #0
 8004692:	649a      	str	r2, [r3, #72]	; 0x48
 8004694:	687b      	ldr	r3, [r7, #4]
 8004696:	2200      	movs	r2, #0
 8004698:	64da      	str	r2, [r3, #76]	; 0x4c
 800469a:	687b      	ldr	r3, [r7, #4]
 800469c:	2200      	movs	r2, #0
 800469e:	651a      	str	r2, [r3, #80]	; 0x50
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	2200      	movs	r2, #0
 80046a4:	655a      	str	r2, [r3, #84]	; 0x54
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	2200      	movs	r2, #0
 80046aa:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	2200      	movs	r2, #0
 80046b2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80046b6:	2300      	movs	r3, #0
 80046b8:	4618      	mov	r0, r3
 80046ba:	3710      	adds	r7, #16
 80046bc:	46bd      	mov	sp, r7
 80046be:	bd80      	pop	{r7, pc}

080046c0 <HAL_DMA_Start_IT>:
 80046c0:	b580      	push	{r7, lr}
 80046c2:	b086      	sub	sp, #24
 80046c4:	af00      	add	r7, sp, #0
 80046c6:	60f8      	str	r0, [r7, #12]
 80046c8:	60b9      	str	r1, [r7, #8]
 80046ca:	607a      	str	r2, [r7, #4]
 80046cc:	603b      	str	r3, [r7, #0]
 80046ce:	2300      	movs	r3, #0
 80046d0:	75fb      	strb	r3, [r7, #23]
 80046d2:	68fb      	ldr	r3, [r7, #12]
 80046d4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80046d6:	613b      	str	r3, [r7, #16]
 80046d8:	68fb      	ldr	r3, [r7, #12]
 80046da:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80046de:	2b01      	cmp	r3, #1
 80046e0:	d101      	bne.n	80046e6 <HAL_DMA_Start_IT+0x26>
 80046e2:	2302      	movs	r3, #2
 80046e4:	e048      	b.n	8004778 <HAL_DMA_Start_IT+0xb8>
 80046e6:	68fb      	ldr	r3, [r7, #12]
 80046e8:	2201      	movs	r2, #1
 80046ea:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80046ee:	68fb      	ldr	r3, [r7, #12]
 80046f0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80046f4:	b2db      	uxtb	r3, r3
 80046f6:	2b01      	cmp	r3, #1
 80046f8:	d137      	bne.n	800476a <HAL_DMA_Start_IT+0xaa>
 80046fa:	68fb      	ldr	r3, [r7, #12]
 80046fc:	2202      	movs	r2, #2
 80046fe:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004702:	68fb      	ldr	r3, [r7, #12]
 8004704:	2200      	movs	r2, #0
 8004706:	655a      	str	r2, [r3, #84]	; 0x54
 8004708:	683b      	ldr	r3, [r7, #0]
 800470a:	687a      	ldr	r2, [r7, #4]
 800470c:	68b9      	ldr	r1, [r7, #8]
 800470e:	68f8      	ldr	r0, [r7, #12]
 8004710:	f000 f9c0 	bl	8004a94 <DMA_SetConfig>
 8004714:	68fb      	ldr	r3, [r7, #12]
 8004716:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004718:	223f      	movs	r2, #63	; 0x3f
 800471a:	409a      	lsls	r2, r3
 800471c:	693b      	ldr	r3, [r7, #16]
 800471e:	609a      	str	r2, [r3, #8]
 8004720:	68fb      	ldr	r3, [r7, #12]
 8004722:	681b      	ldr	r3, [r3, #0]
 8004724:	681a      	ldr	r2, [r3, #0]
 8004726:	68fb      	ldr	r3, [r7, #12]
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	f042 0216 	orr.w	r2, r2, #22
 800472e:	601a      	str	r2, [r3, #0]
 8004730:	68fb      	ldr	r3, [r7, #12]
 8004732:	681b      	ldr	r3, [r3, #0]
 8004734:	695a      	ldr	r2, [r3, #20]
 8004736:	68fb      	ldr	r3, [r7, #12]
 8004738:	681b      	ldr	r3, [r3, #0]
 800473a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800473e:	615a      	str	r2, [r3, #20]
 8004740:	68fb      	ldr	r3, [r7, #12]
 8004742:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004744:	2b00      	cmp	r3, #0
 8004746:	d007      	beq.n	8004758 <HAL_DMA_Start_IT+0x98>
 8004748:	68fb      	ldr	r3, [r7, #12]
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	681a      	ldr	r2, [r3, #0]
 800474e:	68fb      	ldr	r3, [r7, #12]
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	f042 0208 	orr.w	r2, r2, #8
 8004756:	601a      	str	r2, [r3, #0]
 8004758:	68fb      	ldr	r3, [r7, #12]
 800475a:	681b      	ldr	r3, [r3, #0]
 800475c:	681a      	ldr	r2, [r3, #0]
 800475e:	68fb      	ldr	r3, [r7, #12]
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	f042 0201 	orr.w	r2, r2, #1
 8004766:	601a      	str	r2, [r3, #0]
 8004768:	e005      	b.n	8004776 <HAL_DMA_Start_IT+0xb6>
 800476a:	68fb      	ldr	r3, [r7, #12]
 800476c:	2200      	movs	r2, #0
 800476e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004772:	2302      	movs	r3, #2
 8004774:	75fb      	strb	r3, [r7, #23]
 8004776:	7dfb      	ldrb	r3, [r7, #23]
 8004778:	4618      	mov	r0, r3
 800477a:	3718      	adds	r7, #24
 800477c:	46bd      	mov	sp, r7
 800477e:	bd80      	pop	{r7, pc}

08004780 <HAL_DMA_IRQHandler>:
 8004780:	b580      	push	{r7, lr}
 8004782:	b086      	sub	sp, #24
 8004784:	af00      	add	r7, sp, #0
 8004786:	6078      	str	r0, [r7, #4]
 8004788:	2300      	movs	r3, #0
 800478a:	60bb      	str	r3, [r7, #8]
 800478c:	4b92      	ldr	r3, [pc, #584]	; (80049d8 <HAL_DMA_IRQHandler+0x258>)
 800478e:	681b      	ldr	r3, [r3, #0]
 8004790:	4a92      	ldr	r2, [pc, #584]	; (80049dc <HAL_DMA_IRQHandler+0x25c>)
 8004792:	fba2 2303 	umull	r2, r3, r2, r3
 8004796:	0a9b      	lsrs	r3, r3, #10
 8004798:	617b      	str	r3, [r7, #20]
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800479e:	613b      	str	r3, [r7, #16]
 80047a0:	693b      	ldr	r3, [r7, #16]
 80047a2:	681b      	ldr	r3, [r3, #0]
 80047a4:	60fb      	str	r3, [r7, #12]
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80047aa:	2208      	movs	r2, #8
 80047ac:	409a      	lsls	r2, r3
 80047ae:	68fb      	ldr	r3, [r7, #12]
 80047b0:	4013      	ands	r3, r2
 80047b2:	2b00      	cmp	r3, #0
 80047b4:	d01a      	beq.n	80047ec <HAL_DMA_IRQHandler+0x6c>
 80047b6:	687b      	ldr	r3, [r7, #4]
 80047b8:	681b      	ldr	r3, [r3, #0]
 80047ba:	681b      	ldr	r3, [r3, #0]
 80047bc:	f003 0304 	and.w	r3, r3, #4
 80047c0:	2b00      	cmp	r3, #0
 80047c2:	d013      	beq.n	80047ec <HAL_DMA_IRQHandler+0x6c>
 80047c4:	687b      	ldr	r3, [r7, #4]
 80047c6:	681b      	ldr	r3, [r3, #0]
 80047c8:	681a      	ldr	r2, [r3, #0]
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	f022 0204 	bic.w	r2, r2, #4
 80047d2:	601a      	str	r2, [r3, #0]
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80047d8:	2208      	movs	r2, #8
 80047da:	409a      	lsls	r2, r3
 80047dc:	693b      	ldr	r3, [r7, #16]
 80047de:	609a      	str	r2, [r3, #8]
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80047e4:	f043 0201 	orr.w	r2, r3, #1
 80047e8:	687b      	ldr	r3, [r7, #4]
 80047ea:	655a      	str	r2, [r3, #84]	; 0x54
 80047ec:	687b      	ldr	r3, [r7, #4]
 80047ee:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80047f0:	2201      	movs	r2, #1
 80047f2:	409a      	lsls	r2, r3
 80047f4:	68fb      	ldr	r3, [r7, #12]
 80047f6:	4013      	ands	r3, r2
 80047f8:	2b00      	cmp	r3, #0
 80047fa:	d012      	beq.n	8004822 <HAL_DMA_IRQHandler+0xa2>
 80047fc:	687b      	ldr	r3, [r7, #4]
 80047fe:	681b      	ldr	r3, [r3, #0]
 8004800:	695b      	ldr	r3, [r3, #20]
 8004802:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004806:	2b00      	cmp	r3, #0
 8004808:	d00b      	beq.n	8004822 <HAL_DMA_IRQHandler+0xa2>
 800480a:	687b      	ldr	r3, [r7, #4]
 800480c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800480e:	2201      	movs	r2, #1
 8004810:	409a      	lsls	r2, r3
 8004812:	693b      	ldr	r3, [r7, #16]
 8004814:	609a      	str	r2, [r3, #8]
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800481a:	f043 0202 	orr.w	r2, r3, #2
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	655a      	str	r2, [r3, #84]	; 0x54
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004826:	2204      	movs	r2, #4
 8004828:	409a      	lsls	r2, r3
 800482a:	68fb      	ldr	r3, [r7, #12]
 800482c:	4013      	ands	r3, r2
 800482e:	2b00      	cmp	r3, #0
 8004830:	d012      	beq.n	8004858 <HAL_DMA_IRQHandler+0xd8>
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	681b      	ldr	r3, [r3, #0]
 8004836:	681b      	ldr	r3, [r3, #0]
 8004838:	f003 0302 	and.w	r3, r3, #2
 800483c:	2b00      	cmp	r3, #0
 800483e:	d00b      	beq.n	8004858 <HAL_DMA_IRQHandler+0xd8>
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004844:	2204      	movs	r2, #4
 8004846:	409a      	lsls	r2, r3
 8004848:	693b      	ldr	r3, [r7, #16]
 800484a:	609a      	str	r2, [r3, #8]
 800484c:	687b      	ldr	r3, [r7, #4]
 800484e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004850:	f043 0204 	orr.w	r2, r3, #4
 8004854:	687b      	ldr	r3, [r7, #4]
 8004856:	655a      	str	r2, [r3, #84]	; 0x54
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800485c:	2210      	movs	r2, #16
 800485e:	409a      	lsls	r2, r3
 8004860:	68fb      	ldr	r3, [r7, #12]
 8004862:	4013      	ands	r3, r2
 8004864:	2b00      	cmp	r3, #0
 8004866:	d043      	beq.n	80048f0 <HAL_DMA_IRQHandler+0x170>
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	681b      	ldr	r3, [r3, #0]
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	f003 0308 	and.w	r3, r3, #8
 8004872:	2b00      	cmp	r3, #0
 8004874:	d03c      	beq.n	80048f0 <HAL_DMA_IRQHandler+0x170>
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800487a:	2210      	movs	r2, #16
 800487c:	409a      	lsls	r2, r3
 800487e:	693b      	ldr	r3, [r7, #16]
 8004880:	609a      	str	r2, [r3, #8]
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	681b      	ldr	r3, [r3, #0]
 8004886:	681b      	ldr	r3, [r3, #0]
 8004888:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800488c:	2b00      	cmp	r3, #0
 800488e:	d018      	beq.n	80048c2 <HAL_DMA_IRQHandler+0x142>
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	681b      	ldr	r3, [r3, #0]
 8004894:	681b      	ldr	r3, [r3, #0]
 8004896:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800489a:	2b00      	cmp	r3, #0
 800489c:	d108      	bne.n	80048b0 <HAL_DMA_IRQHandler+0x130>
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80048a2:	2b00      	cmp	r3, #0
 80048a4:	d024      	beq.n	80048f0 <HAL_DMA_IRQHandler+0x170>
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80048aa:	6878      	ldr	r0, [r7, #4]
 80048ac:	4798      	blx	r3
 80048ae:	e01f      	b.n	80048f0 <HAL_DMA_IRQHandler+0x170>
 80048b0:	687b      	ldr	r3, [r7, #4]
 80048b2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80048b4:	2b00      	cmp	r3, #0
 80048b6:	d01b      	beq.n	80048f0 <HAL_DMA_IRQHandler+0x170>
 80048b8:	687b      	ldr	r3, [r7, #4]
 80048ba:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80048bc:	6878      	ldr	r0, [r7, #4]
 80048be:	4798      	blx	r3
 80048c0:	e016      	b.n	80048f0 <HAL_DMA_IRQHandler+0x170>
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	681b      	ldr	r3, [r3, #0]
 80048c8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80048cc:	2b00      	cmp	r3, #0
 80048ce:	d107      	bne.n	80048e0 <HAL_DMA_IRQHandler+0x160>
 80048d0:	687b      	ldr	r3, [r7, #4]
 80048d2:	681b      	ldr	r3, [r3, #0]
 80048d4:	681a      	ldr	r2, [r3, #0]
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	f022 0208 	bic.w	r2, r2, #8
 80048de:	601a      	str	r2, [r3, #0]
 80048e0:	687b      	ldr	r3, [r7, #4]
 80048e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80048e4:	2b00      	cmp	r3, #0
 80048e6:	d003      	beq.n	80048f0 <HAL_DMA_IRQHandler+0x170>
 80048e8:	687b      	ldr	r3, [r7, #4]
 80048ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80048ec:	6878      	ldr	r0, [r7, #4]
 80048ee:	4798      	blx	r3
 80048f0:	687b      	ldr	r3, [r7, #4]
 80048f2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80048f4:	2220      	movs	r2, #32
 80048f6:	409a      	lsls	r2, r3
 80048f8:	68fb      	ldr	r3, [r7, #12]
 80048fa:	4013      	ands	r3, r2
 80048fc:	2b00      	cmp	r3, #0
 80048fe:	f000 808e 	beq.w	8004a1e <HAL_DMA_IRQHandler+0x29e>
 8004902:	687b      	ldr	r3, [r7, #4]
 8004904:	681b      	ldr	r3, [r3, #0]
 8004906:	681b      	ldr	r3, [r3, #0]
 8004908:	f003 0310 	and.w	r3, r3, #16
 800490c:	2b00      	cmp	r3, #0
 800490e:	f000 8086 	beq.w	8004a1e <HAL_DMA_IRQHandler+0x29e>
 8004912:	687b      	ldr	r3, [r7, #4]
 8004914:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004916:	2220      	movs	r2, #32
 8004918:	409a      	lsls	r2, r3
 800491a:	693b      	ldr	r3, [r7, #16]
 800491c:	609a      	str	r2, [r3, #8]
 800491e:	687b      	ldr	r3, [r7, #4]
 8004920:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004924:	b2db      	uxtb	r3, r3
 8004926:	2b05      	cmp	r3, #5
 8004928:	d136      	bne.n	8004998 <HAL_DMA_IRQHandler+0x218>
 800492a:	687b      	ldr	r3, [r7, #4]
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	681a      	ldr	r2, [r3, #0]
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	681b      	ldr	r3, [r3, #0]
 8004934:	f022 0216 	bic.w	r2, r2, #22
 8004938:	601a      	str	r2, [r3, #0]
 800493a:	687b      	ldr	r3, [r7, #4]
 800493c:	681b      	ldr	r3, [r3, #0]
 800493e:	695a      	ldr	r2, [r3, #20]
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	681b      	ldr	r3, [r3, #0]
 8004944:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004948:	615a      	str	r2, [r3, #20]
 800494a:	687b      	ldr	r3, [r7, #4]
 800494c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800494e:	2b00      	cmp	r3, #0
 8004950:	d103      	bne.n	800495a <HAL_DMA_IRQHandler+0x1da>
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004956:	2b00      	cmp	r3, #0
 8004958:	d007      	beq.n	800496a <HAL_DMA_IRQHandler+0x1ea>
 800495a:	687b      	ldr	r3, [r7, #4]
 800495c:	681b      	ldr	r3, [r3, #0]
 800495e:	681a      	ldr	r2, [r3, #0]
 8004960:	687b      	ldr	r3, [r7, #4]
 8004962:	681b      	ldr	r3, [r3, #0]
 8004964:	f022 0208 	bic.w	r2, r2, #8
 8004968:	601a      	str	r2, [r3, #0]
 800496a:	687b      	ldr	r3, [r7, #4]
 800496c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800496e:	223f      	movs	r2, #63	; 0x3f
 8004970:	409a      	lsls	r2, r3
 8004972:	693b      	ldr	r3, [r7, #16]
 8004974:	609a      	str	r2, [r3, #8]
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	2200      	movs	r2, #0
 800497a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800497e:	687b      	ldr	r3, [r7, #4]
 8004980:	2201      	movs	r2, #1
 8004982:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004986:	687b      	ldr	r3, [r7, #4]
 8004988:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800498a:	2b00      	cmp	r3, #0
 800498c:	d07d      	beq.n	8004a8a <HAL_DMA_IRQHandler+0x30a>
 800498e:	687b      	ldr	r3, [r7, #4]
 8004990:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004992:	6878      	ldr	r0, [r7, #4]
 8004994:	4798      	blx	r3
 8004996:	e078      	b.n	8004a8a <HAL_DMA_IRQHandler+0x30a>
 8004998:	687b      	ldr	r3, [r7, #4]
 800499a:	681b      	ldr	r3, [r3, #0]
 800499c:	681b      	ldr	r3, [r3, #0]
 800499e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80049a2:	2b00      	cmp	r3, #0
 80049a4:	d01c      	beq.n	80049e0 <HAL_DMA_IRQHandler+0x260>
 80049a6:	687b      	ldr	r3, [r7, #4]
 80049a8:	681b      	ldr	r3, [r3, #0]
 80049aa:	681b      	ldr	r3, [r3, #0]
 80049ac:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80049b0:	2b00      	cmp	r3, #0
 80049b2:	d108      	bne.n	80049c6 <HAL_DMA_IRQHandler+0x246>
 80049b4:	687b      	ldr	r3, [r7, #4]
 80049b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80049b8:	2b00      	cmp	r3, #0
 80049ba:	d030      	beq.n	8004a1e <HAL_DMA_IRQHandler+0x29e>
 80049bc:	687b      	ldr	r3, [r7, #4]
 80049be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80049c0:	6878      	ldr	r0, [r7, #4]
 80049c2:	4798      	blx	r3
 80049c4:	e02b      	b.n	8004a1e <HAL_DMA_IRQHandler+0x29e>
 80049c6:	687b      	ldr	r3, [r7, #4]
 80049c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80049ca:	2b00      	cmp	r3, #0
 80049cc:	d027      	beq.n	8004a1e <HAL_DMA_IRQHandler+0x29e>
 80049ce:	687b      	ldr	r3, [r7, #4]
 80049d0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80049d2:	6878      	ldr	r0, [r7, #4]
 80049d4:	4798      	blx	r3
 80049d6:	e022      	b.n	8004a1e <HAL_DMA_IRQHandler+0x29e>
 80049d8:	200000c0 	.word	0x200000c0
 80049dc:	1b4e81b5 	.word	0x1b4e81b5
 80049e0:	687b      	ldr	r3, [r7, #4]
 80049e2:	681b      	ldr	r3, [r3, #0]
 80049e4:	681b      	ldr	r3, [r3, #0]
 80049e6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80049ea:	2b00      	cmp	r3, #0
 80049ec:	d10f      	bne.n	8004a0e <HAL_DMA_IRQHandler+0x28e>
 80049ee:	687b      	ldr	r3, [r7, #4]
 80049f0:	681b      	ldr	r3, [r3, #0]
 80049f2:	681a      	ldr	r2, [r3, #0]
 80049f4:	687b      	ldr	r3, [r7, #4]
 80049f6:	681b      	ldr	r3, [r3, #0]
 80049f8:	f022 0210 	bic.w	r2, r2, #16
 80049fc:	601a      	str	r2, [r3, #0]
 80049fe:	687b      	ldr	r3, [r7, #4]
 8004a00:	2200      	movs	r2, #0
 8004a02:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	2201      	movs	r2, #1
 8004a0a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004a0e:	687b      	ldr	r3, [r7, #4]
 8004a10:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004a12:	2b00      	cmp	r3, #0
 8004a14:	d003      	beq.n	8004a1e <HAL_DMA_IRQHandler+0x29e>
 8004a16:	687b      	ldr	r3, [r7, #4]
 8004a18:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004a1a:	6878      	ldr	r0, [r7, #4]
 8004a1c:	4798      	blx	r3
 8004a1e:	687b      	ldr	r3, [r7, #4]
 8004a20:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004a22:	2b00      	cmp	r3, #0
 8004a24:	d032      	beq.n	8004a8c <HAL_DMA_IRQHandler+0x30c>
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004a2a:	f003 0301 	and.w	r3, r3, #1
 8004a2e:	2b00      	cmp	r3, #0
 8004a30:	d022      	beq.n	8004a78 <HAL_DMA_IRQHandler+0x2f8>
 8004a32:	687b      	ldr	r3, [r7, #4]
 8004a34:	2205      	movs	r2, #5
 8004a36:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004a3a:	687b      	ldr	r3, [r7, #4]
 8004a3c:	681b      	ldr	r3, [r3, #0]
 8004a3e:	681a      	ldr	r2, [r3, #0]
 8004a40:	687b      	ldr	r3, [r7, #4]
 8004a42:	681b      	ldr	r3, [r3, #0]
 8004a44:	f022 0201 	bic.w	r2, r2, #1
 8004a48:	601a      	str	r2, [r3, #0]
 8004a4a:	68bb      	ldr	r3, [r7, #8]
 8004a4c:	3301      	adds	r3, #1
 8004a4e:	60bb      	str	r3, [r7, #8]
 8004a50:	697a      	ldr	r2, [r7, #20]
 8004a52:	429a      	cmp	r2, r3
 8004a54:	d307      	bcc.n	8004a66 <HAL_DMA_IRQHandler+0x2e6>
 8004a56:	687b      	ldr	r3, [r7, #4]
 8004a58:	681b      	ldr	r3, [r3, #0]
 8004a5a:	681b      	ldr	r3, [r3, #0]
 8004a5c:	f003 0301 	and.w	r3, r3, #1
 8004a60:	2b00      	cmp	r3, #0
 8004a62:	d1f2      	bne.n	8004a4a <HAL_DMA_IRQHandler+0x2ca>
 8004a64:	e000      	b.n	8004a68 <HAL_DMA_IRQHandler+0x2e8>
 8004a66:	bf00      	nop
 8004a68:	687b      	ldr	r3, [r7, #4]
 8004a6a:	2200      	movs	r2, #0
 8004a6c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004a70:	687b      	ldr	r3, [r7, #4]
 8004a72:	2201      	movs	r2, #1
 8004a74:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004a7c:	2b00      	cmp	r3, #0
 8004a7e:	d005      	beq.n	8004a8c <HAL_DMA_IRQHandler+0x30c>
 8004a80:	687b      	ldr	r3, [r7, #4]
 8004a82:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004a84:	6878      	ldr	r0, [r7, #4]
 8004a86:	4798      	blx	r3
 8004a88:	e000      	b.n	8004a8c <HAL_DMA_IRQHandler+0x30c>
 8004a8a:	bf00      	nop
 8004a8c:	3718      	adds	r7, #24
 8004a8e:	46bd      	mov	sp, r7
 8004a90:	bd80      	pop	{r7, pc}
 8004a92:	bf00      	nop

08004a94 <DMA_SetConfig>:
 8004a94:	b480      	push	{r7}
 8004a96:	b085      	sub	sp, #20
 8004a98:	af00      	add	r7, sp, #0
 8004a9a:	60f8      	str	r0, [r7, #12]
 8004a9c:	60b9      	str	r1, [r7, #8]
 8004a9e:	607a      	str	r2, [r7, #4]
 8004aa0:	603b      	str	r3, [r7, #0]
 8004aa2:	68fb      	ldr	r3, [r7, #12]
 8004aa4:	681b      	ldr	r3, [r3, #0]
 8004aa6:	681a      	ldr	r2, [r3, #0]
 8004aa8:	68fb      	ldr	r3, [r7, #12]
 8004aaa:	681b      	ldr	r3, [r3, #0]
 8004aac:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8004ab0:	601a      	str	r2, [r3, #0]
 8004ab2:	68fb      	ldr	r3, [r7, #12]
 8004ab4:	681b      	ldr	r3, [r3, #0]
 8004ab6:	683a      	ldr	r2, [r7, #0]
 8004ab8:	605a      	str	r2, [r3, #4]
 8004aba:	68fb      	ldr	r3, [r7, #12]
 8004abc:	689b      	ldr	r3, [r3, #8]
 8004abe:	2b40      	cmp	r3, #64	; 0x40
 8004ac0:	d108      	bne.n	8004ad4 <DMA_SetConfig+0x40>
 8004ac2:	68fb      	ldr	r3, [r7, #12]
 8004ac4:	681b      	ldr	r3, [r3, #0]
 8004ac6:	687a      	ldr	r2, [r7, #4]
 8004ac8:	609a      	str	r2, [r3, #8]
 8004aca:	68fb      	ldr	r3, [r7, #12]
 8004acc:	681b      	ldr	r3, [r3, #0]
 8004ace:	68ba      	ldr	r2, [r7, #8]
 8004ad0:	60da      	str	r2, [r3, #12]
 8004ad2:	e007      	b.n	8004ae4 <DMA_SetConfig+0x50>
 8004ad4:	68fb      	ldr	r3, [r7, #12]
 8004ad6:	681b      	ldr	r3, [r3, #0]
 8004ad8:	68ba      	ldr	r2, [r7, #8]
 8004ada:	609a      	str	r2, [r3, #8]
 8004adc:	68fb      	ldr	r3, [r7, #12]
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	687a      	ldr	r2, [r7, #4]
 8004ae2:	60da      	str	r2, [r3, #12]
 8004ae4:	bf00      	nop
 8004ae6:	3714      	adds	r7, #20
 8004ae8:	46bd      	mov	sp, r7
 8004aea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004aee:	4770      	bx	lr

08004af0 <DMA_CalcBaseAndBitshift>:
 8004af0:	b480      	push	{r7}
 8004af2:	b085      	sub	sp, #20
 8004af4:	af00      	add	r7, sp, #0
 8004af6:	6078      	str	r0, [r7, #4]
 8004af8:	687b      	ldr	r3, [r7, #4]
 8004afa:	681b      	ldr	r3, [r3, #0]
 8004afc:	b2db      	uxtb	r3, r3
 8004afe:	3b10      	subs	r3, #16
 8004b00:	4a13      	ldr	r2, [pc, #76]	; (8004b50 <DMA_CalcBaseAndBitshift+0x60>)
 8004b02:	fba2 2303 	umull	r2, r3, r2, r3
 8004b06:	091b      	lsrs	r3, r3, #4
 8004b08:	60fb      	str	r3, [r7, #12]
 8004b0a:	4a12      	ldr	r2, [pc, #72]	; (8004b54 <DMA_CalcBaseAndBitshift+0x64>)
 8004b0c:	68fb      	ldr	r3, [r7, #12]
 8004b0e:	4413      	add	r3, r2
 8004b10:	781b      	ldrb	r3, [r3, #0]
 8004b12:	461a      	mov	r2, r3
 8004b14:	687b      	ldr	r3, [r7, #4]
 8004b16:	65da      	str	r2, [r3, #92]	; 0x5c
 8004b18:	68fb      	ldr	r3, [r7, #12]
 8004b1a:	2b03      	cmp	r3, #3
 8004b1c:	d908      	bls.n	8004b30 <DMA_CalcBaseAndBitshift+0x40>
 8004b1e:	687b      	ldr	r3, [r7, #4]
 8004b20:	681b      	ldr	r3, [r3, #0]
 8004b22:	461a      	mov	r2, r3
 8004b24:	4b0c      	ldr	r3, [pc, #48]	; (8004b58 <DMA_CalcBaseAndBitshift+0x68>)
 8004b26:	4013      	ands	r3, r2
 8004b28:	1d1a      	adds	r2, r3, #4
 8004b2a:	687b      	ldr	r3, [r7, #4]
 8004b2c:	659a      	str	r2, [r3, #88]	; 0x58
 8004b2e:	e006      	b.n	8004b3e <DMA_CalcBaseAndBitshift+0x4e>
 8004b30:	687b      	ldr	r3, [r7, #4]
 8004b32:	681b      	ldr	r3, [r3, #0]
 8004b34:	461a      	mov	r2, r3
 8004b36:	4b08      	ldr	r3, [pc, #32]	; (8004b58 <DMA_CalcBaseAndBitshift+0x68>)
 8004b38:	4013      	ands	r3, r2
 8004b3a:	687a      	ldr	r2, [r7, #4]
 8004b3c:	6593      	str	r3, [r2, #88]	; 0x58
 8004b3e:	687b      	ldr	r3, [r7, #4]
 8004b40:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004b42:	4618      	mov	r0, r3
 8004b44:	3714      	adds	r7, #20
 8004b46:	46bd      	mov	sp, r7
 8004b48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b4c:	4770      	bx	lr
 8004b4e:	bf00      	nop
 8004b50:	aaaaaaab 	.word	0xaaaaaaab
 8004b54:	0801e770 	.word	0x0801e770
 8004b58:	fffffc00 	.word	0xfffffc00

08004b5c <DMA_CheckFifoParam>:
 8004b5c:	b480      	push	{r7}
 8004b5e:	b085      	sub	sp, #20
 8004b60:	af00      	add	r7, sp, #0
 8004b62:	6078      	str	r0, [r7, #4]
 8004b64:	2300      	movs	r3, #0
 8004b66:	73fb      	strb	r3, [r7, #15]
 8004b68:	687b      	ldr	r3, [r7, #4]
 8004b6a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004b6c:	60bb      	str	r3, [r7, #8]
 8004b6e:	687b      	ldr	r3, [r7, #4]
 8004b70:	699b      	ldr	r3, [r3, #24]
 8004b72:	2b00      	cmp	r3, #0
 8004b74:	d11f      	bne.n	8004bb6 <DMA_CheckFifoParam+0x5a>
 8004b76:	68bb      	ldr	r3, [r7, #8]
 8004b78:	2b03      	cmp	r3, #3
 8004b7a:	d856      	bhi.n	8004c2a <DMA_CheckFifoParam+0xce>
 8004b7c:	a201      	add	r2, pc, #4	; (adr r2, 8004b84 <DMA_CheckFifoParam+0x28>)
 8004b7e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004b82:	bf00      	nop
 8004b84:	08004b95 	.word	0x08004b95
 8004b88:	08004ba7 	.word	0x08004ba7
 8004b8c:	08004b95 	.word	0x08004b95
 8004b90:	08004c2b 	.word	0x08004c2b
 8004b94:	687b      	ldr	r3, [r7, #4]
 8004b96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004b98:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004b9c:	2b00      	cmp	r3, #0
 8004b9e:	d046      	beq.n	8004c2e <DMA_CheckFifoParam+0xd2>
 8004ba0:	2301      	movs	r3, #1
 8004ba2:	73fb      	strb	r3, [r7, #15]
 8004ba4:	e043      	b.n	8004c2e <DMA_CheckFifoParam+0xd2>
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004baa:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8004bae:	d140      	bne.n	8004c32 <DMA_CheckFifoParam+0xd6>
 8004bb0:	2301      	movs	r3, #1
 8004bb2:	73fb      	strb	r3, [r7, #15]
 8004bb4:	e03d      	b.n	8004c32 <DMA_CheckFifoParam+0xd6>
 8004bb6:	687b      	ldr	r3, [r7, #4]
 8004bb8:	699b      	ldr	r3, [r3, #24]
 8004bba:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004bbe:	d121      	bne.n	8004c04 <DMA_CheckFifoParam+0xa8>
 8004bc0:	68bb      	ldr	r3, [r7, #8]
 8004bc2:	2b03      	cmp	r3, #3
 8004bc4:	d837      	bhi.n	8004c36 <DMA_CheckFifoParam+0xda>
 8004bc6:	a201      	add	r2, pc, #4	; (adr r2, 8004bcc <DMA_CheckFifoParam+0x70>)
 8004bc8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004bcc:	08004bdd 	.word	0x08004bdd
 8004bd0:	08004be3 	.word	0x08004be3
 8004bd4:	08004bdd 	.word	0x08004bdd
 8004bd8:	08004bf5 	.word	0x08004bf5
 8004bdc:	2301      	movs	r3, #1
 8004bde:	73fb      	strb	r3, [r7, #15]
 8004be0:	e030      	b.n	8004c44 <DMA_CheckFifoParam+0xe8>
 8004be2:	687b      	ldr	r3, [r7, #4]
 8004be4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004be6:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004bea:	2b00      	cmp	r3, #0
 8004bec:	d025      	beq.n	8004c3a <DMA_CheckFifoParam+0xde>
 8004bee:	2301      	movs	r3, #1
 8004bf0:	73fb      	strb	r3, [r7, #15]
 8004bf2:	e022      	b.n	8004c3a <DMA_CheckFifoParam+0xde>
 8004bf4:	687b      	ldr	r3, [r7, #4]
 8004bf6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004bf8:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8004bfc:	d11f      	bne.n	8004c3e <DMA_CheckFifoParam+0xe2>
 8004bfe:	2301      	movs	r3, #1
 8004c00:	73fb      	strb	r3, [r7, #15]
 8004c02:	e01c      	b.n	8004c3e <DMA_CheckFifoParam+0xe2>
 8004c04:	68bb      	ldr	r3, [r7, #8]
 8004c06:	2b02      	cmp	r3, #2
 8004c08:	d903      	bls.n	8004c12 <DMA_CheckFifoParam+0xb6>
 8004c0a:	68bb      	ldr	r3, [r7, #8]
 8004c0c:	2b03      	cmp	r3, #3
 8004c0e:	d003      	beq.n	8004c18 <DMA_CheckFifoParam+0xbc>
 8004c10:	e018      	b.n	8004c44 <DMA_CheckFifoParam+0xe8>
 8004c12:	2301      	movs	r3, #1
 8004c14:	73fb      	strb	r3, [r7, #15]
 8004c16:	e015      	b.n	8004c44 <DMA_CheckFifoParam+0xe8>
 8004c18:	687b      	ldr	r3, [r7, #4]
 8004c1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004c1c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8004c20:	2b00      	cmp	r3, #0
 8004c22:	d00e      	beq.n	8004c42 <DMA_CheckFifoParam+0xe6>
 8004c24:	2301      	movs	r3, #1
 8004c26:	73fb      	strb	r3, [r7, #15]
 8004c28:	e00b      	b.n	8004c42 <DMA_CheckFifoParam+0xe6>
 8004c2a:	bf00      	nop
 8004c2c:	e00a      	b.n	8004c44 <DMA_CheckFifoParam+0xe8>
 8004c2e:	bf00      	nop
 8004c30:	e008      	b.n	8004c44 <DMA_CheckFifoParam+0xe8>
 8004c32:	bf00      	nop
 8004c34:	e006      	b.n	8004c44 <DMA_CheckFifoParam+0xe8>
 8004c36:	bf00      	nop
 8004c38:	e004      	b.n	8004c44 <DMA_CheckFifoParam+0xe8>
 8004c3a:	bf00      	nop
 8004c3c:	e002      	b.n	8004c44 <DMA_CheckFifoParam+0xe8>
 8004c3e:	bf00      	nop
 8004c40:	e000      	b.n	8004c44 <DMA_CheckFifoParam+0xe8>
 8004c42:	bf00      	nop
 8004c44:	7bfb      	ldrb	r3, [r7, #15]
 8004c46:	4618      	mov	r0, r3
 8004c48:	3714      	adds	r7, #20
 8004c4a:	46bd      	mov	sp, r7
 8004c4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c50:	4770      	bx	lr
 8004c52:	bf00      	nop

08004c54 <HAL_DMA2D_Init>:
 8004c54:	b580      	push	{r7, lr}
 8004c56:	b082      	sub	sp, #8
 8004c58:	af00      	add	r7, sp, #0
 8004c5a:	6078      	str	r0, [r7, #4]
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	2b00      	cmp	r3, #0
 8004c60:	d101      	bne.n	8004c66 <HAL_DMA2D_Init+0x12>
 8004c62:	2301      	movs	r3, #1
 8004c64:	e039      	b.n	8004cda <HAL_DMA2D_Init+0x86>
 8004c66:	687b      	ldr	r3, [r7, #4]
 8004c68:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8004c6c:	b2db      	uxtb	r3, r3
 8004c6e:	2b00      	cmp	r3, #0
 8004c70:	d106      	bne.n	8004c80 <HAL_DMA2D_Init+0x2c>
 8004c72:	687b      	ldr	r3, [r7, #4]
 8004c74:	2200      	movs	r2, #0
 8004c76:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8004c7a:	6878      	ldr	r0, [r7, #4]
 8004c7c:	f003 faf4 	bl	8008268 <HAL_DMA2D_MspInit>
 8004c80:	687b      	ldr	r3, [r7, #4]
 8004c82:	2202      	movs	r2, #2
 8004c84:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8004c88:	687b      	ldr	r3, [r7, #4]
 8004c8a:	681b      	ldr	r3, [r3, #0]
 8004c8c:	681b      	ldr	r3, [r3, #0]
 8004c8e:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 8004c92:	687b      	ldr	r3, [r7, #4]
 8004c94:	685a      	ldr	r2, [r3, #4]
 8004c96:	687b      	ldr	r3, [r7, #4]
 8004c98:	681b      	ldr	r3, [r3, #0]
 8004c9a:	430a      	orrs	r2, r1
 8004c9c:	601a      	str	r2, [r3, #0]
 8004c9e:	687b      	ldr	r3, [r7, #4]
 8004ca0:	681b      	ldr	r3, [r3, #0]
 8004ca2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004ca4:	f023 0107 	bic.w	r1, r3, #7
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	689a      	ldr	r2, [r3, #8]
 8004cac:	687b      	ldr	r3, [r7, #4]
 8004cae:	681b      	ldr	r3, [r3, #0]
 8004cb0:	430a      	orrs	r2, r1
 8004cb2:	635a      	str	r2, [r3, #52]	; 0x34
 8004cb4:	687b      	ldr	r3, [r7, #4]
 8004cb6:	681b      	ldr	r3, [r3, #0]
 8004cb8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004cba:	4b0a      	ldr	r3, [pc, #40]	; (8004ce4 <HAL_DMA2D_Init+0x90>)
 8004cbc:	4013      	ands	r3, r2
 8004cbe:	687a      	ldr	r2, [r7, #4]
 8004cc0:	68d1      	ldr	r1, [r2, #12]
 8004cc2:	687a      	ldr	r2, [r7, #4]
 8004cc4:	6812      	ldr	r2, [r2, #0]
 8004cc6:	430b      	orrs	r3, r1
 8004cc8:	6413      	str	r3, [r2, #64]	; 0x40
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	2200      	movs	r2, #0
 8004cce:	63da      	str	r2, [r3, #60]	; 0x3c
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	2201      	movs	r2, #1
 8004cd4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8004cd8:	2300      	movs	r3, #0
 8004cda:	4618      	mov	r0, r3
 8004cdc:	3708      	adds	r7, #8
 8004cde:	46bd      	mov	sp, r7
 8004ce0:	bd80      	pop	{r7, pc}
 8004ce2:	bf00      	nop
 8004ce4:	ffffc000 	.word	0xffffc000

08004ce8 <HAL_GPIO_Init>:
 8004ce8:	b480      	push	{r7}
 8004cea:	b089      	sub	sp, #36	; 0x24
 8004cec:	af00      	add	r7, sp, #0
 8004cee:	6078      	str	r0, [r7, #4]
 8004cf0:	6039      	str	r1, [r7, #0]
 8004cf2:	2300      	movs	r3, #0
 8004cf4:	61fb      	str	r3, [r7, #28]
 8004cf6:	2300      	movs	r3, #0
 8004cf8:	617b      	str	r3, [r7, #20]
 8004cfa:	2300      	movs	r3, #0
 8004cfc:	613b      	str	r3, [r7, #16]
 8004cfe:	2300      	movs	r3, #0
 8004d00:	61bb      	str	r3, [r7, #24]
 8004d02:	2300      	movs	r3, #0
 8004d04:	61fb      	str	r3, [r7, #28]
 8004d06:	e175      	b.n	8004ff4 <HAL_GPIO_Init+0x30c>
 8004d08:	2201      	movs	r2, #1
 8004d0a:	69fb      	ldr	r3, [r7, #28]
 8004d0c:	fa02 f303 	lsl.w	r3, r2, r3
 8004d10:	617b      	str	r3, [r7, #20]
 8004d12:	683b      	ldr	r3, [r7, #0]
 8004d14:	681b      	ldr	r3, [r3, #0]
 8004d16:	697a      	ldr	r2, [r7, #20]
 8004d18:	4013      	ands	r3, r2
 8004d1a:	613b      	str	r3, [r7, #16]
 8004d1c:	693a      	ldr	r2, [r7, #16]
 8004d1e:	697b      	ldr	r3, [r7, #20]
 8004d20:	429a      	cmp	r2, r3
 8004d22:	f040 8164 	bne.w	8004fee <HAL_GPIO_Init+0x306>
 8004d26:	683b      	ldr	r3, [r7, #0]
 8004d28:	685b      	ldr	r3, [r3, #4]
 8004d2a:	2b01      	cmp	r3, #1
 8004d2c:	d00b      	beq.n	8004d46 <HAL_GPIO_Init+0x5e>
 8004d2e:	683b      	ldr	r3, [r7, #0]
 8004d30:	685b      	ldr	r3, [r3, #4]
 8004d32:	2b02      	cmp	r3, #2
 8004d34:	d007      	beq.n	8004d46 <HAL_GPIO_Init+0x5e>
 8004d36:	683b      	ldr	r3, [r7, #0]
 8004d38:	685b      	ldr	r3, [r3, #4]
 8004d3a:	2b11      	cmp	r3, #17
 8004d3c:	d003      	beq.n	8004d46 <HAL_GPIO_Init+0x5e>
 8004d3e:	683b      	ldr	r3, [r7, #0]
 8004d40:	685b      	ldr	r3, [r3, #4]
 8004d42:	2b12      	cmp	r3, #18
 8004d44:	d130      	bne.n	8004da8 <HAL_GPIO_Init+0xc0>
 8004d46:	687b      	ldr	r3, [r7, #4]
 8004d48:	689b      	ldr	r3, [r3, #8]
 8004d4a:	61bb      	str	r3, [r7, #24]
 8004d4c:	69fb      	ldr	r3, [r7, #28]
 8004d4e:	005b      	lsls	r3, r3, #1
 8004d50:	2203      	movs	r2, #3
 8004d52:	fa02 f303 	lsl.w	r3, r2, r3
 8004d56:	43db      	mvns	r3, r3
 8004d58:	69ba      	ldr	r2, [r7, #24]
 8004d5a:	4013      	ands	r3, r2
 8004d5c:	61bb      	str	r3, [r7, #24]
 8004d5e:	683b      	ldr	r3, [r7, #0]
 8004d60:	68da      	ldr	r2, [r3, #12]
 8004d62:	69fb      	ldr	r3, [r7, #28]
 8004d64:	005b      	lsls	r3, r3, #1
 8004d66:	fa02 f303 	lsl.w	r3, r2, r3
 8004d6a:	69ba      	ldr	r2, [r7, #24]
 8004d6c:	4313      	orrs	r3, r2
 8004d6e:	61bb      	str	r3, [r7, #24]
 8004d70:	687b      	ldr	r3, [r7, #4]
 8004d72:	69ba      	ldr	r2, [r7, #24]
 8004d74:	609a      	str	r2, [r3, #8]
 8004d76:	687b      	ldr	r3, [r7, #4]
 8004d78:	685b      	ldr	r3, [r3, #4]
 8004d7a:	61bb      	str	r3, [r7, #24]
 8004d7c:	2201      	movs	r2, #1
 8004d7e:	69fb      	ldr	r3, [r7, #28]
 8004d80:	fa02 f303 	lsl.w	r3, r2, r3
 8004d84:	43db      	mvns	r3, r3
 8004d86:	69ba      	ldr	r2, [r7, #24]
 8004d88:	4013      	ands	r3, r2
 8004d8a:	61bb      	str	r3, [r7, #24]
 8004d8c:	683b      	ldr	r3, [r7, #0]
 8004d8e:	685b      	ldr	r3, [r3, #4]
 8004d90:	091b      	lsrs	r3, r3, #4
 8004d92:	f003 0201 	and.w	r2, r3, #1
 8004d96:	69fb      	ldr	r3, [r7, #28]
 8004d98:	fa02 f303 	lsl.w	r3, r2, r3
 8004d9c:	69ba      	ldr	r2, [r7, #24]
 8004d9e:	4313      	orrs	r3, r2
 8004da0:	61bb      	str	r3, [r7, #24]
 8004da2:	687b      	ldr	r3, [r7, #4]
 8004da4:	69ba      	ldr	r2, [r7, #24]
 8004da6:	605a      	str	r2, [r3, #4]
 8004da8:	687b      	ldr	r3, [r7, #4]
 8004daa:	68db      	ldr	r3, [r3, #12]
 8004dac:	61bb      	str	r3, [r7, #24]
 8004dae:	69fb      	ldr	r3, [r7, #28]
 8004db0:	005b      	lsls	r3, r3, #1
 8004db2:	2203      	movs	r2, #3
 8004db4:	fa02 f303 	lsl.w	r3, r2, r3
 8004db8:	43db      	mvns	r3, r3
 8004dba:	69ba      	ldr	r2, [r7, #24]
 8004dbc:	4013      	ands	r3, r2
 8004dbe:	61bb      	str	r3, [r7, #24]
 8004dc0:	683b      	ldr	r3, [r7, #0]
 8004dc2:	689a      	ldr	r2, [r3, #8]
 8004dc4:	69fb      	ldr	r3, [r7, #28]
 8004dc6:	005b      	lsls	r3, r3, #1
 8004dc8:	fa02 f303 	lsl.w	r3, r2, r3
 8004dcc:	69ba      	ldr	r2, [r7, #24]
 8004dce:	4313      	orrs	r3, r2
 8004dd0:	61bb      	str	r3, [r7, #24]
 8004dd2:	687b      	ldr	r3, [r7, #4]
 8004dd4:	69ba      	ldr	r2, [r7, #24]
 8004dd6:	60da      	str	r2, [r3, #12]
 8004dd8:	683b      	ldr	r3, [r7, #0]
 8004dda:	685b      	ldr	r3, [r3, #4]
 8004ddc:	2b02      	cmp	r3, #2
 8004dde:	d003      	beq.n	8004de8 <HAL_GPIO_Init+0x100>
 8004de0:	683b      	ldr	r3, [r7, #0]
 8004de2:	685b      	ldr	r3, [r3, #4]
 8004de4:	2b12      	cmp	r3, #18
 8004de6:	d123      	bne.n	8004e30 <HAL_GPIO_Init+0x148>
 8004de8:	69fb      	ldr	r3, [r7, #28]
 8004dea:	08da      	lsrs	r2, r3, #3
 8004dec:	687b      	ldr	r3, [r7, #4]
 8004dee:	3208      	adds	r2, #8
 8004df0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004df4:	61bb      	str	r3, [r7, #24]
 8004df6:	69fb      	ldr	r3, [r7, #28]
 8004df8:	f003 0307 	and.w	r3, r3, #7
 8004dfc:	009b      	lsls	r3, r3, #2
 8004dfe:	220f      	movs	r2, #15
 8004e00:	fa02 f303 	lsl.w	r3, r2, r3
 8004e04:	43db      	mvns	r3, r3
 8004e06:	69ba      	ldr	r2, [r7, #24]
 8004e08:	4013      	ands	r3, r2
 8004e0a:	61bb      	str	r3, [r7, #24]
 8004e0c:	683b      	ldr	r3, [r7, #0]
 8004e0e:	691a      	ldr	r2, [r3, #16]
 8004e10:	69fb      	ldr	r3, [r7, #28]
 8004e12:	f003 0307 	and.w	r3, r3, #7
 8004e16:	009b      	lsls	r3, r3, #2
 8004e18:	fa02 f303 	lsl.w	r3, r2, r3
 8004e1c:	69ba      	ldr	r2, [r7, #24]
 8004e1e:	4313      	orrs	r3, r2
 8004e20:	61bb      	str	r3, [r7, #24]
 8004e22:	69fb      	ldr	r3, [r7, #28]
 8004e24:	08da      	lsrs	r2, r3, #3
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	3208      	adds	r2, #8
 8004e2a:	69b9      	ldr	r1, [r7, #24]
 8004e2c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	681b      	ldr	r3, [r3, #0]
 8004e34:	61bb      	str	r3, [r7, #24]
 8004e36:	69fb      	ldr	r3, [r7, #28]
 8004e38:	005b      	lsls	r3, r3, #1
 8004e3a:	2203      	movs	r2, #3
 8004e3c:	fa02 f303 	lsl.w	r3, r2, r3
 8004e40:	43db      	mvns	r3, r3
 8004e42:	69ba      	ldr	r2, [r7, #24]
 8004e44:	4013      	ands	r3, r2
 8004e46:	61bb      	str	r3, [r7, #24]
 8004e48:	683b      	ldr	r3, [r7, #0]
 8004e4a:	685b      	ldr	r3, [r3, #4]
 8004e4c:	f003 0203 	and.w	r2, r3, #3
 8004e50:	69fb      	ldr	r3, [r7, #28]
 8004e52:	005b      	lsls	r3, r3, #1
 8004e54:	fa02 f303 	lsl.w	r3, r2, r3
 8004e58:	69ba      	ldr	r2, [r7, #24]
 8004e5a:	4313      	orrs	r3, r2
 8004e5c:	61bb      	str	r3, [r7, #24]
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	69ba      	ldr	r2, [r7, #24]
 8004e62:	601a      	str	r2, [r3, #0]
 8004e64:	683b      	ldr	r3, [r7, #0]
 8004e66:	685b      	ldr	r3, [r3, #4]
 8004e68:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004e6c:	2b00      	cmp	r3, #0
 8004e6e:	f000 80be 	beq.w	8004fee <HAL_GPIO_Init+0x306>
 8004e72:	4b66      	ldr	r3, [pc, #408]	; (800500c <HAL_GPIO_Init+0x324>)
 8004e74:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004e76:	4a65      	ldr	r2, [pc, #404]	; (800500c <HAL_GPIO_Init+0x324>)
 8004e78:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004e7c:	6453      	str	r3, [r2, #68]	; 0x44
 8004e7e:	4b63      	ldr	r3, [pc, #396]	; (800500c <HAL_GPIO_Init+0x324>)
 8004e80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004e82:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004e86:	60fb      	str	r3, [r7, #12]
 8004e88:	68fb      	ldr	r3, [r7, #12]
 8004e8a:	4a61      	ldr	r2, [pc, #388]	; (8005010 <HAL_GPIO_Init+0x328>)
 8004e8c:	69fb      	ldr	r3, [r7, #28]
 8004e8e:	089b      	lsrs	r3, r3, #2
 8004e90:	3302      	adds	r3, #2
 8004e92:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004e96:	61bb      	str	r3, [r7, #24]
 8004e98:	69fb      	ldr	r3, [r7, #28]
 8004e9a:	f003 0303 	and.w	r3, r3, #3
 8004e9e:	009b      	lsls	r3, r3, #2
 8004ea0:	220f      	movs	r2, #15
 8004ea2:	fa02 f303 	lsl.w	r3, r2, r3
 8004ea6:	43db      	mvns	r3, r3
 8004ea8:	69ba      	ldr	r2, [r7, #24]
 8004eaa:	4013      	ands	r3, r2
 8004eac:	61bb      	str	r3, [r7, #24]
 8004eae:	687b      	ldr	r3, [r7, #4]
 8004eb0:	4a58      	ldr	r2, [pc, #352]	; (8005014 <HAL_GPIO_Init+0x32c>)
 8004eb2:	4293      	cmp	r3, r2
 8004eb4:	d037      	beq.n	8004f26 <HAL_GPIO_Init+0x23e>
 8004eb6:	687b      	ldr	r3, [r7, #4]
 8004eb8:	4a57      	ldr	r2, [pc, #348]	; (8005018 <HAL_GPIO_Init+0x330>)
 8004eba:	4293      	cmp	r3, r2
 8004ebc:	d031      	beq.n	8004f22 <HAL_GPIO_Init+0x23a>
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	4a56      	ldr	r2, [pc, #344]	; (800501c <HAL_GPIO_Init+0x334>)
 8004ec2:	4293      	cmp	r3, r2
 8004ec4:	d02b      	beq.n	8004f1e <HAL_GPIO_Init+0x236>
 8004ec6:	687b      	ldr	r3, [r7, #4]
 8004ec8:	4a55      	ldr	r2, [pc, #340]	; (8005020 <HAL_GPIO_Init+0x338>)
 8004eca:	4293      	cmp	r3, r2
 8004ecc:	d025      	beq.n	8004f1a <HAL_GPIO_Init+0x232>
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	4a54      	ldr	r2, [pc, #336]	; (8005024 <HAL_GPIO_Init+0x33c>)
 8004ed2:	4293      	cmp	r3, r2
 8004ed4:	d01f      	beq.n	8004f16 <HAL_GPIO_Init+0x22e>
 8004ed6:	687b      	ldr	r3, [r7, #4]
 8004ed8:	4a53      	ldr	r2, [pc, #332]	; (8005028 <HAL_GPIO_Init+0x340>)
 8004eda:	4293      	cmp	r3, r2
 8004edc:	d019      	beq.n	8004f12 <HAL_GPIO_Init+0x22a>
 8004ede:	687b      	ldr	r3, [r7, #4]
 8004ee0:	4a52      	ldr	r2, [pc, #328]	; (800502c <HAL_GPIO_Init+0x344>)
 8004ee2:	4293      	cmp	r3, r2
 8004ee4:	d013      	beq.n	8004f0e <HAL_GPIO_Init+0x226>
 8004ee6:	687b      	ldr	r3, [r7, #4]
 8004ee8:	4a51      	ldr	r2, [pc, #324]	; (8005030 <HAL_GPIO_Init+0x348>)
 8004eea:	4293      	cmp	r3, r2
 8004eec:	d00d      	beq.n	8004f0a <HAL_GPIO_Init+0x222>
 8004eee:	687b      	ldr	r3, [r7, #4]
 8004ef0:	4a50      	ldr	r2, [pc, #320]	; (8005034 <HAL_GPIO_Init+0x34c>)
 8004ef2:	4293      	cmp	r3, r2
 8004ef4:	d007      	beq.n	8004f06 <HAL_GPIO_Init+0x21e>
 8004ef6:	687b      	ldr	r3, [r7, #4]
 8004ef8:	4a4f      	ldr	r2, [pc, #316]	; (8005038 <HAL_GPIO_Init+0x350>)
 8004efa:	4293      	cmp	r3, r2
 8004efc:	d101      	bne.n	8004f02 <HAL_GPIO_Init+0x21a>
 8004efe:	2309      	movs	r3, #9
 8004f00:	e012      	b.n	8004f28 <HAL_GPIO_Init+0x240>
 8004f02:	230a      	movs	r3, #10
 8004f04:	e010      	b.n	8004f28 <HAL_GPIO_Init+0x240>
 8004f06:	2308      	movs	r3, #8
 8004f08:	e00e      	b.n	8004f28 <HAL_GPIO_Init+0x240>
 8004f0a:	2307      	movs	r3, #7
 8004f0c:	e00c      	b.n	8004f28 <HAL_GPIO_Init+0x240>
 8004f0e:	2306      	movs	r3, #6
 8004f10:	e00a      	b.n	8004f28 <HAL_GPIO_Init+0x240>
 8004f12:	2305      	movs	r3, #5
 8004f14:	e008      	b.n	8004f28 <HAL_GPIO_Init+0x240>
 8004f16:	2304      	movs	r3, #4
 8004f18:	e006      	b.n	8004f28 <HAL_GPIO_Init+0x240>
 8004f1a:	2303      	movs	r3, #3
 8004f1c:	e004      	b.n	8004f28 <HAL_GPIO_Init+0x240>
 8004f1e:	2302      	movs	r3, #2
 8004f20:	e002      	b.n	8004f28 <HAL_GPIO_Init+0x240>
 8004f22:	2301      	movs	r3, #1
 8004f24:	e000      	b.n	8004f28 <HAL_GPIO_Init+0x240>
 8004f26:	2300      	movs	r3, #0
 8004f28:	69fa      	ldr	r2, [r7, #28]
 8004f2a:	f002 0203 	and.w	r2, r2, #3
 8004f2e:	0092      	lsls	r2, r2, #2
 8004f30:	4093      	lsls	r3, r2
 8004f32:	69ba      	ldr	r2, [r7, #24]
 8004f34:	4313      	orrs	r3, r2
 8004f36:	61bb      	str	r3, [r7, #24]
 8004f38:	4935      	ldr	r1, [pc, #212]	; (8005010 <HAL_GPIO_Init+0x328>)
 8004f3a:	69fb      	ldr	r3, [r7, #28]
 8004f3c:	089b      	lsrs	r3, r3, #2
 8004f3e:	3302      	adds	r3, #2
 8004f40:	69ba      	ldr	r2, [r7, #24]
 8004f42:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004f46:	4b3d      	ldr	r3, [pc, #244]	; (800503c <HAL_GPIO_Init+0x354>)
 8004f48:	681b      	ldr	r3, [r3, #0]
 8004f4a:	61bb      	str	r3, [r7, #24]
 8004f4c:	693b      	ldr	r3, [r7, #16]
 8004f4e:	43db      	mvns	r3, r3
 8004f50:	69ba      	ldr	r2, [r7, #24]
 8004f52:	4013      	ands	r3, r2
 8004f54:	61bb      	str	r3, [r7, #24]
 8004f56:	683b      	ldr	r3, [r7, #0]
 8004f58:	685b      	ldr	r3, [r3, #4]
 8004f5a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004f5e:	2b00      	cmp	r3, #0
 8004f60:	d003      	beq.n	8004f6a <HAL_GPIO_Init+0x282>
 8004f62:	69ba      	ldr	r2, [r7, #24]
 8004f64:	693b      	ldr	r3, [r7, #16]
 8004f66:	4313      	orrs	r3, r2
 8004f68:	61bb      	str	r3, [r7, #24]
 8004f6a:	4a34      	ldr	r2, [pc, #208]	; (800503c <HAL_GPIO_Init+0x354>)
 8004f6c:	69bb      	ldr	r3, [r7, #24]
 8004f6e:	6013      	str	r3, [r2, #0]
 8004f70:	4b32      	ldr	r3, [pc, #200]	; (800503c <HAL_GPIO_Init+0x354>)
 8004f72:	685b      	ldr	r3, [r3, #4]
 8004f74:	61bb      	str	r3, [r7, #24]
 8004f76:	693b      	ldr	r3, [r7, #16]
 8004f78:	43db      	mvns	r3, r3
 8004f7a:	69ba      	ldr	r2, [r7, #24]
 8004f7c:	4013      	ands	r3, r2
 8004f7e:	61bb      	str	r3, [r7, #24]
 8004f80:	683b      	ldr	r3, [r7, #0]
 8004f82:	685b      	ldr	r3, [r3, #4]
 8004f84:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004f88:	2b00      	cmp	r3, #0
 8004f8a:	d003      	beq.n	8004f94 <HAL_GPIO_Init+0x2ac>
 8004f8c:	69ba      	ldr	r2, [r7, #24]
 8004f8e:	693b      	ldr	r3, [r7, #16]
 8004f90:	4313      	orrs	r3, r2
 8004f92:	61bb      	str	r3, [r7, #24]
 8004f94:	4a29      	ldr	r2, [pc, #164]	; (800503c <HAL_GPIO_Init+0x354>)
 8004f96:	69bb      	ldr	r3, [r7, #24]
 8004f98:	6053      	str	r3, [r2, #4]
 8004f9a:	4b28      	ldr	r3, [pc, #160]	; (800503c <HAL_GPIO_Init+0x354>)
 8004f9c:	689b      	ldr	r3, [r3, #8]
 8004f9e:	61bb      	str	r3, [r7, #24]
 8004fa0:	693b      	ldr	r3, [r7, #16]
 8004fa2:	43db      	mvns	r3, r3
 8004fa4:	69ba      	ldr	r2, [r7, #24]
 8004fa6:	4013      	ands	r3, r2
 8004fa8:	61bb      	str	r3, [r7, #24]
 8004faa:	683b      	ldr	r3, [r7, #0]
 8004fac:	685b      	ldr	r3, [r3, #4]
 8004fae:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8004fb2:	2b00      	cmp	r3, #0
 8004fb4:	d003      	beq.n	8004fbe <HAL_GPIO_Init+0x2d6>
 8004fb6:	69ba      	ldr	r2, [r7, #24]
 8004fb8:	693b      	ldr	r3, [r7, #16]
 8004fba:	4313      	orrs	r3, r2
 8004fbc:	61bb      	str	r3, [r7, #24]
 8004fbe:	4a1f      	ldr	r2, [pc, #124]	; (800503c <HAL_GPIO_Init+0x354>)
 8004fc0:	69bb      	ldr	r3, [r7, #24]
 8004fc2:	6093      	str	r3, [r2, #8]
 8004fc4:	4b1d      	ldr	r3, [pc, #116]	; (800503c <HAL_GPIO_Init+0x354>)
 8004fc6:	68db      	ldr	r3, [r3, #12]
 8004fc8:	61bb      	str	r3, [r7, #24]
 8004fca:	693b      	ldr	r3, [r7, #16]
 8004fcc:	43db      	mvns	r3, r3
 8004fce:	69ba      	ldr	r2, [r7, #24]
 8004fd0:	4013      	ands	r3, r2
 8004fd2:	61bb      	str	r3, [r7, #24]
 8004fd4:	683b      	ldr	r3, [r7, #0]
 8004fd6:	685b      	ldr	r3, [r3, #4]
 8004fd8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004fdc:	2b00      	cmp	r3, #0
 8004fde:	d003      	beq.n	8004fe8 <HAL_GPIO_Init+0x300>
 8004fe0:	69ba      	ldr	r2, [r7, #24]
 8004fe2:	693b      	ldr	r3, [r7, #16]
 8004fe4:	4313      	orrs	r3, r2
 8004fe6:	61bb      	str	r3, [r7, #24]
 8004fe8:	4a14      	ldr	r2, [pc, #80]	; (800503c <HAL_GPIO_Init+0x354>)
 8004fea:	69bb      	ldr	r3, [r7, #24]
 8004fec:	60d3      	str	r3, [r2, #12]
 8004fee:	69fb      	ldr	r3, [r7, #28]
 8004ff0:	3301      	adds	r3, #1
 8004ff2:	61fb      	str	r3, [r7, #28]
 8004ff4:	69fb      	ldr	r3, [r7, #28]
 8004ff6:	2b0f      	cmp	r3, #15
 8004ff8:	f67f ae86 	bls.w	8004d08 <HAL_GPIO_Init+0x20>
 8004ffc:	bf00      	nop
 8004ffe:	bf00      	nop
 8005000:	3724      	adds	r7, #36	; 0x24
 8005002:	46bd      	mov	sp, r7
 8005004:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005008:	4770      	bx	lr
 800500a:	bf00      	nop
 800500c:	40023800 	.word	0x40023800
 8005010:	40013800 	.word	0x40013800
 8005014:	40020000 	.word	0x40020000
 8005018:	40020400 	.word	0x40020400
 800501c:	40020800 	.word	0x40020800
 8005020:	40020c00 	.word	0x40020c00
 8005024:	40021000 	.word	0x40021000
 8005028:	40021400 	.word	0x40021400
 800502c:	40021800 	.word	0x40021800
 8005030:	40021c00 	.word	0x40021c00
 8005034:	40022000 	.word	0x40022000
 8005038:	40022400 	.word	0x40022400
 800503c:	40013c00 	.word	0x40013c00

08005040 <HAL_GPIO_DeInit>:
 8005040:	b480      	push	{r7}
 8005042:	b087      	sub	sp, #28
 8005044:	af00      	add	r7, sp, #0
 8005046:	6078      	str	r0, [r7, #4]
 8005048:	6039      	str	r1, [r7, #0]
 800504a:	2300      	movs	r3, #0
 800504c:	613b      	str	r3, [r7, #16]
 800504e:	2300      	movs	r3, #0
 8005050:	60fb      	str	r3, [r7, #12]
 8005052:	2300      	movs	r3, #0
 8005054:	60bb      	str	r3, [r7, #8]
 8005056:	2300      	movs	r3, #0
 8005058:	617b      	str	r3, [r7, #20]
 800505a:	e0d9      	b.n	8005210 <HAL_GPIO_DeInit+0x1d0>
 800505c:	2201      	movs	r2, #1
 800505e:	697b      	ldr	r3, [r7, #20]
 8005060:	fa02 f303 	lsl.w	r3, r2, r3
 8005064:	613b      	str	r3, [r7, #16]
 8005066:	683a      	ldr	r2, [r7, #0]
 8005068:	693b      	ldr	r3, [r7, #16]
 800506a:	4013      	ands	r3, r2
 800506c:	60fb      	str	r3, [r7, #12]
 800506e:	68fa      	ldr	r2, [r7, #12]
 8005070:	693b      	ldr	r3, [r7, #16]
 8005072:	429a      	cmp	r2, r3
 8005074:	f040 80c9 	bne.w	800520a <HAL_GPIO_DeInit+0x1ca>
 8005078:	4a6b      	ldr	r2, [pc, #428]	; (8005228 <HAL_GPIO_DeInit+0x1e8>)
 800507a:	697b      	ldr	r3, [r7, #20]
 800507c:	089b      	lsrs	r3, r3, #2
 800507e:	3302      	adds	r3, #2
 8005080:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005084:	60bb      	str	r3, [r7, #8]
 8005086:	697b      	ldr	r3, [r7, #20]
 8005088:	f003 0303 	and.w	r3, r3, #3
 800508c:	009b      	lsls	r3, r3, #2
 800508e:	220f      	movs	r2, #15
 8005090:	fa02 f303 	lsl.w	r3, r2, r3
 8005094:	68ba      	ldr	r2, [r7, #8]
 8005096:	4013      	ands	r3, r2
 8005098:	60bb      	str	r3, [r7, #8]
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	4a63      	ldr	r2, [pc, #396]	; (800522c <HAL_GPIO_DeInit+0x1ec>)
 800509e:	4293      	cmp	r3, r2
 80050a0:	d037      	beq.n	8005112 <HAL_GPIO_DeInit+0xd2>
 80050a2:	687b      	ldr	r3, [r7, #4]
 80050a4:	4a62      	ldr	r2, [pc, #392]	; (8005230 <HAL_GPIO_DeInit+0x1f0>)
 80050a6:	4293      	cmp	r3, r2
 80050a8:	d031      	beq.n	800510e <HAL_GPIO_DeInit+0xce>
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	4a61      	ldr	r2, [pc, #388]	; (8005234 <HAL_GPIO_DeInit+0x1f4>)
 80050ae:	4293      	cmp	r3, r2
 80050b0:	d02b      	beq.n	800510a <HAL_GPIO_DeInit+0xca>
 80050b2:	687b      	ldr	r3, [r7, #4]
 80050b4:	4a60      	ldr	r2, [pc, #384]	; (8005238 <HAL_GPIO_DeInit+0x1f8>)
 80050b6:	4293      	cmp	r3, r2
 80050b8:	d025      	beq.n	8005106 <HAL_GPIO_DeInit+0xc6>
 80050ba:	687b      	ldr	r3, [r7, #4]
 80050bc:	4a5f      	ldr	r2, [pc, #380]	; (800523c <HAL_GPIO_DeInit+0x1fc>)
 80050be:	4293      	cmp	r3, r2
 80050c0:	d01f      	beq.n	8005102 <HAL_GPIO_DeInit+0xc2>
 80050c2:	687b      	ldr	r3, [r7, #4]
 80050c4:	4a5e      	ldr	r2, [pc, #376]	; (8005240 <HAL_GPIO_DeInit+0x200>)
 80050c6:	4293      	cmp	r3, r2
 80050c8:	d019      	beq.n	80050fe <HAL_GPIO_DeInit+0xbe>
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	4a5d      	ldr	r2, [pc, #372]	; (8005244 <HAL_GPIO_DeInit+0x204>)
 80050ce:	4293      	cmp	r3, r2
 80050d0:	d013      	beq.n	80050fa <HAL_GPIO_DeInit+0xba>
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	4a5c      	ldr	r2, [pc, #368]	; (8005248 <HAL_GPIO_DeInit+0x208>)
 80050d6:	4293      	cmp	r3, r2
 80050d8:	d00d      	beq.n	80050f6 <HAL_GPIO_DeInit+0xb6>
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	4a5b      	ldr	r2, [pc, #364]	; (800524c <HAL_GPIO_DeInit+0x20c>)
 80050de:	4293      	cmp	r3, r2
 80050e0:	d007      	beq.n	80050f2 <HAL_GPIO_DeInit+0xb2>
 80050e2:	687b      	ldr	r3, [r7, #4]
 80050e4:	4a5a      	ldr	r2, [pc, #360]	; (8005250 <HAL_GPIO_DeInit+0x210>)
 80050e6:	4293      	cmp	r3, r2
 80050e8:	d101      	bne.n	80050ee <HAL_GPIO_DeInit+0xae>
 80050ea:	2309      	movs	r3, #9
 80050ec:	e012      	b.n	8005114 <HAL_GPIO_DeInit+0xd4>
 80050ee:	230a      	movs	r3, #10
 80050f0:	e010      	b.n	8005114 <HAL_GPIO_DeInit+0xd4>
 80050f2:	2308      	movs	r3, #8
 80050f4:	e00e      	b.n	8005114 <HAL_GPIO_DeInit+0xd4>
 80050f6:	2307      	movs	r3, #7
 80050f8:	e00c      	b.n	8005114 <HAL_GPIO_DeInit+0xd4>
 80050fa:	2306      	movs	r3, #6
 80050fc:	e00a      	b.n	8005114 <HAL_GPIO_DeInit+0xd4>
 80050fe:	2305      	movs	r3, #5
 8005100:	e008      	b.n	8005114 <HAL_GPIO_DeInit+0xd4>
 8005102:	2304      	movs	r3, #4
 8005104:	e006      	b.n	8005114 <HAL_GPIO_DeInit+0xd4>
 8005106:	2303      	movs	r3, #3
 8005108:	e004      	b.n	8005114 <HAL_GPIO_DeInit+0xd4>
 800510a:	2302      	movs	r3, #2
 800510c:	e002      	b.n	8005114 <HAL_GPIO_DeInit+0xd4>
 800510e:	2301      	movs	r3, #1
 8005110:	e000      	b.n	8005114 <HAL_GPIO_DeInit+0xd4>
 8005112:	2300      	movs	r3, #0
 8005114:	697a      	ldr	r2, [r7, #20]
 8005116:	f002 0203 	and.w	r2, r2, #3
 800511a:	0092      	lsls	r2, r2, #2
 800511c:	4093      	lsls	r3, r2
 800511e:	68ba      	ldr	r2, [r7, #8]
 8005120:	429a      	cmp	r2, r3
 8005122:	d132      	bne.n	800518a <HAL_GPIO_DeInit+0x14a>
 8005124:	4b4b      	ldr	r3, [pc, #300]	; (8005254 <HAL_GPIO_DeInit+0x214>)
 8005126:	681a      	ldr	r2, [r3, #0]
 8005128:	68fb      	ldr	r3, [r7, #12]
 800512a:	43db      	mvns	r3, r3
 800512c:	4949      	ldr	r1, [pc, #292]	; (8005254 <HAL_GPIO_DeInit+0x214>)
 800512e:	4013      	ands	r3, r2
 8005130:	600b      	str	r3, [r1, #0]
 8005132:	4b48      	ldr	r3, [pc, #288]	; (8005254 <HAL_GPIO_DeInit+0x214>)
 8005134:	685a      	ldr	r2, [r3, #4]
 8005136:	68fb      	ldr	r3, [r7, #12]
 8005138:	43db      	mvns	r3, r3
 800513a:	4946      	ldr	r1, [pc, #280]	; (8005254 <HAL_GPIO_DeInit+0x214>)
 800513c:	4013      	ands	r3, r2
 800513e:	604b      	str	r3, [r1, #4]
 8005140:	4b44      	ldr	r3, [pc, #272]	; (8005254 <HAL_GPIO_DeInit+0x214>)
 8005142:	689a      	ldr	r2, [r3, #8]
 8005144:	68fb      	ldr	r3, [r7, #12]
 8005146:	43db      	mvns	r3, r3
 8005148:	4942      	ldr	r1, [pc, #264]	; (8005254 <HAL_GPIO_DeInit+0x214>)
 800514a:	4013      	ands	r3, r2
 800514c:	608b      	str	r3, [r1, #8]
 800514e:	4b41      	ldr	r3, [pc, #260]	; (8005254 <HAL_GPIO_DeInit+0x214>)
 8005150:	68da      	ldr	r2, [r3, #12]
 8005152:	68fb      	ldr	r3, [r7, #12]
 8005154:	43db      	mvns	r3, r3
 8005156:	493f      	ldr	r1, [pc, #252]	; (8005254 <HAL_GPIO_DeInit+0x214>)
 8005158:	4013      	ands	r3, r2
 800515a:	60cb      	str	r3, [r1, #12]
 800515c:	697b      	ldr	r3, [r7, #20]
 800515e:	f003 0303 	and.w	r3, r3, #3
 8005162:	009b      	lsls	r3, r3, #2
 8005164:	220f      	movs	r2, #15
 8005166:	fa02 f303 	lsl.w	r3, r2, r3
 800516a:	60bb      	str	r3, [r7, #8]
 800516c:	4a2e      	ldr	r2, [pc, #184]	; (8005228 <HAL_GPIO_DeInit+0x1e8>)
 800516e:	697b      	ldr	r3, [r7, #20]
 8005170:	089b      	lsrs	r3, r3, #2
 8005172:	3302      	adds	r3, #2
 8005174:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8005178:	68bb      	ldr	r3, [r7, #8]
 800517a:	43da      	mvns	r2, r3
 800517c:	482a      	ldr	r0, [pc, #168]	; (8005228 <HAL_GPIO_DeInit+0x1e8>)
 800517e:	697b      	ldr	r3, [r7, #20]
 8005180:	089b      	lsrs	r3, r3, #2
 8005182:	400a      	ands	r2, r1
 8005184:	3302      	adds	r3, #2
 8005186:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	681a      	ldr	r2, [r3, #0]
 800518e:	697b      	ldr	r3, [r7, #20]
 8005190:	005b      	lsls	r3, r3, #1
 8005192:	2103      	movs	r1, #3
 8005194:	fa01 f303 	lsl.w	r3, r1, r3
 8005198:	43db      	mvns	r3, r3
 800519a:	401a      	ands	r2, r3
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	601a      	str	r2, [r3, #0]
 80051a0:	697b      	ldr	r3, [r7, #20]
 80051a2:	08da      	lsrs	r2, r3, #3
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	3208      	adds	r2, #8
 80051a8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80051ac:	697b      	ldr	r3, [r7, #20]
 80051ae:	f003 0307 	and.w	r3, r3, #7
 80051b2:	009b      	lsls	r3, r3, #2
 80051b4:	220f      	movs	r2, #15
 80051b6:	fa02 f303 	lsl.w	r3, r2, r3
 80051ba:	43db      	mvns	r3, r3
 80051bc:	697a      	ldr	r2, [r7, #20]
 80051be:	08d2      	lsrs	r2, r2, #3
 80051c0:	4019      	ands	r1, r3
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	3208      	adds	r2, #8
 80051c6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80051ca:	687b      	ldr	r3, [r7, #4]
 80051cc:	68da      	ldr	r2, [r3, #12]
 80051ce:	697b      	ldr	r3, [r7, #20]
 80051d0:	005b      	lsls	r3, r3, #1
 80051d2:	2103      	movs	r1, #3
 80051d4:	fa01 f303 	lsl.w	r3, r1, r3
 80051d8:	43db      	mvns	r3, r3
 80051da:	401a      	ands	r2, r3
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	60da      	str	r2, [r3, #12]
 80051e0:	687b      	ldr	r3, [r7, #4]
 80051e2:	685a      	ldr	r2, [r3, #4]
 80051e4:	2101      	movs	r1, #1
 80051e6:	697b      	ldr	r3, [r7, #20]
 80051e8:	fa01 f303 	lsl.w	r3, r1, r3
 80051ec:	43db      	mvns	r3, r3
 80051ee:	401a      	ands	r2, r3
 80051f0:	687b      	ldr	r3, [r7, #4]
 80051f2:	605a      	str	r2, [r3, #4]
 80051f4:	687b      	ldr	r3, [r7, #4]
 80051f6:	689a      	ldr	r2, [r3, #8]
 80051f8:	697b      	ldr	r3, [r7, #20]
 80051fa:	005b      	lsls	r3, r3, #1
 80051fc:	2103      	movs	r1, #3
 80051fe:	fa01 f303 	lsl.w	r3, r1, r3
 8005202:	43db      	mvns	r3, r3
 8005204:	401a      	ands	r2, r3
 8005206:	687b      	ldr	r3, [r7, #4]
 8005208:	609a      	str	r2, [r3, #8]
 800520a:	697b      	ldr	r3, [r7, #20]
 800520c:	3301      	adds	r3, #1
 800520e:	617b      	str	r3, [r7, #20]
 8005210:	697b      	ldr	r3, [r7, #20]
 8005212:	2b0f      	cmp	r3, #15
 8005214:	f67f af22 	bls.w	800505c <HAL_GPIO_DeInit+0x1c>
 8005218:	bf00      	nop
 800521a:	bf00      	nop
 800521c:	371c      	adds	r7, #28
 800521e:	46bd      	mov	sp, r7
 8005220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005224:	4770      	bx	lr
 8005226:	bf00      	nop
 8005228:	40013800 	.word	0x40013800
 800522c:	40020000 	.word	0x40020000
 8005230:	40020400 	.word	0x40020400
 8005234:	40020800 	.word	0x40020800
 8005238:	40020c00 	.word	0x40020c00
 800523c:	40021000 	.word	0x40021000
 8005240:	40021400 	.word	0x40021400
 8005244:	40021800 	.word	0x40021800
 8005248:	40021c00 	.word	0x40021c00
 800524c:	40022000 	.word	0x40022000
 8005250:	40022400 	.word	0x40022400
 8005254:	40013c00 	.word	0x40013c00

08005258 <HAL_GPIO_WritePin>:
 8005258:	b480      	push	{r7}
 800525a:	b083      	sub	sp, #12
 800525c:	af00      	add	r7, sp, #0
 800525e:	6078      	str	r0, [r7, #4]
 8005260:	460b      	mov	r3, r1
 8005262:	807b      	strh	r3, [r7, #2]
 8005264:	4613      	mov	r3, r2
 8005266:	707b      	strb	r3, [r7, #1]
 8005268:	787b      	ldrb	r3, [r7, #1]
 800526a:	2b00      	cmp	r3, #0
 800526c:	d003      	beq.n	8005276 <HAL_GPIO_WritePin+0x1e>
 800526e:	887a      	ldrh	r2, [r7, #2]
 8005270:	687b      	ldr	r3, [r7, #4]
 8005272:	619a      	str	r2, [r3, #24]
 8005274:	e003      	b.n	800527e <HAL_GPIO_WritePin+0x26>
 8005276:	887b      	ldrh	r3, [r7, #2]
 8005278:	041a      	lsls	r2, r3, #16
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	619a      	str	r2, [r3, #24]
 800527e:	bf00      	nop
 8005280:	370c      	adds	r7, #12
 8005282:	46bd      	mov	sp, r7
 8005284:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005288:	4770      	bx	lr
	...

0800528c <HAL_I2C_Init>:
 800528c:	b580      	push	{r7, lr}
 800528e:	b082      	sub	sp, #8
 8005290:	af00      	add	r7, sp, #0
 8005292:	6078      	str	r0, [r7, #4]
 8005294:	687b      	ldr	r3, [r7, #4]
 8005296:	2b00      	cmp	r3, #0
 8005298:	d101      	bne.n	800529e <HAL_I2C_Init+0x12>
 800529a:	2301      	movs	r3, #1
 800529c:	e07f      	b.n	800539e <HAL_I2C_Init+0x112>
 800529e:	687b      	ldr	r3, [r7, #4]
 80052a0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80052a4:	b2db      	uxtb	r3, r3
 80052a6:	2b00      	cmp	r3, #0
 80052a8:	d106      	bne.n	80052b8 <HAL_I2C_Init+0x2c>
 80052aa:	687b      	ldr	r3, [r7, #4]
 80052ac:	2200      	movs	r2, #0
 80052ae:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80052b2:	6878      	ldr	r0, [r7, #4]
 80052b4:	f7fc fdc0 	bl	8001e38 <HAL_I2C_MspInit>
 80052b8:	687b      	ldr	r3, [r7, #4]
 80052ba:	2224      	movs	r2, #36	; 0x24
 80052bc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	681a      	ldr	r2, [r3, #0]
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	681b      	ldr	r3, [r3, #0]
 80052ca:	f022 0201 	bic.w	r2, r2, #1
 80052ce:	601a      	str	r2, [r3, #0]
 80052d0:	687b      	ldr	r3, [r7, #4]
 80052d2:	685a      	ldr	r2, [r3, #4]
 80052d4:	687b      	ldr	r3, [r7, #4]
 80052d6:	681b      	ldr	r3, [r3, #0]
 80052d8:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80052dc:	611a      	str	r2, [r3, #16]
 80052de:	687b      	ldr	r3, [r7, #4]
 80052e0:	681b      	ldr	r3, [r3, #0]
 80052e2:	689a      	ldr	r2, [r3, #8]
 80052e4:	687b      	ldr	r3, [r7, #4]
 80052e6:	681b      	ldr	r3, [r3, #0]
 80052e8:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80052ec:	609a      	str	r2, [r3, #8]
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	68db      	ldr	r3, [r3, #12]
 80052f2:	2b01      	cmp	r3, #1
 80052f4:	d107      	bne.n	8005306 <HAL_I2C_Init+0x7a>
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	689a      	ldr	r2, [r3, #8]
 80052fa:	687b      	ldr	r3, [r7, #4]
 80052fc:	681b      	ldr	r3, [r3, #0]
 80052fe:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005302:	609a      	str	r2, [r3, #8]
 8005304:	e006      	b.n	8005314 <HAL_I2C_Init+0x88>
 8005306:	687b      	ldr	r3, [r7, #4]
 8005308:	689a      	ldr	r2, [r3, #8]
 800530a:	687b      	ldr	r3, [r7, #4]
 800530c:	681b      	ldr	r3, [r3, #0]
 800530e:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 8005312:	609a      	str	r2, [r3, #8]
 8005314:	687b      	ldr	r3, [r7, #4]
 8005316:	68db      	ldr	r3, [r3, #12]
 8005318:	2b02      	cmp	r3, #2
 800531a:	d104      	bne.n	8005326 <HAL_I2C_Init+0x9a>
 800531c:	687b      	ldr	r3, [r7, #4]
 800531e:	681b      	ldr	r3, [r3, #0]
 8005320:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8005324:	605a      	str	r2, [r3, #4]
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	681b      	ldr	r3, [r3, #0]
 800532a:	6859      	ldr	r1, [r3, #4]
 800532c:	687b      	ldr	r3, [r7, #4]
 800532e:	681a      	ldr	r2, [r3, #0]
 8005330:	4b1d      	ldr	r3, [pc, #116]	; (80053a8 <HAL_I2C_Init+0x11c>)
 8005332:	430b      	orrs	r3, r1
 8005334:	6053      	str	r3, [r2, #4]
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	681b      	ldr	r3, [r3, #0]
 800533a:	68da      	ldr	r2, [r3, #12]
 800533c:	687b      	ldr	r3, [r7, #4]
 800533e:	681b      	ldr	r3, [r3, #0]
 8005340:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005344:	60da      	str	r2, [r3, #12]
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	691a      	ldr	r2, [r3, #16]
 800534a:	687b      	ldr	r3, [r7, #4]
 800534c:	695b      	ldr	r3, [r3, #20]
 800534e:	ea42 0103 	orr.w	r1, r2, r3
 8005352:	687b      	ldr	r3, [r7, #4]
 8005354:	699b      	ldr	r3, [r3, #24]
 8005356:	021a      	lsls	r2, r3, #8
 8005358:	687b      	ldr	r3, [r7, #4]
 800535a:	681b      	ldr	r3, [r3, #0]
 800535c:	430a      	orrs	r2, r1
 800535e:	60da      	str	r2, [r3, #12]
 8005360:	687b      	ldr	r3, [r7, #4]
 8005362:	69d9      	ldr	r1, [r3, #28]
 8005364:	687b      	ldr	r3, [r7, #4]
 8005366:	6a1a      	ldr	r2, [r3, #32]
 8005368:	687b      	ldr	r3, [r7, #4]
 800536a:	681b      	ldr	r3, [r3, #0]
 800536c:	430a      	orrs	r2, r1
 800536e:	601a      	str	r2, [r3, #0]
 8005370:	687b      	ldr	r3, [r7, #4]
 8005372:	681b      	ldr	r3, [r3, #0]
 8005374:	681a      	ldr	r2, [r3, #0]
 8005376:	687b      	ldr	r3, [r7, #4]
 8005378:	681b      	ldr	r3, [r3, #0]
 800537a:	f042 0201 	orr.w	r2, r2, #1
 800537e:	601a      	str	r2, [r3, #0]
 8005380:	687b      	ldr	r3, [r7, #4]
 8005382:	2200      	movs	r2, #0
 8005384:	645a      	str	r2, [r3, #68]	; 0x44
 8005386:	687b      	ldr	r3, [r7, #4]
 8005388:	2220      	movs	r2, #32
 800538a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	2200      	movs	r2, #0
 8005392:	631a      	str	r2, [r3, #48]	; 0x30
 8005394:	687b      	ldr	r3, [r7, #4]
 8005396:	2200      	movs	r2, #0
 8005398:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800539c:	2300      	movs	r3, #0
 800539e:	4618      	mov	r0, r3
 80053a0:	3708      	adds	r7, #8
 80053a2:	46bd      	mov	sp, r7
 80053a4:	bd80      	pop	{r7, pc}
 80053a6:	bf00      	nop
 80053a8:	02008000 	.word	0x02008000

080053ac <HAL_I2C_DeInit>:
 80053ac:	b580      	push	{r7, lr}
 80053ae:	b082      	sub	sp, #8
 80053b0:	af00      	add	r7, sp, #0
 80053b2:	6078      	str	r0, [r7, #4]
 80053b4:	687b      	ldr	r3, [r7, #4]
 80053b6:	2b00      	cmp	r3, #0
 80053b8:	d101      	bne.n	80053be <HAL_I2C_DeInit+0x12>
 80053ba:	2301      	movs	r3, #1
 80053bc:	e021      	b.n	8005402 <HAL_I2C_DeInit+0x56>
 80053be:	687b      	ldr	r3, [r7, #4]
 80053c0:	2224      	movs	r2, #36	; 0x24
 80053c2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80053c6:	687b      	ldr	r3, [r7, #4]
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	681a      	ldr	r2, [r3, #0]
 80053cc:	687b      	ldr	r3, [r7, #4]
 80053ce:	681b      	ldr	r3, [r3, #0]
 80053d0:	f022 0201 	bic.w	r2, r2, #1
 80053d4:	601a      	str	r2, [r3, #0]
 80053d6:	6878      	ldr	r0, [r7, #4]
 80053d8:	f7fc fd86 	bl	8001ee8 <HAL_I2C_MspDeInit>
 80053dc:	687b      	ldr	r3, [r7, #4]
 80053de:	2200      	movs	r2, #0
 80053e0:	645a      	str	r2, [r3, #68]	; 0x44
 80053e2:	687b      	ldr	r3, [r7, #4]
 80053e4:	2200      	movs	r2, #0
 80053e6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80053ea:	687b      	ldr	r3, [r7, #4]
 80053ec:	2200      	movs	r2, #0
 80053ee:	631a      	str	r2, [r3, #48]	; 0x30
 80053f0:	687b      	ldr	r3, [r7, #4]
 80053f2:	2200      	movs	r2, #0
 80053f4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80053f8:	687b      	ldr	r3, [r7, #4]
 80053fa:	2200      	movs	r2, #0
 80053fc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005400:	2300      	movs	r3, #0
 8005402:	4618      	mov	r0, r3
 8005404:	3708      	adds	r7, #8
 8005406:	46bd      	mov	sp, r7
 8005408:	bd80      	pop	{r7, pc}
	...

0800540c <HAL_I2C_Mem_Write>:
 800540c:	b580      	push	{r7, lr}
 800540e:	b088      	sub	sp, #32
 8005410:	af02      	add	r7, sp, #8
 8005412:	60f8      	str	r0, [r7, #12]
 8005414:	4608      	mov	r0, r1
 8005416:	4611      	mov	r1, r2
 8005418:	461a      	mov	r2, r3
 800541a:	4603      	mov	r3, r0
 800541c:	817b      	strh	r3, [r7, #10]
 800541e:	460b      	mov	r3, r1
 8005420:	813b      	strh	r3, [r7, #8]
 8005422:	4613      	mov	r3, r2
 8005424:	80fb      	strh	r3, [r7, #6]
 8005426:	68fb      	ldr	r3, [r7, #12]
 8005428:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800542c:	b2db      	uxtb	r3, r3
 800542e:	2b20      	cmp	r3, #32
 8005430:	f040 80f9 	bne.w	8005626 <HAL_I2C_Mem_Write+0x21a>
 8005434:	6a3b      	ldr	r3, [r7, #32]
 8005436:	2b00      	cmp	r3, #0
 8005438:	d002      	beq.n	8005440 <HAL_I2C_Mem_Write+0x34>
 800543a:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800543c:	2b00      	cmp	r3, #0
 800543e:	d105      	bne.n	800544c <HAL_I2C_Mem_Write+0x40>
 8005440:	68fb      	ldr	r3, [r7, #12]
 8005442:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005446:	645a      	str	r2, [r3, #68]	; 0x44
 8005448:	2301      	movs	r3, #1
 800544a:	e0ed      	b.n	8005628 <HAL_I2C_Mem_Write+0x21c>
 800544c:	68fb      	ldr	r3, [r7, #12]
 800544e:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8005452:	2b01      	cmp	r3, #1
 8005454:	d101      	bne.n	800545a <HAL_I2C_Mem_Write+0x4e>
 8005456:	2302      	movs	r3, #2
 8005458:	e0e6      	b.n	8005628 <HAL_I2C_Mem_Write+0x21c>
 800545a:	68fb      	ldr	r3, [r7, #12]
 800545c:	2201      	movs	r2, #1
 800545e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005462:	f7fe fa2f 	bl	80038c4 <HAL_GetTick>
 8005466:	6178      	str	r0, [r7, #20]
 8005468:	697b      	ldr	r3, [r7, #20]
 800546a:	9300      	str	r3, [sp, #0]
 800546c:	2319      	movs	r3, #25
 800546e:	2201      	movs	r2, #1
 8005470:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8005474:	68f8      	ldr	r0, [r7, #12]
 8005476:	f000 fad1 	bl	8005a1c <I2C_WaitOnFlagUntilTimeout>
 800547a:	4603      	mov	r3, r0
 800547c:	2b00      	cmp	r3, #0
 800547e:	d001      	beq.n	8005484 <HAL_I2C_Mem_Write+0x78>
 8005480:	2301      	movs	r3, #1
 8005482:	e0d1      	b.n	8005628 <HAL_I2C_Mem_Write+0x21c>
 8005484:	68fb      	ldr	r3, [r7, #12]
 8005486:	2221      	movs	r2, #33	; 0x21
 8005488:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800548c:	68fb      	ldr	r3, [r7, #12]
 800548e:	2240      	movs	r2, #64	; 0x40
 8005490:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005494:	68fb      	ldr	r3, [r7, #12]
 8005496:	2200      	movs	r2, #0
 8005498:	645a      	str	r2, [r3, #68]	; 0x44
 800549a:	68fb      	ldr	r3, [r7, #12]
 800549c:	6a3a      	ldr	r2, [r7, #32]
 800549e:	625a      	str	r2, [r3, #36]	; 0x24
 80054a0:	68fb      	ldr	r3, [r7, #12]
 80054a2:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80054a4:	855a      	strh	r2, [r3, #42]	; 0x2a
 80054a6:	68fb      	ldr	r3, [r7, #12]
 80054a8:	2200      	movs	r2, #0
 80054aa:	635a      	str	r2, [r3, #52]	; 0x34
 80054ac:	88f8      	ldrh	r0, [r7, #6]
 80054ae:	893a      	ldrh	r2, [r7, #8]
 80054b0:	8979      	ldrh	r1, [r7, #10]
 80054b2:	697b      	ldr	r3, [r7, #20]
 80054b4:	9301      	str	r3, [sp, #4]
 80054b6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80054b8:	9300      	str	r3, [sp, #0]
 80054ba:	4603      	mov	r3, r0
 80054bc:	68f8      	ldr	r0, [r7, #12]
 80054be:	f000 f9e1 	bl	8005884 <I2C_RequestMemoryWrite>
 80054c2:	4603      	mov	r3, r0
 80054c4:	2b00      	cmp	r3, #0
 80054c6:	d005      	beq.n	80054d4 <HAL_I2C_Mem_Write+0xc8>
 80054c8:	68fb      	ldr	r3, [r7, #12]
 80054ca:	2200      	movs	r2, #0
 80054cc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80054d0:	2301      	movs	r3, #1
 80054d2:	e0a9      	b.n	8005628 <HAL_I2C_Mem_Write+0x21c>
 80054d4:	68fb      	ldr	r3, [r7, #12]
 80054d6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80054d8:	b29b      	uxth	r3, r3
 80054da:	2bff      	cmp	r3, #255	; 0xff
 80054dc:	d90e      	bls.n	80054fc <HAL_I2C_Mem_Write+0xf0>
 80054de:	68fb      	ldr	r3, [r7, #12]
 80054e0:	22ff      	movs	r2, #255	; 0xff
 80054e2:	851a      	strh	r2, [r3, #40]	; 0x28
 80054e4:	68fb      	ldr	r3, [r7, #12]
 80054e6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80054e8:	b2da      	uxtb	r2, r3
 80054ea:	8979      	ldrh	r1, [r7, #10]
 80054ec:	2300      	movs	r3, #0
 80054ee:	9300      	str	r3, [sp, #0]
 80054f0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80054f4:	68f8      	ldr	r0, [r7, #12]
 80054f6:	f000 fbb3 	bl	8005c60 <I2C_TransferConfig>
 80054fa:	e00f      	b.n	800551c <HAL_I2C_Mem_Write+0x110>
 80054fc:	68fb      	ldr	r3, [r7, #12]
 80054fe:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005500:	b29a      	uxth	r2, r3
 8005502:	68fb      	ldr	r3, [r7, #12]
 8005504:	851a      	strh	r2, [r3, #40]	; 0x28
 8005506:	68fb      	ldr	r3, [r7, #12]
 8005508:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800550a:	b2da      	uxtb	r2, r3
 800550c:	8979      	ldrh	r1, [r7, #10]
 800550e:	2300      	movs	r3, #0
 8005510:	9300      	str	r3, [sp, #0]
 8005512:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8005516:	68f8      	ldr	r0, [r7, #12]
 8005518:	f000 fba2 	bl	8005c60 <I2C_TransferConfig>
 800551c:	697a      	ldr	r2, [r7, #20]
 800551e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8005520:	68f8      	ldr	r0, [r7, #12]
 8005522:	f000 fabb 	bl	8005a9c <I2C_WaitOnTXISFlagUntilTimeout>
 8005526:	4603      	mov	r3, r0
 8005528:	2b00      	cmp	r3, #0
 800552a:	d001      	beq.n	8005530 <HAL_I2C_Mem_Write+0x124>
 800552c:	2301      	movs	r3, #1
 800552e:	e07b      	b.n	8005628 <HAL_I2C_Mem_Write+0x21c>
 8005530:	68fb      	ldr	r3, [r7, #12]
 8005532:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005534:	781a      	ldrb	r2, [r3, #0]
 8005536:	68fb      	ldr	r3, [r7, #12]
 8005538:	681b      	ldr	r3, [r3, #0]
 800553a:	629a      	str	r2, [r3, #40]	; 0x28
 800553c:	68fb      	ldr	r3, [r7, #12]
 800553e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005540:	1c5a      	adds	r2, r3, #1
 8005542:	68fb      	ldr	r3, [r7, #12]
 8005544:	625a      	str	r2, [r3, #36]	; 0x24
 8005546:	68fb      	ldr	r3, [r7, #12]
 8005548:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800554a:	b29b      	uxth	r3, r3
 800554c:	3b01      	subs	r3, #1
 800554e:	b29a      	uxth	r2, r3
 8005550:	68fb      	ldr	r3, [r7, #12]
 8005552:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005554:	68fb      	ldr	r3, [r7, #12]
 8005556:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005558:	3b01      	subs	r3, #1
 800555a:	b29a      	uxth	r2, r3
 800555c:	68fb      	ldr	r3, [r7, #12]
 800555e:	851a      	strh	r2, [r3, #40]	; 0x28
 8005560:	68fb      	ldr	r3, [r7, #12]
 8005562:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005564:	b29b      	uxth	r3, r3
 8005566:	2b00      	cmp	r3, #0
 8005568:	d034      	beq.n	80055d4 <HAL_I2C_Mem_Write+0x1c8>
 800556a:	68fb      	ldr	r3, [r7, #12]
 800556c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800556e:	2b00      	cmp	r3, #0
 8005570:	d130      	bne.n	80055d4 <HAL_I2C_Mem_Write+0x1c8>
 8005572:	697b      	ldr	r3, [r7, #20]
 8005574:	9300      	str	r3, [sp, #0]
 8005576:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005578:	2200      	movs	r2, #0
 800557a:	2180      	movs	r1, #128	; 0x80
 800557c:	68f8      	ldr	r0, [r7, #12]
 800557e:	f000 fa4d 	bl	8005a1c <I2C_WaitOnFlagUntilTimeout>
 8005582:	4603      	mov	r3, r0
 8005584:	2b00      	cmp	r3, #0
 8005586:	d001      	beq.n	800558c <HAL_I2C_Mem_Write+0x180>
 8005588:	2301      	movs	r3, #1
 800558a:	e04d      	b.n	8005628 <HAL_I2C_Mem_Write+0x21c>
 800558c:	68fb      	ldr	r3, [r7, #12]
 800558e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005590:	b29b      	uxth	r3, r3
 8005592:	2bff      	cmp	r3, #255	; 0xff
 8005594:	d90e      	bls.n	80055b4 <HAL_I2C_Mem_Write+0x1a8>
 8005596:	68fb      	ldr	r3, [r7, #12]
 8005598:	22ff      	movs	r2, #255	; 0xff
 800559a:	851a      	strh	r2, [r3, #40]	; 0x28
 800559c:	68fb      	ldr	r3, [r7, #12]
 800559e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80055a0:	b2da      	uxtb	r2, r3
 80055a2:	8979      	ldrh	r1, [r7, #10]
 80055a4:	2300      	movs	r3, #0
 80055a6:	9300      	str	r3, [sp, #0]
 80055a8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80055ac:	68f8      	ldr	r0, [r7, #12]
 80055ae:	f000 fb57 	bl	8005c60 <I2C_TransferConfig>
 80055b2:	e00f      	b.n	80055d4 <HAL_I2C_Mem_Write+0x1c8>
 80055b4:	68fb      	ldr	r3, [r7, #12]
 80055b6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80055b8:	b29a      	uxth	r2, r3
 80055ba:	68fb      	ldr	r3, [r7, #12]
 80055bc:	851a      	strh	r2, [r3, #40]	; 0x28
 80055be:	68fb      	ldr	r3, [r7, #12]
 80055c0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80055c2:	b2da      	uxtb	r2, r3
 80055c4:	8979      	ldrh	r1, [r7, #10]
 80055c6:	2300      	movs	r3, #0
 80055c8:	9300      	str	r3, [sp, #0]
 80055ca:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80055ce:	68f8      	ldr	r0, [r7, #12]
 80055d0:	f000 fb46 	bl	8005c60 <I2C_TransferConfig>
 80055d4:	68fb      	ldr	r3, [r7, #12]
 80055d6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80055d8:	b29b      	uxth	r3, r3
 80055da:	2b00      	cmp	r3, #0
 80055dc:	d19e      	bne.n	800551c <HAL_I2C_Mem_Write+0x110>
 80055de:	697a      	ldr	r2, [r7, #20]
 80055e0:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80055e2:	68f8      	ldr	r0, [r7, #12]
 80055e4:	f000 fa9a 	bl	8005b1c <I2C_WaitOnSTOPFlagUntilTimeout>
 80055e8:	4603      	mov	r3, r0
 80055ea:	2b00      	cmp	r3, #0
 80055ec:	d001      	beq.n	80055f2 <HAL_I2C_Mem_Write+0x1e6>
 80055ee:	2301      	movs	r3, #1
 80055f0:	e01a      	b.n	8005628 <HAL_I2C_Mem_Write+0x21c>
 80055f2:	68fb      	ldr	r3, [r7, #12]
 80055f4:	681b      	ldr	r3, [r3, #0]
 80055f6:	2220      	movs	r2, #32
 80055f8:	61da      	str	r2, [r3, #28]
 80055fa:	68fb      	ldr	r3, [r7, #12]
 80055fc:	681b      	ldr	r3, [r3, #0]
 80055fe:	6859      	ldr	r1, [r3, #4]
 8005600:	68fb      	ldr	r3, [r7, #12]
 8005602:	681a      	ldr	r2, [r3, #0]
 8005604:	4b0a      	ldr	r3, [pc, #40]	; (8005630 <HAL_I2C_Mem_Write+0x224>)
 8005606:	400b      	ands	r3, r1
 8005608:	6053      	str	r3, [r2, #4]
 800560a:	68fb      	ldr	r3, [r7, #12]
 800560c:	2220      	movs	r2, #32
 800560e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005612:	68fb      	ldr	r3, [r7, #12]
 8005614:	2200      	movs	r2, #0
 8005616:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800561a:	68fb      	ldr	r3, [r7, #12]
 800561c:	2200      	movs	r2, #0
 800561e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005622:	2300      	movs	r3, #0
 8005624:	e000      	b.n	8005628 <HAL_I2C_Mem_Write+0x21c>
 8005626:	2302      	movs	r3, #2
 8005628:	4618      	mov	r0, r3
 800562a:	3718      	adds	r7, #24
 800562c:	46bd      	mov	sp, r7
 800562e:	bd80      	pop	{r7, pc}
 8005630:	fe00e800 	.word	0xfe00e800

08005634 <HAL_I2C_Mem_Read>:
 8005634:	b580      	push	{r7, lr}
 8005636:	b088      	sub	sp, #32
 8005638:	af02      	add	r7, sp, #8
 800563a:	60f8      	str	r0, [r7, #12]
 800563c:	4608      	mov	r0, r1
 800563e:	4611      	mov	r1, r2
 8005640:	461a      	mov	r2, r3
 8005642:	4603      	mov	r3, r0
 8005644:	817b      	strh	r3, [r7, #10]
 8005646:	460b      	mov	r3, r1
 8005648:	813b      	strh	r3, [r7, #8]
 800564a:	4613      	mov	r3, r2
 800564c:	80fb      	strh	r3, [r7, #6]
 800564e:	68fb      	ldr	r3, [r7, #12]
 8005650:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8005654:	b2db      	uxtb	r3, r3
 8005656:	2b20      	cmp	r3, #32
 8005658:	f040 80fd 	bne.w	8005856 <HAL_I2C_Mem_Read+0x222>
 800565c:	6a3b      	ldr	r3, [r7, #32]
 800565e:	2b00      	cmp	r3, #0
 8005660:	d002      	beq.n	8005668 <HAL_I2C_Mem_Read+0x34>
 8005662:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8005664:	2b00      	cmp	r3, #0
 8005666:	d105      	bne.n	8005674 <HAL_I2C_Mem_Read+0x40>
 8005668:	68fb      	ldr	r3, [r7, #12]
 800566a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800566e:	645a      	str	r2, [r3, #68]	; 0x44
 8005670:	2301      	movs	r3, #1
 8005672:	e0f1      	b.n	8005858 <HAL_I2C_Mem_Read+0x224>
 8005674:	68fb      	ldr	r3, [r7, #12]
 8005676:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800567a:	2b01      	cmp	r3, #1
 800567c:	d101      	bne.n	8005682 <HAL_I2C_Mem_Read+0x4e>
 800567e:	2302      	movs	r3, #2
 8005680:	e0ea      	b.n	8005858 <HAL_I2C_Mem_Read+0x224>
 8005682:	68fb      	ldr	r3, [r7, #12]
 8005684:	2201      	movs	r2, #1
 8005686:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800568a:	f7fe f91b 	bl	80038c4 <HAL_GetTick>
 800568e:	6178      	str	r0, [r7, #20]
 8005690:	697b      	ldr	r3, [r7, #20]
 8005692:	9300      	str	r3, [sp, #0]
 8005694:	2319      	movs	r3, #25
 8005696:	2201      	movs	r2, #1
 8005698:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800569c:	68f8      	ldr	r0, [r7, #12]
 800569e:	f000 f9bd 	bl	8005a1c <I2C_WaitOnFlagUntilTimeout>
 80056a2:	4603      	mov	r3, r0
 80056a4:	2b00      	cmp	r3, #0
 80056a6:	d001      	beq.n	80056ac <HAL_I2C_Mem_Read+0x78>
 80056a8:	2301      	movs	r3, #1
 80056aa:	e0d5      	b.n	8005858 <HAL_I2C_Mem_Read+0x224>
 80056ac:	68fb      	ldr	r3, [r7, #12]
 80056ae:	2222      	movs	r2, #34	; 0x22
 80056b0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80056b4:	68fb      	ldr	r3, [r7, #12]
 80056b6:	2240      	movs	r2, #64	; 0x40
 80056b8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80056bc:	68fb      	ldr	r3, [r7, #12]
 80056be:	2200      	movs	r2, #0
 80056c0:	645a      	str	r2, [r3, #68]	; 0x44
 80056c2:	68fb      	ldr	r3, [r7, #12]
 80056c4:	6a3a      	ldr	r2, [r7, #32]
 80056c6:	625a      	str	r2, [r3, #36]	; 0x24
 80056c8:	68fb      	ldr	r3, [r7, #12]
 80056ca:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80056cc:	855a      	strh	r2, [r3, #42]	; 0x2a
 80056ce:	68fb      	ldr	r3, [r7, #12]
 80056d0:	2200      	movs	r2, #0
 80056d2:	635a      	str	r2, [r3, #52]	; 0x34
 80056d4:	88f8      	ldrh	r0, [r7, #6]
 80056d6:	893a      	ldrh	r2, [r7, #8]
 80056d8:	8979      	ldrh	r1, [r7, #10]
 80056da:	697b      	ldr	r3, [r7, #20]
 80056dc:	9301      	str	r3, [sp, #4]
 80056de:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80056e0:	9300      	str	r3, [sp, #0]
 80056e2:	4603      	mov	r3, r0
 80056e4:	68f8      	ldr	r0, [r7, #12]
 80056e6:	f000 f921 	bl	800592c <I2C_RequestMemoryRead>
 80056ea:	4603      	mov	r3, r0
 80056ec:	2b00      	cmp	r3, #0
 80056ee:	d005      	beq.n	80056fc <HAL_I2C_Mem_Read+0xc8>
 80056f0:	68fb      	ldr	r3, [r7, #12]
 80056f2:	2200      	movs	r2, #0
 80056f4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80056f8:	2301      	movs	r3, #1
 80056fa:	e0ad      	b.n	8005858 <HAL_I2C_Mem_Read+0x224>
 80056fc:	68fb      	ldr	r3, [r7, #12]
 80056fe:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005700:	b29b      	uxth	r3, r3
 8005702:	2bff      	cmp	r3, #255	; 0xff
 8005704:	d90e      	bls.n	8005724 <HAL_I2C_Mem_Read+0xf0>
 8005706:	68fb      	ldr	r3, [r7, #12]
 8005708:	22ff      	movs	r2, #255	; 0xff
 800570a:	851a      	strh	r2, [r3, #40]	; 0x28
 800570c:	68fb      	ldr	r3, [r7, #12]
 800570e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005710:	b2da      	uxtb	r2, r3
 8005712:	8979      	ldrh	r1, [r7, #10]
 8005714:	4b52      	ldr	r3, [pc, #328]	; (8005860 <HAL_I2C_Mem_Read+0x22c>)
 8005716:	9300      	str	r3, [sp, #0]
 8005718:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800571c:	68f8      	ldr	r0, [r7, #12]
 800571e:	f000 fa9f 	bl	8005c60 <I2C_TransferConfig>
 8005722:	e00f      	b.n	8005744 <HAL_I2C_Mem_Read+0x110>
 8005724:	68fb      	ldr	r3, [r7, #12]
 8005726:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005728:	b29a      	uxth	r2, r3
 800572a:	68fb      	ldr	r3, [r7, #12]
 800572c:	851a      	strh	r2, [r3, #40]	; 0x28
 800572e:	68fb      	ldr	r3, [r7, #12]
 8005730:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005732:	b2da      	uxtb	r2, r3
 8005734:	8979      	ldrh	r1, [r7, #10]
 8005736:	4b4a      	ldr	r3, [pc, #296]	; (8005860 <HAL_I2C_Mem_Read+0x22c>)
 8005738:	9300      	str	r3, [sp, #0]
 800573a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800573e:	68f8      	ldr	r0, [r7, #12]
 8005740:	f000 fa8e 	bl	8005c60 <I2C_TransferConfig>
 8005744:	697b      	ldr	r3, [r7, #20]
 8005746:	9300      	str	r3, [sp, #0]
 8005748:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800574a:	2200      	movs	r2, #0
 800574c:	2104      	movs	r1, #4
 800574e:	68f8      	ldr	r0, [r7, #12]
 8005750:	f000 f964 	bl	8005a1c <I2C_WaitOnFlagUntilTimeout>
 8005754:	4603      	mov	r3, r0
 8005756:	2b00      	cmp	r3, #0
 8005758:	d001      	beq.n	800575e <HAL_I2C_Mem_Read+0x12a>
 800575a:	2301      	movs	r3, #1
 800575c:	e07c      	b.n	8005858 <HAL_I2C_Mem_Read+0x224>
 800575e:	68fb      	ldr	r3, [r7, #12]
 8005760:	681b      	ldr	r3, [r3, #0]
 8005762:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8005764:	68fb      	ldr	r3, [r7, #12]
 8005766:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005768:	b2d2      	uxtb	r2, r2
 800576a:	701a      	strb	r2, [r3, #0]
 800576c:	68fb      	ldr	r3, [r7, #12]
 800576e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005770:	1c5a      	adds	r2, r3, #1
 8005772:	68fb      	ldr	r3, [r7, #12]
 8005774:	625a      	str	r2, [r3, #36]	; 0x24
 8005776:	68fb      	ldr	r3, [r7, #12]
 8005778:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800577a:	3b01      	subs	r3, #1
 800577c:	b29a      	uxth	r2, r3
 800577e:	68fb      	ldr	r3, [r7, #12]
 8005780:	851a      	strh	r2, [r3, #40]	; 0x28
 8005782:	68fb      	ldr	r3, [r7, #12]
 8005784:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005786:	b29b      	uxth	r3, r3
 8005788:	3b01      	subs	r3, #1
 800578a:	b29a      	uxth	r2, r3
 800578c:	68fb      	ldr	r3, [r7, #12]
 800578e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005790:	68fb      	ldr	r3, [r7, #12]
 8005792:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005794:	b29b      	uxth	r3, r3
 8005796:	2b00      	cmp	r3, #0
 8005798:	d034      	beq.n	8005804 <HAL_I2C_Mem_Read+0x1d0>
 800579a:	68fb      	ldr	r3, [r7, #12]
 800579c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800579e:	2b00      	cmp	r3, #0
 80057a0:	d130      	bne.n	8005804 <HAL_I2C_Mem_Read+0x1d0>
 80057a2:	697b      	ldr	r3, [r7, #20]
 80057a4:	9300      	str	r3, [sp, #0]
 80057a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80057a8:	2200      	movs	r2, #0
 80057aa:	2180      	movs	r1, #128	; 0x80
 80057ac:	68f8      	ldr	r0, [r7, #12]
 80057ae:	f000 f935 	bl	8005a1c <I2C_WaitOnFlagUntilTimeout>
 80057b2:	4603      	mov	r3, r0
 80057b4:	2b00      	cmp	r3, #0
 80057b6:	d001      	beq.n	80057bc <HAL_I2C_Mem_Read+0x188>
 80057b8:	2301      	movs	r3, #1
 80057ba:	e04d      	b.n	8005858 <HAL_I2C_Mem_Read+0x224>
 80057bc:	68fb      	ldr	r3, [r7, #12]
 80057be:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80057c0:	b29b      	uxth	r3, r3
 80057c2:	2bff      	cmp	r3, #255	; 0xff
 80057c4:	d90e      	bls.n	80057e4 <HAL_I2C_Mem_Read+0x1b0>
 80057c6:	68fb      	ldr	r3, [r7, #12]
 80057c8:	22ff      	movs	r2, #255	; 0xff
 80057ca:	851a      	strh	r2, [r3, #40]	; 0x28
 80057cc:	68fb      	ldr	r3, [r7, #12]
 80057ce:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80057d0:	b2da      	uxtb	r2, r3
 80057d2:	8979      	ldrh	r1, [r7, #10]
 80057d4:	2300      	movs	r3, #0
 80057d6:	9300      	str	r3, [sp, #0]
 80057d8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80057dc:	68f8      	ldr	r0, [r7, #12]
 80057de:	f000 fa3f 	bl	8005c60 <I2C_TransferConfig>
 80057e2:	e00f      	b.n	8005804 <HAL_I2C_Mem_Read+0x1d0>
 80057e4:	68fb      	ldr	r3, [r7, #12]
 80057e6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80057e8:	b29a      	uxth	r2, r3
 80057ea:	68fb      	ldr	r3, [r7, #12]
 80057ec:	851a      	strh	r2, [r3, #40]	; 0x28
 80057ee:	68fb      	ldr	r3, [r7, #12]
 80057f0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80057f2:	b2da      	uxtb	r2, r3
 80057f4:	8979      	ldrh	r1, [r7, #10]
 80057f6:	2300      	movs	r3, #0
 80057f8:	9300      	str	r3, [sp, #0]
 80057fa:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80057fe:	68f8      	ldr	r0, [r7, #12]
 8005800:	f000 fa2e 	bl	8005c60 <I2C_TransferConfig>
 8005804:	68fb      	ldr	r3, [r7, #12]
 8005806:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005808:	b29b      	uxth	r3, r3
 800580a:	2b00      	cmp	r3, #0
 800580c:	d19a      	bne.n	8005744 <HAL_I2C_Mem_Read+0x110>
 800580e:	697a      	ldr	r2, [r7, #20]
 8005810:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8005812:	68f8      	ldr	r0, [r7, #12]
 8005814:	f000 f982 	bl	8005b1c <I2C_WaitOnSTOPFlagUntilTimeout>
 8005818:	4603      	mov	r3, r0
 800581a:	2b00      	cmp	r3, #0
 800581c:	d001      	beq.n	8005822 <HAL_I2C_Mem_Read+0x1ee>
 800581e:	2301      	movs	r3, #1
 8005820:	e01a      	b.n	8005858 <HAL_I2C_Mem_Read+0x224>
 8005822:	68fb      	ldr	r3, [r7, #12]
 8005824:	681b      	ldr	r3, [r3, #0]
 8005826:	2220      	movs	r2, #32
 8005828:	61da      	str	r2, [r3, #28]
 800582a:	68fb      	ldr	r3, [r7, #12]
 800582c:	681b      	ldr	r3, [r3, #0]
 800582e:	6859      	ldr	r1, [r3, #4]
 8005830:	68fb      	ldr	r3, [r7, #12]
 8005832:	681a      	ldr	r2, [r3, #0]
 8005834:	4b0b      	ldr	r3, [pc, #44]	; (8005864 <HAL_I2C_Mem_Read+0x230>)
 8005836:	400b      	ands	r3, r1
 8005838:	6053      	str	r3, [r2, #4]
 800583a:	68fb      	ldr	r3, [r7, #12]
 800583c:	2220      	movs	r2, #32
 800583e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005842:	68fb      	ldr	r3, [r7, #12]
 8005844:	2200      	movs	r2, #0
 8005846:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800584a:	68fb      	ldr	r3, [r7, #12]
 800584c:	2200      	movs	r2, #0
 800584e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005852:	2300      	movs	r3, #0
 8005854:	e000      	b.n	8005858 <HAL_I2C_Mem_Read+0x224>
 8005856:	2302      	movs	r3, #2
 8005858:	4618      	mov	r0, r3
 800585a:	3718      	adds	r7, #24
 800585c:	46bd      	mov	sp, r7
 800585e:	bd80      	pop	{r7, pc}
 8005860:	80002400 	.word	0x80002400
 8005864:	fe00e800 	.word	0xfe00e800

08005868 <HAL_I2C_GetState>:
 8005868:	b480      	push	{r7}
 800586a:	b083      	sub	sp, #12
 800586c:	af00      	add	r7, sp, #0
 800586e:	6078      	str	r0, [r7, #4]
 8005870:	687b      	ldr	r3, [r7, #4]
 8005872:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8005876:	b2db      	uxtb	r3, r3
 8005878:	4618      	mov	r0, r3
 800587a:	370c      	adds	r7, #12
 800587c:	46bd      	mov	sp, r7
 800587e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005882:	4770      	bx	lr

08005884 <I2C_RequestMemoryWrite>:
 8005884:	b580      	push	{r7, lr}
 8005886:	b086      	sub	sp, #24
 8005888:	af02      	add	r7, sp, #8
 800588a:	60f8      	str	r0, [r7, #12]
 800588c:	4608      	mov	r0, r1
 800588e:	4611      	mov	r1, r2
 8005890:	461a      	mov	r2, r3
 8005892:	4603      	mov	r3, r0
 8005894:	817b      	strh	r3, [r7, #10]
 8005896:	460b      	mov	r3, r1
 8005898:	813b      	strh	r3, [r7, #8]
 800589a:	4613      	mov	r3, r2
 800589c:	80fb      	strh	r3, [r7, #6]
 800589e:	88fb      	ldrh	r3, [r7, #6]
 80058a0:	b2da      	uxtb	r2, r3
 80058a2:	8979      	ldrh	r1, [r7, #10]
 80058a4:	4b20      	ldr	r3, [pc, #128]	; (8005928 <I2C_RequestMemoryWrite+0xa4>)
 80058a6:	9300      	str	r3, [sp, #0]
 80058a8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80058ac:	68f8      	ldr	r0, [r7, #12]
 80058ae:	f000 f9d7 	bl	8005c60 <I2C_TransferConfig>
 80058b2:	69fa      	ldr	r2, [r7, #28]
 80058b4:	69b9      	ldr	r1, [r7, #24]
 80058b6:	68f8      	ldr	r0, [r7, #12]
 80058b8:	f000 f8f0 	bl	8005a9c <I2C_WaitOnTXISFlagUntilTimeout>
 80058bc:	4603      	mov	r3, r0
 80058be:	2b00      	cmp	r3, #0
 80058c0:	d001      	beq.n	80058c6 <I2C_RequestMemoryWrite+0x42>
 80058c2:	2301      	movs	r3, #1
 80058c4:	e02c      	b.n	8005920 <I2C_RequestMemoryWrite+0x9c>
 80058c6:	88fb      	ldrh	r3, [r7, #6]
 80058c8:	2b01      	cmp	r3, #1
 80058ca:	d105      	bne.n	80058d8 <I2C_RequestMemoryWrite+0x54>
 80058cc:	893b      	ldrh	r3, [r7, #8]
 80058ce:	b2da      	uxtb	r2, r3
 80058d0:	68fb      	ldr	r3, [r7, #12]
 80058d2:	681b      	ldr	r3, [r3, #0]
 80058d4:	629a      	str	r2, [r3, #40]	; 0x28
 80058d6:	e015      	b.n	8005904 <I2C_RequestMemoryWrite+0x80>
 80058d8:	893b      	ldrh	r3, [r7, #8]
 80058da:	0a1b      	lsrs	r3, r3, #8
 80058dc:	b29b      	uxth	r3, r3
 80058de:	b2da      	uxtb	r2, r3
 80058e0:	68fb      	ldr	r3, [r7, #12]
 80058e2:	681b      	ldr	r3, [r3, #0]
 80058e4:	629a      	str	r2, [r3, #40]	; 0x28
 80058e6:	69fa      	ldr	r2, [r7, #28]
 80058e8:	69b9      	ldr	r1, [r7, #24]
 80058ea:	68f8      	ldr	r0, [r7, #12]
 80058ec:	f000 f8d6 	bl	8005a9c <I2C_WaitOnTXISFlagUntilTimeout>
 80058f0:	4603      	mov	r3, r0
 80058f2:	2b00      	cmp	r3, #0
 80058f4:	d001      	beq.n	80058fa <I2C_RequestMemoryWrite+0x76>
 80058f6:	2301      	movs	r3, #1
 80058f8:	e012      	b.n	8005920 <I2C_RequestMemoryWrite+0x9c>
 80058fa:	893b      	ldrh	r3, [r7, #8]
 80058fc:	b2da      	uxtb	r2, r3
 80058fe:	68fb      	ldr	r3, [r7, #12]
 8005900:	681b      	ldr	r3, [r3, #0]
 8005902:	629a      	str	r2, [r3, #40]	; 0x28
 8005904:	69fb      	ldr	r3, [r7, #28]
 8005906:	9300      	str	r3, [sp, #0]
 8005908:	69bb      	ldr	r3, [r7, #24]
 800590a:	2200      	movs	r2, #0
 800590c:	2180      	movs	r1, #128	; 0x80
 800590e:	68f8      	ldr	r0, [r7, #12]
 8005910:	f000 f884 	bl	8005a1c <I2C_WaitOnFlagUntilTimeout>
 8005914:	4603      	mov	r3, r0
 8005916:	2b00      	cmp	r3, #0
 8005918:	d001      	beq.n	800591e <I2C_RequestMemoryWrite+0x9a>
 800591a:	2301      	movs	r3, #1
 800591c:	e000      	b.n	8005920 <I2C_RequestMemoryWrite+0x9c>
 800591e:	2300      	movs	r3, #0
 8005920:	4618      	mov	r0, r3
 8005922:	3710      	adds	r7, #16
 8005924:	46bd      	mov	sp, r7
 8005926:	bd80      	pop	{r7, pc}
 8005928:	80002000 	.word	0x80002000

0800592c <I2C_RequestMemoryRead>:
 800592c:	b580      	push	{r7, lr}
 800592e:	b086      	sub	sp, #24
 8005930:	af02      	add	r7, sp, #8
 8005932:	60f8      	str	r0, [r7, #12]
 8005934:	4608      	mov	r0, r1
 8005936:	4611      	mov	r1, r2
 8005938:	461a      	mov	r2, r3
 800593a:	4603      	mov	r3, r0
 800593c:	817b      	strh	r3, [r7, #10]
 800593e:	460b      	mov	r3, r1
 8005940:	813b      	strh	r3, [r7, #8]
 8005942:	4613      	mov	r3, r2
 8005944:	80fb      	strh	r3, [r7, #6]
 8005946:	88fb      	ldrh	r3, [r7, #6]
 8005948:	b2da      	uxtb	r2, r3
 800594a:	8979      	ldrh	r1, [r7, #10]
 800594c:	4b20      	ldr	r3, [pc, #128]	; (80059d0 <I2C_RequestMemoryRead+0xa4>)
 800594e:	9300      	str	r3, [sp, #0]
 8005950:	2300      	movs	r3, #0
 8005952:	68f8      	ldr	r0, [r7, #12]
 8005954:	f000 f984 	bl	8005c60 <I2C_TransferConfig>
 8005958:	69fa      	ldr	r2, [r7, #28]
 800595a:	69b9      	ldr	r1, [r7, #24]
 800595c:	68f8      	ldr	r0, [r7, #12]
 800595e:	f000 f89d 	bl	8005a9c <I2C_WaitOnTXISFlagUntilTimeout>
 8005962:	4603      	mov	r3, r0
 8005964:	2b00      	cmp	r3, #0
 8005966:	d001      	beq.n	800596c <I2C_RequestMemoryRead+0x40>
 8005968:	2301      	movs	r3, #1
 800596a:	e02c      	b.n	80059c6 <I2C_RequestMemoryRead+0x9a>
 800596c:	88fb      	ldrh	r3, [r7, #6]
 800596e:	2b01      	cmp	r3, #1
 8005970:	d105      	bne.n	800597e <I2C_RequestMemoryRead+0x52>
 8005972:	893b      	ldrh	r3, [r7, #8]
 8005974:	b2da      	uxtb	r2, r3
 8005976:	68fb      	ldr	r3, [r7, #12]
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	629a      	str	r2, [r3, #40]	; 0x28
 800597c:	e015      	b.n	80059aa <I2C_RequestMemoryRead+0x7e>
 800597e:	893b      	ldrh	r3, [r7, #8]
 8005980:	0a1b      	lsrs	r3, r3, #8
 8005982:	b29b      	uxth	r3, r3
 8005984:	b2da      	uxtb	r2, r3
 8005986:	68fb      	ldr	r3, [r7, #12]
 8005988:	681b      	ldr	r3, [r3, #0]
 800598a:	629a      	str	r2, [r3, #40]	; 0x28
 800598c:	69fa      	ldr	r2, [r7, #28]
 800598e:	69b9      	ldr	r1, [r7, #24]
 8005990:	68f8      	ldr	r0, [r7, #12]
 8005992:	f000 f883 	bl	8005a9c <I2C_WaitOnTXISFlagUntilTimeout>
 8005996:	4603      	mov	r3, r0
 8005998:	2b00      	cmp	r3, #0
 800599a:	d001      	beq.n	80059a0 <I2C_RequestMemoryRead+0x74>
 800599c:	2301      	movs	r3, #1
 800599e:	e012      	b.n	80059c6 <I2C_RequestMemoryRead+0x9a>
 80059a0:	893b      	ldrh	r3, [r7, #8]
 80059a2:	b2da      	uxtb	r2, r3
 80059a4:	68fb      	ldr	r3, [r7, #12]
 80059a6:	681b      	ldr	r3, [r3, #0]
 80059a8:	629a      	str	r2, [r3, #40]	; 0x28
 80059aa:	69fb      	ldr	r3, [r7, #28]
 80059ac:	9300      	str	r3, [sp, #0]
 80059ae:	69bb      	ldr	r3, [r7, #24]
 80059b0:	2200      	movs	r2, #0
 80059b2:	2140      	movs	r1, #64	; 0x40
 80059b4:	68f8      	ldr	r0, [r7, #12]
 80059b6:	f000 f831 	bl	8005a1c <I2C_WaitOnFlagUntilTimeout>
 80059ba:	4603      	mov	r3, r0
 80059bc:	2b00      	cmp	r3, #0
 80059be:	d001      	beq.n	80059c4 <I2C_RequestMemoryRead+0x98>
 80059c0:	2301      	movs	r3, #1
 80059c2:	e000      	b.n	80059c6 <I2C_RequestMemoryRead+0x9a>
 80059c4:	2300      	movs	r3, #0
 80059c6:	4618      	mov	r0, r3
 80059c8:	3710      	adds	r7, #16
 80059ca:	46bd      	mov	sp, r7
 80059cc:	bd80      	pop	{r7, pc}
 80059ce:	bf00      	nop
 80059d0:	80002000 	.word	0x80002000

080059d4 <I2C_Flush_TXDR>:
 80059d4:	b480      	push	{r7}
 80059d6:	b083      	sub	sp, #12
 80059d8:	af00      	add	r7, sp, #0
 80059da:	6078      	str	r0, [r7, #4]
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	681b      	ldr	r3, [r3, #0]
 80059e0:	699b      	ldr	r3, [r3, #24]
 80059e2:	f003 0302 	and.w	r3, r3, #2
 80059e6:	2b02      	cmp	r3, #2
 80059e8:	d103      	bne.n	80059f2 <I2C_Flush_TXDR+0x1e>
 80059ea:	687b      	ldr	r3, [r7, #4]
 80059ec:	681b      	ldr	r3, [r3, #0]
 80059ee:	2200      	movs	r2, #0
 80059f0:	629a      	str	r2, [r3, #40]	; 0x28
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	699b      	ldr	r3, [r3, #24]
 80059f8:	f003 0301 	and.w	r3, r3, #1
 80059fc:	2b01      	cmp	r3, #1
 80059fe:	d007      	beq.n	8005a10 <I2C_Flush_TXDR+0x3c>
 8005a00:	687b      	ldr	r3, [r7, #4]
 8005a02:	681b      	ldr	r3, [r3, #0]
 8005a04:	699a      	ldr	r2, [r3, #24]
 8005a06:	687b      	ldr	r3, [r7, #4]
 8005a08:	681b      	ldr	r3, [r3, #0]
 8005a0a:	f042 0201 	orr.w	r2, r2, #1
 8005a0e:	619a      	str	r2, [r3, #24]
 8005a10:	bf00      	nop
 8005a12:	370c      	adds	r7, #12
 8005a14:	46bd      	mov	sp, r7
 8005a16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a1a:	4770      	bx	lr

08005a1c <I2C_WaitOnFlagUntilTimeout>:
 8005a1c:	b580      	push	{r7, lr}
 8005a1e:	b084      	sub	sp, #16
 8005a20:	af00      	add	r7, sp, #0
 8005a22:	60f8      	str	r0, [r7, #12]
 8005a24:	60b9      	str	r1, [r7, #8]
 8005a26:	603b      	str	r3, [r7, #0]
 8005a28:	4613      	mov	r3, r2
 8005a2a:	71fb      	strb	r3, [r7, #7]
 8005a2c:	e022      	b.n	8005a74 <I2C_WaitOnFlagUntilTimeout+0x58>
 8005a2e:	683b      	ldr	r3, [r7, #0]
 8005a30:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005a34:	d01e      	beq.n	8005a74 <I2C_WaitOnFlagUntilTimeout+0x58>
 8005a36:	f7fd ff45 	bl	80038c4 <HAL_GetTick>
 8005a3a:	4602      	mov	r2, r0
 8005a3c:	69bb      	ldr	r3, [r7, #24]
 8005a3e:	1ad3      	subs	r3, r2, r3
 8005a40:	683a      	ldr	r2, [r7, #0]
 8005a42:	429a      	cmp	r2, r3
 8005a44:	d302      	bcc.n	8005a4c <I2C_WaitOnFlagUntilTimeout+0x30>
 8005a46:	683b      	ldr	r3, [r7, #0]
 8005a48:	2b00      	cmp	r3, #0
 8005a4a:	d113      	bne.n	8005a74 <I2C_WaitOnFlagUntilTimeout+0x58>
 8005a4c:	68fb      	ldr	r3, [r7, #12]
 8005a4e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005a50:	f043 0220 	orr.w	r2, r3, #32
 8005a54:	68fb      	ldr	r3, [r7, #12]
 8005a56:	645a      	str	r2, [r3, #68]	; 0x44
 8005a58:	68fb      	ldr	r3, [r7, #12]
 8005a5a:	2220      	movs	r2, #32
 8005a5c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005a60:	68fb      	ldr	r3, [r7, #12]
 8005a62:	2200      	movs	r2, #0
 8005a64:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005a68:	68fb      	ldr	r3, [r7, #12]
 8005a6a:	2200      	movs	r2, #0
 8005a6c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005a70:	2301      	movs	r3, #1
 8005a72:	e00f      	b.n	8005a94 <I2C_WaitOnFlagUntilTimeout+0x78>
 8005a74:	68fb      	ldr	r3, [r7, #12]
 8005a76:	681b      	ldr	r3, [r3, #0]
 8005a78:	699a      	ldr	r2, [r3, #24]
 8005a7a:	68bb      	ldr	r3, [r7, #8]
 8005a7c:	4013      	ands	r3, r2
 8005a7e:	68ba      	ldr	r2, [r7, #8]
 8005a80:	429a      	cmp	r2, r3
 8005a82:	bf0c      	ite	eq
 8005a84:	2301      	moveq	r3, #1
 8005a86:	2300      	movne	r3, #0
 8005a88:	b2db      	uxtb	r3, r3
 8005a8a:	461a      	mov	r2, r3
 8005a8c:	79fb      	ldrb	r3, [r7, #7]
 8005a8e:	429a      	cmp	r2, r3
 8005a90:	d0cd      	beq.n	8005a2e <I2C_WaitOnFlagUntilTimeout+0x12>
 8005a92:	2300      	movs	r3, #0
 8005a94:	4618      	mov	r0, r3
 8005a96:	3710      	adds	r7, #16
 8005a98:	46bd      	mov	sp, r7
 8005a9a:	bd80      	pop	{r7, pc}

08005a9c <I2C_WaitOnTXISFlagUntilTimeout>:
 8005a9c:	b580      	push	{r7, lr}
 8005a9e:	b084      	sub	sp, #16
 8005aa0:	af00      	add	r7, sp, #0
 8005aa2:	60f8      	str	r0, [r7, #12]
 8005aa4:	60b9      	str	r1, [r7, #8]
 8005aa6:	607a      	str	r2, [r7, #4]
 8005aa8:	e02c      	b.n	8005b04 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8005aaa:	687a      	ldr	r2, [r7, #4]
 8005aac:	68b9      	ldr	r1, [r7, #8]
 8005aae:	68f8      	ldr	r0, [r7, #12]
 8005ab0:	f000 f870 	bl	8005b94 <I2C_IsAcknowledgeFailed>
 8005ab4:	4603      	mov	r3, r0
 8005ab6:	2b00      	cmp	r3, #0
 8005ab8:	d001      	beq.n	8005abe <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 8005aba:	2301      	movs	r3, #1
 8005abc:	e02a      	b.n	8005b14 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 8005abe:	68bb      	ldr	r3, [r7, #8]
 8005ac0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005ac4:	d01e      	beq.n	8005b04 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8005ac6:	f7fd fefd 	bl	80038c4 <HAL_GetTick>
 8005aca:	4602      	mov	r2, r0
 8005acc:	687b      	ldr	r3, [r7, #4]
 8005ace:	1ad3      	subs	r3, r2, r3
 8005ad0:	68ba      	ldr	r2, [r7, #8]
 8005ad2:	429a      	cmp	r2, r3
 8005ad4:	d302      	bcc.n	8005adc <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8005ad6:	68bb      	ldr	r3, [r7, #8]
 8005ad8:	2b00      	cmp	r3, #0
 8005ada:	d113      	bne.n	8005b04 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8005adc:	68fb      	ldr	r3, [r7, #12]
 8005ade:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005ae0:	f043 0220 	orr.w	r2, r3, #32
 8005ae4:	68fb      	ldr	r3, [r7, #12]
 8005ae6:	645a      	str	r2, [r3, #68]	; 0x44
 8005ae8:	68fb      	ldr	r3, [r7, #12]
 8005aea:	2220      	movs	r2, #32
 8005aec:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005af0:	68fb      	ldr	r3, [r7, #12]
 8005af2:	2200      	movs	r2, #0
 8005af4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005af8:	68fb      	ldr	r3, [r7, #12]
 8005afa:	2200      	movs	r2, #0
 8005afc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005b00:	2301      	movs	r3, #1
 8005b02:	e007      	b.n	8005b14 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 8005b04:	68fb      	ldr	r3, [r7, #12]
 8005b06:	681b      	ldr	r3, [r3, #0]
 8005b08:	699b      	ldr	r3, [r3, #24]
 8005b0a:	f003 0302 	and.w	r3, r3, #2
 8005b0e:	2b02      	cmp	r3, #2
 8005b10:	d1cb      	bne.n	8005aaa <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8005b12:	2300      	movs	r3, #0
 8005b14:	4618      	mov	r0, r3
 8005b16:	3710      	adds	r7, #16
 8005b18:	46bd      	mov	sp, r7
 8005b1a:	bd80      	pop	{r7, pc}

08005b1c <I2C_WaitOnSTOPFlagUntilTimeout>:
 8005b1c:	b580      	push	{r7, lr}
 8005b1e:	b084      	sub	sp, #16
 8005b20:	af00      	add	r7, sp, #0
 8005b22:	60f8      	str	r0, [r7, #12]
 8005b24:	60b9      	str	r1, [r7, #8]
 8005b26:	607a      	str	r2, [r7, #4]
 8005b28:	e028      	b.n	8005b7c <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 8005b2a:	687a      	ldr	r2, [r7, #4]
 8005b2c:	68b9      	ldr	r1, [r7, #8]
 8005b2e:	68f8      	ldr	r0, [r7, #12]
 8005b30:	f000 f830 	bl	8005b94 <I2C_IsAcknowledgeFailed>
 8005b34:	4603      	mov	r3, r0
 8005b36:	2b00      	cmp	r3, #0
 8005b38:	d001      	beq.n	8005b3e <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 8005b3a:	2301      	movs	r3, #1
 8005b3c:	e026      	b.n	8005b8c <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 8005b3e:	f7fd fec1 	bl	80038c4 <HAL_GetTick>
 8005b42:	4602      	mov	r2, r0
 8005b44:	687b      	ldr	r3, [r7, #4]
 8005b46:	1ad3      	subs	r3, r2, r3
 8005b48:	68ba      	ldr	r2, [r7, #8]
 8005b4a:	429a      	cmp	r2, r3
 8005b4c:	d302      	bcc.n	8005b54 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8005b4e:	68bb      	ldr	r3, [r7, #8]
 8005b50:	2b00      	cmp	r3, #0
 8005b52:	d113      	bne.n	8005b7c <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 8005b54:	68fb      	ldr	r3, [r7, #12]
 8005b56:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005b58:	f043 0220 	orr.w	r2, r3, #32
 8005b5c:	68fb      	ldr	r3, [r7, #12]
 8005b5e:	645a      	str	r2, [r3, #68]	; 0x44
 8005b60:	68fb      	ldr	r3, [r7, #12]
 8005b62:	2220      	movs	r2, #32
 8005b64:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005b68:	68fb      	ldr	r3, [r7, #12]
 8005b6a:	2200      	movs	r2, #0
 8005b6c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005b70:	68fb      	ldr	r3, [r7, #12]
 8005b72:	2200      	movs	r2, #0
 8005b74:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005b78:	2301      	movs	r3, #1
 8005b7a:	e007      	b.n	8005b8c <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 8005b7c:	68fb      	ldr	r3, [r7, #12]
 8005b7e:	681b      	ldr	r3, [r3, #0]
 8005b80:	699b      	ldr	r3, [r3, #24]
 8005b82:	f003 0320 	and.w	r3, r3, #32
 8005b86:	2b20      	cmp	r3, #32
 8005b88:	d1cf      	bne.n	8005b2a <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 8005b8a:	2300      	movs	r3, #0
 8005b8c:	4618      	mov	r0, r3
 8005b8e:	3710      	adds	r7, #16
 8005b90:	46bd      	mov	sp, r7
 8005b92:	bd80      	pop	{r7, pc}

08005b94 <I2C_IsAcknowledgeFailed>:
 8005b94:	b580      	push	{r7, lr}
 8005b96:	b084      	sub	sp, #16
 8005b98:	af00      	add	r7, sp, #0
 8005b9a:	60f8      	str	r0, [r7, #12]
 8005b9c:	60b9      	str	r1, [r7, #8]
 8005b9e:	607a      	str	r2, [r7, #4]
 8005ba0:	68fb      	ldr	r3, [r7, #12]
 8005ba2:	681b      	ldr	r3, [r3, #0]
 8005ba4:	699b      	ldr	r3, [r3, #24]
 8005ba6:	f003 0310 	and.w	r3, r3, #16
 8005baa:	2b10      	cmp	r3, #16
 8005bac:	d151      	bne.n	8005c52 <I2C_IsAcknowledgeFailed+0xbe>
 8005bae:	e022      	b.n	8005bf6 <I2C_IsAcknowledgeFailed+0x62>
 8005bb0:	68bb      	ldr	r3, [r7, #8]
 8005bb2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005bb6:	d01e      	beq.n	8005bf6 <I2C_IsAcknowledgeFailed+0x62>
 8005bb8:	f7fd fe84 	bl	80038c4 <HAL_GetTick>
 8005bbc:	4602      	mov	r2, r0
 8005bbe:	687b      	ldr	r3, [r7, #4]
 8005bc0:	1ad3      	subs	r3, r2, r3
 8005bc2:	68ba      	ldr	r2, [r7, #8]
 8005bc4:	429a      	cmp	r2, r3
 8005bc6:	d302      	bcc.n	8005bce <I2C_IsAcknowledgeFailed+0x3a>
 8005bc8:	68bb      	ldr	r3, [r7, #8]
 8005bca:	2b00      	cmp	r3, #0
 8005bcc:	d113      	bne.n	8005bf6 <I2C_IsAcknowledgeFailed+0x62>
 8005bce:	68fb      	ldr	r3, [r7, #12]
 8005bd0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005bd2:	f043 0220 	orr.w	r2, r3, #32
 8005bd6:	68fb      	ldr	r3, [r7, #12]
 8005bd8:	645a      	str	r2, [r3, #68]	; 0x44
 8005bda:	68fb      	ldr	r3, [r7, #12]
 8005bdc:	2220      	movs	r2, #32
 8005bde:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005be2:	68fb      	ldr	r3, [r7, #12]
 8005be4:	2200      	movs	r2, #0
 8005be6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005bea:	68fb      	ldr	r3, [r7, #12]
 8005bec:	2200      	movs	r2, #0
 8005bee:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005bf2:	2301      	movs	r3, #1
 8005bf4:	e02e      	b.n	8005c54 <I2C_IsAcknowledgeFailed+0xc0>
 8005bf6:	68fb      	ldr	r3, [r7, #12]
 8005bf8:	681b      	ldr	r3, [r3, #0]
 8005bfa:	699b      	ldr	r3, [r3, #24]
 8005bfc:	f003 0320 	and.w	r3, r3, #32
 8005c00:	2b20      	cmp	r3, #32
 8005c02:	d1d5      	bne.n	8005bb0 <I2C_IsAcknowledgeFailed+0x1c>
 8005c04:	68fb      	ldr	r3, [r7, #12]
 8005c06:	681b      	ldr	r3, [r3, #0]
 8005c08:	2210      	movs	r2, #16
 8005c0a:	61da      	str	r2, [r3, #28]
 8005c0c:	68fb      	ldr	r3, [r7, #12]
 8005c0e:	681b      	ldr	r3, [r3, #0]
 8005c10:	2220      	movs	r2, #32
 8005c12:	61da      	str	r2, [r3, #28]
 8005c14:	68f8      	ldr	r0, [r7, #12]
 8005c16:	f7ff fedd 	bl	80059d4 <I2C_Flush_TXDR>
 8005c1a:	68fb      	ldr	r3, [r7, #12]
 8005c1c:	681b      	ldr	r3, [r3, #0]
 8005c1e:	6859      	ldr	r1, [r3, #4]
 8005c20:	68fb      	ldr	r3, [r7, #12]
 8005c22:	681a      	ldr	r2, [r3, #0]
 8005c24:	4b0d      	ldr	r3, [pc, #52]	; (8005c5c <I2C_IsAcknowledgeFailed+0xc8>)
 8005c26:	400b      	ands	r3, r1
 8005c28:	6053      	str	r3, [r2, #4]
 8005c2a:	68fb      	ldr	r3, [r7, #12]
 8005c2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005c2e:	f043 0204 	orr.w	r2, r3, #4
 8005c32:	68fb      	ldr	r3, [r7, #12]
 8005c34:	645a      	str	r2, [r3, #68]	; 0x44
 8005c36:	68fb      	ldr	r3, [r7, #12]
 8005c38:	2220      	movs	r2, #32
 8005c3a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005c3e:	68fb      	ldr	r3, [r7, #12]
 8005c40:	2200      	movs	r2, #0
 8005c42:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005c46:	68fb      	ldr	r3, [r7, #12]
 8005c48:	2200      	movs	r2, #0
 8005c4a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005c4e:	2301      	movs	r3, #1
 8005c50:	e000      	b.n	8005c54 <I2C_IsAcknowledgeFailed+0xc0>
 8005c52:	2300      	movs	r3, #0
 8005c54:	4618      	mov	r0, r3
 8005c56:	3710      	adds	r7, #16
 8005c58:	46bd      	mov	sp, r7
 8005c5a:	bd80      	pop	{r7, pc}
 8005c5c:	fe00e800 	.word	0xfe00e800

08005c60 <I2C_TransferConfig>:
 8005c60:	b480      	push	{r7}
 8005c62:	b085      	sub	sp, #20
 8005c64:	af00      	add	r7, sp, #0
 8005c66:	60f8      	str	r0, [r7, #12]
 8005c68:	607b      	str	r3, [r7, #4]
 8005c6a:	460b      	mov	r3, r1
 8005c6c:	817b      	strh	r3, [r7, #10]
 8005c6e:	4613      	mov	r3, r2
 8005c70:	727b      	strb	r3, [r7, #9]
 8005c72:	68fb      	ldr	r3, [r7, #12]
 8005c74:	681b      	ldr	r3, [r3, #0]
 8005c76:	685a      	ldr	r2, [r3, #4]
 8005c78:	69bb      	ldr	r3, [r7, #24]
 8005c7a:	0d5b      	lsrs	r3, r3, #21
 8005c7c:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 8005c80:	4b0d      	ldr	r3, [pc, #52]	; (8005cb8 <I2C_TransferConfig+0x58>)
 8005c82:	430b      	orrs	r3, r1
 8005c84:	43db      	mvns	r3, r3
 8005c86:	ea02 0103 	and.w	r1, r2, r3
 8005c8a:	897b      	ldrh	r3, [r7, #10]
 8005c8c:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8005c90:	7a7b      	ldrb	r3, [r7, #9]
 8005c92:	041b      	lsls	r3, r3, #16
 8005c94:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8005c98:	431a      	orrs	r2, r3
 8005c9a:	687b      	ldr	r3, [r7, #4]
 8005c9c:	431a      	orrs	r2, r3
 8005c9e:	69bb      	ldr	r3, [r7, #24]
 8005ca0:	431a      	orrs	r2, r3
 8005ca2:	68fb      	ldr	r3, [r7, #12]
 8005ca4:	681b      	ldr	r3, [r3, #0]
 8005ca6:	430a      	orrs	r2, r1
 8005ca8:	605a      	str	r2, [r3, #4]
 8005caa:	bf00      	nop
 8005cac:	3714      	adds	r7, #20
 8005cae:	46bd      	mov	sp, r7
 8005cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cb4:	4770      	bx	lr
 8005cb6:	bf00      	nop
 8005cb8:	03ff63ff 	.word	0x03ff63ff

08005cbc <HAL_LTDC_Init>:
 8005cbc:	b580      	push	{r7, lr}
 8005cbe:	b084      	sub	sp, #16
 8005cc0:	af00      	add	r7, sp, #0
 8005cc2:	6078      	str	r0, [r7, #4]
 8005cc4:	687b      	ldr	r3, [r7, #4]
 8005cc6:	2b00      	cmp	r3, #0
 8005cc8:	d101      	bne.n	8005cce <HAL_LTDC_Init+0x12>
 8005cca:	2301      	movs	r3, #1
 8005ccc:	e0bf      	b.n	8005e4e <HAL_LTDC_Init+0x192>
 8005cce:	687b      	ldr	r3, [r7, #4]
 8005cd0:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8005cd4:	b2db      	uxtb	r3, r3
 8005cd6:	2b00      	cmp	r3, #0
 8005cd8:	d106      	bne.n	8005ce8 <HAL_LTDC_Init+0x2c>
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	2200      	movs	r2, #0
 8005cde:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8005ce2:	6878      	ldr	r0, [r7, #4]
 8005ce4:	f002 fad8 	bl	8008298 <HAL_LTDC_MspInit>
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	2202      	movs	r2, #2
 8005cec:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8005cf0:	687b      	ldr	r3, [r7, #4]
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	699a      	ldr	r2, [r3, #24]
 8005cf6:	687b      	ldr	r3, [r7, #4]
 8005cf8:	681b      	ldr	r3, [r3, #0]
 8005cfa:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005cfe:	619a      	str	r2, [r3, #24]
 8005d00:	687b      	ldr	r3, [r7, #4]
 8005d02:	681b      	ldr	r3, [r3, #0]
 8005d04:	6999      	ldr	r1, [r3, #24]
 8005d06:	687b      	ldr	r3, [r7, #4]
 8005d08:	685a      	ldr	r2, [r3, #4]
 8005d0a:	687b      	ldr	r3, [r7, #4]
 8005d0c:	689b      	ldr	r3, [r3, #8]
 8005d0e:	431a      	orrs	r2, r3
 8005d10:	687b      	ldr	r3, [r7, #4]
 8005d12:	68db      	ldr	r3, [r3, #12]
 8005d14:	431a      	orrs	r2, r3
 8005d16:	687b      	ldr	r3, [r7, #4]
 8005d18:	691b      	ldr	r3, [r3, #16]
 8005d1a:	431a      	orrs	r2, r3
 8005d1c:	687b      	ldr	r3, [r7, #4]
 8005d1e:	681b      	ldr	r3, [r3, #0]
 8005d20:	430a      	orrs	r2, r1
 8005d22:	619a      	str	r2, [r3, #24]
 8005d24:	687b      	ldr	r3, [r7, #4]
 8005d26:	681b      	ldr	r3, [r3, #0]
 8005d28:	6899      	ldr	r1, [r3, #8]
 8005d2a:	687b      	ldr	r3, [r7, #4]
 8005d2c:	681a      	ldr	r2, [r3, #0]
 8005d2e:	4b4a      	ldr	r3, [pc, #296]	; (8005e58 <HAL_LTDC_Init+0x19c>)
 8005d30:	400b      	ands	r3, r1
 8005d32:	6093      	str	r3, [r2, #8]
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	695b      	ldr	r3, [r3, #20]
 8005d38:	041b      	lsls	r3, r3, #16
 8005d3a:	60fb      	str	r3, [r7, #12]
 8005d3c:	687b      	ldr	r3, [r7, #4]
 8005d3e:	681b      	ldr	r3, [r3, #0]
 8005d40:	6899      	ldr	r1, [r3, #8]
 8005d42:	687b      	ldr	r3, [r7, #4]
 8005d44:	699a      	ldr	r2, [r3, #24]
 8005d46:	68fb      	ldr	r3, [r7, #12]
 8005d48:	431a      	orrs	r2, r3
 8005d4a:	687b      	ldr	r3, [r7, #4]
 8005d4c:	681b      	ldr	r3, [r3, #0]
 8005d4e:	430a      	orrs	r2, r1
 8005d50:	609a      	str	r2, [r3, #8]
 8005d52:	687b      	ldr	r3, [r7, #4]
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	68d9      	ldr	r1, [r3, #12]
 8005d58:	687b      	ldr	r3, [r7, #4]
 8005d5a:	681a      	ldr	r2, [r3, #0]
 8005d5c:	4b3e      	ldr	r3, [pc, #248]	; (8005e58 <HAL_LTDC_Init+0x19c>)
 8005d5e:	400b      	ands	r3, r1
 8005d60:	60d3      	str	r3, [r2, #12]
 8005d62:	687b      	ldr	r3, [r7, #4]
 8005d64:	69db      	ldr	r3, [r3, #28]
 8005d66:	041b      	lsls	r3, r3, #16
 8005d68:	60fb      	str	r3, [r7, #12]
 8005d6a:	687b      	ldr	r3, [r7, #4]
 8005d6c:	681b      	ldr	r3, [r3, #0]
 8005d6e:	68d9      	ldr	r1, [r3, #12]
 8005d70:	687b      	ldr	r3, [r7, #4]
 8005d72:	6a1a      	ldr	r2, [r3, #32]
 8005d74:	68fb      	ldr	r3, [r7, #12]
 8005d76:	431a      	orrs	r2, r3
 8005d78:	687b      	ldr	r3, [r7, #4]
 8005d7a:	681b      	ldr	r3, [r3, #0]
 8005d7c:	430a      	orrs	r2, r1
 8005d7e:	60da      	str	r2, [r3, #12]
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	681b      	ldr	r3, [r3, #0]
 8005d84:	6919      	ldr	r1, [r3, #16]
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	681a      	ldr	r2, [r3, #0]
 8005d8a:	4b33      	ldr	r3, [pc, #204]	; (8005e58 <HAL_LTDC_Init+0x19c>)
 8005d8c:	400b      	ands	r3, r1
 8005d8e:	6113      	str	r3, [r2, #16]
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d94:	041b      	lsls	r3, r3, #16
 8005d96:	60fb      	str	r3, [r7, #12]
 8005d98:	687b      	ldr	r3, [r7, #4]
 8005d9a:	681b      	ldr	r3, [r3, #0]
 8005d9c:	6919      	ldr	r1, [r3, #16]
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005da2:	68fb      	ldr	r3, [r7, #12]
 8005da4:	431a      	orrs	r2, r3
 8005da6:	687b      	ldr	r3, [r7, #4]
 8005da8:	681b      	ldr	r3, [r3, #0]
 8005daa:	430a      	orrs	r2, r1
 8005dac:	611a      	str	r2, [r3, #16]
 8005dae:	687b      	ldr	r3, [r7, #4]
 8005db0:	681b      	ldr	r3, [r3, #0]
 8005db2:	6959      	ldr	r1, [r3, #20]
 8005db4:	687b      	ldr	r3, [r7, #4]
 8005db6:	681a      	ldr	r2, [r3, #0]
 8005db8:	4b27      	ldr	r3, [pc, #156]	; (8005e58 <HAL_LTDC_Init+0x19c>)
 8005dba:	400b      	ands	r3, r1
 8005dbc:	6153      	str	r3, [r2, #20]
 8005dbe:	687b      	ldr	r3, [r7, #4]
 8005dc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005dc2:	041b      	lsls	r3, r3, #16
 8005dc4:	60fb      	str	r3, [r7, #12]
 8005dc6:	687b      	ldr	r3, [r7, #4]
 8005dc8:	681b      	ldr	r3, [r3, #0]
 8005dca:	6959      	ldr	r1, [r3, #20]
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005dd0:	68fb      	ldr	r3, [r7, #12]
 8005dd2:	431a      	orrs	r2, r3
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	681b      	ldr	r3, [r3, #0]
 8005dd8:	430a      	orrs	r2, r1
 8005dda:	615a      	str	r2, [r3, #20]
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8005de2:	021b      	lsls	r3, r3, #8
 8005de4:	60fb      	str	r3, [r7, #12]
 8005de6:	687b      	ldr	r3, [r7, #4]
 8005de8:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 8005dec:	041b      	lsls	r3, r3, #16
 8005dee:	60bb      	str	r3, [r7, #8]
 8005df0:	687b      	ldr	r3, [r7, #4]
 8005df2:	681b      	ldr	r3, [r3, #0]
 8005df4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005df6:	687b      	ldr	r3, [r7, #4]
 8005df8:	681b      	ldr	r3, [r3, #0]
 8005dfa:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 8005dfe:	62da      	str	r2, [r3, #44]	; 0x2c
 8005e00:	687b      	ldr	r3, [r7, #4]
 8005e02:	681b      	ldr	r3, [r3, #0]
 8005e04:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005e06:	68ba      	ldr	r2, [r7, #8]
 8005e08:	68fb      	ldr	r3, [r7, #12]
 8005e0a:	4313      	orrs	r3, r2
 8005e0c:	687a      	ldr	r2, [r7, #4]
 8005e0e:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 8005e12:	431a      	orrs	r2, r3
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	681b      	ldr	r3, [r3, #0]
 8005e18:	430a      	orrs	r2, r1
 8005e1a:	62da      	str	r2, [r3, #44]	; 0x2c
 8005e1c:	687b      	ldr	r3, [r7, #4]
 8005e1e:	681b      	ldr	r3, [r3, #0]
 8005e20:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005e22:	687b      	ldr	r3, [r7, #4]
 8005e24:	681b      	ldr	r3, [r3, #0]
 8005e26:	f042 0206 	orr.w	r2, r2, #6
 8005e2a:	635a      	str	r2, [r3, #52]	; 0x34
 8005e2c:	687b      	ldr	r3, [r7, #4]
 8005e2e:	681b      	ldr	r3, [r3, #0]
 8005e30:	699a      	ldr	r2, [r3, #24]
 8005e32:	687b      	ldr	r3, [r7, #4]
 8005e34:	681b      	ldr	r3, [r3, #0]
 8005e36:	f042 0201 	orr.w	r2, r2, #1
 8005e3a:	619a      	str	r2, [r3, #24]
 8005e3c:	687b      	ldr	r3, [r7, #4]
 8005e3e:	2200      	movs	r2, #0
 8005e40:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8005e44:	687b      	ldr	r3, [r7, #4]
 8005e46:	2201      	movs	r2, #1
 8005e48:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8005e4c:	2300      	movs	r3, #0
 8005e4e:	4618      	mov	r0, r3
 8005e50:	3710      	adds	r7, #16
 8005e52:	46bd      	mov	sp, r7
 8005e54:	bd80      	pop	{r7, pc}
 8005e56:	bf00      	nop
 8005e58:	f000f800 	.word	0xf000f800

08005e5c <HAL_LTDC_DeInit>:
 8005e5c:	b580      	push	{r7, lr}
 8005e5e:	b082      	sub	sp, #8
 8005e60:	af00      	add	r7, sp, #0
 8005e62:	6078      	str	r0, [r7, #4]
 8005e64:	6878      	ldr	r0, [r7, #4]
 8005e66:	f002 faf3 	bl	8008450 <HAL_LTDC_MspDeInit>
 8005e6a:	687b      	ldr	r3, [r7, #4]
 8005e6c:	2200      	movs	r2, #0
 8005e6e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8005e72:	687b      	ldr	r3, [r7, #4]
 8005e74:	2200      	movs	r2, #0
 8005e76:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8005e7a:	687b      	ldr	r3, [r7, #4]
 8005e7c:	2200      	movs	r2, #0
 8005e7e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8005e82:	2300      	movs	r3, #0
 8005e84:	4618      	mov	r0, r3
 8005e86:	3708      	adds	r7, #8
 8005e88:	46bd      	mov	sp, r7
 8005e8a:	bd80      	pop	{r7, pc}

08005e8c <HAL_LTDC_IRQHandler>:
 8005e8c:	b580      	push	{r7, lr}
 8005e8e:	b084      	sub	sp, #16
 8005e90:	af00      	add	r7, sp, #0
 8005e92:	6078      	str	r0, [r7, #4]
 8005e94:	687b      	ldr	r3, [r7, #4]
 8005e96:	681b      	ldr	r3, [r3, #0]
 8005e98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005e9a:	60fb      	str	r3, [r7, #12]
 8005e9c:	687b      	ldr	r3, [r7, #4]
 8005e9e:	681b      	ldr	r3, [r3, #0]
 8005ea0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005ea2:	60bb      	str	r3, [r7, #8]
 8005ea4:	68fb      	ldr	r3, [r7, #12]
 8005ea6:	f003 0304 	and.w	r3, r3, #4
 8005eaa:	2b00      	cmp	r3, #0
 8005eac:	d023      	beq.n	8005ef6 <HAL_LTDC_IRQHandler+0x6a>
 8005eae:	68bb      	ldr	r3, [r7, #8]
 8005eb0:	f003 0304 	and.w	r3, r3, #4
 8005eb4:	2b00      	cmp	r3, #0
 8005eb6:	d01e      	beq.n	8005ef6 <HAL_LTDC_IRQHandler+0x6a>
 8005eb8:	687b      	ldr	r3, [r7, #4]
 8005eba:	681b      	ldr	r3, [r3, #0]
 8005ebc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005ebe:	687b      	ldr	r3, [r7, #4]
 8005ec0:	681b      	ldr	r3, [r3, #0]
 8005ec2:	f022 0204 	bic.w	r2, r2, #4
 8005ec6:	635a      	str	r2, [r3, #52]	; 0x34
 8005ec8:	687b      	ldr	r3, [r7, #4]
 8005eca:	681b      	ldr	r3, [r3, #0]
 8005ecc:	2204      	movs	r2, #4
 8005ece:	63da      	str	r2, [r3, #60]	; 0x3c
 8005ed0:	687b      	ldr	r3, [r7, #4]
 8005ed2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8005ed6:	f043 0201 	orr.w	r2, r3, #1
 8005eda:	687b      	ldr	r3, [r7, #4]
 8005edc:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8005ee0:	687b      	ldr	r3, [r7, #4]
 8005ee2:	2204      	movs	r2, #4
 8005ee4:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8005ee8:	687b      	ldr	r3, [r7, #4]
 8005eea:	2200      	movs	r2, #0
 8005eec:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8005ef0:	6878      	ldr	r0, [r7, #4]
 8005ef2:	f000 f86f 	bl	8005fd4 <HAL_LTDC_ErrorCallback>
 8005ef6:	68fb      	ldr	r3, [r7, #12]
 8005ef8:	f003 0302 	and.w	r3, r3, #2
 8005efc:	2b00      	cmp	r3, #0
 8005efe:	d023      	beq.n	8005f48 <HAL_LTDC_IRQHandler+0xbc>
 8005f00:	68bb      	ldr	r3, [r7, #8]
 8005f02:	f003 0302 	and.w	r3, r3, #2
 8005f06:	2b00      	cmp	r3, #0
 8005f08:	d01e      	beq.n	8005f48 <HAL_LTDC_IRQHandler+0xbc>
 8005f0a:	687b      	ldr	r3, [r7, #4]
 8005f0c:	681b      	ldr	r3, [r3, #0]
 8005f0e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005f10:	687b      	ldr	r3, [r7, #4]
 8005f12:	681b      	ldr	r3, [r3, #0]
 8005f14:	f022 0202 	bic.w	r2, r2, #2
 8005f18:	635a      	str	r2, [r3, #52]	; 0x34
 8005f1a:	687b      	ldr	r3, [r7, #4]
 8005f1c:	681b      	ldr	r3, [r3, #0]
 8005f1e:	2202      	movs	r2, #2
 8005f20:	63da      	str	r2, [r3, #60]	; 0x3c
 8005f22:	687b      	ldr	r3, [r7, #4]
 8005f24:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8005f28:	f043 0202 	orr.w	r2, r3, #2
 8005f2c:	687b      	ldr	r3, [r7, #4]
 8005f2e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8005f32:	687b      	ldr	r3, [r7, #4]
 8005f34:	2204      	movs	r2, #4
 8005f36:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8005f3a:	687b      	ldr	r3, [r7, #4]
 8005f3c:	2200      	movs	r2, #0
 8005f3e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8005f42:	6878      	ldr	r0, [r7, #4]
 8005f44:	f000 f846 	bl	8005fd4 <HAL_LTDC_ErrorCallback>
 8005f48:	68fb      	ldr	r3, [r7, #12]
 8005f4a:	f003 0301 	and.w	r3, r3, #1
 8005f4e:	2b00      	cmp	r3, #0
 8005f50:	d01b      	beq.n	8005f8a <HAL_LTDC_IRQHandler+0xfe>
 8005f52:	68bb      	ldr	r3, [r7, #8]
 8005f54:	f003 0301 	and.w	r3, r3, #1
 8005f58:	2b00      	cmp	r3, #0
 8005f5a:	d016      	beq.n	8005f8a <HAL_LTDC_IRQHandler+0xfe>
 8005f5c:	687b      	ldr	r3, [r7, #4]
 8005f5e:	681b      	ldr	r3, [r3, #0]
 8005f60:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005f62:	687b      	ldr	r3, [r7, #4]
 8005f64:	681b      	ldr	r3, [r3, #0]
 8005f66:	f022 0201 	bic.w	r2, r2, #1
 8005f6a:	635a      	str	r2, [r3, #52]	; 0x34
 8005f6c:	687b      	ldr	r3, [r7, #4]
 8005f6e:	681b      	ldr	r3, [r3, #0]
 8005f70:	2201      	movs	r2, #1
 8005f72:	63da      	str	r2, [r3, #60]	; 0x3c
 8005f74:	687b      	ldr	r3, [r7, #4]
 8005f76:	2201      	movs	r2, #1
 8005f78:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8005f7c:	687b      	ldr	r3, [r7, #4]
 8005f7e:	2200      	movs	r2, #0
 8005f80:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8005f84:	6878      	ldr	r0, [r7, #4]
 8005f86:	f003 fa2b 	bl	80093e0 <HAL_LTDC_LineEventCallback>
 8005f8a:	68fb      	ldr	r3, [r7, #12]
 8005f8c:	f003 0308 	and.w	r3, r3, #8
 8005f90:	2b00      	cmp	r3, #0
 8005f92:	d01b      	beq.n	8005fcc <HAL_LTDC_IRQHandler+0x140>
 8005f94:	68bb      	ldr	r3, [r7, #8]
 8005f96:	f003 0308 	and.w	r3, r3, #8
 8005f9a:	2b00      	cmp	r3, #0
 8005f9c:	d016      	beq.n	8005fcc <HAL_LTDC_IRQHandler+0x140>
 8005f9e:	687b      	ldr	r3, [r7, #4]
 8005fa0:	681b      	ldr	r3, [r3, #0]
 8005fa2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005fa4:	687b      	ldr	r3, [r7, #4]
 8005fa6:	681b      	ldr	r3, [r3, #0]
 8005fa8:	f022 0208 	bic.w	r2, r2, #8
 8005fac:	635a      	str	r2, [r3, #52]	; 0x34
 8005fae:	687b      	ldr	r3, [r7, #4]
 8005fb0:	681b      	ldr	r3, [r3, #0]
 8005fb2:	2208      	movs	r2, #8
 8005fb4:	63da      	str	r2, [r3, #60]	; 0x3c
 8005fb6:	687b      	ldr	r3, [r7, #4]
 8005fb8:	2201      	movs	r2, #1
 8005fba:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8005fbe:	687b      	ldr	r3, [r7, #4]
 8005fc0:	2200      	movs	r2, #0
 8005fc2:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8005fc6:	6878      	ldr	r0, [r7, #4]
 8005fc8:	f000 f80e 	bl	8005fe8 <HAL_LTDC_ReloadEventCallback>
 8005fcc:	bf00      	nop
 8005fce:	3710      	adds	r7, #16
 8005fd0:	46bd      	mov	sp, r7
 8005fd2:	bd80      	pop	{r7, pc}

08005fd4 <HAL_LTDC_ErrorCallback>:
 8005fd4:	b480      	push	{r7}
 8005fd6:	b083      	sub	sp, #12
 8005fd8:	af00      	add	r7, sp, #0
 8005fda:	6078      	str	r0, [r7, #4]
 8005fdc:	bf00      	nop
 8005fde:	370c      	adds	r7, #12
 8005fe0:	46bd      	mov	sp, r7
 8005fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fe6:	4770      	bx	lr

08005fe8 <HAL_LTDC_ReloadEventCallback>:
 8005fe8:	b480      	push	{r7}
 8005fea:	b083      	sub	sp, #12
 8005fec:	af00      	add	r7, sp, #0
 8005fee:	6078      	str	r0, [r7, #4]
 8005ff0:	bf00      	nop
 8005ff2:	370c      	adds	r7, #12
 8005ff4:	46bd      	mov	sp, r7
 8005ff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ffa:	4770      	bx	lr

08005ffc <HAL_LTDC_ConfigLayer>:
 8005ffc:	b5b0      	push	{r4, r5, r7, lr}
 8005ffe:	b084      	sub	sp, #16
 8006000:	af00      	add	r7, sp, #0
 8006002:	60f8      	str	r0, [r7, #12]
 8006004:	60b9      	str	r1, [r7, #8]
 8006006:	607a      	str	r2, [r7, #4]
 8006008:	68fb      	ldr	r3, [r7, #12]
 800600a:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 800600e:	2b01      	cmp	r3, #1
 8006010:	d101      	bne.n	8006016 <HAL_LTDC_ConfigLayer+0x1a>
 8006012:	2302      	movs	r3, #2
 8006014:	e02c      	b.n	8006070 <HAL_LTDC_ConfigLayer+0x74>
 8006016:	68fb      	ldr	r3, [r7, #12]
 8006018:	2201      	movs	r2, #1
 800601a:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 800601e:	68fb      	ldr	r3, [r7, #12]
 8006020:	2202      	movs	r2, #2
 8006022:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8006026:	68fa      	ldr	r2, [r7, #12]
 8006028:	687b      	ldr	r3, [r7, #4]
 800602a:	2134      	movs	r1, #52	; 0x34
 800602c:	fb01 f303 	mul.w	r3, r1, r3
 8006030:	4413      	add	r3, r2
 8006032:	f103 0238 	add.w	r2, r3, #56	; 0x38
 8006036:	68bb      	ldr	r3, [r7, #8]
 8006038:	4614      	mov	r4, r2
 800603a:	461d      	mov	r5, r3
 800603c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800603e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006040:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006042:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006044:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006046:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006048:	682b      	ldr	r3, [r5, #0]
 800604a:	6023      	str	r3, [r4, #0]
 800604c:	687a      	ldr	r2, [r7, #4]
 800604e:	68b9      	ldr	r1, [r7, #8]
 8006050:	68f8      	ldr	r0, [r7, #12]
 8006052:	f000 fa83 	bl	800655c <LTDC_SetConfig>
 8006056:	68fb      	ldr	r3, [r7, #12]
 8006058:	681b      	ldr	r3, [r3, #0]
 800605a:	2201      	movs	r2, #1
 800605c:	625a      	str	r2, [r3, #36]	; 0x24
 800605e:	68fb      	ldr	r3, [r7, #12]
 8006060:	2201      	movs	r2, #1
 8006062:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8006066:	68fb      	ldr	r3, [r7, #12]
 8006068:	2200      	movs	r2, #0
 800606a:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 800606e:	2300      	movs	r3, #0
 8006070:	4618      	mov	r0, r3
 8006072:	3710      	adds	r7, #16
 8006074:	46bd      	mov	sp, r7
 8006076:	bdb0      	pop	{r4, r5, r7, pc}

08006078 <HAL_LTDC_ConfigColorKeying>:
 8006078:	b480      	push	{r7}
 800607a:	b085      	sub	sp, #20
 800607c:	af00      	add	r7, sp, #0
 800607e:	60f8      	str	r0, [r7, #12]
 8006080:	60b9      	str	r1, [r7, #8]
 8006082:	607a      	str	r2, [r7, #4]
 8006084:	68fb      	ldr	r3, [r7, #12]
 8006086:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 800608a:	2b01      	cmp	r3, #1
 800608c:	d101      	bne.n	8006092 <HAL_LTDC_ConfigColorKeying+0x1a>
 800608e:	2302      	movs	r3, #2
 8006090:	e030      	b.n	80060f4 <HAL_LTDC_ConfigColorKeying+0x7c>
 8006092:	68fb      	ldr	r3, [r7, #12]
 8006094:	2201      	movs	r2, #1
 8006096:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 800609a:	68fb      	ldr	r3, [r7, #12]
 800609c:	2202      	movs	r2, #2
 800609e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 80060a2:	68fb      	ldr	r3, [r7, #12]
 80060a4:	681b      	ldr	r3, [r3, #0]
 80060a6:	461a      	mov	r2, r3
 80060a8:	687b      	ldr	r3, [r7, #4]
 80060aa:	01db      	lsls	r3, r3, #7
 80060ac:	4413      	add	r3, r2
 80060ae:	3384      	adds	r3, #132	; 0x84
 80060b0:	68db      	ldr	r3, [r3, #12]
 80060b2:	68fa      	ldr	r2, [r7, #12]
 80060b4:	6812      	ldr	r2, [r2, #0]
 80060b6:	4611      	mov	r1, r2
 80060b8:	687a      	ldr	r2, [r7, #4]
 80060ba:	01d2      	lsls	r2, r2, #7
 80060bc:	440a      	add	r2, r1
 80060be:	3284      	adds	r2, #132	; 0x84
 80060c0:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80060c4:	60d3      	str	r3, [r2, #12]
 80060c6:	68fb      	ldr	r3, [r7, #12]
 80060c8:	681b      	ldr	r3, [r3, #0]
 80060ca:	461a      	mov	r2, r3
 80060cc:	687b      	ldr	r3, [r7, #4]
 80060ce:	01db      	lsls	r3, r3, #7
 80060d0:	4413      	add	r3, r2
 80060d2:	3384      	adds	r3, #132	; 0x84
 80060d4:	461a      	mov	r2, r3
 80060d6:	68bb      	ldr	r3, [r7, #8]
 80060d8:	60d3      	str	r3, [r2, #12]
 80060da:	68fb      	ldr	r3, [r7, #12]
 80060dc:	681b      	ldr	r3, [r3, #0]
 80060de:	2201      	movs	r2, #1
 80060e0:	625a      	str	r2, [r3, #36]	; 0x24
 80060e2:	68fb      	ldr	r3, [r7, #12]
 80060e4:	2201      	movs	r2, #1
 80060e6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 80060ea:	68fb      	ldr	r3, [r7, #12]
 80060ec:	2200      	movs	r2, #0
 80060ee:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 80060f2:	2300      	movs	r3, #0
 80060f4:	4618      	mov	r0, r3
 80060f6:	3714      	adds	r7, #20
 80060f8:	46bd      	mov	sp, r7
 80060fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060fe:	4770      	bx	lr

08006100 <HAL_LTDC_ConfigCLUT>:
 8006100:	b480      	push	{r7}
 8006102:	b089      	sub	sp, #36	; 0x24
 8006104:	af00      	add	r7, sp, #0
 8006106:	60f8      	str	r0, [r7, #12]
 8006108:	60b9      	str	r1, [r7, #8]
 800610a:	607a      	str	r2, [r7, #4]
 800610c:	603b      	str	r3, [r7, #0]
 800610e:	68bb      	ldr	r3, [r7, #8]
 8006110:	617b      	str	r3, [r7, #20]
 8006112:	68fb      	ldr	r3, [r7, #12]
 8006114:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8006118:	2b01      	cmp	r3, #1
 800611a:	d101      	bne.n	8006120 <HAL_LTDC_ConfigCLUT+0x20>
 800611c:	2302      	movs	r3, #2
 800611e:	e057      	b.n	80061d0 <HAL_LTDC_ConfigCLUT+0xd0>
 8006120:	68fb      	ldr	r3, [r7, #12]
 8006122:	2201      	movs	r2, #1
 8006124:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8006128:	68fb      	ldr	r3, [r7, #12]
 800612a:	2202      	movs	r2, #2
 800612c:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8006130:	2300      	movs	r3, #0
 8006132:	61bb      	str	r3, [r7, #24]
 8006134:	e03f      	b.n	80061b6 <HAL_LTDC_ConfigCLUT+0xb6>
 8006136:	68fa      	ldr	r2, [r7, #12]
 8006138:	683b      	ldr	r3, [r7, #0]
 800613a:	2134      	movs	r1, #52	; 0x34
 800613c:	fb01 f303 	mul.w	r3, r1, r3
 8006140:	4413      	add	r3, r2
 8006142:	3348      	adds	r3, #72	; 0x48
 8006144:	681b      	ldr	r3, [r3, #0]
 8006146:	2b06      	cmp	r3, #6
 8006148:	d114      	bne.n	8006174 <HAL_LTDC_ConfigCLUT+0x74>
 800614a:	69ba      	ldr	r2, [r7, #24]
 800614c:	4613      	mov	r3, r2
 800614e:	011b      	lsls	r3, r3, #4
 8006150:	4413      	add	r3, r2
 8006152:	061a      	lsls	r2, r3, #24
 8006154:	697b      	ldr	r3, [r7, #20]
 8006156:	681b      	ldr	r3, [r3, #0]
 8006158:	b2db      	uxtb	r3, r3
 800615a:	431a      	orrs	r2, r3
 800615c:	697b      	ldr	r3, [r7, #20]
 800615e:	681b      	ldr	r3, [r3, #0]
 8006160:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8006164:	431a      	orrs	r2, r3
 8006166:	697b      	ldr	r3, [r7, #20]
 8006168:	681b      	ldr	r3, [r3, #0]
 800616a:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 800616e:	4313      	orrs	r3, r2
 8006170:	61fb      	str	r3, [r7, #28]
 8006172:	e010      	b.n	8006196 <HAL_LTDC_ConfigCLUT+0x96>
 8006174:	69bb      	ldr	r3, [r7, #24]
 8006176:	061a      	lsls	r2, r3, #24
 8006178:	697b      	ldr	r3, [r7, #20]
 800617a:	681b      	ldr	r3, [r3, #0]
 800617c:	b2db      	uxtb	r3, r3
 800617e:	431a      	orrs	r2, r3
 8006180:	697b      	ldr	r3, [r7, #20]
 8006182:	681b      	ldr	r3, [r3, #0]
 8006184:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8006188:	431a      	orrs	r2, r3
 800618a:	697b      	ldr	r3, [r7, #20]
 800618c:	681b      	ldr	r3, [r3, #0]
 800618e:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8006192:	4313      	orrs	r3, r2
 8006194:	61fb      	str	r3, [r7, #28]
 8006196:	697b      	ldr	r3, [r7, #20]
 8006198:	3304      	adds	r3, #4
 800619a:	617b      	str	r3, [r7, #20]
 800619c:	68fb      	ldr	r3, [r7, #12]
 800619e:	681b      	ldr	r3, [r3, #0]
 80061a0:	461a      	mov	r2, r3
 80061a2:	683b      	ldr	r3, [r7, #0]
 80061a4:	01db      	lsls	r3, r3, #7
 80061a6:	4413      	add	r3, r2
 80061a8:	3384      	adds	r3, #132	; 0x84
 80061aa:	461a      	mov	r2, r3
 80061ac:	69fb      	ldr	r3, [r7, #28]
 80061ae:	6413      	str	r3, [r2, #64]	; 0x40
 80061b0:	69bb      	ldr	r3, [r7, #24]
 80061b2:	3301      	adds	r3, #1
 80061b4:	61bb      	str	r3, [r7, #24]
 80061b6:	69ba      	ldr	r2, [r7, #24]
 80061b8:	687b      	ldr	r3, [r7, #4]
 80061ba:	429a      	cmp	r2, r3
 80061bc:	d3bb      	bcc.n	8006136 <HAL_LTDC_ConfigCLUT+0x36>
 80061be:	68fb      	ldr	r3, [r7, #12]
 80061c0:	2201      	movs	r2, #1
 80061c2:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 80061c6:	68fb      	ldr	r3, [r7, #12]
 80061c8:	2200      	movs	r2, #0
 80061ca:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 80061ce:	2300      	movs	r3, #0
 80061d0:	4618      	mov	r0, r3
 80061d2:	3724      	adds	r7, #36	; 0x24
 80061d4:	46bd      	mov	sp, r7
 80061d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061da:	4770      	bx	lr

080061dc <HAL_LTDC_EnableColorKeying>:
 80061dc:	b480      	push	{r7}
 80061de:	b083      	sub	sp, #12
 80061e0:	af00      	add	r7, sp, #0
 80061e2:	6078      	str	r0, [r7, #4]
 80061e4:	6039      	str	r1, [r7, #0]
 80061e6:	687b      	ldr	r3, [r7, #4]
 80061e8:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 80061ec:	2b01      	cmp	r3, #1
 80061ee:	d101      	bne.n	80061f4 <HAL_LTDC_EnableColorKeying+0x18>
 80061f0:	2302      	movs	r3, #2
 80061f2:	e026      	b.n	8006242 <HAL_LTDC_EnableColorKeying+0x66>
 80061f4:	687b      	ldr	r3, [r7, #4]
 80061f6:	2201      	movs	r2, #1
 80061f8:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 80061fc:	687b      	ldr	r3, [r7, #4]
 80061fe:	2202      	movs	r2, #2
 8006200:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8006204:	687b      	ldr	r3, [r7, #4]
 8006206:	681b      	ldr	r3, [r3, #0]
 8006208:	461a      	mov	r2, r3
 800620a:	683b      	ldr	r3, [r7, #0]
 800620c:	01db      	lsls	r3, r3, #7
 800620e:	4413      	add	r3, r2
 8006210:	3384      	adds	r3, #132	; 0x84
 8006212:	681b      	ldr	r3, [r3, #0]
 8006214:	687a      	ldr	r2, [r7, #4]
 8006216:	6812      	ldr	r2, [r2, #0]
 8006218:	4611      	mov	r1, r2
 800621a:	683a      	ldr	r2, [r7, #0]
 800621c:	01d2      	lsls	r2, r2, #7
 800621e:	440a      	add	r2, r1
 8006220:	3284      	adds	r2, #132	; 0x84
 8006222:	f043 0302 	orr.w	r3, r3, #2
 8006226:	6013      	str	r3, [r2, #0]
 8006228:	687b      	ldr	r3, [r7, #4]
 800622a:	681b      	ldr	r3, [r3, #0]
 800622c:	2201      	movs	r2, #1
 800622e:	625a      	str	r2, [r3, #36]	; 0x24
 8006230:	687b      	ldr	r3, [r7, #4]
 8006232:	2201      	movs	r2, #1
 8006234:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8006238:	687b      	ldr	r3, [r7, #4]
 800623a:	2200      	movs	r2, #0
 800623c:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8006240:	2300      	movs	r3, #0
 8006242:	4618      	mov	r0, r3
 8006244:	370c      	adds	r7, #12
 8006246:	46bd      	mov	sp, r7
 8006248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800624c:	4770      	bx	lr

0800624e <HAL_LTDC_DisableColorKeying>:
 800624e:	b480      	push	{r7}
 8006250:	b083      	sub	sp, #12
 8006252:	af00      	add	r7, sp, #0
 8006254:	6078      	str	r0, [r7, #4]
 8006256:	6039      	str	r1, [r7, #0]
 8006258:	687b      	ldr	r3, [r7, #4]
 800625a:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 800625e:	2b01      	cmp	r3, #1
 8006260:	d101      	bne.n	8006266 <HAL_LTDC_DisableColorKeying+0x18>
 8006262:	2302      	movs	r3, #2
 8006264:	e026      	b.n	80062b4 <HAL_LTDC_DisableColorKeying+0x66>
 8006266:	687b      	ldr	r3, [r7, #4]
 8006268:	2201      	movs	r2, #1
 800626a:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 800626e:	687b      	ldr	r3, [r7, #4]
 8006270:	2202      	movs	r2, #2
 8006272:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8006276:	687b      	ldr	r3, [r7, #4]
 8006278:	681b      	ldr	r3, [r3, #0]
 800627a:	461a      	mov	r2, r3
 800627c:	683b      	ldr	r3, [r7, #0]
 800627e:	01db      	lsls	r3, r3, #7
 8006280:	4413      	add	r3, r2
 8006282:	3384      	adds	r3, #132	; 0x84
 8006284:	681b      	ldr	r3, [r3, #0]
 8006286:	687a      	ldr	r2, [r7, #4]
 8006288:	6812      	ldr	r2, [r2, #0]
 800628a:	4611      	mov	r1, r2
 800628c:	683a      	ldr	r2, [r7, #0]
 800628e:	01d2      	lsls	r2, r2, #7
 8006290:	440a      	add	r2, r1
 8006292:	3284      	adds	r2, #132	; 0x84
 8006294:	f023 0302 	bic.w	r3, r3, #2
 8006298:	6013      	str	r3, [r2, #0]
 800629a:	687b      	ldr	r3, [r7, #4]
 800629c:	681b      	ldr	r3, [r3, #0]
 800629e:	2201      	movs	r2, #1
 80062a0:	625a      	str	r2, [r3, #36]	; 0x24
 80062a2:	687b      	ldr	r3, [r7, #4]
 80062a4:	2201      	movs	r2, #1
 80062a6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 80062aa:	687b      	ldr	r3, [r7, #4]
 80062ac:	2200      	movs	r2, #0
 80062ae:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 80062b2:	2300      	movs	r3, #0
 80062b4:	4618      	mov	r0, r3
 80062b6:	370c      	adds	r7, #12
 80062b8:	46bd      	mov	sp, r7
 80062ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062be:	4770      	bx	lr

080062c0 <HAL_LTDC_EnableCLUT>:
 80062c0:	b480      	push	{r7}
 80062c2:	b083      	sub	sp, #12
 80062c4:	af00      	add	r7, sp, #0
 80062c6:	6078      	str	r0, [r7, #4]
 80062c8:	6039      	str	r1, [r7, #0]
 80062ca:	687b      	ldr	r3, [r7, #4]
 80062cc:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 80062d0:	2b01      	cmp	r3, #1
 80062d2:	d101      	bne.n	80062d8 <HAL_LTDC_EnableCLUT+0x18>
 80062d4:	2302      	movs	r3, #2
 80062d6:	e026      	b.n	8006326 <HAL_LTDC_EnableCLUT+0x66>
 80062d8:	687b      	ldr	r3, [r7, #4]
 80062da:	2201      	movs	r2, #1
 80062dc:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	2202      	movs	r2, #2
 80062e4:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 80062e8:	687b      	ldr	r3, [r7, #4]
 80062ea:	681b      	ldr	r3, [r3, #0]
 80062ec:	461a      	mov	r2, r3
 80062ee:	683b      	ldr	r3, [r7, #0]
 80062f0:	01db      	lsls	r3, r3, #7
 80062f2:	4413      	add	r3, r2
 80062f4:	3384      	adds	r3, #132	; 0x84
 80062f6:	681b      	ldr	r3, [r3, #0]
 80062f8:	687a      	ldr	r2, [r7, #4]
 80062fa:	6812      	ldr	r2, [r2, #0]
 80062fc:	4611      	mov	r1, r2
 80062fe:	683a      	ldr	r2, [r7, #0]
 8006300:	01d2      	lsls	r2, r2, #7
 8006302:	440a      	add	r2, r1
 8006304:	3284      	adds	r2, #132	; 0x84
 8006306:	f043 0310 	orr.w	r3, r3, #16
 800630a:	6013      	str	r3, [r2, #0]
 800630c:	687b      	ldr	r3, [r7, #4]
 800630e:	681b      	ldr	r3, [r3, #0]
 8006310:	2201      	movs	r2, #1
 8006312:	625a      	str	r2, [r3, #36]	; 0x24
 8006314:	687b      	ldr	r3, [r7, #4]
 8006316:	2201      	movs	r2, #1
 8006318:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 800631c:	687b      	ldr	r3, [r7, #4]
 800631e:	2200      	movs	r2, #0
 8006320:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8006324:	2300      	movs	r3, #0
 8006326:	4618      	mov	r0, r3
 8006328:	370c      	adds	r7, #12
 800632a:	46bd      	mov	sp, r7
 800632c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006330:	4770      	bx	lr
	...

08006334 <HAL_LTDC_EnableDither>:
 8006334:	b480      	push	{r7}
 8006336:	b083      	sub	sp, #12
 8006338:	af00      	add	r7, sp, #0
 800633a:	6078      	str	r0, [r7, #4]
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8006342:	2b01      	cmp	r3, #1
 8006344:	d101      	bne.n	800634a <HAL_LTDC_EnableDither+0x16>
 8006346:	2302      	movs	r3, #2
 8006348:	e016      	b.n	8006378 <HAL_LTDC_EnableDither+0x44>
 800634a:	687b      	ldr	r3, [r7, #4]
 800634c:	2201      	movs	r2, #1
 800634e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8006352:	687b      	ldr	r3, [r7, #4]
 8006354:	2202      	movs	r2, #2
 8006356:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 800635a:	4b0a      	ldr	r3, [pc, #40]	; (8006384 <HAL_LTDC_EnableDither+0x50>)
 800635c:	699b      	ldr	r3, [r3, #24]
 800635e:	4a09      	ldr	r2, [pc, #36]	; (8006384 <HAL_LTDC_EnableDither+0x50>)
 8006360:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006364:	6193      	str	r3, [r2, #24]
 8006366:	687b      	ldr	r3, [r7, #4]
 8006368:	2201      	movs	r2, #1
 800636a:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 800636e:	687b      	ldr	r3, [r7, #4]
 8006370:	2200      	movs	r2, #0
 8006372:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8006376:	2300      	movs	r3, #0
 8006378:	4618      	mov	r0, r3
 800637a:	370c      	adds	r7, #12
 800637c:	46bd      	mov	sp, r7
 800637e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006382:	4770      	bx	lr
 8006384:	40016800 	.word	0x40016800

08006388 <HAL_LTDC_SetWindowPosition>:
 8006388:	b580      	push	{r7, lr}
 800638a:	b086      	sub	sp, #24
 800638c:	af00      	add	r7, sp, #0
 800638e:	60f8      	str	r0, [r7, #12]
 8006390:	60b9      	str	r1, [r7, #8]
 8006392:	607a      	str	r2, [r7, #4]
 8006394:	603b      	str	r3, [r7, #0]
 8006396:	68fb      	ldr	r3, [r7, #12]
 8006398:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 800639c:	2b01      	cmp	r3, #1
 800639e:	d101      	bne.n	80063a4 <HAL_LTDC_SetWindowPosition+0x1c>
 80063a0:	2302      	movs	r3, #2
 80063a2:	e033      	b.n	800640c <HAL_LTDC_SetWindowPosition+0x84>
 80063a4:	68fb      	ldr	r3, [r7, #12]
 80063a6:	2201      	movs	r2, #1
 80063a8:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 80063ac:	68fb      	ldr	r3, [r7, #12]
 80063ae:	2202      	movs	r2, #2
 80063b0:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 80063b4:	683b      	ldr	r3, [r7, #0]
 80063b6:	2234      	movs	r2, #52	; 0x34
 80063b8:	fb02 f303 	mul.w	r3, r2, r3
 80063bc:	3338      	adds	r3, #56	; 0x38
 80063be:	68fa      	ldr	r2, [r7, #12]
 80063c0:	4413      	add	r3, r2
 80063c2:	617b      	str	r3, [r7, #20]
 80063c4:	697b      	ldr	r3, [r7, #20]
 80063c6:	68ba      	ldr	r2, [r7, #8]
 80063c8:	601a      	str	r2, [r3, #0]
 80063ca:	697b      	ldr	r3, [r7, #20]
 80063cc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80063ce:	68bb      	ldr	r3, [r7, #8]
 80063d0:	441a      	add	r2, r3
 80063d2:	697b      	ldr	r3, [r7, #20]
 80063d4:	605a      	str	r2, [r3, #4]
 80063d6:	697b      	ldr	r3, [r7, #20]
 80063d8:	687a      	ldr	r2, [r7, #4]
 80063da:	609a      	str	r2, [r3, #8]
 80063dc:	697b      	ldr	r3, [r7, #20]
 80063de:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80063e0:	687b      	ldr	r3, [r7, #4]
 80063e2:	441a      	add	r2, r3
 80063e4:	697b      	ldr	r3, [r7, #20]
 80063e6:	60da      	str	r2, [r3, #12]
 80063e8:	683a      	ldr	r2, [r7, #0]
 80063ea:	6979      	ldr	r1, [r7, #20]
 80063ec:	68f8      	ldr	r0, [r7, #12]
 80063ee:	f000 f8b5 	bl	800655c <LTDC_SetConfig>
 80063f2:	68fb      	ldr	r3, [r7, #12]
 80063f4:	681b      	ldr	r3, [r3, #0]
 80063f6:	2201      	movs	r2, #1
 80063f8:	625a      	str	r2, [r3, #36]	; 0x24
 80063fa:	68fb      	ldr	r3, [r7, #12]
 80063fc:	2201      	movs	r2, #1
 80063fe:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8006402:	68fb      	ldr	r3, [r7, #12]
 8006404:	2200      	movs	r2, #0
 8006406:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 800640a:	2300      	movs	r3, #0
 800640c:	4618      	mov	r0, r3
 800640e:	3718      	adds	r7, #24
 8006410:	46bd      	mov	sp, r7
 8006412:	bd80      	pop	{r7, pc}

08006414 <HAL_LTDC_SetAlpha>:
 8006414:	b580      	push	{r7, lr}
 8006416:	b086      	sub	sp, #24
 8006418:	af00      	add	r7, sp, #0
 800641a:	60f8      	str	r0, [r7, #12]
 800641c:	60b9      	str	r1, [r7, #8]
 800641e:	607a      	str	r2, [r7, #4]
 8006420:	68fb      	ldr	r3, [r7, #12]
 8006422:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8006426:	2b01      	cmp	r3, #1
 8006428:	d101      	bne.n	800642e <HAL_LTDC_SetAlpha+0x1a>
 800642a:	2302      	movs	r3, #2
 800642c:	e024      	b.n	8006478 <HAL_LTDC_SetAlpha+0x64>
 800642e:	68fb      	ldr	r3, [r7, #12]
 8006430:	2201      	movs	r2, #1
 8006432:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8006436:	68fb      	ldr	r3, [r7, #12]
 8006438:	2202      	movs	r2, #2
 800643a:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 800643e:	687b      	ldr	r3, [r7, #4]
 8006440:	2234      	movs	r2, #52	; 0x34
 8006442:	fb02 f303 	mul.w	r3, r2, r3
 8006446:	3338      	adds	r3, #56	; 0x38
 8006448:	68fa      	ldr	r2, [r7, #12]
 800644a:	4413      	add	r3, r2
 800644c:	617b      	str	r3, [r7, #20]
 800644e:	697b      	ldr	r3, [r7, #20]
 8006450:	68ba      	ldr	r2, [r7, #8]
 8006452:	615a      	str	r2, [r3, #20]
 8006454:	687a      	ldr	r2, [r7, #4]
 8006456:	6979      	ldr	r1, [r7, #20]
 8006458:	68f8      	ldr	r0, [r7, #12]
 800645a:	f000 f87f 	bl	800655c <LTDC_SetConfig>
 800645e:	68fb      	ldr	r3, [r7, #12]
 8006460:	681b      	ldr	r3, [r3, #0]
 8006462:	2201      	movs	r2, #1
 8006464:	625a      	str	r2, [r3, #36]	; 0x24
 8006466:	68fb      	ldr	r3, [r7, #12]
 8006468:	2201      	movs	r2, #1
 800646a:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 800646e:	68fb      	ldr	r3, [r7, #12]
 8006470:	2200      	movs	r2, #0
 8006472:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8006476:	2300      	movs	r3, #0
 8006478:	4618      	mov	r0, r3
 800647a:	3718      	adds	r7, #24
 800647c:	46bd      	mov	sp, r7
 800647e:	bd80      	pop	{r7, pc}

08006480 <HAL_LTDC_SetAddress>:
 8006480:	b580      	push	{r7, lr}
 8006482:	b086      	sub	sp, #24
 8006484:	af00      	add	r7, sp, #0
 8006486:	60f8      	str	r0, [r7, #12]
 8006488:	60b9      	str	r1, [r7, #8]
 800648a:	607a      	str	r2, [r7, #4]
 800648c:	68fb      	ldr	r3, [r7, #12]
 800648e:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8006492:	2b01      	cmp	r3, #1
 8006494:	d101      	bne.n	800649a <HAL_LTDC_SetAddress+0x1a>
 8006496:	2302      	movs	r3, #2
 8006498:	e024      	b.n	80064e4 <HAL_LTDC_SetAddress+0x64>
 800649a:	68fb      	ldr	r3, [r7, #12]
 800649c:	2201      	movs	r2, #1
 800649e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 80064a2:	68fb      	ldr	r3, [r7, #12]
 80064a4:	2202      	movs	r2, #2
 80064a6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 80064aa:	687b      	ldr	r3, [r7, #4]
 80064ac:	2234      	movs	r2, #52	; 0x34
 80064ae:	fb02 f303 	mul.w	r3, r2, r3
 80064b2:	3338      	adds	r3, #56	; 0x38
 80064b4:	68fa      	ldr	r2, [r7, #12]
 80064b6:	4413      	add	r3, r2
 80064b8:	617b      	str	r3, [r7, #20]
 80064ba:	697b      	ldr	r3, [r7, #20]
 80064bc:	68ba      	ldr	r2, [r7, #8]
 80064be:	625a      	str	r2, [r3, #36]	; 0x24
 80064c0:	687a      	ldr	r2, [r7, #4]
 80064c2:	6979      	ldr	r1, [r7, #20]
 80064c4:	68f8      	ldr	r0, [r7, #12]
 80064c6:	f000 f849 	bl	800655c <LTDC_SetConfig>
 80064ca:	68fb      	ldr	r3, [r7, #12]
 80064cc:	681b      	ldr	r3, [r3, #0]
 80064ce:	2201      	movs	r2, #1
 80064d0:	625a      	str	r2, [r3, #36]	; 0x24
 80064d2:	68fb      	ldr	r3, [r7, #12]
 80064d4:	2201      	movs	r2, #1
 80064d6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 80064da:	68fb      	ldr	r3, [r7, #12]
 80064dc:	2200      	movs	r2, #0
 80064de:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 80064e2:	2300      	movs	r3, #0
 80064e4:	4618      	mov	r0, r3
 80064e6:	3718      	adds	r7, #24
 80064e8:	46bd      	mov	sp, r7
 80064ea:	bd80      	pop	{r7, pc}

080064ec <HAL_LTDC_ProgramLineEvent>:
 80064ec:	b480      	push	{r7}
 80064ee:	b083      	sub	sp, #12
 80064f0:	af00      	add	r7, sp, #0
 80064f2:	6078      	str	r0, [r7, #4]
 80064f4:	6039      	str	r1, [r7, #0]
 80064f6:	687b      	ldr	r3, [r7, #4]
 80064f8:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 80064fc:	2b01      	cmp	r3, #1
 80064fe:	d101      	bne.n	8006504 <HAL_LTDC_ProgramLineEvent+0x18>
 8006500:	2302      	movs	r3, #2
 8006502:	e023      	b.n	800654c <HAL_LTDC_ProgramLineEvent+0x60>
 8006504:	687b      	ldr	r3, [r7, #4]
 8006506:	2201      	movs	r2, #1
 8006508:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 800650c:	687b      	ldr	r3, [r7, #4]
 800650e:	2202      	movs	r2, #2
 8006510:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8006514:	687b      	ldr	r3, [r7, #4]
 8006516:	681b      	ldr	r3, [r3, #0]
 8006518:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800651a:	687b      	ldr	r3, [r7, #4]
 800651c:	681b      	ldr	r3, [r3, #0]
 800651e:	f022 0201 	bic.w	r2, r2, #1
 8006522:	635a      	str	r2, [r3, #52]	; 0x34
 8006524:	4a0c      	ldr	r2, [pc, #48]	; (8006558 <HAL_LTDC_ProgramLineEvent+0x6c>)
 8006526:	683b      	ldr	r3, [r7, #0]
 8006528:	6413      	str	r3, [r2, #64]	; 0x40
 800652a:	687b      	ldr	r3, [r7, #4]
 800652c:	681b      	ldr	r3, [r3, #0]
 800652e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006530:	687b      	ldr	r3, [r7, #4]
 8006532:	681b      	ldr	r3, [r3, #0]
 8006534:	f042 0201 	orr.w	r2, r2, #1
 8006538:	635a      	str	r2, [r3, #52]	; 0x34
 800653a:	687b      	ldr	r3, [r7, #4]
 800653c:	2201      	movs	r2, #1
 800653e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8006542:	687b      	ldr	r3, [r7, #4]
 8006544:	2200      	movs	r2, #0
 8006546:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 800654a:	2300      	movs	r3, #0
 800654c:	4618      	mov	r0, r3
 800654e:	370c      	adds	r7, #12
 8006550:	46bd      	mov	sp, r7
 8006552:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006556:	4770      	bx	lr
 8006558:	40016800 	.word	0x40016800

0800655c <LTDC_SetConfig>:
 800655c:	b480      	push	{r7}
 800655e:	b089      	sub	sp, #36	; 0x24
 8006560:	af00      	add	r7, sp, #0
 8006562:	60f8      	str	r0, [r7, #12]
 8006564:	60b9      	str	r1, [r7, #8]
 8006566:	607a      	str	r2, [r7, #4]
 8006568:	68bb      	ldr	r3, [r7, #8]
 800656a:	685a      	ldr	r2, [r3, #4]
 800656c:	68fb      	ldr	r3, [r7, #12]
 800656e:	681b      	ldr	r3, [r3, #0]
 8006570:	68db      	ldr	r3, [r3, #12]
 8006572:	0c1b      	lsrs	r3, r3, #16
 8006574:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006578:	4413      	add	r3, r2
 800657a:	041b      	lsls	r3, r3, #16
 800657c:	61fb      	str	r3, [r7, #28]
 800657e:	68fb      	ldr	r3, [r7, #12]
 8006580:	681b      	ldr	r3, [r3, #0]
 8006582:	461a      	mov	r2, r3
 8006584:	687b      	ldr	r3, [r7, #4]
 8006586:	01db      	lsls	r3, r3, #7
 8006588:	4413      	add	r3, r2
 800658a:	3384      	adds	r3, #132	; 0x84
 800658c:	685b      	ldr	r3, [r3, #4]
 800658e:	68fa      	ldr	r2, [r7, #12]
 8006590:	6812      	ldr	r2, [r2, #0]
 8006592:	4611      	mov	r1, r2
 8006594:	687a      	ldr	r2, [r7, #4]
 8006596:	01d2      	lsls	r2, r2, #7
 8006598:	440a      	add	r2, r1
 800659a:	3284      	adds	r2, #132	; 0x84
 800659c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 80065a0:	6053      	str	r3, [r2, #4]
 80065a2:	68bb      	ldr	r3, [r7, #8]
 80065a4:	681a      	ldr	r2, [r3, #0]
 80065a6:	68fb      	ldr	r3, [r7, #12]
 80065a8:	681b      	ldr	r3, [r3, #0]
 80065aa:	68db      	ldr	r3, [r3, #12]
 80065ac:	0c1b      	lsrs	r3, r3, #16
 80065ae:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80065b2:	4413      	add	r3, r2
 80065b4:	1c5a      	adds	r2, r3, #1
 80065b6:	68fb      	ldr	r3, [r7, #12]
 80065b8:	681b      	ldr	r3, [r3, #0]
 80065ba:	4619      	mov	r1, r3
 80065bc:	687b      	ldr	r3, [r7, #4]
 80065be:	01db      	lsls	r3, r3, #7
 80065c0:	440b      	add	r3, r1
 80065c2:	3384      	adds	r3, #132	; 0x84
 80065c4:	4619      	mov	r1, r3
 80065c6:	69fb      	ldr	r3, [r7, #28]
 80065c8:	4313      	orrs	r3, r2
 80065ca:	604b      	str	r3, [r1, #4]
 80065cc:	68bb      	ldr	r3, [r7, #8]
 80065ce:	68da      	ldr	r2, [r3, #12]
 80065d0:	68fb      	ldr	r3, [r7, #12]
 80065d2:	681b      	ldr	r3, [r3, #0]
 80065d4:	68db      	ldr	r3, [r3, #12]
 80065d6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80065da:	4413      	add	r3, r2
 80065dc:	041b      	lsls	r3, r3, #16
 80065de:	61fb      	str	r3, [r7, #28]
 80065e0:	68fb      	ldr	r3, [r7, #12]
 80065e2:	681b      	ldr	r3, [r3, #0]
 80065e4:	461a      	mov	r2, r3
 80065e6:	687b      	ldr	r3, [r7, #4]
 80065e8:	01db      	lsls	r3, r3, #7
 80065ea:	4413      	add	r3, r2
 80065ec:	3384      	adds	r3, #132	; 0x84
 80065ee:	689b      	ldr	r3, [r3, #8]
 80065f0:	68fa      	ldr	r2, [r7, #12]
 80065f2:	6812      	ldr	r2, [r2, #0]
 80065f4:	4611      	mov	r1, r2
 80065f6:	687a      	ldr	r2, [r7, #4]
 80065f8:	01d2      	lsls	r2, r2, #7
 80065fa:	440a      	add	r2, r1
 80065fc:	3284      	adds	r2, #132	; 0x84
 80065fe:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8006602:	6093      	str	r3, [r2, #8]
 8006604:	68bb      	ldr	r3, [r7, #8]
 8006606:	689a      	ldr	r2, [r3, #8]
 8006608:	68fb      	ldr	r3, [r7, #12]
 800660a:	681b      	ldr	r3, [r3, #0]
 800660c:	68db      	ldr	r3, [r3, #12]
 800660e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006612:	4413      	add	r3, r2
 8006614:	1c5a      	adds	r2, r3, #1
 8006616:	68fb      	ldr	r3, [r7, #12]
 8006618:	681b      	ldr	r3, [r3, #0]
 800661a:	4619      	mov	r1, r3
 800661c:	687b      	ldr	r3, [r7, #4]
 800661e:	01db      	lsls	r3, r3, #7
 8006620:	440b      	add	r3, r1
 8006622:	3384      	adds	r3, #132	; 0x84
 8006624:	4619      	mov	r1, r3
 8006626:	69fb      	ldr	r3, [r7, #28]
 8006628:	4313      	orrs	r3, r2
 800662a:	608b      	str	r3, [r1, #8]
 800662c:	68fb      	ldr	r3, [r7, #12]
 800662e:	681b      	ldr	r3, [r3, #0]
 8006630:	461a      	mov	r2, r3
 8006632:	687b      	ldr	r3, [r7, #4]
 8006634:	01db      	lsls	r3, r3, #7
 8006636:	4413      	add	r3, r2
 8006638:	3384      	adds	r3, #132	; 0x84
 800663a:	691b      	ldr	r3, [r3, #16]
 800663c:	68fa      	ldr	r2, [r7, #12]
 800663e:	6812      	ldr	r2, [r2, #0]
 8006640:	4611      	mov	r1, r2
 8006642:	687a      	ldr	r2, [r7, #4]
 8006644:	01d2      	lsls	r2, r2, #7
 8006646:	440a      	add	r2, r1
 8006648:	3284      	adds	r2, #132	; 0x84
 800664a:	f023 0307 	bic.w	r3, r3, #7
 800664e:	6113      	str	r3, [r2, #16]
 8006650:	68fb      	ldr	r3, [r7, #12]
 8006652:	681b      	ldr	r3, [r3, #0]
 8006654:	461a      	mov	r2, r3
 8006656:	687b      	ldr	r3, [r7, #4]
 8006658:	01db      	lsls	r3, r3, #7
 800665a:	4413      	add	r3, r2
 800665c:	3384      	adds	r3, #132	; 0x84
 800665e:	461a      	mov	r2, r3
 8006660:	68bb      	ldr	r3, [r7, #8]
 8006662:	691b      	ldr	r3, [r3, #16]
 8006664:	6113      	str	r3, [r2, #16]
 8006666:	68bb      	ldr	r3, [r7, #8]
 8006668:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 800666c:	021b      	lsls	r3, r3, #8
 800666e:	61fb      	str	r3, [r7, #28]
 8006670:	68bb      	ldr	r3, [r7, #8]
 8006672:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 8006676:	041b      	lsls	r3, r3, #16
 8006678:	61bb      	str	r3, [r7, #24]
 800667a:	68bb      	ldr	r3, [r7, #8]
 800667c:	699b      	ldr	r3, [r3, #24]
 800667e:	061b      	lsls	r3, r3, #24
 8006680:	617b      	str	r3, [r7, #20]
 8006682:	68fb      	ldr	r3, [r7, #12]
 8006684:	681b      	ldr	r3, [r3, #0]
 8006686:	461a      	mov	r2, r3
 8006688:	687b      	ldr	r3, [r7, #4]
 800668a:	01db      	lsls	r3, r3, #7
 800668c:	4413      	add	r3, r2
 800668e:	3384      	adds	r3, #132	; 0x84
 8006690:	699b      	ldr	r3, [r3, #24]
 8006692:	68fb      	ldr	r3, [r7, #12]
 8006694:	681b      	ldr	r3, [r3, #0]
 8006696:	461a      	mov	r2, r3
 8006698:	687b      	ldr	r3, [r7, #4]
 800669a:	01db      	lsls	r3, r3, #7
 800669c:	4413      	add	r3, r2
 800669e:	3384      	adds	r3, #132	; 0x84
 80066a0:	461a      	mov	r2, r3
 80066a2:	2300      	movs	r3, #0
 80066a4:	6193      	str	r3, [r2, #24]
 80066a6:	68bb      	ldr	r3, [r7, #8]
 80066a8:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80066ac:	461a      	mov	r2, r3
 80066ae:	69fb      	ldr	r3, [r7, #28]
 80066b0:	431a      	orrs	r2, r3
 80066b2:	69bb      	ldr	r3, [r7, #24]
 80066b4:	431a      	orrs	r2, r3
 80066b6:	68fb      	ldr	r3, [r7, #12]
 80066b8:	681b      	ldr	r3, [r3, #0]
 80066ba:	4619      	mov	r1, r3
 80066bc:	687b      	ldr	r3, [r7, #4]
 80066be:	01db      	lsls	r3, r3, #7
 80066c0:	440b      	add	r3, r1
 80066c2:	3384      	adds	r3, #132	; 0x84
 80066c4:	4619      	mov	r1, r3
 80066c6:	697b      	ldr	r3, [r7, #20]
 80066c8:	4313      	orrs	r3, r2
 80066ca:	618b      	str	r3, [r1, #24]
 80066cc:	68fb      	ldr	r3, [r7, #12]
 80066ce:	681b      	ldr	r3, [r3, #0]
 80066d0:	461a      	mov	r2, r3
 80066d2:	687b      	ldr	r3, [r7, #4]
 80066d4:	01db      	lsls	r3, r3, #7
 80066d6:	4413      	add	r3, r2
 80066d8:	3384      	adds	r3, #132	; 0x84
 80066da:	695b      	ldr	r3, [r3, #20]
 80066dc:	68fa      	ldr	r2, [r7, #12]
 80066de:	6812      	ldr	r2, [r2, #0]
 80066e0:	4611      	mov	r1, r2
 80066e2:	687a      	ldr	r2, [r7, #4]
 80066e4:	01d2      	lsls	r2, r2, #7
 80066e6:	440a      	add	r2, r1
 80066e8:	3284      	adds	r2, #132	; 0x84
 80066ea:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 80066ee:	6153      	str	r3, [r2, #20]
 80066f0:	68fb      	ldr	r3, [r7, #12]
 80066f2:	681b      	ldr	r3, [r3, #0]
 80066f4:	461a      	mov	r2, r3
 80066f6:	687b      	ldr	r3, [r7, #4]
 80066f8:	01db      	lsls	r3, r3, #7
 80066fa:	4413      	add	r3, r2
 80066fc:	3384      	adds	r3, #132	; 0x84
 80066fe:	461a      	mov	r2, r3
 8006700:	68bb      	ldr	r3, [r7, #8]
 8006702:	695b      	ldr	r3, [r3, #20]
 8006704:	6153      	str	r3, [r2, #20]
 8006706:	68fb      	ldr	r3, [r7, #12]
 8006708:	681b      	ldr	r3, [r3, #0]
 800670a:	461a      	mov	r2, r3
 800670c:	687b      	ldr	r3, [r7, #4]
 800670e:	01db      	lsls	r3, r3, #7
 8006710:	4413      	add	r3, r2
 8006712:	3384      	adds	r3, #132	; 0x84
 8006714:	69da      	ldr	r2, [r3, #28]
 8006716:	68fb      	ldr	r3, [r7, #12]
 8006718:	681b      	ldr	r3, [r3, #0]
 800671a:	4619      	mov	r1, r3
 800671c:	687b      	ldr	r3, [r7, #4]
 800671e:	01db      	lsls	r3, r3, #7
 8006720:	440b      	add	r3, r1
 8006722:	3384      	adds	r3, #132	; 0x84
 8006724:	4619      	mov	r1, r3
 8006726:	4b58      	ldr	r3, [pc, #352]	; (8006888 <LTDC_SetConfig+0x32c>)
 8006728:	4013      	ands	r3, r2
 800672a:	61cb      	str	r3, [r1, #28]
 800672c:	68bb      	ldr	r3, [r7, #8]
 800672e:	69da      	ldr	r2, [r3, #28]
 8006730:	68bb      	ldr	r3, [r7, #8]
 8006732:	6a1b      	ldr	r3, [r3, #32]
 8006734:	68f9      	ldr	r1, [r7, #12]
 8006736:	6809      	ldr	r1, [r1, #0]
 8006738:	4608      	mov	r0, r1
 800673a:	6879      	ldr	r1, [r7, #4]
 800673c:	01c9      	lsls	r1, r1, #7
 800673e:	4401      	add	r1, r0
 8006740:	3184      	adds	r1, #132	; 0x84
 8006742:	4313      	orrs	r3, r2
 8006744:	61cb      	str	r3, [r1, #28]
 8006746:	68fb      	ldr	r3, [r7, #12]
 8006748:	681b      	ldr	r3, [r3, #0]
 800674a:	461a      	mov	r2, r3
 800674c:	687b      	ldr	r3, [r7, #4]
 800674e:	01db      	lsls	r3, r3, #7
 8006750:	4413      	add	r3, r2
 8006752:	3384      	adds	r3, #132	; 0x84
 8006754:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006756:	68fb      	ldr	r3, [r7, #12]
 8006758:	681b      	ldr	r3, [r3, #0]
 800675a:	461a      	mov	r2, r3
 800675c:	687b      	ldr	r3, [r7, #4]
 800675e:	01db      	lsls	r3, r3, #7
 8006760:	4413      	add	r3, r2
 8006762:	3384      	adds	r3, #132	; 0x84
 8006764:	461a      	mov	r2, r3
 8006766:	2300      	movs	r3, #0
 8006768:	6293      	str	r3, [r2, #40]	; 0x28
 800676a:	68fb      	ldr	r3, [r7, #12]
 800676c:	681b      	ldr	r3, [r3, #0]
 800676e:	461a      	mov	r2, r3
 8006770:	687b      	ldr	r3, [r7, #4]
 8006772:	01db      	lsls	r3, r3, #7
 8006774:	4413      	add	r3, r2
 8006776:	3384      	adds	r3, #132	; 0x84
 8006778:	461a      	mov	r2, r3
 800677a:	68bb      	ldr	r3, [r7, #8]
 800677c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800677e:	6293      	str	r3, [r2, #40]	; 0x28
 8006780:	68bb      	ldr	r3, [r7, #8]
 8006782:	691b      	ldr	r3, [r3, #16]
 8006784:	2b00      	cmp	r3, #0
 8006786:	d102      	bne.n	800678e <LTDC_SetConfig+0x232>
 8006788:	2304      	movs	r3, #4
 800678a:	61fb      	str	r3, [r7, #28]
 800678c:	e01b      	b.n	80067c6 <LTDC_SetConfig+0x26a>
 800678e:	68bb      	ldr	r3, [r7, #8]
 8006790:	691b      	ldr	r3, [r3, #16]
 8006792:	2b01      	cmp	r3, #1
 8006794:	d102      	bne.n	800679c <LTDC_SetConfig+0x240>
 8006796:	2303      	movs	r3, #3
 8006798:	61fb      	str	r3, [r7, #28]
 800679a:	e014      	b.n	80067c6 <LTDC_SetConfig+0x26a>
 800679c:	68bb      	ldr	r3, [r7, #8]
 800679e:	691b      	ldr	r3, [r3, #16]
 80067a0:	2b04      	cmp	r3, #4
 80067a2:	d00b      	beq.n	80067bc <LTDC_SetConfig+0x260>
 80067a4:	68bb      	ldr	r3, [r7, #8]
 80067a6:	691b      	ldr	r3, [r3, #16]
 80067a8:	2b02      	cmp	r3, #2
 80067aa:	d007      	beq.n	80067bc <LTDC_SetConfig+0x260>
 80067ac:	68bb      	ldr	r3, [r7, #8]
 80067ae:	691b      	ldr	r3, [r3, #16]
 80067b0:	2b03      	cmp	r3, #3
 80067b2:	d003      	beq.n	80067bc <LTDC_SetConfig+0x260>
 80067b4:	68bb      	ldr	r3, [r7, #8]
 80067b6:	691b      	ldr	r3, [r3, #16]
 80067b8:	2b07      	cmp	r3, #7
 80067ba:	d102      	bne.n	80067c2 <LTDC_SetConfig+0x266>
 80067bc:	2302      	movs	r3, #2
 80067be:	61fb      	str	r3, [r7, #28]
 80067c0:	e001      	b.n	80067c6 <LTDC_SetConfig+0x26a>
 80067c2:	2301      	movs	r3, #1
 80067c4:	61fb      	str	r3, [r7, #28]
 80067c6:	68fb      	ldr	r3, [r7, #12]
 80067c8:	681b      	ldr	r3, [r3, #0]
 80067ca:	461a      	mov	r2, r3
 80067cc:	687b      	ldr	r3, [r7, #4]
 80067ce:	01db      	lsls	r3, r3, #7
 80067d0:	4413      	add	r3, r2
 80067d2:	3384      	adds	r3, #132	; 0x84
 80067d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80067d6:	68fa      	ldr	r2, [r7, #12]
 80067d8:	6812      	ldr	r2, [r2, #0]
 80067da:	4611      	mov	r1, r2
 80067dc:	687a      	ldr	r2, [r7, #4]
 80067de:	01d2      	lsls	r2, r2, #7
 80067e0:	440a      	add	r2, r1
 80067e2:	3284      	adds	r2, #132	; 0x84
 80067e4:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 80067e8:	62d3      	str	r3, [r2, #44]	; 0x2c
 80067ea:	68bb      	ldr	r3, [r7, #8]
 80067ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80067ee:	69fa      	ldr	r2, [r7, #28]
 80067f0:	fb02 f303 	mul.w	r3, r2, r3
 80067f4:	041a      	lsls	r2, r3, #16
 80067f6:	68bb      	ldr	r3, [r7, #8]
 80067f8:	6859      	ldr	r1, [r3, #4]
 80067fa:	68bb      	ldr	r3, [r7, #8]
 80067fc:	681b      	ldr	r3, [r3, #0]
 80067fe:	1acb      	subs	r3, r1, r3
 8006800:	69f9      	ldr	r1, [r7, #28]
 8006802:	fb01 f303 	mul.w	r3, r1, r3
 8006806:	3303      	adds	r3, #3
 8006808:	68f9      	ldr	r1, [r7, #12]
 800680a:	6809      	ldr	r1, [r1, #0]
 800680c:	4608      	mov	r0, r1
 800680e:	6879      	ldr	r1, [r7, #4]
 8006810:	01c9      	lsls	r1, r1, #7
 8006812:	4401      	add	r1, r0
 8006814:	3184      	adds	r1, #132	; 0x84
 8006816:	4313      	orrs	r3, r2
 8006818:	62cb      	str	r3, [r1, #44]	; 0x2c
 800681a:	68fb      	ldr	r3, [r7, #12]
 800681c:	681b      	ldr	r3, [r3, #0]
 800681e:	461a      	mov	r2, r3
 8006820:	687b      	ldr	r3, [r7, #4]
 8006822:	01db      	lsls	r3, r3, #7
 8006824:	4413      	add	r3, r2
 8006826:	3384      	adds	r3, #132	; 0x84
 8006828:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800682a:	68fb      	ldr	r3, [r7, #12]
 800682c:	681b      	ldr	r3, [r3, #0]
 800682e:	4619      	mov	r1, r3
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	01db      	lsls	r3, r3, #7
 8006834:	440b      	add	r3, r1
 8006836:	3384      	adds	r3, #132	; 0x84
 8006838:	4619      	mov	r1, r3
 800683a:	4b14      	ldr	r3, [pc, #80]	; (800688c <LTDC_SetConfig+0x330>)
 800683c:	4013      	ands	r3, r2
 800683e:	630b      	str	r3, [r1, #48]	; 0x30
 8006840:	68fb      	ldr	r3, [r7, #12]
 8006842:	681b      	ldr	r3, [r3, #0]
 8006844:	461a      	mov	r2, r3
 8006846:	687b      	ldr	r3, [r7, #4]
 8006848:	01db      	lsls	r3, r3, #7
 800684a:	4413      	add	r3, r2
 800684c:	3384      	adds	r3, #132	; 0x84
 800684e:	461a      	mov	r2, r3
 8006850:	68bb      	ldr	r3, [r7, #8]
 8006852:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006854:	6313      	str	r3, [r2, #48]	; 0x30
 8006856:	68fb      	ldr	r3, [r7, #12]
 8006858:	681b      	ldr	r3, [r3, #0]
 800685a:	461a      	mov	r2, r3
 800685c:	687b      	ldr	r3, [r7, #4]
 800685e:	01db      	lsls	r3, r3, #7
 8006860:	4413      	add	r3, r2
 8006862:	3384      	adds	r3, #132	; 0x84
 8006864:	681b      	ldr	r3, [r3, #0]
 8006866:	68fa      	ldr	r2, [r7, #12]
 8006868:	6812      	ldr	r2, [r2, #0]
 800686a:	4611      	mov	r1, r2
 800686c:	687a      	ldr	r2, [r7, #4]
 800686e:	01d2      	lsls	r2, r2, #7
 8006870:	440a      	add	r2, r1
 8006872:	3284      	adds	r2, #132	; 0x84
 8006874:	f043 0301 	orr.w	r3, r3, #1
 8006878:	6013      	str	r3, [r2, #0]
 800687a:	bf00      	nop
 800687c:	3724      	adds	r7, #36	; 0x24
 800687e:	46bd      	mov	sp, r7
 8006880:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006884:	4770      	bx	lr
 8006886:	bf00      	nop
 8006888:	fffff8f8 	.word	0xfffff8f8
 800688c:	fffff800 	.word	0xfffff800

08006890 <HAL_PWREx_EnableOverDrive>:
 8006890:	b580      	push	{r7, lr}
 8006892:	b082      	sub	sp, #8
 8006894:	af00      	add	r7, sp, #0
 8006896:	2300      	movs	r3, #0
 8006898:	607b      	str	r3, [r7, #4]
 800689a:	4b23      	ldr	r3, [pc, #140]	; (8006928 <HAL_PWREx_EnableOverDrive+0x98>)
 800689c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800689e:	4a22      	ldr	r2, [pc, #136]	; (8006928 <HAL_PWREx_EnableOverDrive+0x98>)
 80068a0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80068a4:	6413      	str	r3, [r2, #64]	; 0x40
 80068a6:	4b20      	ldr	r3, [pc, #128]	; (8006928 <HAL_PWREx_EnableOverDrive+0x98>)
 80068a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80068aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80068ae:	603b      	str	r3, [r7, #0]
 80068b0:	683b      	ldr	r3, [r7, #0]
 80068b2:	4b1e      	ldr	r3, [pc, #120]	; (800692c <HAL_PWREx_EnableOverDrive+0x9c>)
 80068b4:	681b      	ldr	r3, [r3, #0]
 80068b6:	4a1d      	ldr	r2, [pc, #116]	; (800692c <HAL_PWREx_EnableOverDrive+0x9c>)
 80068b8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80068bc:	6013      	str	r3, [r2, #0]
 80068be:	f7fd f801 	bl	80038c4 <HAL_GetTick>
 80068c2:	6078      	str	r0, [r7, #4]
 80068c4:	e009      	b.n	80068da <HAL_PWREx_EnableOverDrive+0x4a>
 80068c6:	f7fc fffd 	bl	80038c4 <HAL_GetTick>
 80068ca:	4602      	mov	r2, r0
 80068cc:	687b      	ldr	r3, [r7, #4]
 80068ce:	1ad3      	subs	r3, r2, r3
 80068d0:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80068d4:	d901      	bls.n	80068da <HAL_PWREx_EnableOverDrive+0x4a>
 80068d6:	2303      	movs	r3, #3
 80068d8:	e022      	b.n	8006920 <HAL_PWREx_EnableOverDrive+0x90>
 80068da:	4b14      	ldr	r3, [pc, #80]	; (800692c <HAL_PWREx_EnableOverDrive+0x9c>)
 80068dc:	685b      	ldr	r3, [r3, #4]
 80068de:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80068e2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80068e6:	d1ee      	bne.n	80068c6 <HAL_PWREx_EnableOverDrive+0x36>
 80068e8:	4b10      	ldr	r3, [pc, #64]	; (800692c <HAL_PWREx_EnableOverDrive+0x9c>)
 80068ea:	681b      	ldr	r3, [r3, #0]
 80068ec:	4a0f      	ldr	r2, [pc, #60]	; (800692c <HAL_PWREx_EnableOverDrive+0x9c>)
 80068ee:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80068f2:	6013      	str	r3, [r2, #0]
 80068f4:	f7fc ffe6 	bl	80038c4 <HAL_GetTick>
 80068f8:	6078      	str	r0, [r7, #4]
 80068fa:	e009      	b.n	8006910 <HAL_PWREx_EnableOverDrive+0x80>
 80068fc:	f7fc ffe2 	bl	80038c4 <HAL_GetTick>
 8006900:	4602      	mov	r2, r0
 8006902:	687b      	ldr	r3, [r7, #4]
 8006904:	1ad3      	subs	r3, r2, r3
 8006906:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800690a:	d901      	bls.n	8006910 <HAL_PWREx_EnableOverDrive+0x80>
 800690c:	2303      	movs	r3, #3
 800690e:	e007      	b.n	8006920 <HAL_PWREx_EnableOverDrive+0x90>
 8006910:	4b06      	ldr	r3, [pc, #24]	; (800692c <HAL_PWREx_EnableOverDrive+0x9c>)
 8006912:	685b      	ldr	r3, [r3, #4]
 8006914:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006918:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800691c:	d1ee      	bne.n	80068fc <HAL_PWREx_EnableOverDrive+0x6c>
 800691e:	2300      	movs	r3, #0
 8006920:	4618      	mov	r0, r3
 8006922:	3708      	adds	r7, #8
 8006924:	46bd      	mov	sp, r7
 8006926:	bd80      	pop	{r7, pc}
 8006928:	40023800 	.word	0x40023800
 800692c:	40007000 	.word	0x40007000

08006930 <HAL_RCC_OscConfig>:
 8006930:	b580      	push	{r7, lr}
 8006932:	b086      	sub	sp, #24
 8006934:	af00      	add	r7, sp, #0
 8006936:	6078      	str	r0, [r7, #4]
 8006938:	2300      	movs	r3, #0
 800693a:	75fb      	strb	r3, [r7, #23]
 800693c:	687b      	ldr	r3, [r7, #4]
 800693e:	2b00      	cmp	r3, #0
 8006940:	d101      	bne.n	8006946 <HAL_RCC_OscConfig+0x16>
 8006942:	2301      	movs	r3, #1
 8006944:	e291      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006946:	687b      	ldr	r3, [r7, #4]
 8006948:	681b      	ldr	r3, [r3, #0]
 800694a:	f003 0301 	and.w	r3, r3, #1
 800694e:	2b00      	cmp	r3, #0
 8006950:	f000 8087 	beq.w	8006a62 <HAL_RCC_OscConfig+0x132>
 8006954:	4b96      	ldr	r3, [pc, #600]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006956:	689b      	ldr	r3, [r3, #8]
 8006958:	f003 030c 	and.w	r3, r3, #12
 800695c:	2b04      	cmp	r3, #4
 800695e:	d00c      	beq.n	800697a <HAL_RCC_OscConfig+0x4a>
 8006960:	4b93      	ldr	r3, [pc, #588]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006962:	689b      	ldr	r3, [r3, #8]
 8006964:	f003 030c 	and.w	r3, r3, #12
 8006968:	2b08      	cmp	r3, #8
 800696a:	d112      	bne.n	8006992 <HAL_RCC_OscConfig+0x62>
 800696c:	4b90      	ldr	r3, [pc, #576]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 800696e:	685b      	ldr	r3, [r3, #4]
 8006970:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006974:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8006978:	d10b      	bne.n	8006992 <HAL_RCC_OscConfig+0x62>
 800697a:	4b8d      	ldr	r3, [pc, #564]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 800697c:	681b      	ldr	r3, [r3, #0]
 800697e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006982:	2b00      	cmp	r3, #0
 8006984:	d06c      	beq.n	8006a60 <HAL_RCC_OscConfig+0x130>
 8006986:	687b      	ldr	r3, [r7, #4]
 8006988:	685b      	ldr	r3, [r3, #4]
 800698a:	2b00      	cmp	r3, #0
 800698c:	d168      	bne.n	8006a60 <HAL_RCC_OscConfig+0x130>
 800698e:	2301      	movs	r3, #1
 8006990:	e26b      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006992:	687b      	ldr	r3, [r7, #4]
 8006994:	685b      	ldr	r3, [r3, #4]
 8006996:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800699a:	d106      	bne.n	80069aa <HAL_RCC_OscConfig+0x7a>
 800699c:	4b84      	ldr	r3, [pc, #528]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 800699e:	681b      	ldr	r3, [r3, #0]
 80069a0:	4a83      	ldr	r2, [pc, #524]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 80069a2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80069a6:	6013      	str	r3, [r2, #0]
 80069a8:	e02e      	b.n	8006a08 <HAL_RCC_OscConfig+0xd8>
 80069aa:	687b      	ldr	r3, [r7, #4]
 80069ac:	685b      	ldr	r3, [r3, #4]
 80069ae:	2b00      	cmp	r3, #0
 80069b0:	d10c      	bne.n	80069cc <HAL_RCC_OscConfig+0x9c>
 80069b2:	4b7f      	ldr	r3, [pc, #508]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 80069b4:	681b      	ldr	r3, [r3, #0]
 80069b6:	4a7e      	ldr	r2, [pc, #504]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 80069b8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80069bc:	6013      	str	r3, [r2, #0]
 80069be:	4b7c      	ldr	r3, [pc, #496]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 80069c0:	681b      	ldr	r3, [r3, #0]
 80069c2:	4a7b      	ldr	r2, [pc, #492]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 80069c4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80069c8:	6013      	str	r3, [r2, #0]
 80069ca:	e01d      	b.n	8006a08 <HAL_RCC_OscConfig+0xd8>
 80069cc:	687b      	ldr	r3, [r7, #4]
 80069ce:	685b      	ldr	r3, [r3, #4]
 80069d0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80069d4:	d10c      	bne.n	80069f0 <HAL_RCC_OscConfig+0xc0>
 80069d6:	4b76      	ldr	r3, [pc, #472]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 80069d8:	681b      	ldr	r3, [r3, #0]
 80069da:	4a75      	ldr	r2, [pc, #468]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 80069dc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80069e0:	6013      	str	r3, [r2, #0]
 80069e2:	4b73      	ldr	r3, [pc, #460]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 80069e4:	681b      	ldr	r3, [r3, #0]
 80069e6:	4a72      	ldr	r2, [pc, #456]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 80069e8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80069ec:	6013      	str	r3, [r2, #0]
 80069ee:	e00b      	b.n	8006a08 <HAL_RCC_OscConfig+0xd8>
 80069f0:	4b6f      	ldr	r3, [pc, #444]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 80069f2:	681b      	ldr	r3, [r3, #0]
 80069f4:	4a6e      	ldr	r2, [pc, #440]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 80069f6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80069fa:	6013      	str	r3, [r2, #0]
 80069fc:	4b6c      	ldr	r3, [pc, #432]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 80069fe:	681b      	ldr	r3, [r3, #0]
 8006a00:	4a6b      	ldr	r2, [pc, #428]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006a02:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006a06:	6013      	str	r3, [r2, #0]
 8006a08:	687b      	ldr	r3, [r7, #4]
 8006a0a:	685b      	ldr	r3, [r3, #4]
 8006a0c:	2b00      	cmp	r3, #0
 8006a0e:	d013      	beq.n	8006a38 <HAL_RCC_OscConfig+0x108>
 8006a10:	f7fc ff58 	bl	80038c4 <HAL_GetTick>
 8006a14:	6138      	str	r0, [r7, #16]
 8006a16:	e008      	b.n	8006a2a <HAL_RCC_OscConfig+0xfa>
 8006a18:	f7fc ff54 	bl	80038c4 <HAL_GetTick>
 8006a1c:	4602      	mov	r2, r0
 8006a1e:	693b      	ldr	r3, [r7, #16]
 8006a20:	1ad3      	subs	r3, r2, r3
 8006a22:	2b64      	cmp	r3, #100	; 0x64
 8006a24:	d901      	bls.n	8006a2a <HAL_RCC_OscConfig+0xfa>
 8006a26:	2303      	movs	r3, #3
 8006a28:	e21f      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006a2a:	4b61      	ldr	r3, [pc, #388]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006a2c:	681b      	ldr	r3, [r3, #0]
 8006a2e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006a32:	2b00      	cmp	r3, #0
 8006a34:	d0f0      	beq.n	8006a18 <HAL_RCC_OscConfig+0xe8>
 8006a36:	e014      	b.n	8006a62 <HAL_RCC_OscConfig+0x132>
 8006a38:	f7fc ff44 	bl	80038c4 <HAL_GetTick>
 8006a3c:	6138      	str	r0, [r7, #16]
 8006a3e:	e008      	b.n	8006a52 <HAL_RCC_OscConfig+0x122>
 8006a40:	f7fc ff40 	bl	80038c4 <HAL_GetTick>
 8006a44:	4602      	mov	r2, r0
 8006a46:	693b      	ldr	r3, [r7, #16]
 8006a48:	1ad3      	subs	r3, r2, r3
 8006a4a:	2b64      	cmp	r3, #100	; 0x64
 8006a4c:	d901      	bls.n	8006a52 <HAL_RCC_OscConfig+0x122>
 8006a4e:	2303      	movs	r3, #3
 8006a50:	e20b      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006a52:	4b57      	ldr	r3, [pc, #348]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006a54:	681b      	ldr	r3, [r3, #0]
 8006a56:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006a5a:	2b00      	cmp	r3, #0
 8006a5c:	d1f0      	bne.n	8006a40 <HAL_RCC_OscConfig+0x110>
 8006a5e:	e000      	b.n	8006a62 <HAL_RCC_OscConfig+0x132>
 8006a60:	bf00      	nop
 8006a62:	687b      	ldr	r3, [r7, #4]
 8006a64:	681b      	ldr	r3, [r3, #0]
 8006a66:	f003 0302 	and.w	r3, r3, #2
 8006a6a:	2b00      	cmp	r3, #0
 8006a6c:	d069      	beq.n	8006b42 <HAL_RCC_OscConfig+0x212>
 8006a6e:	4b50      	ldr	r3, [pc, #320]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006a70:	689b      	ldr	r3, [r3, #8]
 8006a72:	f003 030c 	and.w	r3, r3, #12
 8006a76:	2b00      	cmp	r3, #0
 8006a78:	d00b      	beq.n	8006a92 <HAL_RCC_OscConfig+0x162>
 8006a7a:	4b4d      	ldr	r3, [pc, #308]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006a7c:	689b      	ldr	r3, [r3, #8]
 8006a7e:	f003 030c 	and.w	r3, r3, #12
 8006a82:	2b08      	cmp	r3, #8
 8006a84:	d11c      	bne.n	8006ac0 <HAL_RCC_OscConfig+0x190>
 8006a86:	4b4a      	ldr	r3, [pc, #296]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006a88:	685b      	ldr	r3, [r3, #4]
 8006a8a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006a8e:	2b00      	cmp	r3, #0
 8006a90:	d116      	bne.n	8006ac0 <HAL_RCC_OscConfig+0x190>
 8006a92:	4b47      	ldr	r3, [pc, #284]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006a94:	681b      	ldr	r3, [r3, #0]
 8006a96:	f003 0302 	and.w	r3, r3, #2
 8006a9a:	2b00      	cmp	r3, #0
 8006a9c:	d005      	beq.n	8006aaa <HAL_RCC_OscConfig+0x17a>
 8006a9e:	687b      	ldr	r3, [r7, #4]
 8006aa0:	68db      	ldr	r3, [r3, #12]
 8006aa2:	2b01      	cmp	r3, #1
 8006aa4:	d001      	beq.n	8006aaa <HAL_RCC_OscConfig+0x17a>
 8006aa6:	2301      	movs	r3, #1
 8006aa8:	e1df      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006aaa:	4b41      	ldr	r3, [pc, #260]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006aac:	681b      	ldr	r3, [r3, #0]
 8006aae:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	691b      	ldr	r3, [r3, #16]
 8006ab6:	00db      	lsls	r3, r3, #3
 8006ab8:	493d      	ldr	r1, [pc, #244]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006aba:	4313      	orrs	r3, r2
 8006abc:	600b      	str	r3, [r1, #0]
 8006abe:	e040      	b.n	8006b42 <HAL_RCC_OscConfig+0x212>
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	68db      	ldr	r3, [r3, #12]
 8006ac4:	2b00      	cmp	r3, #0
 8006ac6:	d023      	beq.n	8006b10 <HAL_RCC_OscConfig+0x1e0>
 8006ac8:	4b39      	ldr	r3, [pc, #228]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006aca:	681b      	ldr	r3, [r3, #0]
 8006acc:	4a38      	ldr	r2, [pc, #224]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006ace:	f043 0301 	orr.w	r3, r3, #1
 8006ad2:	6013      	str	r3, [r2, #0]
 8006ad4:	f7fc fef6 	bl	80038c4 <HAL_GetTick>
 8006ad8:	6138      	str	r0, [r7, #16]
 8006ada:	e008      	b.n	8006aee <HAL_RCC_OscConfig+0x1be>
 8006adc:	f7fc fef2 	bl	80038c4 <HAL_GetTick>
 8006ae0:	4602      	mov	r2, r0
 8006ae2:	693b      	ldr	r3, [r7, #16]
 8006ae4:	1ad3      	subs	r3, r2, r3
 8006ae6:	2b02      	cmp	r3, #2
 8006ae8:	d901      	bls.n	8006aee <HAL_RCC_OscConfig+0x1be>
 8006aea:	2303      	movs	r3, #3
 8006aec:	e1bd      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006aee:	4b30      	ldr	r3, [pc, #192]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006af0:	681b      	ldr	r3, [r3, #0]
 8006af2:	f003 0302 	and.w	r3, r3, #2
 8006af6:	2b00      	cmp	r3, #0
 8006af8:	d0f0      	beq.n	8006adc <HAL_RCC_OscConfig+0x1ac>
 8006afa:	4b2d      	ldr	r3, [pc, #180]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8006b02:	687b      	ldr	r3, [r7, #4]
 8006b04:	691b      	ldr	r3, [r3, #16]
 8006b06:	00db      	lsls	r3, r3, #3
 8006b08:	4929      	ldr	r1, [pc, #164]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006b0a:	4313      	orrs	r3, r2
 8006b0c:	600b      	str	r3, [r1, #0]
 8006b0e:	e018      	b.n	8006b42 <HAL_RCC_OscConfig+0x212>
 8006b10:	4b27      	ldr	r3, [pc, #156]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006b12:	681b      	ldr	r3, [r3, #0]
 8006b14:	4a26      	ldr	r2, [pc, #152]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006b16:	f023 0301 	bic.w	r3, r3, #1
 8006b1a:	6013      	str	r3, [r2, #0]
 8006b1c:	f7fc fed2 	bl	80038c4 <HAL_GetTick>
 8006b20:	6138      	str	r0, [r7, #16]
 8006b22:	e008      	b.n	8006b36 <HAL_RCC_OscConfig+0x206>
 8006b24:	f7fc fece 	bl	80038c4 <HAL_GetTick>
 8006b28:	4602      	mov	r2, r0
 8006b2a:	693b      	ldr	r3, [r7, #16]
 8006b2c:	1ad3      	subs	r3, r2, r3
 8006b2e:	2b02      	cmp	r3, #2
 8006b30:	d901      	bls.n	8006b36 <HAL_RCC_OscConfig+0x206>
 8006b32:	2303      	movs	r3, #3
 8006b34:	e199      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006b36:	4b1e      	ldr	r3, [pc, #120]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006b38:	681b      	ldr	r3, [r3, #0]
 8006b3a:	f003 0302 	and.w	r3, r3, #2
 8006b3e:	2b00      	cmp	r3, #0
 8006b40:	d1f0      	bne.n	8006b24 <HAL_RCC_OscConfig+0x1f4>
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	681b      	ldr	r3, [r3, #0]
 8006b46:	f003 0308 	and.w	r3, r3, #8
 8006b4a:	2b00      	cmp	r3, #0
 8006b4c:	d038      	beq.n	8006bc0 <HAL_RCC_OscConfig+0x290>
 8006b4e:	687b      	ldr	r3, [r7, #4]
 8006b50:	695b      	ldr	r3, [r3, #20]
 8006b52:	2b00      	cmp	r3, #0
 8006b54:	d019      	beq.n	8006b8a <HAL_RCC_OscConfig+0x25a>
 8006b56:	4b16      	ldr	r3, [pc, #88]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006b58:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8006b5a:	4a15      	ldr	r2, [pc, #84]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006b5c:	f043 0301 	orr.w	r3, r3, #1
 8006b60:	6753      	str	r3, [r2, #116]	; 0x74
 8006b62:	f7fc feaf 	bl	80038c4 <HAL_GetTick>
 8006b66:	6138      	str	r0, [r7, #16]
 8006b68:	e008      	b.n	8006b7c <HAL_RCC_OscConfig+0x24c>
 8006b6a:	f7fc feab 	bl	80038c4 <HAL_GetTick>
 8006b6e:	4602      	mov	r2, r0
 8006b70:	693b      	ldr	r3, [r7, #16]
 8006b72:	1ad3      	subs	r3, r2, r3
 8006b74:	2b02      	cmp	r3, #2
 8006b76:	d901      	bls.n	8006b7c <HAL_RCC_OscConfig+0x24c>
 8006b78:	2303      	movs	r3, #3
 8006b7a:	e176      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006b7c:	4b0c      	ldr	r3, [pc, #48]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006b7e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8006b80:	f003 0302 	and.w	r3, r3, #2
 8006b84:	2b00      	cmp	r3, #0
 8006b86:	d0f0      	beq.n	8006b6a <HAL_RCC_OscConfig+0x23a>
 8006b88:	e01a      	b.n	8006bc0 <HAL_RCC_OscConfig+0x290>
 8006b8a:	4b09      	ldr	r3, [pc, #36]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006b8c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8006b8e:	4a08      	ldr	r2, [pc, #32]	; (8006bb0 <HAL_RCC_OscConfig+0x280>)
 8006b90:	f023 0301 	bic.w	r3, r3, #1
 8006b94:	6753      	str	r3, [r2, #116]	; 0x74
 8006b96:	f7fc fe95 	bl	80038c4 <HAL_GetTick>
 8006b9a:	6138      	str	r0, [r7, #16]
 8006b9c:	e00a      	b.n	8006bb4 <HAL_RCC_OscConfig+0x284>
 8006b9e:	f7fc fe91 	bl	80038c4 <HAL_GetTick>
 8006ba2:	4602      	mov	r2, r0
 8006ba4:	693b      	ldr	r3, [r7, #16]
 8006ba6:	1ad3      	subs	r3, r2, r3
 8006ba8:	2b02      	cmp	r3, #2
 8006baa:	d903      	bls.n	8006bb4 <HAL_RCC_OscConfig+0x284>
 8006bac:	2303      	movs	r3, #3
 8006bae:	e15c      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006bb0:	40023800 	.word	0x40023800
 8006bb4:	4b91      	ldr	r3, [pc, #580]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006bb6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8006bb8:	f003 0302 	and.w	r3, r3, #2
 8006bbc:	2b00      	cmp	r3, #0
 8006bbe:	d1ee      	bne.n	8006b9e <HAL_RCC_OscConfig+0x26e>
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	681b      	ldr	r3, [r3, #0]
 8006bc4:	f003 0304 	and.w	r3, r3, #4
 8006bc8:	2b00      	cmp	r3, #0
 8006bca:	f000 80a4 	beq.w	8006d16 <HAL_RCC_OscConfig+0x3e6>
 8006bce:	4b8b      	ldr	r3, [pc, #556]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006bd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006bd2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006bd6:	2b00      	cmp	r3, #0
 8006bd8:	d10d      	bne.n	8006bf6 <HAL_RCC_OscConfig+0x2c6>
 8006bda:	4b88      	ldr	r3, [pc, #544]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006bdc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006bde:	4a87      	ldr	r2, [pc, #540]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006be0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006be4:	6413      	str	r3, [r2, #64]	; 0x40
 8006be6:	4b85      	ldr	r3, [pc, #532]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006be8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006bea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006bee:	60bb      	str	r3, [r7, #8]
 8006bf0:	68bb      	ldr	r3, [r7, #8]
 8006bf2:	2301      	movs	r3, #1
 8006bf4:	75fb      	strb	r3, [r7, #23]
 8006bf6:	4b82      	ldr	r3, [pc, #520]	; (8006e00 <HAL_RCC_OscConfig+0x4d0>)
 8006bf8:	681b      	ldr	r3, [r3, #0]
 8006bfa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006bfe:	2b00      	cmp	r3, #0
 8006c00:	d118      	bne.n	8006c34 <HAL_RCC_OscConfig+0x304>
 8006c02:	4b7f      	ldr	r3, [pc, #508]	; (8006e00 <HAL_RCC_OscConfig+0x4d0>)
 8006c04:	681b      	ldr	r3, [r3, #0]
 8006c06:	4a7e      	ldr	r2, [pc, #504]	; (8006e00 <HAL_RCC_OscConfig+0x4d0>)
 8006c08:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006c0c:	6013      	str	r3, [r2, #0]
 8006c0e:	f7fc fe59 	bl	80038c4 <HAL_GetTick>
 8006c12:	6138      	str	r0, [r7, #16]
 8006c14:	e008      	b.n	8006c28 <HAL_RCC_OscConfig+0x2f8>
 8006c16:	f7fc fe55 	bl	80038c4 <HAL_GetTick>
 8006c1a:	4602      	mov	r2, r0
 8006c1c:	693b      	ldr	r3, [r7, #16]
 8006c1e:	1ad3      	subs	r3, r2, r3
 8006c20:	2b64      	cmp	r3, #100	; 0x64
 8006c22:	d901      	bls.n	8006c28 <HAL_RCC_OscConfig+0x2f8>
 8006c24:	2303      	movs	r3, #3
 8006c26:	e120      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006c28:	4b75      	ldr	r3, [pc, #468]	; (8006e00 <HAL_RCC_OscConfig+0x4d0>)
 8006c2a:	681b      	ldr	r3, [r3, #0]
 8006c2c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006c30:	2b00      	cmp	r3, #0
 8006c32:	d0f0      	beq.n	8006c16 <HAL_RCC_OscConfig+0x2e6>
 8006c34:	687b      	ldr	r3, [r7, #4]
 8006c36:	689b      	ldr	r3, [r3, #8]
 8006c38:	2b01      	cmp	r3, #1
 8006c3a:	d106      	bne.n	8006c4a <HAL_RCC_OscConfig+0x31a>
 8006c3c:	4b6f      	ldr	r3, [pc, #444]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006c3e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006c40:	4a6e      	ldr	r2, [pc, #440]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006c42:	f043 0301 	orr.w	r3, r3, #1
 8006c46:	6713      	str	r3, [r2, #112]	; 0x70
 8006c48:	e02d      	b.n	8006ca6 <HAL_RCC_OscConfig+0x376>
 8006c4a:	687b      	ldr	r3, [r7, #4]
 8006c4c:	689b      	ldr	r3, [r3, #8]
 8006c4e:	2b00      	cmp	r3, #0
 8006c50:	d10c      	bne.n	8006c6c <HAL_RCC_OscConfig+0x33c>
 8006c52:	4b6a      	ldr	r3, [pc, #424]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006c54:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006c56:	4a69      	ldr	r2, [pc, #420]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006c58:	f023 0301 	bic.w	r3, r3, #1
 8006c5c:	6713      	str	r3, [r2, #112]	; 0x70
 8006c5e:	4b67      	ldr	r3, [pc, #412]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006c60:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006c62:	4a66      	ldr	r2, [pc, #408]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006c64:	f023 0304 	bic.w	r3, r3, #4
 8006c68:	6713      	str	r3, [r2, #112]	; 0x70
 8006c6a:	e01c      	b.n	8006ca6 <HAL_RCC_OscConfig+0x376>
 8006c6c:	687b      	ldr	r3, [r7, #4]
 8006c6e:	689b      	ldr	r3, [r3, #8]
 8006c70:	2b05      	cmp	r3, #5
 8006c72:	d10c      	bne.n	8006c8e <HAL_RCC_OscConfig+0x35e>
 8006c74:	4b61      	ldr	r3, [pc, #388]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006c76:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006c78:	4a60      	ldr	r2, [pc, #384]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006c7a:	f043 0304 	orr.w	r3, r3, #4
 8006c7e:	6713      	str	r3, [r2, #112]	; 0x70
 8006c80:	4b5e      	ldr	r3, [pc, #376]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006c82:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006c84:	4a5d      	ldr	r2, [pc, #372]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006c86:	f043 0301 	orr.w	r3, r3, #1
 8006c8a:	6713      	str	r3, [r2, #112]	; 0x70
 8006c8c:	e00b      	b.n	8006ca6 <HAL_RCC_OscConfig+0x376>
 8006c8e:	4b5b      	ldr	r3, [pc, #364]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006c90:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006c92:	4a5a      	ldr	r2, [pc, #360]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006c94:	f023 0301 	bic.w	r3, r3, #1
 8006c98:	6713      	str	r3, [r2, #112]	; 0x70
 8006c9a:	4b58      	ldr	r3, [pc, #352]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006c9c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006c9e:	4a57      	ldr	r2, [pc, #348]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006ca0:	f023 0304 	bic.w	r3, r3, #4
 8006ca4:	6713      	str	r3, [r2, #112]	; 0x70
 8006ca6:	687b      	ldr	r3, [r7, #4]
 8006ca8:	689b      	ldr	r3, [r3, #8]
 8006caa:	2b00      	cmp	r3, #0
 8006cac:	d015      	beq.n	8006cda <HAL_RCC_OscConfig+0x3aa>
 8006cae:	f7fc fe09 	bl	80038c4 <HAL_GetTick>
 8006cb2:	6138      	str	r0, [r7, #16]
 8006cb4:	e00a      	b.n	8006ccc <HAL_RCC_OscConfig+0x39c>
 8006cb6:	f7fc fe05 	bl	80038c4 <HAL_GetTick>
 8006cba:	4602      	mov	r2, r0
 8006cbc:	693b      	ldr	r3, [r7, #16]
 8006cbe:	1ad3      	subs	r3, r2, r3
 8006cc0:	f241 3288 	movw	r2, #5000	; 0x1388
 8006cc4:	4293      	cmp	r3, r2
 8006cc6:	d901      	bls.n	8006ccc <HAL_RCC_OscConfig+0x39c>
 8006cc8:	2303      	movs	r3, #3
 8006cca:	e0ce      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006ccc:	4b4b      	ldr	r3, [pc, #300]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006cce:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006cd0:	f003 0302 	and.w	r3, r3, #2
 8006cd4:	2b00      	cmp	r3, #0
 8006cd6:	d0ee      	beq.n	8006cb6 <HAL_RCC_OscConfig+0x386>
 8006cd8:	e014      	b.n	8006d04 <HAL_RCC_OscConfig+0x3d4>
 8006cda:	f7fc fdf3 	bl	80038c4 <HAL_GetTick>
 8006cde:	6138      	str	r0, [r7, #16]
 8006ce0:	e00a      	b.n	8006cf8 <HAL_RCC_OscConfig+0x3c8>
 8006ce2:	f7fc fdef 	bl	80038c4 <HAL_GetTick>
 8006ce6:	4602      	mov	r2, r0
 8006ce8:	693b      	ldr	r3, [r7, #16]
 8006cea:	1ad3      	subs	r3, r2, r3
 8006cec:	f241 3288 	movw	r2, #5000	; 0x1388
 8006cf0:	4293      	cmp	r3, r2
 8006cf2:	d901      	bls.n	8006cf8 <HAL_RCC_OscConfig+0x3c8>
 8006cf4:	2303      	movs	r3, #3
 8006cf6:	e0b8      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006cf8:	4b40      	ldr	r3, [pc, #256]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006cfa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006cfc:	f003 0302 	and.w	r3, r3, #2
 8006d00:	2b00      	cmp	r3, #0
 8006d02:	d1ee      	bne.n	8006ce2 <HAL_RCC_OscConfig+0x3b2>
 8006d04:	7dfb      	ldrb	r3, [r7, #23]
 8006d06:	2b01      	cmp	r3, #1
 8006d08:	d105      	bne.n	8006d16 <HAL_RCC_OscConfig+0x3e6>
 8006d0a:	4b3c      	ldr	r3, [pc, #240]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006d0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d0e:	4a3b      	ldr	r2, [pc, #236]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006d10:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8006d14:	6413      	str	r3, [r2, #64]	; 0x40
 8006d16:	687b      	ldr	r3, [r7, #4]
 8006d18:	699b      	ldr	r3, [r3, #24]
 8006d1a:	2b00      	cmp	r3, #0
 8006d1c:	f000 80a4 	beq.w	8006e68 <HAL_RCC_OscConfig+0x538>
 8006d20:	4b36      	ldr	r3, [pc, #216]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006d22:	689b      	ldr	r3, [r3, #8]
 8006d24:	f003 030c 	and.w	r3, r3, #12
 8006d28:	2b08      	cmp	r3, #8
 8006d2a:	d06b      	beq.n	8006e04 <HAL_RCC_OscConfig+0x4d4>
 8006d2c:	687b      	ldr	r3, [r7, #4]
 8006d2e:	699b      	ldr	r3, [r3, #24]
 8006d30:	2b02      	cmp	r3, #2
 8006d32:	d149      	bne.n	8006dc8 <HAL_RCC_OscConfig+0x498>
 8006d34:	4b31      	ldr	r3, [pc, #196]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006d36:	681b      	ldr	r3, [r3, #0]
 8006d38:	4a30      	ldr	r2, [pc, #192]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006d3a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8006d3e:	6013      	str	r3, [r2, #0]
 8006d40:	f7fc fdc0 	bl	80038c4 <HAL_GetTick>
 8006d44:	6138      	str	r0, [r7, #16]
 8006d46:	e008      	b.n	8006d5a <HAL_RCC_OscConfig+0x42a>
 8006d48:	f7fc fdbc 	bl	80038c4 <HAL_GetTick>
 8006d4c:	4602      	mov	r2, r0
 8006d4e:	693b      	ldr	r3, [r7, #16]
 8006d50:	1ad3      	subs	r3, r2, r3
 8006d52:	2b02      	cmp	r3, #2
 8006d54:	d901      	bls.n	8006d5a <HAL_RCC_OscConfig+0x42a>
 8006d56:	2303      	movs	r3, #3
 8006d58:	e087      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006d5a:	4b28      	ldr	r3, [pc, #160]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006d5c:	681b      	ldr	r3, [r3, #0]
 8006d5e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006d62:	2b00      	cmp	r3, #0
 8006d64:	d1f0      	bne.n	8006d48 <HAL_RCC_OscConfig+0x418>
 8006d66:	687b      	ldr	r3, [r7, #4]
 8006d68:	69da      	ldr	r2, [r3, #28]
 8006d6a:	687b      	ldr	r3, [r7, #4]
 8006d6c:	6a1b      	ldr	r3, [r3, #32]
 8006d6e:	431a      	orrs	r2, r3
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d74:	019b      	lsls	r3, r3, #6
 8006d76:	431a      	orrs	r2, r3
 8006d78:	687b      	ldr	r3, [r7, #4]
 8006d7a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006d7c:	085b      	lsrs	r3, r3, #1
 8006d7e:	3b01      	subs	r3, #1
 8006d80:	041b      	lsls	r3, r3, #16
 8006d82:	431a      	orrs	r2, r3
 8006d84:	687b      	ldr	r3, [r7, #4]
 8006d86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006d88:	061b      	lsls	r3, r3, #24
 8006d8a:	4313      	orrs	r3, r2
 8006d8c:	4a1b      	ldr	r2, [pc, #108]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006d8e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8006d92:	6053      	str	r3, [r2, #4]
 8006d94:	4b19      	ldr	r3, [pc, #100]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006d96:	681b      	ldr	r3, [r3, #0]
 8006d98:	4a18      	ldr	r2, [pc, #96]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006d9a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8006d9e:	6013      	str	r3, [r2, #0]
 8006da0:	f7fc fd90 	bl	80038c4 <HAL_GetTick>
 8006da4:	6138      	str	r0, [r7, #16]
 8006da6:	e008      	b.n	8006dba <HAL_RCC_OscConfig+0x48a>
 8006da8:	f7fc fd8c 	bl	80038c4 <HAL_GetTick>
 8006dac:	4602      	mov	r2, r0
 8006dae:	693b      	ldr	r3, [r7, #16]
 8006db0:	1ad3      	subs	r3, r2, r3
 8006db2:	2b02      	cmp	r3, #2
 8006db4:	d901      	bls.n	8006dba <HAL_RCC_OscConfig+0x48a>
 8006db6:	2303      	movs	r3, #3
 8006db8:	e057      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006dba:	4b10      	ldr	r3, [pc, #64]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006dbc:	681b      	ldr	r3, [r3, #0]
 8006dbe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006dc2:	2b00      	cmp	r3, #0
 8006dc4:	d0f0      	beq.n	8006da8 <HAL_RCC_OscConfig+0x478>
 8006dc6:	e04f      	b.n	8006e68 <HAL_RCC_OscConfig+0x538>
 8006dc8:	4b0c      	ldr	r3, [pc, #48]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006dca:	681b      	ldr	r3, [r3, #0]
 8006dcc:	4a0b      	ldr	r2, [pc, #44]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006dce:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8006dd2:	6013      	str	r3, [r2, #0]
 8006dd4:	f7fc fd76 	bl	80038c4 <HAL_GetTick>
 8006dd8:	6138      	str	r0, [r7, #16]
 8006dda:	e008      	b.n	8006dee <HAL_RCC_OscConfig+0x4be>
 8006ddc:	f7fc fd72 	bl	80038c4 <HAL_GetTick>
 8006de0:	4602      	mov	r2, r0
 8006de2:	693b      	ldr	r3, [r7, #16]
 8006de4:	1ad3      	subs	r3, r2, r3
 8006de6:	2b02      	cmp	r3, #2
 8006de8:	d901      	bls.n	8006dee <HAL_RCC_OscConfig+0x4be>
 8006dea:	2303      	movs	r3, #3
 8006dec:	e03d      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006dee:	4b03      	ldr	r3, [pc, #12]	; (8006dfc <HAL_RCC_OscConfig+0x4cc>)
 8006df0:	681b      	ldr	r3, [r3, #0]
 8006df2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006df6:	2b00      	cmp	r3, #0
 8006df8:	d1f0      	bne.n	8006ddc <HAL_RCC_OscConfig+0x4ac>
 8006dfa:	e035      	b.n	8006e68 <HAL_RCC_OscConfig+0x538>
 8006dfc:	40023800 	.word	0x40023800
 8006e00:	40007000 	.word	0x40007000
 8006e04:	4b1b      	ldr	r3, [pc, #108]	; (8006e74 <HAL_RCC_OscConfig+0x544>)
 8006e06:	685b      	ldr	r3, [r3, #4]
 8006e08:	60fb      	str	r3, [r7, #12]
 8006e0a:	687b      	ldr	r3, [r7, #4]
 8006e0c:	699b      	ldr	r3, [r3, #24]
 8006e0e:	2b01      	cmp	r3, #1
 8006e10:	d028      	beq.n	8006e64 <HAL_RCC_OscConfig+0x534>
 8006e12:	68fb      	ldr	r3, [r7, #12]
 8006e14:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8006e18:	687b      	ldr	r3, [r7, #4]
 8006e1a:	69db      	ldr	r3, [r3, #28]
 8006e1c:	429a      	cmp	r2, r3
 8006e1e:	d121      	bne.n	8006e64 <HAL_RCC_OscConfig+0x534>
 8006e20:	68fb      	ldr	r3, [r7, #12]
 8006e22:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8006e26:	687b      	ldr	r3, [r7, #4]
 8006e28:	6a1b      	ldr	r3, [r3, #32]
 8006e2a:	429a      	cmp	r2, r3
 8006e2c:	d11a      	bne.n	8006e64 <HAL_RCC_OscConfig+0x534>
 8006e2e:	68fa      	ldr	r2, [r7, #12]
 8006e30:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8006e34:	4013      	ands	r3, r2
 8006e36:	687a      	ldr	r2, [r7, #4]
 8006e38:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8006e3a:	0192      	lsls	r2, r2, #6
 8006e3c:	4293      	cmp	r3, r2
 8006e3e:	d111      	bne.n	8006e64 <HAL_RCC_OscConfig+0x534>
 8006e40:	68fb      	ldr	r3, [r7, #12]
 8006e42:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8006e46:	687b      	ldr	r3, [r7, #4]
 8006e48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006e4a:	085b      	lsrs	r3, r3, #1
 8006e4c:	3b01      	subs	r3, #1
 8006e4e:	041b      	lsls	r3, r3, #16
 8006e50:	429a      	cmp	r2, r3
 8006e52:	d107      	bne.n	8006e64 <HAL_RCC_OscConfig+0x534>
 8006e54:	68fb      	ldr	r3, [r7, #12]
 8006e56:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8006e5a:	687b      	ldr	r3, [r7, #4]
 8006e5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006e5e:	061b      	lsls	r3, r3, #24
 8006e60:	429a      	cmp	r2, r3
 8006e62:	d001      	beq.n	8006e68 <HAL_RCC_OscConfig+0x538>
 8006e64:	2301      	movs	r3, #1
 8006e66:	e000      	b.n	8006e6a <HAL_RCC_OscConfig+0x53a>
 8006e68:	2300      	movs	r3, #0
 8006e6a:	4618      	mov	r0, r3
 8006e6c:	3718      	adds	r7, #24
 8006e6e:	46bd      	mov	sp, r7
 8006e70:	bd80      	pop	{r7, pc}
 8006e72:	bf00      	nop
 8006e74:	40023800 	.word	0x40023800

08006e78 <HAL_RCC_ClockConfig>:
 8006e78:	b580      	push	{r7, lr}
 8006e7a:	b084      	sub	sp, #16
 8006e7c:	af00      	add	r7, sp, #0
 8006e7e:	6078      	str	r0, [r7, #4]
 8006e80:	6039      	str	r1, [r7, #0]
 8006e82:	2300      	movs	r3, #0
 8006e84:	60fb      	str	r3, [r7, #12]
 8006e86:	687b      	ldr	r3, [r7, #4]
 8006e88:	2b00      	cmp	r3, #0
 8006e8a:	d101      	bne.n	8006e90 <HAL_RCC_ClockConfig+0x18>
 8006e8c:	2301      	movs	r3, #1
 8006e8e:	e0d0      	b.n	8007032 <HAL_RCC_ClockConfig+0x1ba>
 8006e90:	4b6a      	ldr	r3, [pc, #424]	; (800703c <HAL_RCC_ClockConfig+0x1c4>)
 8006e92:	681b      	ldr	r3, [r3, #0]
 8006e94:	f003 030f 	and.w	r3, r3, #15
 8006e98:	683a      	ldr	r2, [r7, #0]
 8006e9a:	429a      	cmp	r2, r3
 8006e9c:	d910      	bls.n	8006ec0 <HAL_RCC_ClockConfig+0x48>
 8006e9e:	4b67      	ldr	r3, [pc, #412]	; (800703c <HAL_RCC_ClockConfig+0x1c4>)
 8006ea0:	681b      	ldr	r3, [r3, #0]
 8006ea2:	f023 020f 	bic.w	r2, r3, #15
 8006ea6:	4965      	ldr	r1, [pc, #404]	; (800703c <HAL_RCC_ClockConfig+0x1c4>)
 8006ea8:	683b      	ldr	r3, [r7, #0]
 8006eaa:	4313      	orrs	r3, r2
 8006eac:	600b      	str	r3, [r1, #0]
 8006eae:	4b63      	ldr	r3, [pc, #396]	; (800703c <HAL_RCC_ClockConfig+0x1c4>)
 8006eb0:	681b      	ldr	r3, [r3, #0]
 8006eb2:	f003 030f 	and.w	r3, r3, #15
 8006eb6:	683a      	ldr	r2, [r7, #0]
 8006eb8:	429a      	cmp	r2, r3
 8006eba:	d001      	beq.n	8006ec0 <HAL_RCC_ClockConfig+0x48>
 8006ebc:	2301      	movs	r3, #1
 8006ebe:	e0b8      	b.n	8007032 <HAL_RCC_ClockConfig+0x1ba>
 8006ec0:	687b      	ldr	r3, [r7, #4]
 8006ec2:	681b      	ldr	r3, [r3, #0]
 8006ec4:	f003 0302 	and.w	r3, r3, #2
 8006ec8:	2b00      	cmp	r3, #0
 8006eca:	d020      	beq.n	8006f0e <HAL_RCC_ClockConfig+0x96>
 8006ecc:	687b      	ldr	r3, [r7, #4]
 8006ece:	681b      	ldr	r3, [r3, #0]
 8006ed0:	f003 0304 	and.w	r3, r3, #4
 8006ed4:	2b00      	cmp	r3, #0
 8006ed6:	d005      	beq.n	8006ee4 <HAL_RCC_ClockConfig+0x6c>
 8006ed8:	4b59      	ldr	r3, [pc, #356]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006eda:	689b      	ldr	r3, [r3, #8]
 8006edc:	4a58      	ldr	r2, [pc, #352]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006ede:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8006ee2:	6093      	str	r3, [r2, #8]
 8006ee4:	687b      	ldr	r3, [r7, #4]
 8006ee6:	681b      	ldr	r3, [r3, #0]
 8006ee8:	f003 0308 	and.w	r3, r3, #8
 8006eec:	2b00      	cmp	r3, #0
 8006eee:	d005      	beq.n	8006efc <HAL_RCC_ClockConfig+0x84>
 8006ef0:	4b53      	ldr	r3, [pc, #332]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006ef2:	689b      	ldr	r3, [r3, #8]
 8006ef4:	4a52      	ldr	r2, [pc, #328]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006ef6:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8006efa:	6093      	str	r3, [r2, #8]
 8006efc:	4b50      	ldr	r3, [pc, #320]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006efe:	689b      	ldr	r3, [r3, #8]
 8006f00:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8006f04:	687b      	ldr	r3, [r7, #4]
 8006f06:	689b      	ldr	r3, [r3, #8]
 8006f08:	494d      	ldr	r1, [pc, #308]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006f0a:	4313      	orrs	r3, r2
 8006f0c:	608b      	str	r3, [r1, #8]
 8006f0e:	687b      	ldr	r3, [r7, #4]
 8006f10:	681b      	ldr	r3, [r3, #0]
 8006f12:	f003 0301 	and.w	r3, r3, #1
 8006f16:	2b00      	cmp	r3, #0
 8006f18:	d040      	beq.n	8006f9c <HAL_RCC_ClockConfig+0x124>
 8006f1a:	687b      	ldr	r3, [r7, #4]
 8006f1c:	685b      	ldr	r3, [r3, #4]
 8006f1e:	2b01      	cmp	r3, #1
 8006f20:	d107      	bne.n	8006f32 <HAL_RCC_ClockConfig+0xba>
 8006f22:	4b47      	ldr	r3, [pc, #284]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006f24:	681b      	ldr	r3, [r3, #0]
 8006f26:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006f2a:	2b00      	cmp	r3, #0
 8006f2c:	d115      	bne.n	8006f5a <HAL_RCC_ClockConfig+0xe2>
 8006f2e:	2301      	movs	r3, #1
 8006f30:	e07f      	b.n	8007032 <HAL_RCC_ClockConfig+0x1ba>
 8006f32:	687b      	ldr	r3, [r7, #4]
 8006f34:	685b      	ldr	r3, [r3, #4]
 8006f36:	2b02      	cmp	r3, #2
 8006f38:	d107      	bne.n	8006f4a <HAL_RCC_ClockConfig+0xd2>
 8006f3a:	4b41      	ldr	r3, [pc, #260]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006f3c:	681b      	ldr	r3, [r3, #0]
 8006f3e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006f42:	2b00      	cmp	r3, #0
 8006f44:	d109      	bne.n	8006f5a <HAL_RCC_ClockConfig+0xe2>
 8006f46:	2301      	movs	r3, #1
 8006f48:	e073      	b.n	8007032 <HAL_RCC_ClockConfig+0x1ba>
 8006f4a:	4b3d      	ldr	r3, [pc, #244]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006f4c:	681b      	ldr	r3, [r3, #0]
 8006f4e:	f003 0302 	and.w	r3, r3, #2
 8006f52:	2b00      	cmp	r3, #0
 8006f54:	d101      	bne.n	8006f5a <HAL_RCC_ClockConfig+0xe2>
 8006f56:	2301      	movs	r3, #1
 8006f58:	e06b      	b.n	8007032 <HAL_RCC_ClockConfig+0x1ba>
 8006f5a:	4b39      	ldr	r3, [pc, #228]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006f5c:	689b      	ldr	r3, [r3, #8]
 8006f5e:	f023 0203 	bic.w	r2, r3, #3
 8006f62:	687b      	ldr	r3, [r7, #4]
 8006f64:	685b      	ldr	r3, [r3, #4]
 8006f66:	4936      	ldr	r1, [pc, #216]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006f68:	4313      	orrs	r3, r2
 8006f6a:	608b      	str	r3, [r1, #8]
 8006f6c:	f7fc fcaa 	bl	80038c4 <HAL_GetTick>
 8006f70:	60f8      	str	r0, [r7, #12]
 8006f72:	e00a      	b.n	8006f8a <HAL_RCC_ClockConfig+0x112>
 8006f74:	f7fc fca6 	bl	80038c4 <HAL_GetTick>
 8006f78:	4602      	mov	r2, r0
 8006f7a:	68fb      	ldr	r3, [r7, #12]
 8006f7c:	1ad3      	subs	r3, r2, r3
 8006f7e:	f241 3288 	movw	r2, #5000	; 0x1388
 8006f82:	4293      	cmp	r3, r2
 8006f84:	d901      	bls.n	8006f8a <HAL_RCC_ClockConfig+0x112>
 8006f86:	2303      	movs	r3, #3
 8006f88:	e053      	b.n	8007032 <HAL_RCC_ClockConfig+0x1ba>
 8006f8a:	4b2d      	ldr	r3, [pc, #180]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006f8c:	689b      	ldr	r3, [r3, #8]
 8006f8e:	f003 020c 	and.w	r2, r3, #12
 8006f92:	687b      	ldr	r3, [r7, #4]
 8006f94:	685b      	ldr	r3, [r3, #4]
 8006f96:	009b      	lsls	r3, r3, #2
 8006f98:	429a      	cmp	r2, r3
 8006f9a:	d1eb      	bne.n	8006f74 <HAL_RCC_ClockConfig+0xfc>
 8006f9c:	4b27      	ldr	r3, [pc, #156]	; (800703c <HAL_RCC_ClockConfig+0x1c4>)
 8006f9e:	681b      	ldr	r3, [r3, #0]
 8006fa0:	f003 030f 	and.w	r3, r3, #15
 8006fa4:	683a      	ldr	r2, [r7, #0]
 8006fa6:	429a      	cmp	r2, r3
 8006fa8:	d210      	bcs.n	8006fcc <HAL_RCC_ClockConfig+0x154>
 8006faa:	4b24      	ldr	r3, [pc, #144]	; (800703c <HAL_RCC_ClockConfig+0x1c4>)
 8006fac:	681b      	ldr	r3, [r3, #0]
 8006fae:	f023 020f 	bic.w	r2, r3, #15
 8006fb2:	4922      	ldr	r1, [pc, #136]	; (800703c <HAL_RCC_ClockConfig+0x1c4>)
 8006fb4:	683b      	ldr	r3, [r7, #0]
 8006fb6:	4313      	orrs	r3, r2
 8006fb8:	600b      	str	r3, [r1, #0]
 8006fba:	4b20      	ldr	r3, [pc, #128]	; (800703c <HAL_RCC_ClockConfig+0x1c4>)
 8006fbc:	681b      	ldr	r3, [r3, #0]
 8006fbe:	f003 030f 	and.w	r3, r3, #15
 8006fc2:	683a      	ldr	r2, [r7, #0]
 8006fc4:	429a      	cmp	r2, r3
 8006fc6:	d001      	beq.n	8006fcc <HAL_RCC_ClockConfig+0x154>
 8006fc8:	2301      	movs	r3, #1
 8006fca:	e032      	b.n	8007032 <HAL_RCC_ClockConfig+0x1ba>
 8006fcc:	687b      	ldr	r3, [r7, #4]
 8006fce:	681b      	ldr	r3, [r3, #0]
 8006fd0:	f003 0304 	and.w	r3, r3, #4
 8006fd4:	2b00      	cmp	r3, #0
 8006fd6:	d008      	beq.n	8006fea <HAL_RCC_ClockConfig+0x172>
 8006fd8:	4b19      	ldr	r3, [pc, #100]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006fda:	689b      	ldr	r3, [r3, #8]
 8006fdc:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8006fe0:	687b      	ldr	r3, [r7, #4]
 8006fe2:	68db      	ldr	r3, [r3, #12]
 8006fe4:	4916      	ldr	r1, [pc, #88]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006fe6:	4313      	orrs	r3, r2
 8006fe8:	608b      	str	r3, [r1, #8]
 8006fea:	687b      	ldr	r3, [r7, #4]
 8006fec:	681b      	ldr	r3, [r3, #0]
 8006fee:	f003 0308 	and.w	r3, r3, #8
 8006ff2:	2b00      	cmp	r3, #0
 8006ff4:	d009      	beq.n	800700a <HAL_RCC_ClockConfig+0x192>
 8006ff6:	4b12      	ldr	r3, [pc, #72]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8006ff8:	689b      	ldr	r3, [r3, #8]
 8006ffa:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8006ffe:	687b      	ldr	r3, [r7, #4]
 8007000:	691b      	ldr	r3, [r3, #16]
 8007002:	00db      	lsls	r3, r3, #3
 8007004:	490e      	ldr	r1, [pc, #56]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8007006:	4313      	orrs	r3, r2
 8007008:	608b      	str	r3, [r1, #8]
 800700a:	f000 f821 	bl	8007050 <HAL_RCC_GetSysClockFreq>
 800700e:	4602      	mov	r2, r0
 8007010:	4b0b      	ldr	r3, [pc, #44]	; (8007040 <HAL_RCC_ClockConfig+0x1c8>)
 8007012:	689b      	ldr	r3, [r3, #8]
 8007014:	091b      	lsrs	r3, r3, #4
 8007016:	f003 030f 	and.w	r3, r3, #15
 800701a:	490a      	ldr	r1, [pc, #40]	; (8007044 <HAL_RCC_ClockConfig+0x1cc>)
 800701c:	5ccb      	ldrb	r3, [r1, r3]
 800701e:	fa22 f303 	lsr.w	r3, r2, r3
 8007022:	4a09      	ldr	r2, [pc, #36]	; (8007048 <HAL_RCC_ClockConfig+0x1d0>)
 8007024:	6013      	str	r3, [r2, #0]
 8007026:	4b09      	ldr	r3, [pc, #36]	; (800704c <HAL_RCC_ClockConfig+0x1d4>)
 8007028:	681b      	ldr	r3, [r3, #0]
 800702a:	4618      	mov	r0, r3
 800702c:	f7fc fc06 	bl	800383c <HAL_InitTick>
 8007030:	2300      	movs	r3, #0
 8007032:	4618      	mov	r0, r3
 8007034:	3710      	adds	r7, #16
 8007036:	46bd      	mov	sp, r7
 8007038:	bd80      	pop	{r7, pc}
 800703a:	bf00      	nop
 800703c:	40023c00 	.word	0x40023c00
 8007040:	40023800 	.word	0x40023800
 8007044:	0801e760 	.word	0x0801e760
 8007048:	200000c0 	.word	0x200000c0
 800704c:	200000f0 	.word	0x200000f0

08007050 <HAL_RCC_GetSysClockFreq>:
 8007050:	b5b0      	push	{r4, r5, r7, lr}
 8007052:	b084      	sub	sp, #16
 8007054:	af00      	add	r7, sp, #0
 8007056:	2100      	movs	r1, #0
 8007058:	6079      	str	r1, [r7, #4]
 800705a:	2100      	movs	r1, #0
 800705c:	60f9      	str	r1, [r7, #12]
 800705e:	2100      	movs	r1, #0
 8007060:	6039      	str	r1, [r7, #0]
 8007062:	2100      	movs	r1, #0
 8007064:	60b9      	str	r1, [r7, #8]
 8007066:	4952      	ldr	r1, [pc, #328]	; (80071b0 <HAL_RCC_GetSysClockFreq+0x160>)
 8007068:	6889      	ldr	r1, [r1, #8]
 800706a:	f001 010c 	and.w	r1, r1, #12
 800706e:	2908      	cmp	r1, #8
 8007070:	d00d      	beq.n	800708e <HAL_RCC_GetSysClockFreq+0x3e>
 8007072:	2908      	cmp	r1, #8
 8007074:	f200 8094 	bhi.w	80071a0 <HAL_RCC_GetSysClockFreq+0x150>
 8007078:	2900      	cmp	r1, #0
 800707a:	d002      	beq.n	8007082 <HAL_RCC_GetSysClockFreq+0x32>
 800707c:	2904      	cmp	r1, #4
 800707e:	d003      	beq.n	8007088 <HAL_RCC_GetSysClockFreq+0x38>
 8007080:	e08e      	b.n	80071a0 <HAL_RCC_GetSysClockFreq+0x150>
 8007082:	4b4c      	ldr	r3, [pc, #304]	; (80071b4 <HAL_RCC_GetSysClockFreq+0x164>)
 8007084:	60bb      	str	r3, [r7, #8]
 8007086:	e08e      	b.n	80071a6 <HAL_RCC_GetSysClockFreq+0x156>
 8007088:	4b4b      	ldr	r3, [pc, #300]	; (80071b8 <HAL_RCC_GetSysClockFreq+0x168>)
 800708a:	60bb      	str	r3, [r7, #8]
 800708c:	e08b      	b.n	80071a6 <HAL_RCC_GetSysClockFreq+0x156>
 800708e:	4948      	ldr	r1, [pc, #288]	; (80071b0 <HAL_RCC_GetSysClockFreq+0x160>)
 8007090:	6849      	ldr	r1, [r1, #4]
 8007092:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8007096:	6079      	str	r1, [r7, #4]
 8007098:	4945      	ldr	r1, [pc, #276]	; (80071b0 <HAL_RCC_GetSysClockFreq+0x160>)
 800709a:	6849      	ldr	r1, [r1, #4]
 800709c:	f401 0180 	and.w	r1, r1, #4194304	; 0x400000
 80070a0:	2900      	cmp	r1, #0
 80070a2:	d024      	beq.n	80070ee <HAL_RCC_GetSysClockFreq+0x9e>
 80070a4:	4942      	ldr	r1, [pc, #264]	; (80071b0 <HAL_RCC_GetSysClockFreq+0x160>)
 80070a6:	6849      	ldr	r1, [r1, #4]
 80070a8:	0989      	lsrs	r1, r1, #6
 80070aa:	4608      	mov	r0, r1
 80070ac:	f04f 0100 	mov.w	r1, #0
 80070b0:	f240 14ff 	movw	r4, #511	; 0x1ff
 80070b4:	f04f 0500 	mov.w	r5, #0
 80070b8:	ea00 0204 	and.w	r2, r0, r4
 80070bc:	ea01 0305 	and.w	r3, r1, r5
 80070c0:	493d      	ldr	r1, [pc, #244]	; (80071b8 <HAL_RCC_GetSysClockFreq+0x168>)
 80070c2:	fb01 f003 	mul.w	r0, r1, r3
 80070c6:	2100      	movs	r1, #0
 80070c8:	fb01 f102 	mul.w	r1, r1, r2
 80070cc:	1844      	adds	r4, r0, r1
 80070ce:	493a      	ldr	r1, [pc, #232]	; (80071b8 <HAL_RCC_GetSysClockFreq+0x168>)
 80070d0:	fba2 0101 	umull	r0, r1, r2, r1
 80070d4:	1863      	adds	r3, r4, r1
 80070d6:	4619      	mov	r1, r3
 80070d8:	687b      	ldr	r3, [r7, #4]
 80070da:	461a      	mov	r2, r3
 80070dc:	f04f 0300 	mov.w	r3, #0
 80070e0:	f7f9 fdd2 	bl	8000c88 <__aeabi_uldivmod>
 80070e4:	4602      	mov	r2, r0
 80070e6:	460b      	mov	r3, r1
 80070e8:	4613      	mov	r3, r2
 80070ea:	60fb      	str	r3, [r7, #12]
 80070ec:	e04a      	b.n	8007184 <HAL_RCC_GetSysClockFreq+0x134>
 80070ee:	4b30      	ldr	r3, [pc, #192]	; (80071b0 <HAL_RCC_GetSysClockFreq+0x160>)
 80070f0:	685b      	ldr	r3, [r3, #4]
 80070f2:	099b      	lsrs	r3, r3, #6
 80070f4:	461a      	mov	r2, r3
 80070f6:	f04f 0300 	mov.w	r3, #0
 80070fa:	f240 10ff 	movw	r0, #511	; 0x1ff
 80070fe:	f04f 0100 	mov.w	r1, #0
 8007102:	ea02 0400 	and.w	r4, r2, r0
 8007106:	ea03 0501 	and.w	r5, r3, r1
 800710a:	4620      	mov	r0, r4
 800710c:	4629      	mov	r1, r5
 800710e:	f04f 0200 	mov.w	r2, #0
 8007112:	f04f 0300 	mov.w	r3, #0
 8007116:	014b      	lsls	r3, r1, #5
 8007118:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 800711c:	0142      	lsls	r2, r0, #5
 800711e:	4610      	mov	r0, r2
 8007120:	4619      	mov	r1, r3
 8007122:	1b00      	subs	r0, r0, r4
 8007124:	eb61 0105 	sbc.w	r1, r1, r5
 8007128:	f04f 0200 	mov.w	r2, #0
 800712c:	f04f 0300 	mov.w	r3, #0
 8007130:	018b      	lsls	r3, r1, #6
 8007132:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 8007136:	0182      	lsls	r2, r0, #6
 8007138:	1a12      	subs	r2, r2, r0
 800713a:	eb63 0301 	sbc.w	r3, r3, r1
 800713e:	f04f 0000 	mov.w	r0, #0
 8007142:	f04f 0100 	mov.w	r1, #0
 8007146:	00d9      	lsls	r1, r3, #3
 8007148:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 800714c:	00d0      	lsls	r0, r2, #3
 800714e:	4602      	mov	r2, r0
 8007150:	460b      	mov	r3, r1
 8007152:	1912      	adds	r2, r2, r4
 8007154:	eb45 0303 	adc.w	r3, r5, r3
 8007158:	f04f 0000 	mov.w	r0, #0
 800715c:	f04f 0100 	mov.w	r1, #0
 8007160:	0299      	lsls	r1, r3, #10
 8007162:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 8007166:	0290      	lsls	r0, r2, #10
 8007168:	4602      	mov	r2, r0
 800716a:	460b      	mov	r3, r1
 800716c:	4610      	mov	r0, r2
 800716e:	4619      	mov	r1, r3
 8007170:	687b      	ldr	r3, [r7, #4]
 8007172:	461a      	mov	r2, r3
 8007174:	f04f 0300 	mov.w	r3, #0
 8007178:	f7f9 fd86 	bl	8000c88 <__aeabi_uldivmod>
 800717c:	4602      	mov	r2, r0
 800717e:	460b      	mov	r3, r1
 8007180:	4613      	mov	r3, r2
 8007182:	60fb      	str	r3, [r7, #12]
 8007184:	4b0a      	ldr	r3, [pc, #40]	; (80071b0 <HAL_RCC_GetSysClockFreq+0x160>)
 8007186:	685b      	ldr	r3, [r3, #4]
 8007188:	0c1b      	lsrs	r3, r3, #16
 800718a:	f003 0303 	and.w	r3, r3, #3
 800718e:	3301      	adds	r3, #1
 8007190:	005b      	lsls	r3, r3, #1
 8007192:	603b      	str	r3, [r7, #0]
 8007194:	68fa      	ldr	r2, [r7, #12]
 8007196:	683b      	ldr	r3, [r7, #0]
 8007198:	fbb2 f3f3 	udiv	r3, r2, r3
 800719c:	60bb      	str	r3, [r7, #8]
 800719e:	e002      	b.n	80071a6 <HAL_RCC_GetSysClockFreq+0x156>
 80071a0:	4b04      	ldr	r3, [pc, #16]	; (80071b4 <HAL_RCC_GetSysClockFreq+0x164>)
 80071a2:	60bb      	str	r3, [r7, #8]
 80071a4:	bf00      	nop
 80071a6:	68bb      	ldr	r3, [r7, #8]
 80071a8:	4618      	mov	r0, r3
 80071aa:	3710      	adds	r7, #16
 80071ac:	46bd      	mov	sp, r7
 80071ae:	bdb0      	pop	{r4, r5, r7, pc}
 80071b0:	40023800 	.word	0x40023800
 80071b4:	00f42400 	.word	0x00f42400
 80071b8:	017d7840 	.word	0x017d7840

080071bc <HAL_RCCEx_PeriphCLKConfig>:
 80071bc:	b580      	push	{r7, lr}
 80071be:	b088      	sub	sp, #32
 80071c0:	af00      	add	r7, sp, #0
 80071c2:	6078      	str	r0, [r7, #4]
 80071c4:	2300      	movs	r3, #0
 80071c6:	617b      	str	r3, [r7, #20]
 80071c8:	2300      	movs	r3, #0
 80071ca:	613b      	str	r3, [r7, #16]
 80071cc:	2300      	movs	r3, #0
 80071ce:	60fb      	str	r3, [r7, #12]
 80071d0:	2300      	movs	r3, #0
 80071d2:	61fb      	str	r3, [r7, #28]
 80071d4:	2300      	movs	r3, #0
 80071d6:	61bb      	str	r3, [r7, #24]
 80071d8:	687b      	ldr	r3, [r7, #4]
 80071da:	681b      	ldr	r3, [r3, #0]
 80071dc:	f003 0301 	and.w	r3, r3, #1
 80071e0:	2b00      	cmp	r3, #0
 80071e2:	d012      	beq.n	800720a <HAL_RCCEx_PeriphCLKConfig+0x4e>
 80071e4:	4b69      	ldr	r3, [pc, #420]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80071e6:	689b      	ldr	r3, [r3, #8]
 80071e8:	4a68      	ldr	r2, [pc, #416]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80071ea:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80071ee:	6093      	str	r3, [r2, #8]
 80071f0:	4b66      	ldr	r3, [pc, #408]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80071f2:	689a      	ldr	r2, [r3, #8]
 80071f4:	687b      	ldr	r3, [r7, #4]
 80071f6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80071f8:	4964      	ldr	r1, [pc, #400]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80071fa:	4313      	orrs	r3, r2
 80071fc:	608b      	str	r3, [r1, #8]
 80071fe:	687b      	ldr	r3, [r7, #4]
 8007200:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007202:	2b00      	cmp	r3, #0
 8007204:	d101      	bne.n	800720a <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8007206:	2301      	movs	r3, #1
 8007208:	61fb      	str	r3, [r7, #28]
 800720a:	687b      	ldr	r3, [r7, #4]
 800720c:	681b      	ldr	r3, [r3, #0]
 800720e:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8007212:	2b00      	cmp	r3, #0
 8007214:	d017      	beq.n	8007246 <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8007216:	4b5d      	ldr	r3, [pc, #372]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007218:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800721c:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8007220:	687b      	ldr	r3, [r7, #4]
 8007222:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007224:	4959      	ldr	r1, [pc, #356]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007226:	4313      	orrs	r3, r2
 8007228:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 800722c:	687b      	ldr	r3, [r7, #4]
 800722e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007230:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007234:	d101      	bne.n	800723a <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8007236:	2301      	movs	r3, #1
 8007238:	61fb      	str	r3, [r7, #28]
 800723a:	687b      	ldr	r3, [r7, #4]
 800723c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800723e:	2b00      	cmp	r3, #0
 8007240:	d101      	bne.n	8007246 <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8007242:	2301      	movs	r3, #1
 8007244:	61bb      	str	r3, [r7, #24]
 8007246:	687b      	ldr	r3, [r7, #4]
 8007248:	681b      	ldr	r3, [r3, #0]
 800724a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800724e:	2b00      	cmp	r3, #0
 8007250:	d017      	beq.n	8007282 <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8007252:	4b4e      	ldr	r3, [pc, #312]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007254:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8007258:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 800725c:	687b      	ldr	r3, [r7, #4]
 800725e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007260:	494a      	ldr	r1, [pc, #296]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007262:	4313      	orrs	r3, r2
 8007264:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8007268:	687b      	ldr	r3, [r7, #4]
 800726a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800726c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8007270:	d101      	bne.n	8007276 <HAL_RCCEx_PeriphCLKConfig+0xba>
 8007272:	2301      	movs	r3, #1
 8007274:	61fb      	str	r3, [r7, #28]
 8007276:	687b      	ldr	r3, [r7, #4]
 8007278:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800727a:	2b00      	cmp	r3, #0
 800727c:	d101      	bne.n	8007282 <HAL_RCCEx_PeriphCLKConfig+0xc6>
 800727e:	2301      	movs	r3, #1
 8007280:	61bb      	str	r3, [r7, #24]
 8007282:	687b      	ldr	r3, [r7, #4]
 8007284:	681b      	ldr	r3, [r3, #0]
 8007286:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800728a:	2b00      	cmp	r3, #0
 800728c:	d001      	beq.n	8007292 <HAL_RCCEx_PeriphCLKConfig+0xd6>
 800728e:	2301      	movs	r3, #1
 8007290:	61fb      	str	r3, [r7, #28]
 8007292:	687b      	ldr	r3, [r7, #4]
 8007294:	681b      	ldr	r3, [r3, #0]
 8007296:	f003 0320 	and.w	r3, r3, #32
 800729a:	2b00      	cmp	r3, #0
 800729c:	f000 808b 	beq.w	80073b6 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 80072a0:	4b3a      	ldr	r3, [pc, #232]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80072a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80072a4:	4a39      	ldr	r2, [pc, #228]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80072a6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80072aa:	6413      	str	r3, [r2, #64]	; 0x40
 80072ac:	4b37      	ldr	r3, [pc, #220]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80072ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80072b0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80072b4:	60bb      	str	r3, [r7, #8]
 80072b6:	68bb      	ldr	r3, [r7, #8]
 80072b8:	4b35      	ldr	r3, [pc, #212]	; (8007390 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80072ba:	681b      	ldr	r3, [r3, #0]
 80072bc:	4a34      	ldr	r2, [pc, #208]	; (8007390 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80072be:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80072c2:	6013      	str	r3, [r2, #0]
 80072c4:	f7fc fafe 	bl	80038c4 <HAL_GetTick>
 80072c8:	6178      	str	r0, [r7, #20]
 80072ca:	e008      	b.n	80072de <HAL_RCCEx_PeriphCLKConfig+0x122>
 80072cc:	f7fc fafa 	bl	80038c4 <HAL_GetTick>
 80072d0:	4602      	mov	r2, r0
 80072d2:	697b      	ldr	r3, [r7, #20]
 80072d4:	1ad3      	subs	r3, r2, r3
 80072d6:	2b64      	cmp	r3, #100	; 0x64
 80072d8:	d901      	bls.n	80072de <HAL_RCCEx_PeriphCLKConfig+0x122>
 80072da:	2303      	movs	r3, #3
 80072dc:	e355      	b.n	800798a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 80072de:	4b2c      	ldr	r3, [pc, #176]	; (8007390 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 80072e0:	681b      	ldr	r3, [r3, #0]
 80072e2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80072e6:	2b00      	cmp	r3, #0
 80072e8:	d0f0      	beq.n	80072cc <HAL_RCCEx_PeriphCLKConfig+0x110>
 80072ea:	4b28      	ldr	r3, [pc, #160]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80072ec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80072ee:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80072f2:	613b      	str	r3, [r7, #16]
 80072f4:	693b      	ldr	r3, [r7, #16]
 80072f6:	2b00      	cmp	r3, #0
 80072f8:	d035      	beq.n	8007366 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80072fe:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8007302:	693a      	ldr	r2, [r7, #16]
 8007304:	429a      	cmp	r2, r3
 8007306:	d02e      	beq.n	8007366 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8007308:	4b20      	ldr	r3, [pc, #128]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800730a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800730c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007310:	613b      	str	r3, [r7, #16]
 8007312:	4b1e      	ldr	r3, [pc, #120]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007314:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007316:	4a1d      	ldr	r2, [pc, #116]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007318:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800731c:	6713      	str	r3, [r2, #112]	; 0x70
 800731e:	4b1b      	ldr	r3, [pc, #108]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007320:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007322:	4a1a      	ldr	r2, [pc, #104]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007324:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007328:	6713      	str	r3, [r2, #112]	; 0x70
 800732a:	4a18      	ldr	r2, [pc, #96]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800732c:	693b      	ldr	r3, [r7, #16]
 800732e:	6713      	str	r3, [r2, #112]	; 0x70
 8007330:	4b16      	ldr	r3, [pc, #88]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007332:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007334:	f003 0301 	and.w	r3, r3, #1
 8007338:	2b01      	cmp	r3, #1
 800733a:	d114      	bne.n	8007366 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 800733c:	f7fc fac2 	bl	80038c4 <HAL_GetTick>
 8007340:	6178      	str	r0, [r7, #20]
 8007342:	e00a      	b.n	800735a <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8007344:	f7fc fabe 	bl	80038c4 <HAL_GetTick>
 8007348:	4602      	mov	r2, r0
 800734a:	697b      	ldr	r3, [r7, #20]
 800734c:	1ad3      	subs	r3, r2, r3
 800734e:	f241 3288 	movw	r2, #5000	; 0x1388
 8007352:	4293      	cmp	r3, r2
 8007354:	d901      	bls.n	800735a <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8007356:	2303      	movs	r3, #3
 8007358:	e317      	b.n	800798a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 800735a:	4b0c      	ldr	r3, [pc, #48]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800735c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800735e:	f003 0302 	and.w	r3, r3, #2
 8007362:	2b00      	cmp	r3, #0
 8007364:	d0ee      	beq.n	8007344 <HAL_RCCEx_PeriphCLKConfig+0x188>
 8007366:	687b      	ldr	r3, [r7, #4]
 8007368:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800736a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800736e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8007372:	d111      	bne.n	8007398 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8007374:	4b05      	ldr	r3, [pc, #20]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007376:	689b      	ldr	r3, [r3, #8]
 8007378:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 800737c:	687b      	ldr	r3, [r7, #4]
 800737e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8007380:	4b04      	ldr	r3, [pc, #16]	; (8007394 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8007382:	400b      	ands	r3, r1
 8007384:	4901      	ldr	r1, [pc, #4]	; (800738c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007386:	4313      	orrs	r3, r2
 8007388:	608b      	str	r3, [r1, #8]
 800738a:	e00b      	b.n	80073a4 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 800738c:	40023800 	.word	0x40023800
 8007390:	40007000 	.word	0x40007000
 8007394:	0ffffcff 	.word	0x0ffffcff
 8007398:	4bb0      	ldr	r3, [pc, #704]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 800739a:	689b      	ldr	r3, [r3, #8]
 800739c:	4aaf      	ldr	r2, [pc, #700]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 800739e:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 80073a2:	6093      	str	r3, [r2, #8]
 80073a4:	4bad      	ldr	r3, [pc, #692]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80073a6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80073a8:	687b      	ldr	r3, [r7, #4]
 80073aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80073ac:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80073b0:	49aa      	ldr	r1, [pc, #680]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80073b2:	4313      	orrs	r3, r2
 80073b4:	670b      	str	r3, [r1, #112]	; 0x70
 80073b6:	687b      	ldr	r3, [r7, #4]
 80073b8:	681b      	ldr	r3, [r3, #0]
 80073ba:	f003 0310 	and.w	r3, r3, #16
 80073be:	2b00      	cmp	r3, #0
 80073c0:	d010      	beq.n	80073e4 <HAL_RCCEx_PeriphCLKConfig+0x228>
 80073c2:	4ba6      	ldr	r3, [pc, #664]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80073c4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80073c8:	4aa4      	ldr	r2, [pc, #656]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80073ca:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80073ce:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 80073d2:	4ba2      	ldr	r3, [pc, #648]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80073d4:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 80073d8:	687b      	ldr	r3, [r7, #4]
 80073da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80073dc:	499f      	ldr	r1, [pc, #636]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80073de:	4313      	orrs	r3, r2
 80073e0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 80073e4:	687b      	ldr	r3, [r7, #4]
 80073e6:	681b      	ldr	r3, [r3, #0]
 80073e8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80073ec:	2b00      	cmp	r3, #0
 80073ee:	d00a      	beq.n	8007406 <HAL_RCCEx_PeriphCLKConfig+0x24a>
 80073f0:	4b9a      	ldr	r3, [pc, #616]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80073f2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80073f6:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80073fe:	4997      	ldr	r1, [pc, #604]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007400:	4313      	orrs	r3, r2
 8007402:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8007406:	687b      	ldr	r3, [r7, #4]
 8007408:	681b      	ldr	r3, [r3, #0]
 800740a:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800740e:	2b00      	cmp	r3, #0
 8007410:	d00a      	beq.n	8007428 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8007412:	4b92      	ldr	r3, [pc, #584]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007414:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007418:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 800741c:	687b      	ldr	r3, [r7, #4]
 800741e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8007420:	498e      	ldr	r1, [pc, #568]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007422:	4313      	orrs	r3, r2
 8007424:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8007428:	687b      	ldr	r3, [r7, #4]
 800742a:	681b      	ldr	r3, [r3, #0]
 800742c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8007430:	2b00      	cmp	r3, #0
 8007432:	d00a      	beq.n	800744a <HAL_RCCEx_PeriphCLKConfig+0x28e>
 8007434:	4b89      	ldr	r3, [pc, #548]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007436:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800743a:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 800743e:	687b      	ldr	r3, [r7, #4]
 8007440:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007442:	4986      	ldr	r1, [pc, #536]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007444:	4313      	orrs	r3, r2
 8007446:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800744a:	687b      	ldr	r3, [r7, #4]
 800744c:	681b      	ldr	r3, [r3, #0]
 800744e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007452:	2b00      	cmp	r3, #0
 8007454:	d00a      	beq.n	800746c <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8007456:	4b81      	ldr	r3, [pc, #516]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007458:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800745c:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8007460:	687b      	ldr	r3, [r7, #4]
 8007462:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007464:	497d      	ldr	r1, [pc, #500]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007466:	4313      	orrs	r3, r2
 8007468:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800746c:	687b      	ldr	r3, [r7, #4]
 800746e:	681b      	ldr	r3, [r3, #0]
 8007470:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007474:	2b00      	cmp	r3, #0
 8007476:	d00a      	beq.n	800748e <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8007478:	4b78      	ldr	r3, [pc, #480]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 800747a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800747e:	f023 0203 	bic.w	r2, r3, #3
 8007482:	687b      	ldr	r3, [r7, #4]
 8007484:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007486:	4975      	ldr	r1, [pc, #468]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007488:	4313      	orrs	r3, r2
 800748a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800748e:	687b      	ldr	r3, [r7, #4]
 8007490:	681b      	ldr	r3, [r3, #0]
 8007492:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007496:	2b00      	cmp	r3, #0
 8007498:	d00a      	beq.n	80074b0 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 800749a:	4b70      	ldr	r3, [pc, #448]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 800749c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80074a0:	f023 020c 	bic.w	r2, r3, #12
 80074a4:	687b      	ldr	r3, [r7, #4]
 80074a6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80074a8:	496c      	ldr	r1, [pc, #432]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80074aa:	4313      	orrs	r3, r2
 80074ac:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80074b0:	687b      	ldr	r3, [r7, #4]
 80074b2:	681b      	ldr	r3, [r3, #0]
 80074b4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80074b8:	2b00      	cmp	r3, #0
 80074ba:	d00a      	beq.n	80074d2 <HAL_RCCEx_PeriphCLKConfig+0x316>
 80074bc:	4b67      	ldr	r3, [pc, #412]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80074be:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80074c2:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 80074c6:	687b      	ldr	r3, [r7, #4]
 80074c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80074ca:	4964      	ldr	r1, [pc, #400]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80074cc:	4313      	orrs	r3, r2
 80074ce:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80074d2:	687b      	ldr	r3, [r7, #4]
 80074d4:	681b      	ldr	r3, [r3, #0]
 80074d6:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80074da:	2b00      	cmp	r3, #0
 80074dc:	d00a      	beq.n	80074f4 <HAL_RCCEx_PeriphCLKConfig+0x338>
 80074de:	4b5f      	ldr	r3, [pc, #380]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80074e0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80074e4:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 80074e8:	687b      	ldr	r3, [r7, #4]
 80074ea:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80074ec:	495b      	ldr	r1, [pc, #364]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80074ee:	4313      	orrs	r3, r2
 80074f0:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80074f4:	687b      	ldr	r3, [r7, #4]
 80074f6:	681b      	ldr	r3, [r3, #0]
 80074f8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80074fc:	2b00      	cmp	r3, #0
 80074fe:	d00a      	beq.n	8007516 <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8007500:	4b56      	ldr	r3, [pc, #344]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007502:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007506:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800750a:	687b      	ldr	r3, [r7, #4]
 800750c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800750e:	4953      	ldr	r1, [pc, #332]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007510:	4313      	orrs	r3, r2
 8007512:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8007516:	687b      	ldr	r3, [r7, #4]
 8007518:	681b      	ldr	r3, [r3, #0]
 800751a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800751e:	2b00      	cmp	r3, #0
 8007520:	d00a      	beq.n	8007538 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8007522:	4b4e      	ldr	r3, [pc, #312]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007524:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007528:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800752c:	687b      	ldr	r3, [r7, #4]
 800752e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007530:	494a      	ldr	r1, [pc, #296]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007532:	4313      	orrs	r3, r2
 8007534:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8007538:	687b      	ldr	r3, [r7, #4]
 800753a:	681b      	ldr	r3, [r3, #0]
 800753c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007540:	2b00      	cmp	r3, #0
 8007542:	d00a      	beq.n	800755a <HAL_RCCEx_PeriphCLKConfig+0x39e>
 8007544:	4b45      	ldr	r3, [pc, #276]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007546:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800754a:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 800754e:	687b      	ldr	r3, [r7, #4]
 8007550:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007552:	4942      	ldr	r1, [pc, #264]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007554:	4313      	orrs	r3, r2
 8007556:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800755a:	687b      	ldr	r3, [r7, #4]
 800755c:	681b      	ldr	r3, [r3, #0]
 800755e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8007562:	2b00      	cmp	r3, #0
 8007564:	d00a      	beq.n	800757c <HAL_RCCEx_PeriphCLKConfig+0x3c0>
 8007566:	4b3d      	ldr	r3, [pc, #244]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007568:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800756c:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8007570:	687b      	ldr	r3, [r7, #4]
 8007572:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007574:	4939      	ldr	r1, [pc, #228]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007576:	4313      	orrs	r3, r2
 8007578:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800757c:	687b      	ldr	r3, [r7, #4]
 800757e:	681b      	ldr	r3, [r3, #0]
 8007580:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007584:	2b00      	cmp	r3, #0
 8007586:	d00a      	beq.n	800759e <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 8007588:	4b34      	ldr	r3, [pc, #208]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 800758a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800758e:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 8007592:	687b      	ldr	r3, [r7, #4]
 8007594:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8007596:	4931      	ldr	r1, [pc, #196]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007598:	4313      	orrs	r3, r2
 800759a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800759e:	687b      	ldr	r3, [r7, #4]
 80075a0:	681b      	ldr	r3, [r3, #0]
 80075a2:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80075a6:	2b00      	cmp	r3, #0
 80075a8:	d011      	beq.n	80075ce <HAL_RCCEx_PeriphCLKConfig+0x412>
 80075aa:	4b2c      	ldr	r3, [pc, #176]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80075ac:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80075b0:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 80075b4:	687b      	ldr	r3, [r7, #4]
 80075b6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80075b8:	4928      	ldr	r1, [pc, #160]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80075ba:	4313      	orrs	r3, r2
 80075bc:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80075c0:	687b      	ldr	r3, [r7, #4]
 80075c2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80075c4:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80075c8:	d101      	bne.n	80075ce <HAL_RCCEx_PeriphCLKConfig+0x412>
 80075ca:	2301      	movs	r3, #1
 80075cc:	61bb      	str	r3, [r7, #24]
 80075ce:	687b      	ldr	r3, [r7, #4]
 80075d0:	681b      	ldr	r3, [r3, #0]
 80075d2:	f003 0308 	and.w	r3, r3, #8
 80075d6:	2b00      	cmp	r3, #0
 80075d8:	d001      	beq.n	80075de <HAL_RCCEx_PeriphCLKConfig+0x422>
 80075da:	2301      	movs	r3, #1
 80075dc:	61bb      	str	r3, [r7, #24]
 80075de:	687b      	ldr	r3, [r7, #4]
 80075e0:	681b      	ldr	r3, [r3, #0]
 80075e2:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80075e6:	2b00      	cmp	r3, #0
 80075e8:	d00a      	beq.n	8007600 <HAL_RCCEx_PeriphCLKConfig+0x444>
 80075ea:	4b1c      	ldr	r3, [pc, #112]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80075ec:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80075f0:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 80075f4:	687b      	ldr	r3, [r7, #4]
 80075f6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80075f8:	4918      	ldr	r1, [pc, #96]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 80075fa:	4313      	orrs	r3, r2
 80075fc:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8007600:	687b      	ldr	r3, [r7, #4]
 8007602:	681b      	ldr	r3, [r3, #0]
 8007604:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8007608:	2b00      	cmp	r3, #0
 800760a:	d00b      	beq.n	8007624 <HAL_RCCEx_PeriphCLKConfig+0x468>
 800760c:	4b13      	ldr	r3, [pc, #76]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 800760e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007612:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8007616:	687b      	ldr	r3, [r7, #4]
 8007618:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800761c:	490f      	ldr	r1, [pc, #60]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 800761e:	4313      	orrs	r3, r2
 8007620:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8007624:	69fb      	ldr	r3, [r7, #28]
 8007626:	2b01      	cmp	r3, #1
 8007628:	d005      	beq.n	8007636 <HAL_RCCEx_PeriphCLKConfig+0x47a>
 800762a:	687b      	ldr	r3, [r7, #4]
 800762c:	681b      	ldr	r3, [r3, #0]
 800762e:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8007632:	f040 80d8 	bne.w	80077e6 <HAL_RCCEx_PeriphCLKConfig+0x62a>
 8007636:	4b09      	ldr	r3, [pc, #36]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8007638:	681b      	ldr	r3, [r3, #0]
 800763a:	4a08      	ldr	r2, [pc, #32]	; (800765c <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 800763c:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8007640:	6013      	str	r3, [r2, #0]
 8007642:	f7fc f93f 	bl	80038c4 <HAL_GetTick>
 8007646:	6178      	str	r0, [r7, #20]
 8007648:	e00a      	b.n	8007660 <HAL_RCCEx_PeriphCLKConfig+0x4a4>
 800764a:	f7fc f93b 	bl	80038c4 <HAL_GetTick>
 800764e:	4602      	mov	r2, r0
 8007650:	697b      	ldr	r3, [r7, #20]
 8007652:	1ad3      	subs	r3, r2, r3
 8007654:	2b64      	cmp	r3, #100	; 0x64
 8007656:	d903      	bls.n	8007660 <HAL_RCCEx_PeriphCLKConfig+0x4a4>
 8007658:	2303      	movs	r3, #3
 800765a:	e196      	b.n	800798a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 800765c:	40023800 	.word	0x40023800
 8007660:	4b6c      	ldr	r3, [pc, #432]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8007662:	681b      	ldr	r3, [r3, #0]
 8007664:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8007668:	2b00      	cmp	r3, #0
 800766a:	d1ee      	bne.n	800764a <HAL_RCCEx_PeriphCLKConfig+0x48e>
 800766c:	687b      	ldr	r3, [r7, #4]
 800766e:	681b      	ldr	r3, [r3, #0]
 8007670:	f003 0301 	and.w	r3, r3, #1
 8007674:	2b00      	cmp	r3, #0
 8007676:	d021      	beq.n	80076bc <HAL_RCCEx_PeriphCLKConfig+0x500>
 8007678:	687b      	ldr	r3, [r7, #4]
 800767a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800767c:	2b00      	cmp	r3, #0
 800767e:	d11d      	bne.n	80076bc <HAL_RCCEx_PeriphCLKConfig+0x500>
 8007680:	4b64      	ldr	r3, [pc, #400]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8007682:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007686:	0c1b      	lsrs	r3, r3, #16
 8007688:	f003 0303 	and.w	r3, r3, #3
 800768c:	613b      	str	r3, [r7, #16]
 800768e:	4b61      	ldr	r3, [pc, #388]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8007690:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007694:	0e1b      	lsrs	r3, r3, #24
 8007696:	f003 030f 	and.w	r3, r3, #15
 800769a:	60fb      	str	r3, [r7, #12]
 800769c:	687b      	ldr	r3, [r7, #4]
 800769e:	685b      	ldr	r3, [r3, #4]
 80076a0:	019a      	lsls	r2, r3, #6
 80076a2:	693b      	ldr	r3, [r7, #16]
 80076a4:	041b      	lsls	r3, r3, #16
 80076a6:	431a      	orrs	r2, r3
 80076a8:	68fb      	ldr	r3, [r7, #12]
 80076aa:	061b      	lsls	r3, r3, #24
 80076ac:	431a      	orrs	r2, r3
 80076ae:	687b      	ldr	r3, [r7, #4]
 80076b0:	689b      	ldr	r3, [r3, #8]
 80076b2:	071b      	lsls	r3, r3, #28
 80076b4:	4957      	ldr	r1, [pc, #348]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 80076b6:	4313      	orrs	r3, r2
 80076b8:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 80076bc:	687b      	ldr	r3, [r7, #4]
 80076be:	681b      	ldr	r3, [r3, #0]
 80076c0:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80076c4:	2b00      	cmp	r3, #0
 80076c6:	d004      	beq.n	80076d2 <HAL_RCCEx_PeriphCLKConfig+0x516>
 80076c8:	687b      	ldr	r3, [r7, #4]
 80076ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80076cc:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80076d0:	d00a      	beq.n	80076e8 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 80076d2:	687b      	ldr	r3, [r7, #4]
 80076d4:	681b      	ldr	r3, [r3, #0]
 80076d6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80076da:	2b00      	cmp	r3, #0
 80076dc:	d02e      	beq.n	800773c <HAL_RCCEx_PeriphCLKConfig+0x580>
 80076de:	687b      	ldr	r3, [r7, #4]
 80076e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80076e2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80076e6:	d129      	bne.n	800773c <HAL_RCCEx_PeriphCLKConfig+0x580>
 80076e8:	4b4a      	ldr	r3, [pc, #296]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 80076ea:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80076ee:	0c1b      	lsrs	r3, r3, #16
 80076f0:	f003 0303 	and.w	r3, r3, #3
 80076f4:	613b      	str	r3, [r7, #16]
 80076f6:	4b47      	ldr	r3, [pc, #284]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 80076f8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80076fc:	0f1b      	lsrs	r3, r3, #28
 80076fe:	f003 0307 	and.w	r3, r3, #7
 8007702:	60fb      	str	r3, [r7, #12]
 8007704:	687b      	ldr	r3, [r7, #4]
 8007706:	685b      	ldr	r3, [r3, #4]
 8007708:	019a      	lsls	r2, r3, #6
 800770a:	693b      	ldr	r3, [r7, #16]
 800770c:	041b      	lsls	r3, r3, #16
 800770e:	431a      	orrs	r2, r3
 8007710:	687b      	ldr	r3, [r7, #4]
 8007712:	68db      	ldr	r3, [r3, #12]
 8007714:	061b      	lsls	r3, r3, #24
 8007716:	431a      	orrs	r2, r3
 8007718:	68fb      	ldr	r3, [r7, #12]
 800771a:	071b      	lsls	r3, r3, #28
 800771c:	493d      	ldr	r1, [pc, #244]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800771e:	4313      	orrs	r3, r2
 8007720:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8007724:	4b3b      	ldr	r3, [pc, #236]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8007726:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800772a:	f023 021f 	bic.w	r2, r3, #31
 800772e:	687b      	ldr	r3, [r7, #4]
 8007730:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007732:	3b01      	subs	r3, #1
 8007734:	4937      	ldr	r1, [pc, #220]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8007736:	4313      	orrs	r3, r2
 8007738:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 800773c:	687b      	ldr	r3, [r7, #4]
 800773e:	681b      	ldr	r3, [r3, #0]
 8007740:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007744:	2b00      	cmp	r3, #0
 8007746:	d01d      	beq.n	8007784 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 8007748:	4b32      	ldr	r3, [pc, #200]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800774a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800774e:	0e1b      	lsrs	r3, r3, #24
 8007750:	f003 030f 	and.w	r3, r3, #15
 8007754:	613b      	str	r3, [r7, #16]
 8007756:	4b2f      	ldr	r3, [pc, #188]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8007758:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800775c:	0f1b      	lsrs	r3, r3, #28
 800775e:	f003 0307 	and.w	r3, r3, #7
 8007762:	60fb      	str	r3, [r7, #12]
 8007764:	687b      	ldr	r3, [r7, #4]
 8007766:	685b      	ldr	r3, [r3, #4]
 8007768:	019a      	lsls	r2, r3, #6
 800776a:	687b      	ldr	r3, [r7, #4]
 800776c:	691b      	ldr	r3, [r3, #16]
 800776e:	041b      	lsls	r3, r3, #16
 8007770:	431a      	orrs	r2, r3
 8007772:	693b      	ldr	r3, [r7, #16]
 8007774:	061b      	lsls	r3, r3, #24
 8007776:	431a      	orrs	r2, r3
 8007778:	68fb      	ldr	r3, [r7, #12]
 800777a:	071b      	lsls	r3, r3, #28
 800777c:	4925      	ldr	r1, [pc, #148]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800777e:	4313      	orrs	r3, r2
 8007780:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8007784:	687b      	ldr	r3, [r7, #4]
 8007786:	681b      	ldr	r3, [r3, #0]
 8007788:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800778c:	2b00      	cmp	r3, #0
 800778e:	d011      	beq.n	80077b4 <HAL_RCCEx_PeriphCLKConfig+0x5f8>
 8007790:	687b      	ldr	r3, [r7, #4]
 8007792:	685b      	ldr	r3, [r3, #4]
 8007794:	019a      	lsls	r2, r3, #6
 8007796:	687b      	ldr	r3, [r7, #4]
 8007798:	691b      	ldr	r3, [r3, #16]
 800779a:	041b      	lsls	r3, r3, #16
 800779c:	431a      	orrs	r2, r3
 800779e:	687b      	ldr	r3, [r7, #4]
 80077a0:	68db      	ldr	r3, [r3, #12]
 80077a2:	061b      	lsls	r3, r3, #24
 80077a4:	431a      	orrs	r2, r3
 80077a6:	687b      	ldr	r3, [r7, #4]
 80077a8:	689b      	ldr	r3, [r3, #8]
 80077aa:	071b      	lsls	r3, r3, #28
 80077ac:	4919      	ldr	r1, [pc, #100]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 80077ae:	4313      	orrs	r3, r2
 80077b0:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 80077b4:	4b17      	ldr	r3, [pc, #92]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 80077b6:	681b      	ldr	r3, [r3, #0]
 80077b8:	4a16      	ldr	r2, [pc, #88]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 80077ba:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80077be:	6013      	str	r3, [r2, #0]
 80077c0:	f7fc f880 	bl	80038c4 <HAL_GetTick>
 80077c4:	6178      	str	r0, [r7, #20]
 80077c6:	e008      	b.n	80077da <HAL_RCCEx_PeriphCLKConfig+0x61e>
 80077c8:	f7fc f87c 	bl	80038c4 <HAL_GetTick>
 80077cc:	4602      	mov	r2, r0
 80077ce:	697b      	ldr	r3, [r7, #20]
 80077d0:	1ad3      	subs	r3, r2, r3
 80077d2:	2b64      	cmp	r3, #100	; 0x64
 80077d4:	d901      	bls.n	80077da <HAL_RCCEx_PeriphCLKConfig+0x61e>
 80077d6:	2303      	movs	r3, #3
 80077d8:	e0d7      	b.n	800798a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 80077da:	4b0e      	ldr	r3, [pc, #56]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 80077dc:	681b      	ldr	r3, [r3, #0]
 80077de:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80077e2:	2b00      	cmp	r3, #0
 80077e4:	d0f0      	beq.n	80077c8 <HAL_RCCEx_PeriphCLKConfig+0x60c>
 80077e6:	69bb      	ldr	r3, [r7, #24]
 80077e8:	2b01      	cmp	r3, #1
 80077ea:	f040 80cd 	bne.w	8007988 <HAL_RCCEx_PeriphCLKConfig+0x7cc>
 80077ee:	4b09      	ldr	r3, [pc, #36]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 80077f0:	681b      	ldr	r3, [r3, #0]
 80077f2:	4a08      	ldr	r2, [pc, #32]	; (8007814 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 80077f4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80077f8:	6013      	str	r3, [r2, #0]
 80077fa:	f7fc f863 	bl	80038c4 <HAL_GetTick>
 80077fe:	6178      	str	r0, [r7, #20]
 8007800:	e00a      	b.n	8007818 <HAL_RCCEx_PeriphCLKConfig+0x65c>
 8007802:	f7fc f85f 	bl	80038c4 <HAL_GetTick>
 8007806:	4602      	mov	r2, r0
 8007808:	697b      	ldr	r3, [r7, #20]
 800780a:	1ad3      	subs	r3, r2, r3
 800780c:	2b64      	cmp	r3, #100	; 0x64
 800780e:	d903      	bls.n	8007818 <HAL_RCCEx_PeriphCLKConfig+0x65c>
 8007810:	2303      	movs	r3, #3
 8007812:	e0ba      	b.n	800798a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 8007814:	40023800 	.word	0x40023800
 8007818:	4b5e      	ldr	r3, [pc, #376]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800781a:	681b      	ldr	r3, [r3, #0]
 800781c:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8007820:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007824:	d0ed      	beq.n	8007802 <HAL_RCCEx_PeriphCLKConfig+0x646>
 8007826:	687b      	ldr	r3, [r7, #4]
 8007828:	681b      	ldr	r3, [r3, #0]
 800782a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800782e:	2b00      	cmp	r3, #0
 8007830:	d003      	beq.n	800783a <HAL_RCCEx_PeriphCLKConfig+0x67e>
 8007832:	687b      	ldr	r3, [r7, #4]
 8007834:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007836:	2b00      	cmp	r3, #0
 8007838:	d009      	beq.n	800784e <HAL_RCCEx_PeriphCLKConfig+0x692>
 800783a:	687b      	ldr	r3, [r7, #4]
 800783c:	681b      	ldr	r3, [r3, #0]
 800783e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8007842:	2b00      	cmp	r3, #0
 8007844:	d02e      	beq.n	80078a4 <HAL_RCCEx_PeriphCLKConfig+0x6e8>
 8007846:	687b      	ldr	r3, [r7, #4]
 8007848:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800784a:	2b00      	cmp	r3, #0
 800784c:	d12a      	bne.n	80078a4 <HAL_RCCEx_PeriphCLKConfig+0x6e8>
 800784e:	4b51      	ldr	r3, [pc, #324]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 8007850:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007854:	0c1b      	lsrs	r3, r3, #16
 8007856:	f003 0303 	and.w	r3, r3, #3
 800785a:	613b      	str	r3, [r7, #16]
 800785c:	4b4d      	ldr	r3, [pc, #308]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800785e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007862:	0f1b      	lsrs	r3, r3, #28
 8007864:	f003 0307 	and.w	r3, r3, #7
 8007868:	60fb      	str	r3, [r7, #12]
 800786a:	687b      	ldr	r3, [r7, #4]
 800786c:	695b      	ldr	r3, [r3, #20]
 800786e:	019a      	lsls	r2, r3, #6
 8007870:	693b      	ldr	r3, [r7, #16]
 8007872:	041b      	lsls	r3, r3, #16
 8007874:	431a      	orrs	r2, r3
 8007876:	687b      	ldr	r3, [r7, #4]
 8007878:	699b      	ldr	r3, [r3, #24]
 800787a:	061b      	lsls	r3, r3, #24
 800787c:	431a      	orrs	r2, r3
 800787e:	68fb      	ldr	r3, [r7, #12]
 8007880:	071b      	lsls	r3, r3, #28
 8007882:	4944      	ldr	r1, [pc, #272]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 8007884:	4313      	orrs	r3, r2
 8007886:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800788a:	4b42      	ldr	r3, [pc, #264]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800788c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8007890:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8007894:	687b      	ldr	r3, [r7, #4]
 8007896:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007898:	3b01      	subs	r3, #1
 800789a:	021b      	lsls	r3, r3, #8
 800789c:	493d      	ldr	r1, [pc, #244]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800789e:	4313      	orrs	r3, r2
 80078a0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 80078a4:	687b      	ldr	r3, [r7, #4]
 80078a6:	681b      	ldr	r3, [r3, #0]
 80078a8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80078ac:	2b00      	cmp	r3, #0
 80078ae:	d022      	beq.n	80078f6 <HAL_RCCEx_PeriphCLKConfig+0x73a>
 80078b0:	687b      	ldr	r3, [r7, #4]
 80078b2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80078b4:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80078b8:	d11d      	bne.n	80078f6 <HAL_RCCEx_PeriphCLKConfig+0x73a>
 80078ba:	4b36      	ldr	r3, [pc, #216]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 80078bc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80078c0:	0e1b      	lsrs	r3, r3, #24
 80078c2:	f003 030f 	and.w	r3, r3, #15
 80078c6:	613b      	str	r3, [r7, #16]
 80078c8:	4b32      	ldr	r3, [pc, #200]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 80078ca:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80078ce:	0f1b      	lsrs	r3, r3, #28
 80078d0:	f003 0307 	and.w	r3, r3, #7
 80078d4:	60fb      	str	r3, [r7, #12]
 80078d6:	687b      	ldr	r3, [r7, #4]
 80078d8:	695b      	ldr	r3, [r3, #20]
 80078da:	019a      	lsls	r2, r3, #6
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	6a1b      	ldr	r3, [r3, #32]
 80078e0:	041b      	lsls	r3, r3, #16
 80078e2:	431a      	orrs	r2, r3
 80078e4:	693b      	ldr	r3, [r7, #16]
 80078e6:	061b      	lsls	r3, r3, #24
 80078e8:	431a      	orrs	r2, r3
 80078ea:	68fb      	ldr	r3, [r7, #12]
 80078ec:	071b      	lsls	r3, r3, #28
 80078ee:	4929      	ldr	r1, [pc, #164]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 80078f0:	4313      	orrs	r3, r2
 80078f2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80078f6:	687b      	ldr	r3, [r7, #4]
 80078f8:	681b      	ldr	r3, [r3, #0]
 80078fa:	f003 0308 	and.w	r3, r3, #8
 80078fe:	2b00      	cmp	r3, #0
 8007900:	d028      	beq.n	8007954 <HAL_RCCEx_PeriphCLKConfig+0x798>
 8007902:	4b24      	ldr	r3, [pc, #144]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 8007904:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007908:	0e1b      	lsrs	r3, r3, #24
 800790a:	f003 030f 	and.w	r3, r3, #15
 800790e:	613b      	str	r3, [r7, #16]
 8007910:	4b20      	ldr	r3, [pc, #128]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 8007912:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007916:	0c1b      	lsrs	r3, r3, #16
 8007918:	f003 0303 	and.w	r3, r3, #3
 800791c:	60fb      	str	r3, [r7, #12]
 800791e:	687b      	ldr	r3, [r7, #4]
 8007920:	695b      	ldr	r3, [r3, #20]
 8007922:	019a      	lsls	r2, r3, #6
 8007924:	68fb      	ldr	r3, [r7, #12]
 8007926:	041b      	lsls	r3, r3, #16
 8007928:	431a      	orrs	r2, r3
 800792a:	693b      	ldr	r3, [r7, #16]
 800792c:	061b      	lsls	r3, r3, #24
 800792e:	431a      	orrs	r2, r3
 8007930:	687b      	ldr	r3, [r7, #4]
 8007932:	69db      	ldr	r3, [r3, #28]
 8007934:	071b      	lsls	r3, r3, #28
 8007936:	4917      	ldr	r1, [pc, #92]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 8007938:	4313      	orrs	r3, r2
 800793a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800793e:	4b15      	ldr	r3, [pc, #84]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 8007940:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8007944:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8007948:	687b      	ldr	r3, [r7, #4]
 800794a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800794c:	4911      	ldr	r1, [pc, #68]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800794e:	4313      	orrs	r3, r2
 8007950:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8007954:	4b0f      	ldr	r3, [pc, #60]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 8007956:	681b      	ldr	r3, [r3, #0]
 8007958:	4a0e      	ldr	r2, [pc, #56]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800795a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800795e:	6013      	str	r3, [r2, #0]
 8007960:	f7fb ffb0 	bl	80038c4 <HAL_GetTick>
 8007964:	6178      	str	r0, [r7, #20]
 8007966:	e008      	b.n	800797a <HAL_RCCEx_PeriphCLKConfig+0x7be>
 8007968:	f7fb ffac 	bl	80038c4 <HAL_GetTick>
 800796c:	4602      	mov	r2, r0
 800796e:	697b      	ldr	r3, [r7, #20]
 8007970:	1ad3      	subs	r3, r2, r3
 8007972:	2b64      	cmp	r3, #100	; 0x64
 8007974:	d901      	bls.n	800797a <HAL_RCCEx_PeriphCLKConfig+0x7be>
 8007976:	2303      	movs	r3, #3
 8007978:	e007      	b.n	800798a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 800797a:	4b06      	ldr	r3, [pc, #24]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800797c:	681b      	ldr	r3, [r3, #0]
 800797e:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8007982:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007986:	d1ef      	bne.n	8007968 <HAL_RCCEx_PeriphCLKConfig+0x7ac>
 8007988:	2300      	movs	r3, #0
 800798a:	4618      	mov	r0, r3
 800798c:	3720      	adds	r7, #32
 800798e:	46bd      	mov	sp, r7
 8007990:	bd80      	pop	{r7, pc}
 8007992:	bf00      	nop
 8007994:	40023800 	.word	0x40023800

08007998 <HAL_SDRAM_Init>:
 8007998:	b580      	push	{r7, lr}
 800799a:	b082      	sub	sp, #8
 800799c:	af00      	add	r7, sp, #0
 800799e:	6078      	str	r0, [r7, #4]
 80079a0:	6039      	str	r1, [r7, #0]
 80079a2:	687b      	ldr	r3, [r7, #4]
 80079a4:	2b00      	cmp	r3, #0
 80079a6:	d101      	bne.n	80079ac <HAL_SDRAM_Init+0x14>
 80079a8:	2301      	movs	r3, #1
 80079aa:	e025      	b.n	80079f8 <HAL_SDRAM_Init+0x60>
 80079ac:	687b      	ldr	r3, [r7, #4]
 80079ae:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 80079b2:	b2db      	uxtb	r3, r3
 80079b4:	2b00      	cmp	r3, #0
 80079b6:	d106      	bne.n	80079c6 <HAL_SDRAM_Init+0x2e>
 80079b8:	687b      	ldr	r3, [r7, #4]
 80079ba:	2200      	movs	r2, #0
 80079bc:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 80079c0:	6878      	ldr	r0, [r7, #4]
 80079c2:	f7fa fbdf 	bl	8002184 <HAL_SDRAM_MspInit>
 80079c6:	687b      	ldr	r3, [r7, #4]
 80079c8:	2202      	movs	r2, #2
 80079ca:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 80079ce:	687b      	ldr	r3, [r7, #4]
 80079d0:	681a      	ldr	r2, [r3, #0]
 80079d2:	687b      	ldr	r3, [r7, #4]
 80079d4:	3304      	adds	r3, #4
 80079d6:	4619      	mov	r1, r3
 80079d8:	4610      	mov	r0, r2
 80079da:	f000 f9df 	bl	8007d9c <FMC_SDRAM_Init>
 80079de:	687b      	ldr	r3, [r7, #4]
 80079e0:	6818      	ldr	r0, [r3, #0]
 80079e2:	687b      	ldr	r3, [r7, #4]
 80079e4:	685b      	ldr	r3, [r3, #4]
 80079e6:	461a      	mov	r2, r3
 80079e8:	6839      	ldr	r1, [r7, #0]
 80079ea:	f000 fa49 	bl	8007e80 <FMC_SDRAM_Timing_Init>
 80079ee:	687b      	ldr	r3, [r7, #4]
 80079f0:	2201      	movs	r2, #1
 80079f2:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 80079f6:	2300      	movs	r3, #0
 80079f8:	4618      	mov	r0, r3
 80079fa:	3708      	adds	r7, #8
 80079fc:	46bd      	mov	sp, r7
 80079fe:	bd80      	pop	{r7, pc}

08007a00 <HAL_SDRAM_SendCommand>:
 8007a00:	b580      	push	{r7, lr}
 8007a02:	b084      	sub	sp, #16
 8007a04:	af00      	add	r7, sp, #0
 8007a06:	60f8      	str	r0, [r7, #12]
 8007a08:	60b9      	str	r1, [r7, #8]
 8007a0a:	607a      	str	r2, [r7, #4]
 8007a0c:	68fb      	ldr	r3, [r7, #12]
 8007a0e:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8007a12:	b2db      	uxtb	r3, r3
 8007a14:	2b02      	cmp	r3, #2
 8007a16:	d101      	bne.n	8007a1c <HAL_SDRAM_SendCommand+0x1c>
 8007a18:	2302      	movs	r3, #2
 8007a1a:	e018      	b.n	8007a4e <HAL_SDRAM_SendCommand+0x4e>
 8007a1c:	68fb      	ldr	r3, [r7, #12]
 8007a1e:	2202      	movs	r2, #2
 8007a20:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8007a24:	68fb      	ldr	r3, [r7, #12]
 8007a26:	681b      	ldr	r3, [r3, #0]
 8007a28:	687a      	ldr	r2, [r7, #4]
 8007a2a:	68b9      	ldr	r1, [r7, #8]
 8007a2c:	4618      	mov	r0, r3
 8007a2e:	f000 faa7 	bl	8007f80 <FMC_SDRAM_SendCommand>
 8007a32:	68bb      	ldr	r3, [r7, #8]
 8007a34:	681b      	ldr	r3, [r3, #0]
 8007a36:	2b02      	cmp	r3, #2
 8007a38:	d104      	bne.n	8007a44 <HAL_SDRAM_SendCommand+0x44>
 8007a3a:	68fb      	ldr	r3, [r7, #12]
 8007a3c:	2205      	movs	r2, #5
 8007a3e:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8007a42:	e003      	b.n	8007a4c <HAL_SDRAM_SendCommand+0x4c>
 8007a44:	68fb      	ldr	r3, [r7, #12]
 8007a46:	2201      	movs	r2, #1
 8007a48:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8007a4c:	2300      	movs	r3, #0
 8007a4e:	4618      	mov	r0, r3
 8007a50:	3710      	adds	r7, #16
 8007a52:	46bd      	mov	sp, r7
 8007a54:	bd80      	pop	{r7, pc}

08007a56 <HAL_SDRAM_ProgramRefreshRate>:
 8007a56:	b580      	push	{r7, lr}
 8007a58:	b082      	sub	sp, #8
 8007a5a:	af00      	add	r7, sp, #0
 8007a5c:	6078      	str	r0, [r7, #4]
 8007a5e:	6039      	str	r1, [r7, #0]
 8007a60:	687b      	ldr	r3, [r7, #4]
 8007a62:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8007a66:	b2db      	uxtb	r3, r3
 8007a68:	2b02      	cmp	r3, #2
 8007a6a:	d101      	bne.n	8007a70 <HAL_SDRAM_ProgramRefreshRate+0x1a>
 8007a6c:	2302      	movs	r3, #2
 8007a6e:	e00e      	b.n	8007a8e <HAL_SDRAM_ProgramRefreshRate+0x38>
 8007a70:	687b      	ldr	r3, [r7, #4]
 8007a72:	2202      	movs	r2, #2
 8007a74:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8007a78:	687b      	ldr	r3, [r7, #4]
 8007a7a:	681b      	ldr	r3, [r3, #0]
 8007a7c:	6839      	ldr	r1, [r7, #0]
 8007a7e:	4618      	mov	r0, r3
 8007a80:	f000 fa9f 	bl	8007fc2 <FMC_SDRAM_ProgramRefreshRate>
 8007a84:	687b      	ldr	r3, [r7, #4]
 8007a86:	2201      	movs	r2, #1
 8007a88:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 8007a8c:	2300      	movs	r3, #0
 8007a8e:	4618      	mov	r0, r3
 8007a90:	3708      	adds	r7, #8
 8007a92:	46bd      	mov	sp, r7
 8007a94:	bd80      	pop	{r7, pc}

08007a96 <HAL_TIM_Base_Init>:
 8007a96:	b580      	push	{r7, lr}
 8007a98:	b082      	sub	sp, #8
 8007a9a:	af00      	add	r7, sp, #0
 8007a9c:	6078      	str	r0, [r7, #4]
 8007a9e:	687b      	ldr	r3, [r7, #4]
 8007aa0:	2b00      	cmp	r3, #0
 8007aa2:	d101      	bne.n	8007aa8 <HAL_TIM_Base_Init+0x12>
 8007aa4:	2301      	movs	r3, #1
 8007aa6:	e01d      	b.n	8007ae4 <HAL_TIM_Base_Init+0x4e>
 8007aa8:	687b      	ldr	r3, [r7, #4]
 8007aaa:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007aae:	b2db      	uxtb	r3, r3
 8007ab0:	2b00      	cmp	r3, #0
 8007ab2:	d106      	bne.n	8007ac2 <HAL_TIM_Base_Init+0x2c>
 8007ab4:	687b      	ldr	r3, [r7, #4]
 8007ab6:	2200      	movs	r2, #0
 8007ab8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007abc:	6878      	ldr	r0, [r7, #4]
 8007abe:	f7fa fa47 	bl	8001f50 <HAL_TIM_Base_MspInit>
 8007ac2:	687b      	ldr	r3, [r7, #4]
 8007ac4:	2202      	movs	r2, #2
 8007ac6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007aca:	687b      	ldr	r3, [r7, #4]
 8007acc:	681a      	ldr	r2, [r3, #0]
 8007ace:	687b      	ldr	r3, [r7, #4]
 8007ad0:	3304      	adds	r3, #4
 8007ad2:	4619      	mov	r1, r3
 8007ad4:	4610      	mov	r0, r2
 8007ad6:	f000 f833 	bl	8007b40 <TIM_Base_SetConfig>
 8007ada:	687b      	ldr	r3, [r7, #4]
 8007adc:	2201      	movs	r2, #1
 8007ade:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007ae2:	2300      	movs	r3, #0
 8007ae4:	4618      	mov	r0, r3
 8007ae6:	3708      	adds	r7, #8
 8007ae8:	46bd      	mov	sp, r7
 8007aea:	bd80      	pop	{r7, pc}

08007aec <HAL_TIM_Base_Start_IT>:
 8007aec:	b480      	push	{r7}
 8007aee:	b085      	sub	sp, #20
 8007af0:	af00      	add	r7, sp, #0
 8007af2:	6078      	str	r0, [r7, #4]
 8007af4:	687b      	ldr	r3, [r7, #4]
 8007af6:	681b      	ldr	r3, [r3, #0]
 8007af8:	68da      	ldr	r2, [r3, #12]
 8007afa:	687b      	ldr	r3, [r7, #4]
 8007afc:	681b      	ldr	r3, [r3, #0]
 8007afe:	f042 0201 	orr.w	r2, r2, #1
 8007b02:	60da      	str	r2, [r3, #12]
 8007b04:	687b      	ldr	r3, [r7, #4]
 8007b06:	681b      	ldr	r3, [r3, #0]
 8007b08:	689a      	ldr	r2, [r3, #8]
 8007b0a:	4b0c      	ldr	r3, [pc, #48]	; (8007b3c <HAL_TIM_Base_Start_IT+0x50>)
 8007b0c:	4013      	ands	r3, r2
 8007b0e:	60fb      	str	r3, [r7, #12]
 8007b10:	68fb      	ldr	r3, [r7, #12]
 8007b12:	2b06      	cmp	r3, #6
 8007b14:	d00b      	beq.n	8007b2e <HAL_TIM_Base_Start_IT+0x42>
 8007b16:	68fb      	ldr	r3, [r7, #12]
 8007b18:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007b1c:	d007      	beq.n	8007b2e <HAL_TIM_Base_Start_IT+0x42>
 8007b1e:	687b      	ldr	r3, [r7, #4]
 8007b20:	681b      	ldr	r3, [r3, #0]
 8007b22:	681a      	ldr	r2, [r3, #0]
 8007b24:	687b      	ldr	r3, [r7, #4]
 8007b26:	681b      	ldr	r3, [r3, #0]
 8007b28:	f042 0201 	orr.w	r2, r2, #1
 8007b2c:	601a      	str	r2, [r3, #0]
 8007b2e:	2300      	movs	r3, #0
 8007b30:	4618      	mov	r0, r3
 8007b32:	3714      	adds	r7, #20
 8007b34:	46bd      	mov	sp, r7
 8007b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b3a:	4770      	bx	lr
 8007b3c:	00010007 	.word	0x00010007

08007b40 <TIM_Base_SetConfig>:
 8007b40:	b480      	push	{r7}
 8007b42:	b085      	sub	sp, #20
 8007b44:	af00      	add	r7, sp, #0
 8007b46:	6078      	str	r0, [r7, #4]
 8007b48:	6039      	str	r1, [r7, #0]
 8007b4a:	687b      	ldr	r3, [r7, #4]
 8007b4c:	681b      	ldr	r3, [r3, #0]
 8007b4e:	60fb      	str	r3, [r7, #12]
 8007b50:	687b      	ldr	r3, [r7, #4]
 8007b52:	4a40      	ldr	r2, [pc, #256]	; (8007c54 <TIM_Base_SetConfig+0x114>)
 8007b54:	4293      	cmp	r3, r2
 8007b56:	d013      	beq.n	8007b80 <TIM_Base_SetConfig+0x40>
 8007b58:	687b      	ldr	r3, [r7, #4]
 8007b5a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007b5e:	d00f      	beq.n	8007b80 <TIM_Base_SetConfig+0x40>
 8007b60:	687b      	ldr	r3, [r7, #4]
 8007b62:	4a3d      	ldr	r2, [pc, #244]	; (8007c58 <TIM_Base_SetConfig+0x118>)
 8007b64:	4293      	cmp	r3, r2
 8007b66:	d00b      	beq.n	8007b80 <TIM_Base_SetConfig+0x40>
 8007b68:	687b      	ldr	r3, [r7, #4]
 8007b6a:	4a3c      	ldr	r2, [pc, #240]	; (8007c5c <TIM_Base_SetConfig+0x11c>)
 8007b6c:	4293      	cmp	r3, r2
 8007b6e:	d007      	beq.n	8007b80 <TIM_Base_SetConfig+0x40>
 8007b70:	687b      	ldr	r3, [r7, #4]
 8007b72:	4a3b      	ldr	r2, [pc, #236]	; (8007c60 <TIM_Base_SetConfig+0x120>)
 8007b74:	4293      	cmp	r3, r2
 8007b76:	d003      	beq.n	8007b80 <TIM_Base_SetConfig+0x40>
 8007b78:	687b      	ldr	r3, [r7, #4]
 8007b7a:	4a3a      	ldr	r2, [pc, #232]	; (8007c64 <TIM_Base_SetConfig+0x124>)
 8007b7c:	4293      	cmp	r3, r2
 8007b7e:	d108      	bne.n	8007b92 <TIM_Base_SetConfig+0x52>
 8007b80:	68fb      	ldr	r3, [r7, #12]
 8007b82:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007b86:	60fb      	str	r3, [r7, #12]
 8007b88:	683b      	ldr	r3, [r7, #0]
 8007b8a:	685b      	ldr	r3, [r3, #4]
 8007b8c:	68fa      	ldr	r2, [r7, #12]
 8007b8e:	4313      	orrs	r3, r2
 8007b90:	60fb      	str	r3, [r7, #12]
 8007b92:	687b      	ldr	r3, [r7, #4]
 8007b94:	4a2f      	ldr	r2, [pc, #188]	; (8007c54 <TIM_Base_SetConfig+0x114>)
 8007b96:	4293      	cmp	r3, r2
 8007b98:	d02b      	beq.n	8007bf2 <TIM_Base_SetConfig+0xb2>
 8007b9a:	687b      	ldr	r3, [r7, #4]
 8007b9c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007ba0:	d027      	beq.n	8007bf2 <TIM_Base_SetConfig+0xb2>
 8007ba2:	687b      	ldr	r3, [r7, #4]
 8007ba4:	4a2c      	ldr	r2, [pc, #176]	; (8007c58 <TIM_Base_SetConfig+0x118>)
 8007ba6:	4293      	cmp	r3, r2
 8007ba8:	d023      	beq.n	8007bf2 <TIM_Base_SetConfig+0xb2>
 8007baa:	687b      	ldr	r3, [r7, #4]
 8007bac:	4a2b      	ldr	r2, [pc, #172]	; (8007c5c <TIM_Base_SetConfig+0x11c>)
 8007bae:	4293      	cmp	r3, r2
 8007bb0:	d01f      	beq.n	8007bf2 <TIM_Base_SetConfig+0xb2>
 8007bb2:	687b      	ldr	r3, [r7, #4]
 8007bb4:	4a2a      	ldr	r2, [pc, #168]	; (8007c60 <TIM_Base_SetConfig+0x120>)
 8007bb6:	4293      	cmp	r3, r2
 8007bb8:	d01b      	beq.n	8007bf2 <TIM_Base_SetConfig+0xb2>
 8007bba:	687b      	ldr	r3, [r7, #4]
 8007bbc:	4a29      	ldr	r2, [pc, #164]	; (8007c64 <TIM_Base_SetConfig+0x124>)
 8007bbe:	4293      	cmp	r3, r2
 8007bc0:	d017      	beq.n	8007bf2 <TIM_Base_SetConfig+0xb2>
 8007bc2:	687b      	ldr	r3, [r7, #4]
 8007bc4:	4a28      	ldr	r2, [pc, #160]	; (8007c68 <TIM_Base_SetConfig+0x128>)
 8007bc6:	4293      	cmp	r3, r2
 8007bc8:	d013      	beq.n	8007bf2 <TIM_Base_SetConfig+0xb2>
 8007bca:	687b      	ldr	r3, [r7, #4]
 8007bcc:	4a27      	ldr	r2, [pc, #156]	; (8007c6c <TIM_Base_SetConfig+0x12c>)
 8007bce:	4293      	cmp	r3, r2
 8007bd0:	d00f      	beq.n	8007bf2 <TIM_Base_SetConfig+0xb2>
 8007bd2:	687b      	ldr	r3, [r7, #4]
 8007bd4:	4a26      	ldr	r2, [pc, #152]	; (8007c70 <TIM_Base_SetConfig+0x130>)
 8007bd6:	4293      	cmp	r3, r2
 8007bd8:	d00b      	beq.n	8007bf2 <TIM_Base_SetConfig+0xb2>
 8007bda:	687b      	ldr	r3, [r7, #4]
 8007bdc:	4a25      	ldr	r2, [pc, #148]	; (8007c74 <TIM_Base_SetConfig+0x134>)
 8007bde:	4293      	cmp	r3, r2
 8007be0:	d007      	beq.n	8007bf2 <TIM_Base_SetConfig+0xb2>
 8007be2:	687b      	ldr	r3, [r7, #4]
 8007be4:	4a24      	ldr	r2, [pc, #144]	; (8007c78 <TIM_Base_SetConfig+0x138>)
 8007be6:	4293      	cmp	r3, r2
 8007be8:	d003      	beq.n	8007bf2 <TIM_Base_SetConfig+0xb2>
 8007bea:	687b      	ldr	r3, [r7, #4]
 8007bec:	4a23      	ldr	r2, [pc, #140]	; (8007c7c <TIM_Base_SetConfig+0x13c>)
 8007bee:	4293      	cmp	r3, r2
 8007bf0:	d108      	bne.n	8007c04 <TIM_Base_SetConfig+0xc4>
 8007bf2:	68fb      	ldr	r3, [r7, #12]
 8007bf4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007bf8:	60fb      	str	r3, [r7, #12]
 8007bfa:	683b      	ldr	r3, [r7, #0]
 8007bfc:	68db      	ldr	r3, [r3, #12]
 8007bfe:	68fa      	ldr	r2, [r7, #12]
 8007c00:	4313      	orrs	r3, r2
 8007c02:	60fb      	str	r3, [r7, #12]
 8007c04:	68fb      	ldr	r3, [r7, #12]
 8007c06:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8007c0a:	683b      	ldr	r3, [r7, #0]
 8007c0c:	695b      	ldr	r3, [r3, #20]
 8007c0e:	4313      	orrs	r3, r2
 8007c10:	60fb      	str	r3, [r7, #12]
 8007c12:	687b      	ldr	r3, [r7, #4]
 8007c14:	68fa      	ldr	r2, [r7, #12]
 8007c16:	601a      	str	r2, [r3, #0]
 8007c18:	683b      	ldr	r3, [r7, #0]
 8007c1a:	689a      	ldr	r2, [r3, #8]
 8007c1c:	687b      	ldr	r3, [r7, #4]
 8007c1e:	62da      	str	r2, [r3, #44]	; 0x2c
 8007c20:	683b      	ldr	r3, [r7, #0]
 8007c22:	681a      	ldr	r2, [r3, #0]
 8007c24:	687b      	ldr	r3, [r7, #4]
 8007c26:	629a      	str	r2, [r3, #40]	; 0x28
 8007c28:	687b      	ldr	r3, [r7, #4]
 8007c2a:	4a0a      	ldr	r2, [pc, #40]	; (8007c54 <TIM_Base_SetConfig+0x114>)
 8007c2c:	4293      	cmp	r3, r2
 8007c2e:	d003      	beq.n	8007c38 <TIM_Base_SetConfig+0xf8>
 8007c30:	687b      	ldr	r3, [r7, #4]
 8007c32:	4a0c      	ldr	r2, [pc, #48]	; (8007c64 <TIM_Base_SetConfig+0x124>)
 8007c34:	4293      	cmp	r3, r2
 8007c36:	d103      	bne.n	8007c40 <TIM_Base_SetConfig+0x100>
 8007c38:	683b      	ldr	r3, [r7, #0]
 8007c3a:	691a      	ldr	r2, [r3, #16]
 8007c3c:	687b      	ldr	r3, [r7, #4]
 8007c3e:	631a      	str	r2, [r3, #48]	; 0x30
 8007c40:	687b      	ldr	r3, [r7, #4]
 8007c42:	2201      	movs	r2, #1
 8007c44:	615a      	str	r2, [r3, #20]
 8007c46:	bf00      	nop
 8007c48:	3714      	adds	r7, #20
 8007c4a:	46bd      	mov	sp, r7
 8007c4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c50:	4770      	bx	lr
 8007c52:	bf00      	nop
 8007c54:	40010000 	.word	0x40010000
 8007c58:	40000400 	.word	0x40000400
 8007c5c:	40000800 	.word	0x40000800
 8007c60:	40000c00 	.word	0x40000c00
 8007c64:	40010400 	.word	0x40010400
 8007c68:	40014000 	.word	0x40014000
 8007c6c:	40014400 	.word	0x40014400
 8007c70:	40014800 	.word	0x40014800
 8007c74:	40001800 	.word	0x40001800
 8007c78:	40001c00 	.word	0x40001c00
 8007c7c:	40002000 	.word	0x40002000

08007c80 <HAL_TIMEx_MasterConfigSynchronization>:
 8007c80:	b480      	push	{r7}
 8007c82:	b085      	sub	sp, #20
 8007c84:	af00      	add	r7, sp, #0
 8007c86:	6078      	str	r0, [r7, #4]
 8007c88:	6039      	str	r1, [r7, #0]
 8007c8a:	687b      	ldr	r3, [r7, #4]
 8007c8c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007c90:	2b01      	cmp	r3, #1
 8007c92:	d101      	bne.n	8007c98 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007c94:	2302      	movs	r3, #2
 8007c96:	e06d      	b.n	8007d74 <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 8007c98:	687b      	ldr	r3, [r7, #4]
 8007c9a:	2201      	movs	r2, #1
 8007c9c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007ca0:	687b      	ldr	r3, [r7, #4]
 8007ca2:	2202      	movs	r2, #2
 8007ca4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007ca8:	687b      	ldr	r3, [r7, #4]
 8007caa:	681b      	ldr	r3, [r3, #0]
 8007cac:	685b      	ldr	r3, [r3, #4]
 8007cae:	60fb      	str	r3, [r7, #12]
 8007cb0:	687b      	ldr	r3, [r7, #4]
 8007cb2:	681b      	ldr	r3, [r3, #0]
 8007cb4:	689b      	ldr	r3, [r3, #8]
 8007cb6:	60bb      	str	r3, [r7, #8]
 8007cb8:	687b      	ldr	r3, [r7, #4]
 8007cba:	681b      	ldr	r3, [r3, #0]
 8007cbc:	4a30      	ldr	r2, [pc, #192]	; (8007d80 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8007cbe:	4293      	cmp	r3, r2
 8007cc0:	d004      	beq.n	8007ccc <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8007cc2:	687b      	ldr	r3, [r7, #4]
 8007cc4:	681b      	ldr	r3, [r3, #0]
 8007cc6:	4a2f      	ldr	r2, [pc, #188]	; (8007d84 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8007cc8:	4293      	cmp	r3, r2
 8007cca:	d108      	bne.n	8007cde <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007ccc:	68fb      	ldr	r3, [r7, #12]
 8007cce:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8007cd2:	60fb      	str	r3, [r7, #12]
 8007cd4:	683b      	ldr	r3, [r7, #0]
 8007cd6:	685b      	ldr	r3, [r3, #4]
 8007cd8:	68fa      	ldr	r2, [r7, #12]
 8007cda:	4313      	orrs	r3, r2
 8007cdc:	60fb      	str	r3, [r7, #12]
 8007cde:	68fb      	ldr	r3, [r7, #12]
 8007ce0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007ce4:	60fb      	str	r3, [r7, #12]
 8007ce6:	683b      	ldr	r3, [r7, #0]
 8007ce8:	681b      	ldr	r3, [r3, #0]
 8007cea:	68fa      	ldr	r2, [r7, #12]
 8007cec:	4313      	orrs	r3, r2
 8007cee:	60fb      	str	r3, [r7, #12]
 8007cf0:	687b      	ldr	r3, [r7, #4]
 8007cf2:	681b      	ldr	r3, [r3, #0]
 8007cf4:	68fa      	ldr	r2, [r7, #12]
 8007cf6:	605a      	str	r2, [r3, #4]
 8007cf8:	687b      	ldr	r3, [r7, #4]
 8007cfa:	681b      	ldr	r3, [r3, #0]
 8007cfc:	4a20      	ldr	r2, [pc, #128]	; (8007d80 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8007cfe:	4293      	cmp	r3, r2
 8007d00:	d022      	beq.n	8007d48 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8007d02:	687b      	ldr	r3, [r7, #4]
 8007d04:	681b      	ldr	r3, [r3, #0]
 8007d06:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007d0a:	d01d      	beq.n	8007d48 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8007d0c:	687b      	ldr	r3, [r7, #4]
 8007d0e:	681b      	ldr	r3, [r3, #0]
 8007d10:	4a1d      	ldr	r2, [pc, #116]	; (8007d88 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 8007d12:	4293      	cmp	r3, r2
 8007d14:	d018      	beq.n	8007d48 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8007d16:	687b      	ldr	r3, [r7, #4]
 8007d18:	681b      	ldr	r3, [r3, #0]
 8007d1a:	4a1c      	ldr	r2, [pc, #112]	; (8007d8c <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 8007d1c:	4293      	cmp	r3, r2
 8007d1e:	d013      	beq.n	8007d48 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8007d20:	687b      	ldr	r3, [r7, #4]
 8007d22:	681b      	ldr	r3, [r3, #0]
 8007d24:	4a1a      	ldr	r2, [pc, #104]	; (8007d90 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 8007d26:	4293      	cmp	r3, r2
 8007d28:	d00e      	beq.n	8007d48 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8007d2a:	687b      	ldr	r3, [r7, #4]
 8007d2c:	681b      	ldr	r3, [r3, #0]
 8007d2e:	4a15      	ldr	r2, [pc, #84]	; (8007d84 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8007d30:	4293      	cmp	r3, r2
 8007d32:	d009      	beq.n	8007d48 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8007d34:	687b      	ldr	r3, [r7, #4]
 8007d36:	681b      	ldr	r3, [r3, #0]
 8007d38:	4a16      	ldr	r2, [pc, #88]	; (8007d94 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 8007d3a:	4293      	cmp	r3, r2
 8007d3c:	d004      	beq.n	8007d48 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8007d3e:	687b      	ldr	r3, [r7, #4]
 8007d40:	681b      	ldr	r3, [r3, #0]
 8007d42:	4a15      	ldr	r2, [pc, #84]	; (8007d98 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 8007d44:	4293      	cmp	r3, r2
 8007d46:	d10c      	bne.n	8007d62 <HAL_TIMEx_MasterConfigSynchronization+0xe2>
 8007d48:	68bb      	ldr	r3, [r7, #8]
 8007d4a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007d4e:	60bb      	str	r3, [r7, #8]
 8007d50:	683b      	ldr	r3, [r7, #0]
 8007d52:	689b      	ldr	r3, [r3, #8]
 8007d54:	68ba      	ldr	r2, [r7, #8]
 8007d56:	4313      	orrs	r3, r2
 8007d58:	60bb      	str	r3, [r7, #8]
 8007d5a:	687b      	ldr	r3, [r7, #4]
 8007d5c:	681b      	ldr	r3, [r3, #0]
 8007d5e:	68ba      	ldr	r2, [r7, #8]
 8007d60:	609a      	str	r2, [r3, #8]
 8007d62:	687b      	ldr	r3, [r7, #4]
 8007d64:	2201      	movs	r2, #1
 8007d66:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007d6a:	687b      	ldr	r3, [r7, #4]
 8007d6c:	2200      	movs	r2, #0
 8007d6e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007d72:	2300      	movs	r3, #0
 8007d74:	4618      	mov	r0, r3
 8007d76:	3714      	adds	r7, #20
 8007d78:	46bd      	mov	sp, r7
 8007d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d7e:	4770      	bx	lr
 8007d80:	40010000 	.word	0x40010000
 8007d84:	40010400 	.word	0x40010400
 8007d88:	40000400 	.word	0x40000400
 8007d8c:	40000800 	.word	0x40000800
 8007d90:	40000c00 	.word	0x40000c00
 8007d94:	40014000 	.word	0x40014000
 8007d98:	40001800 	.word	0x40001800

08007d9c <FMC_SDRAM_Init>:
 8007d9c:	b480      	push	{r7}
 8007d9e:	b085      	sub	sp, #20
 8007da0:	af00      	add	r7, sp, #0
 8007da2:	6078      	str	r0, [r7, #4]
 8007da4:	6039      	str	r1, [r7, #0]
 8007da6:	2300      	movs	r3, #0
 8007da8:	60fb      	str	r3, [r7, #12]
 8007daa:	2300      	movs	r3, #0
 8007dac:	60bb      	str	r3, [r7, #8]
 8007dae:	683b      	ldr	r3, [r7, #0]
 8007db0:	681b      	ldr	r3, [r3, #0]
 8007db2:	2b01      	cmp	r3, #1
 8007db4:	d027      	beq.n	8007e06 <FMC_SDRAM_Init+0x6a>
 8007db6:	687b      	ldr	r3, [r7, #4]
 8007db8:	681b      	ldr	r3, [r3, #0]
 8007dba:	60fb      	str	r3, [r7, #12]
 8007dbc:	68fa      	ldr	r2, [r7, #12]
 8007dbe:	4b2f      	ldr	r3, [pc, #188]	; (8007e7c <FMC_SDRAM_Init+0xe0>)
 8007dc0:	4013      	ands	r3, r2
 8007dc2:	60fb      	str	r3, [r7, #12]
 8007dc4:	683b      	ldr	r3, [r7, #0]
 8007dc6:	685a      	ldr	r2, [r3, #4]
 8007dc8:	683b      	ldr	r3, [r7, #0]
 8007dca:	689b      	ldr	r3, [r3, #8]
 8007dcc:	431a      	orrs	r2, r3
 8007dce:	683b      	ldr	r3, [r7, #0]
 8007dd0:	68db      	ldr	r3, [r3, #12]
 8007dd2:	431a      	orrs	r2, r3
 8007dd4:	683b      	ldr	r3, [r7, #0]
 8007dd6:	691b      	ldr	r3, [r3, #16]
 8007dd8:	431a      	orrs	r2, r3
 8007dda:	683b      	ldr	r3, [r7, #0]
 8007ddc:	695b      	ldr	r3, [r3, #20]
 8007dde:	431a      	orrs	r2, r3
 8007de0:	683b      	ldr	r3, [r7, #0]
 8007de2:	699b      	ldr	r3, [r3, #24]
 8007de4:	431a      	orrs	r2, r3
 8007de6:	683b      	ldr	r3, [r7, #0]
 8007de8:	69db      	ldr	r3, [r3, #28]
 8007dea:	431a      	orrs	r2, r3
 8007dec:	683b      	ldr	r3, [r7, #0]
 8007dee:	6a1b      	ldr	r3, [r3, #32]
 8007df0:	431a      	orrs	r2, r3
 8007df2:	683b      	ldr	r3, [r7, #0]
 8007df4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007df6:	4313      	orrs	r3, r2
 8007df8:	68fa      	ldr	r2, [r7, #12]
 8007dfa:	4313      	orrs	r3, r2
 8007dfc:	60fb      	str	r3, [r7, #12]
 8007dfe:	687b      	ldr	r3, [r7, #4]
 8007e00:	68fa      	ldr	r2, [r7, #12]
 8007e02:	601a      	str	r2, [r3, #0]
 8007e04:	e032      	b.n	8007e6c <FMC_SDRAM_Init+0xd0>
 8007e06:	687b      	ldr	r3, [r7, #4]
 8007e08:	681b      	ldr	r3, [r3, #0]
 8007e0a:	60fb      	str	r3, [r7, #12]
 8007e0c:	68fb      	ldr	r3, [r7, #12]
 8007e0e:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8007e12:	60fb      	str	r3, [r7, #12]
 8007e14:	683b      	ldr	r3, [r7, #0]
 8007e16:	69da      	ldr	r2, [r3, #28]
 8007e18:	683b      	ldr	r3, [r7, #0]
 8007e1a:	6a1b      	ldr	r3, [r3, #32]
 8007e1c:	431a      	orrs	r2, r3
 8007e1e:	683b      	ldr	r3, [r7, #0]
 8007e20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007e22:	4313      	orrs	r3, r2
 8007e24:	68fa      	ldr	r2, [r7, #12]
 8007e26:	4313      	orrs	r3, r2
 8007e28:	60fb      	str	r3, [r7, #12]
 8007e2a:	687b      	ldr	r3, [r7, #4]
 8007e2c:	685b      	ldr	r3, [r3, #4]
 8007e2e:	60bb      	str	r3, [r7, #8]
 8007e30:	68ba      	ldr	r2, [r7, #8]
 8007e32:	4b12      	ldr	r3, [pc, #72]	; (8007e7c <FMC_SDRAM_Init+0xe0>)
 8007e34:	4013      	ands	r3, r2
 8007e36:	60bb      	str	r3, [r7, #8]
 8007e38:	683b      	ldr	r3, [r7, #0]
 8007e3a:	685a      	ldr	r2, [r3, #4]
 8007e3c:	683b      	ldr	r3, [r7, #0]
 8007e3e:	689b      	ldr	r3, [r3, #8]
 8007e40:	431a      	orrs	r2, r3
 8007e42:	683b      	ldr	r3, [r7, #0]
 8007e44:	68db      	ldr	r3, [r3, #12]
 8007e46:	431a      	orrs	r2, r3
 8007e48:	683b      	ldr	r3, [r7, #0]
 8007e4a:	691b      	ldr	r3, [r3, #16]
 8007e4c:	431a      	orrs	r2, r3
 8007e4e:	683b      	ldr	r3, [r7, #0]
 8007e50:	695b      	ldr	r3, [r3, #20]
 8007e52:	431a      	orrs	r2, r3
 8007e54:	683b      	ldr	r3, [r7, #0]
 8007e56:	699b      	ldr	r3, [r3, #24]
 8007e58:	4313      	orrs	r3, r2
 8007e5a:	68ba      	ldr	r2, [r7, #8]
 8007e5c:	4313      	orrs	r3, r2
 8007e5e:	60bb      	str	r3, [r7, #8]
 8007e60:	687b      	ldr	r3, [r7, #4]
 8007e62:	68fa      	ldr	r2, [r7, #12]
 8007e64:	601a      	str	r2, [r3, #0]
 8007e66:	687b      	ldr	r3, [r7, #4]
 8007e68:	68ba      	ldr	r2, [r7, #8]
 8007e6a:	605a      	str	r2, [r3, #4]
 8007e6c:	2300      	movs	r3, #0
 8007e6e:	4618      	mov	r0, r3
 8007e70:	3714      	adds	r7, #20
 8007e72:	46bd      	mov	sp, r7
 8007e74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e78:	4770      	bx	lr
 8007e7a:	bf00      	nop
 8007e7c:	ffff8000 	.word	0xffff8000

08007e80 <FMC_SDRAM_Timing_Init>:
 8007e80:	b480      	push	{r7}
 8007e82:	b087      	sub	sp, #28
 8007e84:	af00      	add	r7, sp, #0
 8007e86:	60f8      	str	r0, [r7, #12]
 8007e88:	60b9      	str	r1, [r7, #8]
 8007e8a:	607a      	str	r2, [r7, #4]
 8007e8c:	2300      	movs	r3, #0
 8007e8e:	617b      	str	r3, [r7, #20]
 8007e90:	2300      	movs	r3, #0
 8007e92:	613b      	str	r3, [r7, #16]
 8007e94:	687b      	ldr	r3, [r7, #4]
 8007e96:	2b01      	cmp	r3, #1
 8007e98:	d02e      	beq.n	8007ef8 <FMC_SDRAM_Timing_Init+0x78>
 8007e9a:	68fb      	ldr	r3, [r7, #12]
 8007e9c:	689b      	ldr	r3, [r3, #8]
 8007e9e:	617b      	str	r3, [r7, #20]
 8007ea0:	697b      	ldr	r3, [r7, #20]
 8007ea2:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8007ea6:	617b      	str	r3, [r7, #20]
 8007ea8:	68bb      	ldr	r3, [r7, #8]
 8007eaa:	681b      	ldr	r3, [r3, #0]
 8007eac:	1e5a      	subs	r2, r3, #1
 8007eae:	68bb      	ldr	r3, [r7, #8]
 8007eb0:	685b      	ldr	r3, [r3, #4]
 8007eb2:	3b01      	subs	r3, #1
 8007eb4:	011b      	lsls	r3, r3, #4
 8007eb6:	431a      	orrs	r2, r3
 8007eb8:	68bb      	ldr	r3, [r7, #8]
 8007eba:	689b      	ldr	r3, [r3, #8]
 8007ebc:	3b01      	subs	r3, #1
 8007ebe:	021b      	lsls	r3, r3, #8
 8007ec0:	431a      	orrs	r2, r3
 8007ec2:	68bb      	ldr	r3, [r7, #8]
 8007ec4:	68db      	ldr	r3, [r3, #12]
 8007ec6:	3b01      	subs	r3, #1
 8007ec8:	031b      	lsls	r3, r3, #12
 8007eca:	431a      	orrs	r2, r3
 8007ecc:	68bb      	ldr	r3, [r7, #8]
 8007ece:	691b      	ldr	r3, [r3, #16]
 8007ed0:	3b01      	subs	r3, #1
 8007ed2:	041b      	lsls	r3, r3, #16
 8007ed4:	431a      	orrs	r2, r3
 8007ed6:	68bb      	ldr	r3, [r7, #8]
 8007ed8:	695b      	ldr	r3, [r3, #20]
 8007eda:	3b01      	subs	r3, #1
 8007edc:	051b      	lsls	r3, r3, #20
 8007ede:	431a      	orrs	r2, r3
 8007ee0:	68bb      	ldr	r3, [r7, #8]
 8007ee2:	699b      	ldr	r3, [r3, #24]
 8007ee4:	3b01      	subs	r3, #1
 8007ee6:	061b      	lsls	r3, r3, #24
 8007ee8:	4313      	orrs	r3, r2
 8007eea:	697a      	ldr	r2, [r7, #20]
 8007eec:	4313      	orrs	r3, r2
 8007eee:	617b      	str	r3, [r7, #20]
 8007ef0:	68fb      	ldr	r3, [r7, #12]
 8007ef2:	697a      	ldr	r2, [r7, #20]
 8007ef4:	609a      	str	r2, [r3, #8]
 8007ef6:	e039      	b.n	8007f6c <FMC_SDRAM_Timing_Init+0xec>
 8007ef8:	68fb      	ldr	r3, [r7, #12]
 8007efa:	689b      	ldr	r3, [r3, #8]
 8007efc:	617b      	str	r3, [r7, #20]
 8007efe:	697a      	ldr	r2, [r7, #20]
 8007f00:	4b1e      	ldr	r3, [pc, #120]	; (8007f7c <FMC_SDRAM_Timing_Init+0xfc>)
 8007f02:	4013      	ands	r3, r2
 8007f04:	617b      	str	r3, [r7, #20]
 8007f06:	68bb      	ldr	r3, [r7, #8]
 8007f08:	68db      	ldr	r3, [r3, #12]
 8007f0a:	3b01      	subs	r3, #1
 8007f0c:	031a      	lsls	r2, r3, #12
 8007f0e:	68bb      	ldr	r3, [r7, #8]
 8007f10:	695b      	ldr	r3, [r3, #20]
 8007f12:	3b01      	subs	r3, #1
 8007f14:	051b      	lsls	r3, r3, #20
 8007f16:	4313      	orrs	r3, r2
 8007f18:	697a      	ldr	r2, [r7, #20]
 8007f1a:	4313      	orrs	r3, r2
 8007f1c:	617b      	str	r3, [r7, #20]
 8007f1e:	68fb      	ldr	r3, [r7, #12]
 8007f20:	68db      	ldr	r3, [r3, #12]
 8007f22:	613b      	str	r3, [r7, #16]
 8007f24:	693b      	ldr	r3, [r7, #16]
 8007f26:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 8007f2a:	613b      	str	r3, [r7, #16]
 8007f2c:	68bb      	ldr	r3, [r7, #8]
 8007f2e:	681b      	ldr	r3, [r3, #0]
 8007f30:	1e5a      	subs	r2, r3, #1
 8007f32:	68bb      	ldr	r3, [r7, #8]
 8007f34:	685b      	ldr	r3, [r3, #4]
 8007f36:	3b01      	subs	r3, #1
 8007f38:	011b      	lsls	r3, r3, #4
 8007f3a:	431a      	orrs	r2, r3
 8007f3c:	68bb      	ldr	r3, [r7, #8]
 8007f3e:	689b      	ldr	r3, [r3, #8]
 8007f40:	3b01      	subs	r3, #1
 8007f42:	021b      	lsls	r3, r3, #8
 8007f44:	431a      	orrs	r2, r3
 8007f46:	68bb      	ldr	r3, [r7, #8]
 8007f48:	691b      	ldr	r3, [r3, #16]
 8007f4a:	3b01      	subs	r3, #1
 8007f4c:	041b      	lsls	r3, r3, #16
 8007f4e:	431a      	orrs	r2, r3
 8007f50:	68bb      	ldr	r3, [r7, #8]
 8007f52:	699b      	ldr	r3, [r3, #24]
 8007f54:	3b01      	subs	r3, #1
 8007f56:	061b      	lsls	r3, r3, #24
 8007f58:	4313      	orrs	r3, r2
 8007f5a:	693a      	ldr	r2, [r7, #16]
 8007f5c:	4313      	orrs	r3, r2
 8007f5e:	613b      	str	r3, [r7, #16]
 8007f60:	68fb      	ldr	r3, [r7, #12]
 8007f62:	697a      	ldr	r2, [r7, #20]
 8007f64:	609a      	str	r2, [r3, #8]
 8007f66:	68fb      	ldr	r3, [r7, #12]
 8007f68:	693a      	ldr	r2, [r7, #16]
 8007f6a:	60da      	str	r2, [r3, #12]
 8007f6c:	2300      	movs	r3, #0
 8007f6e:	4618      	mov	r0, r3
 8007f70:	371c      	adds	r7, #28
 8007f72:	46bd      	mov	sp, r7
 8007f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f78:	4770      	bx	lr
 8007f7a:	bf00      	nop
 8007f7c:	ff0f0fff 	.word	0xff0f0fff

08007f80 <FMC_SDRAM_SendCommand>:
 8007f80:	b480      	push	{r7}
 8007f82:	b087      	sub	sp, #28
 8007f84:	af00      	add	r7, sp, #0
 8007f86:	60f8      	str	r0, [r7, #12]
 8007f88:	60b9      	str	r1, [r7, #8]
 8007f8a:	607a      	str	r2, [r7, #4]
 8007f8c:	2300      	movs	r3, #0
 8007f8e:	617b      	str	r3, [r7, #20]
 8007f90:	68bb      	ldr	r3, [r7, #8]
 8007f92:	681a      	ldr	r2, [r3, #0]
 8007f94:	68bb      	ldr	r3, [r7, #8]
 8007f96:	685b      	ldr	r3, [r3, #4]
 8007f98:	431a      	orrs	r2, r3
 8007f9a:	68bb      	ldr	r3, [r7, #8]
 8007f9c:	689b      	ldr	r3, [r3, #8]
 8007f9e:	3b01      	subs	r3, #1
 8007fa0:	015b      	lsls	r3, r3, #5
 8007fa2:	431a      	orrs	r2, r3
 8007fa4:	68bb      	ldr	r3, [r7, #8]
 8007fa6:	68db      	ldr	r3, [r3, #12]
 8007fa8:	025b      	lsls	r3, r3, #9
 8007faa:	4313      	orrs	r3, r2
 8007fac:	617b      	str	r3, [r7, #20]
 8007fae:	697a      	ldr	r2, [r7, #20]
 8007fb0:	68fb      	ldr	r3, [r7, #12]
 8007fb2:	611a      	str	r2, [r3, #16]
 8007fb4:	2300      	movs	r3, #0
 8007fb6:	4618      	mov	r0, r3
 8007fb8:	371c      	adds	r7, #28
 8007fba:	46bd      	mov	sp, r7
 8007fbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fc0:	4770      	bx	lr

08007fc2 <FMC_SDRAM_ProgramRefreshRate>:
 8007fc2:	b480      	push	{r7}
 8007fc4:	b083      	sub	sp, #12
 8007fc6:	af00      	add	r7, sp, #0
 8007fc8:	6078      	str	r0, [r7, #4]
 8007fca:	6039      	str	r1, [r7, #0]
 8007fcc:	687b      	ldr	r3, [r7, #4]
 8007fce:	695a      	ldr	r2, [r3, #20]
 8007fd0:	683b      	ldr	r3, [r7, #0]
 8007fd2:	005b      	lsls	r3, r3, #1
 8007fd4:	431a      	orrs	r2, r3
 8007fd6:	687b      	ldr	r3, [r7, #4]
 8007fd8:	615a      	str	r2, [r3, #20]
 8007fda:	2300      	movs	r3, #0
 8007fdc:	4618      	mov	r0, r3
 8007fde:	370c      	adds	r7, #12
 8007fe0:	46bd      	mov	sp, r7
 8007fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fe6:	4770      	bx	lr

08007fe8 <GUI_X_Config>:
*
* Purpose:
*   Called during the initialization process in order to set up the
*   available memory for the GUI.
*/
void GUI_X_Config(void) {
 8007fe8:	b580      	push	{r7, lr}
 8007fea:	af00      	add	r7, sp, #0
  //
  // Assign memory to STemWin
  //
  GUI_ALLOC_AssignMemory(aMemory, GUI_NUMBYTES);
 8007fec:	f44f 3116 	mov.w	r1, #153600	; 0x25800
 8007ff0:	4802      	ldr	r0, [pc, #8]	; (8007ffc <GUI_X_Config+0x14>)
 8007ff2:	f002 fcd3 	bl	800a99c <GUI_ALLOC_AssignMemory>
}
 8007ff6:	bf00      	nop
 8007ff8:	bd80      	pop	{r7, pc}
 8007ffa:	bf00      	nop
 8007ffc:	20008104 	.word	0x20008104

08008000 <_Color2IndexBulk_M8888I_DMA2D>:
  */ 
static void _DMA_Index2ColorBulk(void * pIndex, LCD_COLOR * pColor, U32 NumItems, U8 SizeOfIndex, U32 PixelFormat);
static void _DMA_Color2IndexBulk(LCD_COLOR * pColor, void * pIndex, U32 NumItems, U8 SizeOfIndex, U32 PixelFormat);

/* Color conversion routines using DMA2D */
DEFINE_DMA2D_COLORCONVERSION(M8888I, LTDC_PIXEL_FORMAT_ARGB8888)
 8008000:	b580      	push	{r7, lr}
 8008002:	b086      	sub	sp, #24
 8008004:	af02      	add	r7, sp, #8
 8008006:	60f8      	str	r0, [r7, #12]
 8008008:	60b9      	str	r1, [r7, #8]
 800800a:	607a      	str	r2, [r7, #4]
 800800c:	70fb      	strb	r3, [r7, #3]
 800800e:	78fb      	ldrb	r3, [r7, #3]
 8008010:	2200      	movs	r2, #0
 8008012:	9200      	str	r2, [sp, #0]
 8008014:	687a      	ldr	r2, [r7, #4]
 8008016:	68b9      	ldr	r1, [r7, #8]
 8008018:	68f8      	ldr	r0, [r7, #12]
 800801a:	f000 fe0b 	bl	8008c34 <_DMA_Color2IndexBulk>
 800801e:	bf00      	nop
 8008020:	3710      	adds	r7, #16
 8008022:	46bd      	mov	sp, r7
 8008024:	bd80      	pop	{r7, pc}

08008026 <_Index2ColorBulk_M8888I_DMA2D>:
 8008026:	b580      	push	{r7, lr}
 8008028:	b086      	sub	sp, #24
 800802a:	af02      	add	r7, sp, #8
 800802c:	60f8      	str	r0, [r7, #12]
 800802e:	60b9      	str	r1, [r7, #8]
 8008030:	607a      	str	r2, [r7, #4]
 8008032:	70fb      	strb	r3, [r7, #3]
 8008034:	78fb      	ldrb	r3, [r7, #3]
 8008036:	2200      	movs	r2, #0
 8008038:	9200      	str	r2, [sp, #0]
 800803a:	687a      	ldr	r2, [r7, #4]
 800803c:	68b9      	ldr	r1, [r7, #8]
 800803e:	68f8      	ldr	r0, [r7, #12]
 8008040:	f000 fde5 	bl	8008c0e <_DMA_Index2ColorBulk>
 8008044:	bf00      	nop
 8008046:	3710      	adds	r7, #16
 8008048:	46bd      	mov	sp, r7
 800804a:	bd80      	pop	{r7, pc}

0800804c <_Color2IndexBulk_M888_DMA2D>:
/* Internal pixel format of emWin is 32 bit, because of that ARGB8888 */
DEFINE_DMA2D_COLORCONVERSION(M888,   LTDC_PIXEL_FORMAT_ARGB8888) 
 800804c:	b580      	push	{r7, lr}
 800804e:	b086      	sub	sp, #24
 8008050:	af02      	add	r7, sp, #8
 8008052:	60f8      	str	r0, [r7, #12]
 8008054:	60b9      	str	r1, [r7, #8]
 8008056:	607a      	str	r2, [r7, #4]
 8008058:	70fb      	strb	r3, [r7, #3]
 800805a:	78fb      	ldrb	r3, [r7, #3]
 800805c:	2200      	movs	r2, #0
 800805e:	9200      	str	r2, [sp, #0]
 8008060:	687a      	ldr	r2, [r7, #4]
 8008062:	68b9      	ldr	r1, [r7, #8]
 8008064:	68f8      	ldr	r0, [r7, #12]
 8008066:	f000 fde5 	bl	8008c34 <_DMA_Color2IndexBulk>
 800806a:	bf00      	nop
 800806c:	3710      	adds	r7, #16
 800806e:	46bd      	mov	sp, r7
 8008070:	bd80      	pop	{r7, pc}

08008072 <_Index2ColorBulk_M888_DMA2D>:
 8008072:	b580      	push	{r7, lr}
 8008074:	b086      	sub	sp, #24
 8008076:	af02      	add	r7, sp, #8
 8008078:	60f8      	str	r0, [r7, #12]
 800807a:	60b9      	str	r1, [r7, #8]
 800807c:	607a      	str	r2, [r7, #4]
 800807e:	70fb      	strb	r3, [r7, #3]
 8008080:	78fb      	ldrb	r3, [r7, #3]
 8008082:	2200      	movs	r2, #0
 8008084:	9200      	str	r2, [sp, #0]
 8008086:	687a      	ldr	r2, [r7, #4]
 8008088:	68b9      	ldr	r1, [r7, #8]
 800808a:	68f8      	ldr	r0, [r7, #12]
 800808c:	f000 fdbf 	bl	8008c0e <_DMA_Index2ColorBulk>
 8008090:	bf00      	nop
 8008092:	3710      	adds	r7, #16
 8008094:	46bd      	mov	sp, r7
 8008096:	bd80      	pop	{r7, pc}

08008098 <_Color2IndexBulk_M565_DMA2D>:
DEFINE_DMA2D_COLORCONVERSION(M565,   LTDC_PIXEL_FORMAT_RGB565)
 8008098:	b580      	push	{r7, lr}
 800809a:	b086      	sub	sp, #24
 800809c:	af02      	add	r7, sp, #8
 800809e:	60f8      	str	r0, [r7, #12]
 80080a0:	60b9      	str	r1, [r7, #8]
 80080a2:	607a      	str	r2, [r7, #4]
 80080a4:	70fb      	strb	r3, [r7, #3]
 80080a6:	78fb      	ldrb	r3, [r7, #3]
 80080a8:	2202      	movs	r2, #2
 80080aa:	9200      	str	r2, [sp, #0]
 80080ac:	687a      	ldr	r2, [r7, #4]
 80080ae:	68b9      	ldr	r1, [r7, #8]
 80080b0:	68f8      	ldr	r0, [r7, #12]
 80080b2:	f000 fdbf 	bl	8008c34 <_DMA_Color2IndexBulk>
 80080b6:	bf00      	nop
 80080b8:	3710      	adds	r7, #16
 80080ba:	46bd      	mov	sp, r7
 80080bc:	bd80      	pop	{r7, pc}

080080be <_Index2ColorBulk_M565_DMA2D>:
 80080be:	b580      	push	{r7, lr}
 80080c0:	b086      	sub	sp, #24
 80080c2:	af02      	add	r7, sp, #8
 80080c4:	60f8      	str	r0, [r7, #12]
 80080c6:	60b9      	str	r1, [r7, #8]
 80080c8:	607a      	str	r2, [r7, #4]
 80080ca:	70fb      	strb	r3, [r7, #3]
 80080cc:	78fb      	ldrb	r3, [r7, #3]
 80080ce:	2202      	movs	r2, #2
 80080d0:	9200      	str	r2, [sp, #0]
 80080d2:	687a      	ldr	r2, [r7, #4]
 80080d4:	68b9      	ldr	r1, [r7, #8]
 80080d6:	68f8      	ldr	r0, [r7, #12]
 80080d8:	f000 fd99 	bl	8008c0e <_DMA_Index2ColorBulk>
 80080dc:	bf00      	nop
 80080de:	3710      	adds	r7, #16
 80080e0:	46bd      	mov	sp, r7
 80080e2:	bd80      	pop	{r7, pc}

080080e4 <_Color2IndexBulk_M1555I_DMA2D>:
DEFINE_DMA2D_COLORCONVERSION(M1555I, LTDC_PIXEL_FORMAT_ARGB1555)
 80080e4:	b580      	push	{r7, lr}
 80080e6:	b086      	sub	sp, #24
 80080e8:	af02      	add	r7, sp, #8
 80080ea:	60f8      	str	r0, [r7, #12]
 80080ec:	60b9      	str	r1, [r7, #8]
 80080ee:	607a      	str	r2, [r7, #4]
 80080f0:	70fb      	strb	r3, [r7, #3]
 80080f2:	78fb      	ldrb	r3, [r7, #3]
 80080f4:	2203      	movs	r2, #3
 80080f6:	9200      	str	r2, [sp, #0]
 80080f8:	687a      	ldr	r2, [r7, #4]
 80080fa:	68b9      	ldr	r1, [r7, #8]
 80080fc:	68f8      	ldr	r0, [r7, #12]
 80080fe:	f000 fd99 	bl	8008c34 <_DMA_Color2IndexBulk>
 8008102:	bf00      	nop
 8008104:	3710      	adds	r7, #16
 8008106:	46bd      	mov	sp, r7
 8008108:	bd80      	pop	{r7, pc}

0800810a <_Index2ColorBulk_M1555I_DMA2D>:
 800810a:	b580      	push	{r7, lr}
 800810c:	b086      	sub	sp, #24
 800810e:	af02      	add	r7, sp, #8
 8008110:	60f8      	str	r0, [r7, #12]
 8008112:	60b9      	str	r1, [r7, #8]
 8008114:	607a      	str	r2, [r7, #4]
 8008116:	70fb      	strb	r3, [r7, #3]
 8008118:	78fb      	ldrb	r3, [r7, #3]
 800811a:	2203      	movs	r2, #3
 800811c:	9200      	str	r2, [sp, #0]
 800811e:	687a      	ldr	r2, [r7, #4]
 8008120:	68b9      	ldr	r1, [r7, #8]
 8008122:	68f8      	ldr	r0, [r7, #12]
 8008124:	f000 fd73 	bl	8008c0e <_DMA_Index2ColorBulk>
 8008128:	bf00      	nop
 800812a:	3710      	adds	r7, #16
 800812c:	46bd      	mov	sp, r7
 800812e:	bd80      	pop	{r7, pc}

08008130 <_Color2IndexBulk_M4444I_DMA2D>:
DEFINE_DMA2D_COLORCONVERSION(M4444I, LTDC_PIXEL_FORMAT_ARGB4444)
 8008130:	b580      	push	{r7, lr}
 8008132:	b086      	sub	sp, #24
 8008134:	af02      	add	r7, sp, #8
 8008136:	60f8      	str	r0, [r7, #12]
 8008138:	60b9      	str	r1, [r7, #8]
 800813a:	607a      	str	r2, [r7, #4]
 800813c:	70fb      	strb	r3, [r7, #3]
 800813e:	78fb      	ldrb	r3, [r7, #3]
 8008140:	2204      	movs	r2, #4
 8008142:	9200      	str	r2, [sp, #0]
 8008144:	687a      	ldr	r2, [r7, #4]
 8008146:	68b9      	ldr	r1, [r7, #8]
 8008148:	68f8      	ldr	r0, [r7, #12]
 800814a:	f000 fd73 	bl	8008c34 <_DMA_Color2IndexBulk>
 800814e:	bf00      	nop
 8008150:	3710      	adds	r7, #16
 8008152:	46bd      	mov	sp, r7
 8008154:	bd80      	pop	{r7, pc}

08008156 <_Index2ColorBulk_M4444I_DMA2D>:
 8008156:	b580      	push	{r7, lr}
 8008158:	b086      	sub	sp, #24
 800815a:	af02      	add	r7, sp, #8
 800815c:	60f8      	str	r0, [r7, #12]
 800815e:	60b9      	str	r1, [r7, #8]
 8008160:	607a      	str	r2, [r7, #4]
 8008162:	70fb      	strb	r3, [r7, #3]
 8008164:	78fb      	ldrb	r3, [r7, #3]
 8008166:	2204      	movs	r2, #4
 8008168:	9200      	str	r2, [sp, #0]
 800816a:	687a      	ldr	r2, [r7, #4]
 800816c:	68b9      	ldr	r1, [r7, #8]
 800816e:	68f8      	ldr	r0, [r7, #12]
 8008170:	f000 fd4d 	bl	8008c0e <_DMA_Index2ColorBulk>
 8008174:	bf00      	nop
 8008176:	3710      	adds	r7, #16
 8008178:	46bd      	mov	sp, r7
 800817a:	bd80      	pop	{r7, pc}

0800817c <_GetPixelformat>:
  * @brief  Get the used pixel format
  * @param  LayerIndex: Layer index used 
  * @retval LTDC pixel format
  */
static U32 _GetPixelformat(int LayerIndex) 
{
 800817c:	b480      	push	{r7}
 800817e:	b085      	sub	sp, #20
 8008180:	af00      	add	r7, sp, #0
 8008182:	6078      	str	r0, [r7, #4]
  const LCD_API_COLOR_CONV * pColorConvAPI;

  if (LayerIndex >= GUI_COUNTOF(_apColorConvAPI)) 
 8008184:	687b      	ldr	r3, [r7, #4]
 8008186:	2b00      	cmp	r3, #0
 8008188:	d001      	beq.n	800818e <_GetPixelformat+0x12>
  {
    return 0;
 800818a:	2300      	movs	r3, #0
 800818c:	e035      	b.n	80081fa <_GetPixelformat+0x7e>
  }
  pColorConvAPI = _apColorConvAPI[LayerIndex];
 800818e:	4a1e      	ldr	r2, [pc, #120]	; (8008208 <_GetPixelformat+0x8c>)
 8008190:	687b      	ldr	r3, [r7, #4]
 8008192:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008196:	60fb      	str	r3, [r7, #12]
  if        (pColorConvAPI == GUICC_M8888I) 
 8008198:	68fb      	ldr	r3, [r7, #12]
 800819a:	4a1c      	ldr	r2, [pc, #112]	; (800820c <_GetPixelformat+0x90>)
 800819c:	4293      	cmp	r3, r2
 800819e:	d101      	bne.n	80081a4 <_GetPixelformat+0x28>
  {
    return LTDC_PIXEL_FORMAT_ARGB8888;
 80081a0:	2300      	movs	r3, #0
 80081a2:	e02a      	b.n	80081fa <_GetPixelformat+0x7e>
  }
  else if (pColorConvAPI == GUICC_M888) 
 80081a4:	68fb      	ldr	r3, [r7, #12]
 80081a6:	4a1a      	ldr	r2, [pc, #104]	; (8008210 <_GetPixelformat+0x94>)
 80081a8:	4293      	cmp	r3, r2
 80081aa:	d101      	bne.n	80081b0 <_GetPixelformat+0x34>
  {
    return LTDC_PIXEL_FORMAT_RGB888;
 80081ac:	2301      	movs	r3, #1
 80081ae:	e024      	b.n	80081fa <_GetPixelformat+0x7e>
  }
  else if (pColorConvAPI == GUICC_M565) 
 80081b0:	68fb      	ldr	r3, [r7, #12]
 80081b2:	4a18      	ldr	r2, [pc, #96]	; (8008214 <_GetPixelformat+0x98>)
 80081b4:	4293      	cmp	r3, r2
 80081b6:	d101      	bne.n	80081bc <_GetPixelformat+0x40>
  {
    return LTDC_PIXEL_FORMAT_RGB565;
 80081b8:	2302      	movs	r3, #2
 80081ba:	e01e      	b.n	80081fa <_GetPixelformat+0x7e>
  }
  else if (pColorConvAPI == GUICC_M1555I)
 80081bc:	68fb      	ldr	r3, [r7, #12]
 80081be:	4a16      	ldr	r2, [pc, #88]	; (8008218 <_GetPixelformat+0x9c>)
 80081c0:	4293      	cmp	r3, r2
 80081c2:	d101      	bne.n	80081c8 <_GetPixelformat+0x4c>
  {
    return LTDC_PIXEL_FORMAT_ARGB1555;
 80081c4:	2303      	movs	r3, #3
 80081c6:	e018      	b.n	80081fa <_GetPixelformat+0x7e>
  }
  else if (pColorConvAPI == GUICC_M4444I) 
 80081c8:	68fb      	ldr	r3, [r7, #12]
 80081ca:	4a14      	ldr	r2, [pc, #80]	; (800821c <_GetPixelformat+0xa0>)
 80081cc:	4293      	cmp	r3, r2
 80081ce:	d101      	bne.n	80081d4 <_GetPixelformat+0x58>
  {
    return LTDC_PIXEL_FORMAT_ARGB4444;
 80081d0:	2304      	movs	r3, #4
 80081d2:	e012      	b.n	80081fa <_GetPixelformat+0x7e>
  }
  else if (pColorConvAPI == GUICC_8666  ) 
 80081d4:	68fb      	ldr	r3, [r7, #12]
 80081d6:	4a12      	ldr	r2, [pc, #72]	; (8008220 <_GetPixelformat+0xa4>)
 80081d8:	4293      	cmp	r3, r2
 80081da:	d101      	bne.n	80081e0 <_GetPixelformat+0x64>
  {
    return LTDC_PIXEL_FORMAT_L8;
 80081dc:	2305      	movs	r3, #5
 80081de:	e00c      	b.n	80081fa <_GetPixelformat+0x7e>
  }
  else if (pColorConvAPI == GUICC_1616I ) 
 80081e0:	68fb      	ldr	r3, [r7, #12]
 80081e2:	4a10      	ldr	r2, [pc, #64]	; (8008224 <_GetPixelformat+0xa8>)
 80081e4:	4293      	cmp	r3, r2
 80081e6:	d101      	bne.n	80081ec <_GetPixelformat+0x70>
  {
    return LTDC_PIXEL_FORMAT_AL44;
 80081e8:	2306      	movs	r3, #6
 80081ea:	e006      	b.n	80081fa <_GetPixelformat+0x7e>
  }
  else if (pColorConvAPI == GUICC_88666I) 
 80081ec:	68fb      	ldr	r3, [r7, #12]
 80081ee:	4a0e      	ldr	r2, [pc, #56]	; (8008228 <_GetPixelformat+0xac>)
 80081f0:	4293      	cmp	r3, r2
 80081f2:	d101      	bne.n	80081f8 <_GetPixelformat+0x7c>
  {
    return LTDC_PIXEL_FORMAT_AL88;
 80081f4:	2307      	movs	r3, #7
 80081f6:	e000      	b.n	80081fa <_GetPixelformat+0x7e>
  }
  /* We'll hang in case of bad configuration */
  while (1);
 80081f8:	e7fe      	b.n	80081f8 <_GetPixelformat+0x7c>
}
 80081fa:	4618      	mov	r0, r3
 80081fc:	3714      	adds	r7, #20
 80081fe:	46bd      	mov	sp, r7
 8008200:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008204:	4770      	bx	lr
 8008206:	bf00      	nop
 8008208:	20000104 	.word	0x20000104
 800820c:	0801895c 	.word	0x0801895c
 8008210:	0801898c 	.word	0x0801898c
 8008214:	08018974 	.word	0x08018974
 8008218:	0801892c 	.word	0x0801892c
 800821c:	08018944 	.word	0x08018944
 8008220:	080188fc 	.word	0x080188fc
 8008224:	080188e4 	.word	0x080188e4
 8008228:	08018914 	.word	0x08018914

0800822c <_DMA2D_ITConfig>:
  * @brief  Enable/Disable the DMA2D interrupt
  * @param  DMA2D_IT: DM2D interrupt to enable
  * @param  NewState: ENABLE/DISABLE
  * @retval LTDC pixel format
  */
static void _DMA2D_ITConfig(U32 DMA2D_IT, int NewState) {
 800822c:	b480      	push	{r7}
 800822e:	b083      	sub	sp, #12
 8008230:	af00      	add	r7, sp, #0
 8008232:	6078      	str	r0, [r7, #4]
 8008234:	6039      	str	r1, [r7, #0]
  if (NewState != DISABLE) {    
 8008236:	683b      	ldr	r3, [r7, #0]
 8008238:	2b00      	cmp	r3, #0
 800823a:	d006      	beq.n	800824a <_DMA2D_ITConfig+0x1e>
    DMA2D->CR |= DMA2D_IT;    
 800823c:	4b09      	ldr	r3, [pc, #36]	; (8008264 <_DMA2D_ITConfig+0x38>)
 800823e:	681a      	ldr	r2, [r3, #0]
 8008240:	4908      	ldr	r1, [pc, #32]	; (8008264 <_DMA2D_ITConfig+0x38>)
 8008242:	687b      	ldr	r3, [r7, #4]
 8008244:	4313      	orrs	r3, r2
 8008246:	600b      	str	r3, [r1, #0]
  } else {    
    DMA2D->CR &= (U32)~DMA2D_IT;    
  }
}
 8008248:	e006      	b.n	8008258 <_DMA2D_ITConfig+0x2c>
    DMA2D->CR &= (U32)~DMA2D_IT;    
 800824a:	4b06      	ldr	r3, [pc, #24]	; (8008264 <_DMA2D_ITConfig+0x38>)
 800824c:	681a      	ldr	r2, [r3, #0]
 800824e:	687b      	ldr	r3, [r7, #4]
 8008250:	43db      	mvns	r3, r3
 8008252:	4904      	ldr	r1, [pc, #16]	; (8008264 <_DMA2D_ITConfig+0x38>)
 8008254:	4013      	ands	r3, r2
 8008256:	600b      	str	r3, [r1, #0]
}
 8008258:	bf00      	nop
 800825a:	370c      	adds	r7, #12
 800825c:	46bd      	mov	sp, r7
 800825e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008262:	4770      	bx	lr
 8008264:	4002b000 	.word	0x4002b000

08008268 <HAL_DMA2D_MspInit>:
  * @brief  DM2D Msp initialisation
  * @param  hdma2d: DM2D handle
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef *hdma2d)
{  
 8008268:	b480      	push	{r7}
 800826a:	b085      	sub	sp, #20
 800826c:	af00      	add	r7, sp, #0
 800826e:	6078      	str	r0, [r7, #4]
  /* Enable dma2d clock */
  __HAL_RCC_DMA2D_CLK_ENABLE();   
 8008270:	4b08      	ldr	r3, [pc, #32]	; (8008294 <HAL_DMA2D_MspInit+0x2c>)
 8008272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008274:	4a07      	ldr	r2, [pc, #28]	; (8008294 <HAL_DMA2D_MspInit+0x2c>)
 8008276:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800827a:	6313      	str	r3, [r2, #48]	; 0x30
 800827c:	4b05      	ldr	r3, [pc, #20]	; (8008294 <HAL_DMA2D_MspInit+0x2c>)
 800827e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008280:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8008284:	60fb      	str	r3, [r7, #12]
 8008286:	68fb      	ldr	r3, [r7, #12]
}
 8008288:	bf00      	nop
 800828a:	3714      	adds	r7, #20
 800828c:	46bd      	mov	sp, r7
 800828e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008292:	4770      	bx	lr
 8008294:	40023800 	.word	0x40023800

08008298 <HAL_LTDC_MspInit>:
  * @brief  LTDC Msp initialisation
  * @param  hltdc: LTDC handle
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef *hltdc)
{
 8008298:	b580      	push	{r7, lr}
 800829a:	b08e      	sub	sp, #56	; 0x38
 800829c:	af00      	add	r7, sp, #0
 800829e:	6078      	str	r0, [r7, #4]
  static RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
  GPIO_InitTypeDef gpio_init_structure;
  
  /* Enable the LTDC clocks */
  __HAL_RCC_LTDC_CLK_ENABLE();  
 80082a0:	4b64      	ldr	r3, [pc, #400]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 80082a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80082a4:	4a63      	ldr	r2, [pc, #396]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 80082a6:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80082aa:	6453      	str	r3, [r2, #68]	; 0x44
 80082ac:	4b61      	ldr	r3, [pc, #388]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 80082ae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80082b0:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80082b4:	623b      	str	r3, [r7, #32]
 80082b6:	6a3b      	ldr	r3, [r7, #32]
  /* LCD clock configuration */
  /* PLLSAI_VCO Input = HSE_VALUE/PLL_M = 1 Mhz */
  /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN = 192 Mhz */
  /* PLLLCDCLK = PLLSAI_VCO Output/PLLSAIR = 192/5 = 38.4 Mhz */
  /* LTDC clock frequency = PLLLCDCLK / LTDC_PLLSAI_DIVR_4 = 38.4/4 = 9.6Mhz */
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80082b8:	4b5f      	ldr	r3, [pc, #380]	; (8008438 <HAL_LTDC_MspInit+0x1a0>)
 80082ba:	2208      	movs	r2, #8
 80082bc:	601a      	str	r2, [r3, #0]
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80082be:	4b5e      	ldr	r3, [pc, #376]	; (8008438 <HAL_LTDC_MspInit+0x1a0>)
 80082c0:	22c0      	movs	r2, #192	; 0xc0
 80082c2:	615a      	str	r2, [r3, #20]
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 80082c4:	4b5c      	ldr	r3, [pc, #368]	; (8008438 <HAL_LTDC_MspInit+0x1a0>)
 80082c6:	2205      	movs	r2, #5
 80082c8:	61da      	str	r2, [r3, #28]
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_4;
 80082ca:	4b5b      	ldr	r3, [pc, #364]	; (8008438 <HAL_LTDC_MspInit+0x1a0>)
 80082cc:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80082d0:	62da      	str	r2, [r3, #44]	; 0x2c
  HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);  
 80082d2:	4859      	ldr	r0, [pc, #356]	; (8008438 <HAL_LTDC_MspInit+0x1a0>)
 80082d4:	f7fe ff72 	bl	80071bc <HAL_RCCEx_PeriphCLKConfig>
  
  /* Enable GPIOs clock */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80082d8:	4b56      	ldr	r3, [pc, #344]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 80082da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80082dc:	4a55      	ldr	r2, [pc, #340]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 80082de:	f043 0310 	orr.w	r3, r3, #16
 80082e2:	6313      	str	r3, [r2, #48]	; 0x30
 80082e4:	4b53      	ldr	r3, [pc, #332]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 80082e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80082e8:	f003 0310 	and.w	r3, r3, #16
 80082ec:	61fb      	str	r3, [r7, #28]
 80082ee:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80082f0:	4b50      	ldr	r3, [pc, #320]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 80082f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80082f4:	4a4f      	ldr	r2, [pc, #316]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 80082f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80082fa:	6313      	str	r3, [r2, #48]	; 0x30
 80082fc:	4b4d      	ldr	r3, [pc, #308]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 80082fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008300:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008304:	61bb      	str	r3, [r7, #24]
 8008306:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8008308:	4b4a      	ldr	r3, [pc, #296]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 800830a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800830c:	4a49      	ldr	r2, [pc, #292]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 800830e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008312:	6313      	str	r3, [r2, #48]	; 0x30
 8008314:	4b47      	ldr	r3, [pc, #284]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 8008316:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008318:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800831c:	617b      	str	r3, [r7, #20]
 800831e:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8008320:	4b44      	ldr	r3, [pc, #272]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 8008322:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008324:	4a43      	ldr	r2, [pc, #268]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 8008326:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800832a:	6313      	str	r3, [r2, #48]	; 0x30
 800832c:	4b41      	ldr	r3, [pc, #260]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 800832e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008330:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8008334:	613b      	str	r3, [r7, #16]
 8008336:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8008338:	4b3e      	ldr	r3, [pc, #248]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 800833a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800833c:	4a3d      	ldr	r2, [pc, #244]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 800833e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8008342:	6313      	str	r3, [r2, #48]	; 0x30
 8008344:	4b3b      	ldr	r3, [pc, #236]	; (8008434 <HAL_LTDC_MspInit+0x19c>)
 8008346:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008348:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800834c:	60fb      	str	r3, [r7, #12]
 800834e:	68fb      	ldr	r3, [r7, #12]
  
  /*** LTDC Pins configuration ***/
  /* GPIOE configuration */
  gpio_init_structure.Pin       = GPIO_PIN_4;
 8008350:	2310      	movs	r3, #16
 8008352:	627b      	str	r3, [r7, #36]	; 0x24
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8008354:	2302      	movs	r3, #2
 8008356:	62bb      	str	r3, [r7, #40]	; 0x28
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8008358:	2300      	movs	r3, #0
 800835a:	62fb      	str	r3, [r7, #44]	; 0x2c
  gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 800835c:	2302      	movs	r3, #2
 800835e:	633b      	str	r3, [r7, #48]	; 0x30
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;  
 8008360:	230e      	movs	r3, #14
 8008362:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8008364:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8008368:	4619      	mov	r1, r3
 800836a:	4834      	ldr	r0, [pc, #208]	; (800843c <HAL_LTDC_MspInit+0x1a4>)
 800836c:	f7fc fcbc 	bl	8004ce8 <HAL_GPIO_Init>

  /* GPIOG configuration */
  gpio_init_structure.Pin       = GPIO_PIN_12;
 8008370:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8008374:	627b      	str	r3, [r7, #36]	; 0x24
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8008376:	2302      	movs	r3, #2
 8008378:	62bb      	str	r3, [r7, #40]	; 0x28
  gpio_init_structure.Alternate = GPIO_AF9_LTDC;
 800837a:	2309      	movs	r3, #9
 800837c:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 800837e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8008382:	4619      	mov	r1, r3
 8008384:	482e      	ldr	r0, [pc, #184]	; (8008440 <HAL_LTDC_MspInit+0x1a8>)
 8008386:	f7fc fcaf 	bl	8004ce8 <HAL_GPIO_Init>

  /* GPIOI LTDC alternate configuration */
  gpio_init_structure.Pin       = GPIO_PIN_9 | GPIO_PIN_10 | \
 800838a:	f44f 4366 	mov.w	r3, #58880	; 0xe600
 800838e:	627b      	str	r3, [r7, #36]	; 0x24
                                  GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8008390:	2302      	movs	r3, #2
 8008392:	62bb      	str	r3, [r7, #40]	; 0x28
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;
 8008394:	230e      	movs	r3, #14
 8008396:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8008398:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800839c:	4619      	mov	r1, r3
 800839e:	4829      	ldr	r0, [pc, #164]	; (8008444 <HAL_LTDC_MspInit+0x1ac>)
 80083a0:	f7fc fca2 	bl	8004ce8 <HAL_GPIO_Init>

  /* GPIOJ configuration */  
  gpio_init_structure.Pin       = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | \
 80083a4:	f64e 73ff 	movw	r3, #61439	; 0xefff
 80083a8:	627b      	str	r3, [r7, #36]	; 0x24
                                  GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | \
                                  GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | \
                                  GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80083aa:	2302      	movs	r3, #2
 80083ac:	62bb      	str	r3, [r7, #40]	; 0x28
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;
 80083ae:	230e      	movs	r3, #14
 80083b0:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOJ, &gpio_init_structure);  
 80083b2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80083b6:	4619      	mov	r1, r3
 80083b8:	4823      	ldr	r0, [pc, #140]	; (8008448 <HAL_LTDC_MspInit+0x1b0>)
 80083ba:	f7fc fc95 	bl	8004ce8 <HAL_GPIO_Init>

  /* GPIOK configuration */  
  gpio_init_structure.Pin       = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_4 | \
 80083be:	23f7      	movs	r3, #247	; 0xf7
 80083c0:	627b      	str	r3, [r7, #36]	; 0x24
                                  GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7;
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80083c2:	2302      	movs	r3, #2
 80083c4:	62bb      	str	r3, [r7, #40]	; 0x28
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;
 80083c6:	230e      	movs	r3, #14
 80083c8:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOK, &gpio_init_structure);
 80083ca:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80083ce:	4619      	mov	r1, r3
 80083d0:	481e      	ldr	r0, [pc, #120]	; (800844c <HAL_LTDC_MspInit+0x1b4>)
 80083d2:	f7fc fc89 	bl	8004ce8 <HAL_GPIO_Init>
  
  /* LCD_DISP GPIO configuration */
  gpio_init_structure.Pin       = GPIO_PIN_12;     /* LCD_DISP pin has to be manually controlled */
 80083d6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80083da:	627b      	str	r3, [r7, #36]	; 0x24
  gpio_init_structure.Mode      = GPIO_MODE_OUTPUT_PP;
 80083dc:	2301      	movs	r3, #1
 80083de:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80083e0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80083e4:	4619      	mov	r1, r3
 80083e6:	4817      	ldr	r0, [pc, #92]	; (8008444 <HAL_LTDC_MspInit+0x1ac>)
 80083e8:	f7fc fc7e 	bl	8004ce8 <HAL_GPIO_Init>

  /* LCD_BL_CTRL GPIO configuration */
  gpio_init_structure.Pin       = GPIO_PIN_3;  /* LCD_BL_CTRL pin has to be manually controlled */
 80083ec:	2308      	movs	r3, #8
 80083ee:	627b      	str	r3, [r7, #36]	; 0x24
  gpio_init_structure.Mode      = GPIO_MODE_OUTPUT_PP;
 80083f0:	2301      	movs	r3, #1
 80083f2:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOK, &gpio_init_structure);   
 80083f4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80083f8:	4619      	mov	r1, r3
 80083fa:	4814      	ldr	r0, [pc, #80]	; (800844c <HAL_LTDC_MspInit+0x1b4>)
 80083fc:	f7fc fc74 	bl	8004ce8 <HAL_GPIO_Init>
  
  /* Set LTDC Interrupt to the lowest priority */
  HAL_NVIC_SetPriority(LTDC_IRQn, 0xF, 0);
 8008400:	2200      	movs	r2, #0
 8008402:	210f      	movs	r1, #15
 8008404:	2058      	movs	r0, #88	; 0x58
 8008406:	f7fb ff8e 	bl	8004326 <HAL_NVIC_SetPriority>
  
  /* Enable LTDC Interrupt */
  HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800840a:	2058      	movs	r0, #88	; 0x58
 800840c:	f7fb ffa7 	bl	800435e <HAL_NVIC_EnableIRQ>
  
  /* Set DMA2D Interrupt to the lowest priority */
  HAL_NVIC_SetPriority(DMA2D_IRQn, 0xE, 0x0);
 8008410:	2200      	movs	r2, #0
 8008412:	210e      	movs	r1, #14
 8008414:	205a      	movs	r0, #90	; 0x5a
 8008416:	f7fb ff86 	bl	8004326 <HAL_NVIC_SetPriority>
  /* Enable DMA2D Interrupt */
  HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800841a:	205a      	movs	r0, #90	; 0x5a
 800841c:	f7fb ff9f 	bl	800435e <HAL_NVIC_EnableIRQ>
  /* Enable DMA2D transfer complete Interrupt */
  _DMA2D_ITConfig(DMA2D_CR_TCIE, ENABLE);
 8008420:	2101      	movs	r1, #1
 8008422:	f44f 7000 	mov.w	r0, #512	; 0x200
 8008426:	f7ff ff01 	bl	800822c <_DMA2D_ITConfig>
}
 800842a:	bf00      	nop
 800842c:	3738      	adds	r7, #56	; 0x38
 800842e:	46bd      	mov	sp, r7
 8008430:	bd80      	pop	{r7, pc}
 8008432:	bf00      	nop
 8008434:	40023800 	.word	0x40023800
 8008438:	20006a24 	.word	0x20006a24
 800843c:	40021000 	.word	0x40021000
 8008440:	40021800 	.word	0x40021800
 8008444:	40022000 	.word	0x40022000
 8008448:	40022400 	.word	0x40022400
 800844c:	40022800 	.word	0x40022800

08008450 <HAL_LTDC_MspDeInit>:
  * @brief  LTDC Msp de-initialisation
  * @param  hltdc: LTDC handle
  * @retval None
  */
void HAL_LTDC_MspDeInit(LTDC_HandleTypeDef *hltdc)
{
 8008450:	b480      	push	{r7}
 8008452:	b083      	sub	sp, #12
 8008454:	af00      	add	r7, sp, #0
 8008456:	6078      	str	r0, [r7, #4]
  /* Enable LTDC reset state */
  __HAL_RCC_LTDC_FORCE_RESET();
 8008458:	4b08      	ldr	r3, [pc, #32]	; (800847c <HAL_LTDC_MspDeInit+0x2c>)
 800845a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800845c:	4a07      	ldr	r2, [pc, #28]	; (800847c <HAL_LTDC_MspDeInit+0x2c>)
 800845e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8008462:	6253      	str	r3, [r2, #36]	; 0x24
  
  /* Release LTDC from reset state */ 
  __HAL_RCC_LTDC_RELEASE_RESET();
 8008464:	4b05      	ldr	r3, [pc, #20]	; (800847c <HAL_LTDC_MspDeInit+0x2c>)
 8008466:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008468:	4a04      	ldr	r2, [pc, #16]	; (800847c <HAL_LTDC_MspDeInit+0x2c>)
 800846a:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800846e:	6253      	str	r3, [r2, #36]	; 0x24
}
 8008470:	bf00      	nop
 8008472:	370c      	adds	r7, #12
 8008474:	46bd      	mov	sp, r7
 8008476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800847a:	4770      	bx	lr
 800847c:	40023800 	.word	0x40023800

08008480 <LCD_LL_LayerInit>:
  * @brief  Initialise the LCD Controller
  * @param  LayerIndex : layer Index.
  * @retval None
  */
static void LCD_LL_LayerInit(U32 LayerIndex) 
{  
 8008480:	b580      	push	{r7, lr}
 8008482:	b090      	sub	sp, #64	; 0x40
 8008484:	af00      	add	r7, sp, #0
 8008486:	6078      	str	r0, [r7, #4]
  LTDC_LayerCfgTypeDef  layer_cfg;  
  static uint32_t       LUT[256];
  uint32_t              i;

  if (LayerIndex < GUI_NUM_LAYERS)
 8008488:	687b      	ldr	r3, [r7, #4]
 800848a:	2b00      	cmp	r3, #0
 800848c:	d16c      	bne.n	8008568 <LCD_LL_LayerInit+0xe8>
  {
    /* Layer configuration */
    layer_cfg.WindowX0 = 0;
 800848e:	2300      	movs	r3, #0
 8008490:	60bb      	str	r3, [r7, #8]
    layer_cfg.WindowX1 = XSIZE_PHYS;
 8008492:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8008496:	60fb      	str	r3, [r7, #12]
    layer_cfg.WindowY0 = 0;
 8008498:	2300      	movs	r3, #0
 800849a:	613b      	str	r3, [r7, #16]
    layer_cfg.WindowY1 = YSIZE_PHYS;
 800849c:	f44f 7388 	mov.w	r3, #272	; 0x110
 80084a0:	617b      	str	r3, [r7, #20]
    layer_cfg.PixelFormat = _GetPixelformat(LayerIndex);
 80084a2:	687b      	ldr	r3, [r7, #4]
 80084a4:	4618      	mov	r0, r3
 80084a6:	f7ff fe69 	bl	800817c <_GetPixelformat>
 80084aa:	4603      	mov	r3, r0
 80084ac:	61bb      	str	r3, [r7, #24]
    layer_cfg.FBStartAdress = layer_prop[LayerIndex].address;
 80084ae:	4930      	ldr	r1, [pc, #192]	; (8008570 <LCD_LL_LayerInit+0xf0>)
 80084b0:	687a      	ldr	r2, [r7, #4]
 80084b2:	4613      	mov	r3, r2
 80084b4:	00db      	lsls	r3, r3, #3
 80084b6:	1a9b      	subs	r3, r3, r2
 80084b8:	009b      	lsls	r3, r3, #2
 80084ba:	440b      	add	r3, r1
 80084bc:	681b      	ldr	r3, [r3, #0]
 80084be:	62fb      	str	r3, [r7, #44]	; 0x2c
    layer_cfg.Alpha = 255;
 80084c0:	23ff      	movs	r3, #255	; 0xff
 80084c2:	61fb      	str	r3, [r7, #28]
    layer_cfg.Alpha0 = 0;
 80084c4:	2300      	movs	r3, #0
 80084c6:	623b      	str	r3, [r7, #32]
    layer_cfg.Backcolor.Blue = 0;
 80084c8:	2300      	movs	r3, #0
 80084ca:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
    layer_cfg.Backcolor.Green = 0;
 80084ce:	2300      	movs	r3, #0
 80084d0:	f887 3039 	strb.w	r3, [r7, #57]	; 0x39
    layer_cfg.Backcolor.Red = 0;
 80084d4:	2300      	movs	r3, #0
 80084d6:	f887 303a 	strb.w	r3, [r7, #58]	; 0x3a
    layer_cfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 80084da:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80084de:	627b      	str	r3, [r7, #36]	; 0x24
    layer_cfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 80084e0:	2307      	movs	r3, #7
 80084e2:	62bb      	str	r3, [r7, #40]	; 0x28
    layer_cfg.ImageWidth = XSIZE_PHYS;
 80084e4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80084e8:	633b      	str	r3, [r7, #48]	; 0x30
    layer_cfg.ImageHeight = YSIZE_PHYS;
 80084ea:	f44f 7388 	mov.w	r3, #272	; 0x110
 80084ee:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_LTDC_ConfigLayer(&hltdc, &layer_cfg, LayerIndex);
 80084f0:	f107 0308 	add.w	r3, r7, #8
 80084f4:	687a      	ldr	r2, [r7, #4]
 80084f6:	4619      	mov	r1, r3
 80084f8:	481e      	ldr	r0, [pc, #120]	; (8008574 <LCD_LL_LayerInit+0xf4>)
 80084fa:	f7fd fd7f 	bl	8005ffc <HAL_LTDC_ConfigLayer>

    /* Enable LUT on demand */
    if (LCD_GetBitsPerPixelEx(LayerIndex) <= 8)
 80084fe:	687b      	ldr	r3, [r7, #4]
 8008500:	4618      	mov	r0, r3
 8008502:	f004 fcfb 	bl	800cefc <LCD_GetBitsPerPixelEx>
 8008506:	4603      	mov	r3, r0
 8008508:	2b08      	cmp	r3, #8
 800850a:	dc04      	bgt.n	8008516 <LCD_LL_LayerInit+0x96>
    {
      /* Enable usage of LUT for all modes with <= 8bpp*/
      HAL_LTDC_EnableCLUT(&hltdc, LayerIndex);
 800850c:	6879      	ldr	r1, [r7, #4]
 800850e:	4819      	ldr	r0, [pc, #100]	; (8008574 <LCD_LL_LayerInit+0xf4>)
 8008510:	f7fd fed6 	bl	80062c0 <HAL_LTDC_EnableCLUT>
        }
        HAL_LTDC_ConfigCLUT(&hltdc, LUT, 256, LayerIndex);
      }
    }
  }  
}
 8008514:	e028      	b.n	8008568 <LCD_LL_LayerInit+0xe8>
      if (layer_prop[LayerIndex].pColorConvAPI == GUICC_88666I)
 8008516:	4916      	ldr	r1, [pc, #88]	; (8008570 <LCD_LL_LayerInit+0xf0>)
 8008518:	687a      	ldr	r2, [r7, #4]
 800851a:	4613      	mov	r3, r2
 800851c:	00db      	lsls	r3, r3, #3
 800851e:	1a9b      	subs	r3, r3, r2
 8008520:	009b      	lsls	r3, r3, #2
 8008522:	440b      	add	r3, r1
 8008524:	3318      	adds	r3, #24
 8008526:	681b      	ldr	r3, [r3, #0]
 8008528:	4a13      	ldr	r2, [pc, #76]	; (8008578 <LCD_LL_LayerInit+0xf8>)
 800852a:	4293      	cmp	r3, r2
 800852c:	d11c      	bne.n	8008568 <LCD_LL_LayerInit+0xe8>
        HAL_LTDC_EnableCLUT(&hltdc, LayerIndex);
 800852e:	6879      	ldr	r1, [r7, #4]
 8008530:	4810      	ldr	r0, [pc, #64]	; (8008574 <LCD_LL_LayerInit+0xf4>)
 8008532:	f7fd fec5 	bl	80062c0 <HAL_LTDC_EnableCLUT>
        for (i = 0; i < 256; i++)
 8008536:	2300      	movs	r3, #0
 8008538:	63fb      	str	r3, [r7, #60]	; 0x3c
 800853a:	e00b      	b.n	8008554 <LCD_LL_LayerInit+0xd4>
          LUT[i] = LCD_API_ColorConv_8666.pfIndex2Color(i);
 800853c:	4b0f      	ldr	r3, [pc, #60]	; (800857c <LCD_LL_LayerInit+0xfc>)
 800853e:	685b      	ldr	r3, [r3, #4]
 8008540:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8008542:	4798      	blx	r3
 8008544:	4602      	mov	r2, r0
 8008546:	490e      	ldr	r1, [pc, #56]	; (8008580 <LCD_LL_LayerInit+0x100>)
 8008548:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800854a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        for (i = 0; i < 256; i++)
 800854e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8008550:	3301      	adds	r3, #1
 8008552:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008554:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8008556:	2bff      	cmp	r3, #255	; 0xff
 8008558:	d9f0      	bls.n	800853c <LCD_LL_LayerInit+0xbc>
        HAL_LTDC_ConfigCLUT(&hltdc, LUT, 256, LayerIndex);
 800855a:	687b      	ldr	r3, [r7, #4]
 800855c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008560:	4907      	ldr	r1, [pc, #28]	; (8008580 <LCD_LL_LayerInit+0x100>)
 8008562:	4804      	ldr	r0, [pc, #16]	; (8008574 <LCD_LL_LayerInit+0xf4>)
 8008564:	f7fd fdcc 	bl	8006100 <HAL_LTDC_ConfigCLUT>
}
 8008568:	bf00      	nop
 800856a:	3740      	adds	r7, #64	; 0x40
 800856c:	46bd      	mov	sp, r7
 800856e:	bd80      	pop	{r7, pc}
 8008570:	20000ff8 	.word	0x20000ff8
 8008574:	2002d904 	.word	0x2002d904
 8008578:	08018914 	.word	0x08018914
 800857c:	080188fc 	.word	0x080188fc
 8008580:	20006aa8 	.word	0x20006aa8

08008584 <LCD_LL_Init>:
  * @brief  LCD Low layer initialisation
  * @param  None
  * @retval None
  */
static void LCD_LL_Init(void) 
{
 8008584:	b580      	push	{r7, lr}
 8008586:	af00      	add	r7, sp, #0
  /* LTDC DeInit */
  HAL_LTDC_DeInit(&hltdc);
 8008588:	4832      	ldr	r0, [pc, #200]	; (8008654 <LCD_LL_Init+0xd0>)
 800858a:	f7fd fc67 	bl	8005e5c <HAL_LTDC_DeInit>
  
  /* Set LCD Timings */
  hltdc.Init.HorizontalSync = 40;
 800858e:	4b31      	ldr	r3, [pc, #196]	; (8008654 <LCD_LL_Init+0xd0>)
 8008590:	2228      	movs	r2, #40	; 0x28
 8008592:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 9;
 8008594:	4b2f      	ldr	r3, [pc, #188]	; (8008654 <LCD_LL_Init+0xd0>)
 8008596:	2209      	movs	r2, #9
 8008598:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 53;
 800859a:	4b2e      	ldr	r3, [pc, #184]	; (8008654 <LCD_LL_Init+0xd0>)
 800859c:	2235      	movs	r2, #53	; 0x35
 800859e:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 11;
 80085a0:	4b2c      	ldr	r3, [pc, #176]	; (8008654 <LCD_LL_Init+0xd0>)
 80085a2:	220b      	movs	r2, #11
 80085a4:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveH = 283;
 80085a6:	4b2b      	ldr	r3, [pc, #172]	; (8008654 <LCD_LL_Init+0xd0>)
 80085a8:	f240 121b 	movw	r2, #283	; 0x11b
 80085ac:	629a      	str	r2, [r3, #40]	; 0x28
  hltdc.Init.AccumulatedActiveW = 533;
 80085ae:	4b29      	ldr	r3, [pc, #164]	; (8008654 <LCD_LL_Init+0xd0>)
 80085b0:	f240 2215 	movw	r2, #533	; 0x215
 80085b4:	625a      	str	r2, [r3, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
 80085b6:	4b27      	ldr	r3, [pc, #156]	; (8008654 <LCD_LL_Init+0xd0>)
 80085b8:	f240 121d 	movw	r2, #285	; 0x11d
 80085bc:	631a      	str	r2, [r3, #48]	; 0x30
  hltdc.Init.TotalWidth = 565;
 80085be:	4b25      	ldr	r3, [pc, #148]	; (8008654 <LCD_LL_Init+0xd0>)
 80085c0:	f240 2235 	movw	r2, #565	; 0x235
 80085c4:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* background value */
  hltdc.Init.Backcolor.Blue = 0;
 80085c6:	4b23      	ldr	r3, [pc, #140]	; (8008654 <LCD_LL_Init+0xd0>)
 80085c8:	2200      	movs	r2, #0
 80085ca:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 80085ce:	4b21      	ldr	r3, [pc, #132]	; (8008654 <LCD_LL_Init+0xd0>)
 80085d0:	2200      	movs	r2, #0
 80085d2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;  
 80085d6:	4b1f      	ldr	r3, [pc, #124]	; (8008654 <LCD_LL_Init+0xd0>)
 80085d8:	2200      	movs	r2, #0
 80085da:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  
  /* Polarity */
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80085de:	4b1d      	ldr	r3, [pc, #116]	; (8008654 <LCD_LL_Init+0xd0>)
 80085e0:	2200      	movs	r2, #0
 80085e2:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL; 
 80085e4:	4b1b      	ldr	r3, [pc, #108]	; (8008654 <LCD_LL_Init+0xd0>)
 80085e6:	2200      	movs	r2, #0
 80085e8:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;  
 80085ea:	4b1a      	ldr	r3, [pc, #104]	; (8008654 <LCD_LL_Init+0xd0>)
 80085ec:	2200      	movs	r2, #0
 80085ee:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80085f0:	4b18      	ldr	r3, [pc, #96]	; (8008654 <LCD_LL_Init+0xd0>)
 80085f2:	2200      	movs	r2, #0
 80085f4:	611a      	str	r2, [r3, #16]
  hltdc.Instance = LTDC;
 80085f6:	4b17      	ldr	r3, [pc, #92]	; (8008654 <LCD_LL_Init+0xd0>)
 80085f8:	4a17      	ldr	r2, [pc, #92]	; (8008658 <LCD_LL_Init+0xd4>)
 80085fa:	601a      	str	r2, [r3, #0]
  
  HAL_LTDC_Init(&hltdc);
 80085fc:	4815      	ldr	r0, [pc, #84]	; (8008654 <LCD_LL_Init+0xd0>)
 80085fe:	f7fd fb5d 	bl	8005cbc <HAL_LTDC_Init>
  HAL_LTDC_ProgramLineEvent(&hltdc, 0);
 8008602:	2100      	movs	r1, #0
 8008604:	4813      	ldr	r0, [pc, #76]	; (8008654 <LCD_LL_Init+0xd0>)
 8008606:	f7fd ff71 	bl	80064ec <HAL_LTDC_ProgramLineEvent>
  
  /* Enable dithering */
  HAL_LTDC_EnableDither(&hltdc);
 800860a:	4812      	ldr	r0, [pc, #72]	; (8008654 <LCD_LL_Init+0xd0>)
 800860c:	f7fd fe92 	bl	8006334 <HAL_LTDC_EnableDither>
    
  /* Configure the DMA2D default mode */ 
  hdma2d.Init.Mode         = DMA2D_R2M;
 8008610:	4b12      	ldr	r3, [pc, #72]	; (800865c <LCD_LL_Init+0xd8>)
 8008612:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8008616:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode    = DMA2D_RGB565;
 8008618:	4b10      	ldr	r3, [pc, #64]	; (800865c <LCD_LL_Init+0xd8>)
 800861a:	2202      	movs	r2, #2
 800861c:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0x0;
 800861e:	4b0f      	ldr	r3, [pc, #60]	; (800865c <LCD_LL_Init+0xd8>)
 8008620:	2200      	movs	r2, #0
 8008622:	60da      	str	r2, [r3, #12]
  hdma2d.Instance          = DMA2D;
 8008624:	4b0d      	ldr	r3, [pc, #52]	; (800865c <LCD_LL_Init+0xd8>)
 8008626:	4a0e      	ldr	r2, [pc, #56]	; (8008660 <LCD_LL_Init+0xdc>)
 8008628:	601a      	str	r2, [r3, #0]

  if(HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800862a:	480c      	ldr	r0, [pc, #48]	; (800865c <LCD_LL_Init+0xd8>)
 800862c:	f7fc fb12 	bl	8004c54 <HAL_DMA2D_Init>
 8008630:	4603      	mov	r3, r0
 8008632:	2b00      	cmp	r3, #0
 8008634:	d000      	beq.n	8008638 <LCD_LL_Init+0xb4>
  {
    while (1);
 8008636:	e7fe      	b.n	8008636 <LCD_LL_Init+0xb2>
  }
  
  /* Assert display enable LCD_DISP pin */
  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_12, GPIO_PIN_SET);
 8008638:	2201      	movs	r2, #1
 800863a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800863e:	4809      	ldr	r0, [pc, #36]	; (8008664 <LCD_LL_Init+0xe0>)
 8008640:	f7fc fe0a 	bl	8005258 <HAL_GPIO_WritePin>

  /* Assert backlight LCD_BL_CTRL pin */
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8008644:	2201      	movs	r2, #1
 8008646:	2108      	movs	r1, #8
 8008648:	4807      	ldr	r0, [pc, #28]	; (8008668 <LCD_LL_Init+0xe4>)
 800864a:	f7fc fe05 	bl	8005258 <HAL_GPIO_WritePin>
}
 800864e:	bf00      	nop
 8008650:	bd80      	pop	{r7, pc}
 8008652:	bf00      	nop
 8008654:	2002d904 	.word	0x2002d904
 8008658:	40016800 	.word	0x40016800
 800865c:	20000fb8 	.word	0x20000fb8
 8008660:	4002b000 	.word	0x4002b000
 8008664:	40022000 	.word	0x40022000
 8008668:	40022800 	.word	0x40022800

0800866c <DMA2D_IRQHandler>:
  * @brief  DMA2D interrupt handler
  * @param  None
  * @retval None
  */
void DMA2D_IRQHandler(void) 
{
 800866c:	b480      	push	{r7}
 800866e:	af00      	add	r7, sp, #0
  /* Clear the Transfer complete interrupt */
  DMA2D->IFCR = (U32)DMA2D_IFSR_CTCIF;
 8008670:	4b06      	ldr	r3, [pc, #24]	; (800868c <DMA2D_IRQHandler+0x20>)
 8008672:	2202      	movs	r2, #2
 8008674:	609a      	str	r2, [r3, #8]
  DMA2D->IFCR = (U32)DMA2D_IFCR_CCTCIF;
 8008676:	4b05      	ldr	r3, [pc, #20]	; (800868c <DMA2D_IRQHandler+0x20>)
 8008678:	2210      	movs	r2, #16
 800867a:	609a      	str	r2, [r3, #8]
  /* Release the DMA2D for the next transfer */
  TransferInProgress = 0;
 800867c:	4b04      	ldr	r3, [pc, #16]	; (8008690 <DMA2D_IRQHandler+0x24>)
 800867e:	2200      	movs	r2, #0
 8008680:	701a      	strb	r2, [r3, #0]
}
 8008682:	bf00      	nop
 8008684:	46bd      	mov	sp, r7
 8008686:	f85d 7b04 	ldr.w	r7, [sp], #4
 800868a:	4770      	bx	lr
 800868c:	4002b000 	.word	0x4002b000
 8008690:	20000fb4 	.word	0x20000fb4

08008694 <_DMA2D_ExecOperation>:
  * @brief  DMA2D wait for interrupt
  * @param  None
  * @retval None
  */
static void _DMA2D_ExecOperation(void) 
{  
 8008694:	b480      	push	{r7}
 8008696:	af00      	add	r7, sp, #0
  /* If no concurent operation, do not wait */
  if ( TransferInProgress == 0 )
 8008698:	4b08      	ldr	r3, [pc, #32]	; (80086bc <_DMA2D_ExecOperation+0x28>)
 800869a:	781b      	ldrb	r3, [r3, #0]
 800869c:	b2db      	uxtb	r3, r3
 800869e:	2b00      	cmp	r3, #0
 80086a0:	d006      	beq.n	80086b0 <_DMA2D_ExecOperation+0x1c>
    return;
  
  /* Wait until the transfer is done */
  while(TransferInProgress) {
 80086a2:	bf00      	nop
 80086a4:	4b05      	ldr	r3, [pc, #20]	; (80086bc <_DMA2D_ExecOperation+0x28>)
 80086a6:	781b      	ldrb	r3, [r3, #0]
 80086a8:	b2db      	uxtb	r3, r3
 80086aa:	2b00      	cmp	r3, #0
 80086ac:	d1fa      	bne.n	80086a4 <_DMA2D_ExecOperation+0x10>
 80086ae:	e000      	b.n	80086b2 <_DMA2D_ExecOperation+0x1e>
    return;
 80086b0:	bf00      	nop
  }
}
 80086b2:	46bd      	mov	sp, r7
 80086b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086b8:	4770      	bx	lr
 80086ba:	bf00      	nop
 80086bc:	20000fb4 	.word	0x20000fb4

080086c0 <_DMA_Copy>:
  * @param  OffLineSrc: Source Line offset
  * @param  OffLineDst: Destination Line offset
  * @retval None
  */
static void _DMA_Copy(int LayerIndex, void * pSrc, void * pDst, int xSize, int ySize, int OffLineSrc, int OffLineDst) 
{
 80086c0:	b580      	push	{r7, lr}
 80086c2:	b086      	sub	sp, #24
 80086c4:	af00      	add	r7, sp, #0
 80086c6:	60f8      	str	r0, [r7, #12]
 80086c8:	60b9      	str	r1, [r7, #8]
 80086ca:	607a      	str	r2, [r7, #4]
 80086cc:	603b      	str	r3, [r7, #0]
  U32 PixelFormat;
  
  /* Wait if there is a transfer in progress */
  _DMA2D_ExecOperation();  
 80086ce:	f7ff ffe1 	bl	8008694 <_DMA2D_ExecOperation>
  
  /* Take the TransferInProgress flag */
  TransferInProgress = 1;
 80086d2:	4b17      	ldr	r3, [pc, #92]	; (8008730 <_DMA_Copy+0x70>)
 80086d4:	2201      	movs	r2, #1
 80086d6:	701a      	strb	r2, [r3, #0]
  
  /* Get the layer pixel format used */
  PixelFormat    = _GetPixelformat(LayerIndex);
 80086d8:	68f8      	ldr	r0, [r7, #12]
 80086da:	f7ff fd4f 	bl	800817c <_GetPixelformat>
 80086de:	6178      	str	r0, [r7, #20]
  
  /* Setup DMA2D Configuration */  
  DMA2D->CR      = 0x00000000UL | (1 << 9);
 80086e0:	4b14      	ldr	r3, [pc, #80]	; (8008734 <_DMA_Copy+0x74>)
 80086e2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80086e6:	601a      	str	r2, [r3, #0]
  DMA2D->FGMAR   = (U32)pSrc;
 80086e8:	4a12      	ldr	r2, [pc, #72]	; (8008734 <_DMA_Copy+0x74>)
 80086ea:	68bb      	ldr	r3, [r7, #8]
 80086ec:	60d3      	str	r3, [r2, #12]
  DMA2D->OMAR    = (U32)pDst;
 80086ee:	4a11      	ldr	r2, [pc, #68]	; (8008734 <_DMA_Copy+0x74>)
 80086f0:	687b      	ldr	r3, [r7, #4]
 80086f2:	63d3      	str	r3, [r2, #60]	; 0x3c
  DMA2D->FGOR    = OffLineSrc;
 80086f4:	4a0f      	ldr	r2, [pc, #60]	; (8008734 <_DMA_Copy+0x74>)
 80086f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086f8:	6113      	str	r3, [r2, #16]
  DMA2D->OOR     = OffLineDst;
 80086fa:	4a0e      	ldr	r2, [pc, #56]	; (8008734 <_DMA_Copy+0x74>)
 80086fc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80086fe:	6413      	str	r3, [r2, #64]	; 0x40
  DMA2D->FGPFCCR = PixelFormat;
 8008700:	4a0c      	ldr	r2, [pc, #48]	; (8008734 <_DMA_Copy+0x74>)
 8008702:	697b      	ldr	r3, [r7, #20]
 8008704:	61d3      	str	r3, [r2, #28]
  DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize;
 8008706:	683b      	ldr	r3, [r7, #0]
 8008708:	041b      	lsls	r3, r3, #16
 800870a:	4619      	mov	r1, r3
 800870c:	6a3b      	ldr	r3, [r7, #32]
 800870e:	b29b      	uxth	r3, r3
 8008710:	4a08      	ldr	r2, [pc, #32]	; (8008734 <_DMA_Copy+0x74>)
 8008712:	430b      	orrs	r3, r1
 8008714:	6453      	str	r3, [r2, #68]	; 0x44
  
  /* Start the transfer, and enable the transfer complete IT */  
  DMA2D->CR     |= (1|DMA2D_IT_TC);
 8008716:	4b07      	ldr	r3, [pc, #28]	; (8008734 <_DMA_Copy+0x74>)
 8008718:	681a      	ldr	r2, [r3, #0]
 800871a:	4906      	ldr	r1, [pc, #24]	; (8008734 <_DMA_Copy+0x74>)
 800871c:	f240 2301 	movw	r3, #513	; 0x201
 8008720:	4313      	orrs	r3, r2
 8008722:	600b      	str	r3, [r1, #0]
  
  /* Wait for the end of the transfer */
  _DMA2D_ExecOperation();
 8008724:	f7ff ffb6 	bl	8008694 <_DMA2D_ExecOperation>
}
 8008728:	bf00      	nop
 800872a:	3718      	adds	r7, #24
 800872c:	46bd      	mov	sp, r7
 800872e:	bd80      	pop	{r7, pc}
 8008730:	20000fb4 	.word	0x20000fb4
 8008734:	4002b000 	.word	0x4002b000

08008738 <_DMA_CopyRGB565>:
  * @param  OffLineSrc: Source Line offset
  * @param  OffLineDst: Destination Line offset
  * @retval None
  */
static void _DMA_CopyRGB565(const void * pSrc, void * pDst, int xSize, int ySize, int OffLineSrc, int OffLineDst)
{
 8008738:	b580      	push	{r7, lr}
 800873a:	b084      	sub	sp, #16
 800873c:	af00      	add	r7, sp, #0
 800873e:	60f8      	str	r0, [r7, #12]
 8008740:	60b9      	str	r1, [r7, #8]
 8008742:	607a      	str	r2, [r7, #4]
 8008744:	603b      	str	r3, [r7, #0]
   /* Wait if there is a transfer in progress */
  _DMA2D_ExecOperation();
 8008746:	f7ff ffa5 	bl	8008694 <_DMA2D_ExecOperation>
  
  /* Take the TransferInProgress flag */ 
  TransferInProgress = 1;
 800874a:	4b15      	ldr	r3, [pc, #84]	; (80087a0 <_DMA_CopyRGB565+0x68>)
 800874c:	2201      	movs	r2, #1
 800874e:	701a      	strb	r2, [r3, #0]

  /* Setup DMA2D Configuration */  
  DMA2D->CR      = 0x00000000UL | (1 << 9);
 8008750:	4b14      	ldr	r3, [pc, #80]	; (80087a4 <_DMA_CopyRGB565+0x6c>)
 8008752:	f44f 7200 	mov.w	r2, #512	; 0x200
 8008756:	601a      	str	r2, [r3, #0]
  DMA2D->FGMAR   = (U32)pSrc;
 8008758:	4a12      	ldr	r2, [pc, #72]	; (80087a4 <_DMA_CopyRGB565+0x6c>)
 800875a:	68fb      	ldr	r3, [r7, #12]
 800875c:	60d3      	str	r3, [r2, #12]
  DMA2D->OMAR    = (U32)pDst;
 800875e:	4a11      	ldr	r2, [pc, #68]	; (80087a4 <_DMA_CopyRGB565+0x6c>)
 8008760:	68bb      	ldr	r3, [r7, #8]
 8008762:	63d3      	str	r3, [r2, #60]	; 0x3c
  DMA2D->FGOR    = OffLineSrc;
 8008764:	4a0f      	ldr	r2, [pc, #60]	; (80087a4 <_DMA_CopyRGB565+0x6c>)
 8008766:	69bb      	ldr	r3, [r7, #24]
 8008768:	6113      	str	r3, [r2, #16]
  DMA2D->OOR     = OffLineDst;
 800876a:	4a0e      	ldr	r2, [pc, #56]	; (80087a4 <_DMA_CopyRGB565+0x6c>)
 800876c:	69fb      	ldr	r3, [r7, #28]
 800876e:	6413      	str	r3, [r2, #64]	; 0x40
  DMA2D->FGPFCCR = LTDC_PIXEL_FORMAT_RGB565;
 8008770:	4b0c      	ldr	r3, [pc, #48]	; (80087a4 <_DMA_CopyRGB565+0x6c>)
 8008772:	2202      	movs	r2, #2
 8008774:	61da      	str	r2, [r3, #28]
  DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize;
 8008776:	687b      	ldr	r3, [r7, #4]
 8008778:	041b      	lsls	r3, r3, #16
 800877a:	4619      	mov	r1, r3
 800877c:	683b      	ldr	r3, [r7, #0]
 800877e:	b29b      	uxth	r3, r3
 8008780:	4a08      	ldr	r2, [pc, #32]	; (80087a4 <_DMA_CopyRGB565+0x6c>)
 8008782:	430b      	orrs	r3, r1
 8008784:	6453      	str	r3, [r2, #68]	; 0x44
  
  /* Start the transfer, and enable the transfer complete IT */
  DMA2D->CR     |= (1|DMA2D_IT_TC);
 8008786:	4b07      	ldr	r3, [pc, #28]	; (80087a4 <_DMA_CopyRGB565+0x6c>)
 8008788:	681a      	ldr	r2, [r3, #0]
 800878a:	4906      	ldr	r1, [pc, #24]	; (80087a4 <_DMA_CopyRGB565+0x6c>)
 800878c:	f240 2301 	movw	r3, #513	; 0x201
 8008790:	4313      	orrs	r3, r2
 8008792:	600b      	str	r3, [r1, #0]
  
  /* Wait for the end of the transfer */
  _DMA2D_ExecOperation(); 
 8008794:	f7ff ff7e 	bl	8008694 <_DMA2D_ExecOperation>
}
 8008798:	bf00      	nop
 800879a:	3710      	adds	r7, #16
 800879c:	46bd      	mov	sp, r7
 800879e:	bd80      	pop	{r7, pc}
 80087a0:	20000fb4 	.word	0x20000fb4
 80087a4:	4002b000 	.word	0x4002b000

080087a8 <_DMA_Fill>:
  * @param  OffLineDst: Destination Line offset
  * @param  ColorIndex: Color to be used for the Fill operation
  * @retval None
  */
static void _DMA_Fill(int LayerIndex, void * pDst, int xSize, int ySize, int OffLine, U32 ColorIndex) 
{
 80087a8:	b580      	push	{r7, lr}
 80087aa:	b086      	sub	sp, #24
 80087ac:	af00      	add	r7, sp, #0
 80087ae:	60f8      	str	r0, [r7, #12]
 80087b0:	60b9      	str	r1, [r7, #8]
 80087b2:	607a      	str	r2, [r7, #4]
 80087b4:	603b      	str	r3, [r7, #0]
  U32 PixelFormat;
  
  /* Wait if there is a transfer in progress */
  _DMA2D_ExecOperation();
 80087b6:	f7ff ff6d 	bl	8008694 <_DMA2D_ExecOperation>
  
  /* Take the TransferInProgress flag */
  TransferInProgress = 1;
 80087ba:	4b15      	ldr	r3, [pc, #84]	; (8008810 <_DMA_Fill+0x68>)
 80087bc:	2201      	movs	r2, #1
 80087be:	701a      	strb	r2, [r3, #0]

  /* Get the layer pixel format used */
  PixelFormat = _GetPixelformat(LayerIndex);
 80087c0:	68f8      	ldr	r0, [r7, #12]
 80087c2:	f7ff fcdb 	bl	800817c <_GetPixelformat>
 80087c6:	6178      	str	r0, [r7, #20]

  /* Setup DMA2D Configuration */  
  DMA2D->CR      = 0x00030000UL | (1 << 9);
 80087c8:	4b12      	ldr	r3, [pc, #72]	; (8008814 <_DMA_Fill+0x6c>)
 80087ca:	4a13      	ldr	r2, [pc, #76]	; (8008818 <_DMA_Fill+0x70>)
 80087cc:	601a      	str	r2, [r3, #0]
  DMA2D->OCOLR   = ColorIndex;
 80087ce:	4a11      	ldr	r2, [pc, #68]	; (8008814 <_DMA_Fill+0x6c>)
 80087d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80087d2:	6393      	str	r3, [r2, #56]	; 0x38
  DMA2D->OMAR    = (U32)pDst;
 80087d4:	4a0f      	ldr	r2, [pc, #60]	; (8008814 <_DMA_Fill+0x6c>)
 80087d6:	68bb      	ldr	r3, [r7, #8]
 80087d8:	63d3      	str	r3, [r2, #60]	; 0x3c
  DMA2D->OOR     = OffLine;
 80087da:	4a0e      	ldr	r2, [pc, #56]	; (8008814 <_DMA_Fill+0x6c>)
 80087dc:	6a3b      	ldr	r3, [r7, #32]
 80087de:	6413      	str	r3, [r2, #64]	; 0x40
  DMA2D->OPFCCR  = PixelFormat;
 80087e0:	4a0c      	ldr	r2, [pc, #48]	; (8008814 <_DMA_Fill+0x6c>)
 80087e2:	697b      	ldr	r3, [r7, #20]
 80087e4:	6353      	str	r3, [r2, #52]	; 0x34
  DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize;
 80087e6:	687b      	ldr	r3, [r7, #4]
 80087e8:	041b      	lsls	r3, r3, #16
 80087ea:	4619      	mov	r1, r3
 80087ec:	683b      	ldr	r3, [r7, #0]
 80087ee:	b29b      	uxth	r3, r3
 80087f0:	4a08      	ldr	r2, [pc, #32]	; (8008814 <_DMA_Fill+0x6c>)
 80087f2:	430b      	orrs	r3, r1
 80087f4:	6453      	str	r3, [r2, #68]	; 0x44
  
  /* Start the transfer, and enable the transfer complete IT */
  DMA2D->CR     |= (1|DMA2D_IT_TC);
 80087f6:	4b07      	ldr	r3, [pc, #28]	; (8008814 <_DMA_Fill+0x6c>)
 80087f8:	681a      	ldr	r2, [r3, #0]
 80087fa:	4906      	ldr	r1, [pc, #24]	; (8008814 <_DMA_Fill+0x6c>)
 80087fc:	f240 2301 	movw	r3, #513	; 0x201
 8008800:	4313      	orrs	r3, r2
 8008802:	600b      	str	r3, [r1, #0]
  
  /* Wait for the end of the transfer */
  _DMA2D_ExecOperation(); 
 8008804:	f7ff ff46 	bl	8008694 <_DMA2D_ExecOperation>
}
 8008808:	bf00      	nop
 800880a:	3718      	adds	r7, #24
 800880c:	46bd      	mov	sp, r7
 800880e:	bd80      	pop	{r7, pc}
 8008810:	20000fb4 	.word	0x20000fb4
 8008814:	4002b000 	.word	0x4002b000
 8008818:	00030200 	.word	0x00030200

0800881c <_DMA_AlphaBlendingBulk>:
  * @param  pColorDst: Destination color
  * @param  NumItems : Number of lines
  * @retval None
  */
static void _DMA_AlphaBlendingBulk(LCD_COLOR * pColorFG, LCD_COLOR * pColorBG, LCD_COLOR * pColorDst, U32 NumItems) 
{  
 800881c:	b580      	push	{r7, lr}
 800881e:	b084      	sub	sp, #16
 8008820:	af00      	add	r7, sp, #0
 8008822:	60f8      	str	r0, [r7, #12]
 8008824:	60b9      	str	r1, [r7, #8]
 8008826:	607a      	str	r2, [r7, #4]
 8008828:	603b      	str	r3, [r7, #0]
  /* Wait if there is a transfer in progress */
  _DMA2D_ExecOperation();
 800882a:	f7ff ff33 	bl	8008694 <_DMA2D_ExecOperation>
  
  /* Take the TransferInProgress flag */
  TransferInProgress = 1;
 800882e:	4b1a      	ldr	r3, [pc, #104]	; (8008898 <_DMA_AlphaBlendingBulk+0x7c>)
 8008830:	2201      	movs	r2, #1
 8008832:	701a      	strb	r2, [r3, #0]
  
  /* Setup DMA2D Configuration */  
  DMA2D->CR      = 0x00020000UL | (1 << 9);
 8008834:	4b19      	ldr	r3, [pc, #100]	; (800889c <_DMA_AlphaBlendingBulk+0x80>)
 8008836:	4a1a      	ldr	r2, [pc, #104]	; (80088a0 <_DMA_AlphaBlendingBulk+0x84>)
 8008838:	601a      	str	r2, [r3, #0]
  DMA2D->FGMAR   = (U32)pColorFG;
 800883a:	4a18      	ldr	r2, [pc, #96]	; (800889c <_DMA_AlphaBlendingBulk+0x80>)
 800883c:	68fb      	ldr	r3, [r7, #12]
 800883e:	60d3      	str	r3, [r2, #12]
  DMA2D->BGMAR   = (U32)pColorBG;
 8008840:	4a16      	ldr	r2, [pc, #88]	; (800889c <_DMA_AlphaBlendingBulk+0x80>)
 8008842:	68bb      	ldr	r3, [r7, #8]
 8008844:	6153      	str	r3, [r2, #20]
  DMA2D->OMAR    = (U32)pColorDst;
 8008846:	4a15      	ldr	r2, [pc, #84]	; (800889c <_DMA_AlphaBlendingBulk+0x80>)
 8008848:	687b      	ldr	r3, [r7, #4]
 800884a:	63d3      	str	r3, [r2, #60]	; 0x3c
  DMA2D->FGOR    = 0;
 800884c:	4b13      	ldr	r3, [pc, #76]	; (800889c <_DMA_AlphaBlendingBulk+0x80>)
 800884e:	2200      	movs	r2, #0
 8008850:	611a      	str	r2, [r3, #16]
  DMA2D->BGOR    = 0;
 8008852:	4b12      	ldr	r3, [pc, #72]	; (800889c <_DMA_AlphaBlendingBulk+0x80>)
 8008854:	2200      	movs	r2, #0
 8008856:	619a      	str	r2, [r3, #24]
  DMA2D->OOR     = 0;
 8008858:	4b10      	ldr	r3, [pc, #64]	; (800889c <_DMA_AlphaBlendingBulk+0x80>)
 800885a:	2200      	movs	r2, #0
 800885c:	641a      	str	r2, [r3, #64]	; 0x40
  DMA2D->FGPFCCR = LTDC_PIXEL_FORMAT_ARGB8888;
 800885e:	4b0f      	ldr	r3, [pc, #60]	; (800889c <_DMA_AlphaBlendingBulk+0x80>)
 8008860:	2200      	movs	r2, #0
 8008862:	61da      	str	r2, [r3, #28]
  DMA2D->BGPFCCR = LTDC_PIXEL_FORMAT_ARGB8888;
 8008864:	4b0d      	ldr	r3, [pc, #52]	; (800889c <_DMA_AlphaBlendingBulk+0x80>)
 8008866:	2200      	movs	r2, #0
 8008868:	625a      	str	r2, [r3, #36]	; 0x24
  DMA2D->OPFCCR  = LTDC_PIXEL_FORMAT_ARGB8888;
 800886a:	4b0c      	ldr	r3, [pc, #48]	; (800889c <_DMA_AlphaBlendingBulk+0x80>)
 800886c:	2200      	movs	r2, #0
 800886e:	635a      	str	r2, [r3, #52]	; 0x34
  DMA2D->NLR     = (U32)(NumItems << 16) | 1;
 8008870:	683b      	ldr	r3, [r7, #0]
 8008872:	041b      	lsls	r3, r3, #16
 8008874:	4a09      	ldr	r2, [pc, #36]	; (800889c <_DMA_AlphaBlendingBulk+0x80>)
 8008876:	f043 0301 	orr.w	r3, r3, #1
 800887a:	6453      	str	r3, [r2, #68]	; 0x44
  
  /* Start the transfer, and enable the transfer complete IT */
  DMA2D->CR     |= (1|DMA2D_IT_TC);
 800887c:	4b07      	ldr	r3, [pc, #28]	; (800889c <_DMA_AlphaBlendingBulk+0x80>)
 800887e:	681a      	ldr	r2, [r3, #0]
 8008880:	4906      	ldr	r1, [pc, #24]	; (800889c <_DMA_AlphaBlendingBulk+0x80>)
 8008882:	f240 2301 	movw	r3, #513	; 0x201
 8008886:	4313      	orrs	r3, r2
 8008888:	600b      	str	r3, [r1, #0]
  
  /* Wait for the end of the transfer */
  _DMA2D_ExecOperation(); 
 800888a:	f7ff ff03 	bl	8008694 <_DMA2D_ExecOperation>
}
 800888e:	bf00      	nop
 8008890:	3710      	adds	r7, #16
 8008892:	46bd      	mov	sp, r7
 8008894:	bd80      	pop	{r7, pc}
 8008896:	bf00      	nop
 8008898:	20000fb4 	.word	0x20000fb4
 800889c:	4002b000 	.word	0x4002b000
 80088a0:	00020200 	.word	0x00020200

080088a4 <_DMA_MixColorsBulk>:
  * @param  Intens   : Color intensity
  * @param  NumItems : Number of lines
  * @retval None
  */
static void _DMA_MixColorsBulk(LCD_COLOR * pColorFG, LCD_COLOR * pColorBG, LCD_COLOR * pColorDst, U8 Intens, U32 NumItems) 
{
 80088a4:	b580      	push	{r7, lr}
 80088a6:	b084      	sub	sp, #16
 80088a8:	af00      	add	r7, sp, #0
 80088aa:	60f8      	str	r0, [r7, #12]
 80088ac:	60b9      	str	r1, [r7, #8]
 80088ae:	607a      	str	r2, [r7, #4]
 80088b0:	70fb      	strb	r3, [r7, #3]
  /* Wait if there is a transfer in progress */
  _DMA2D_ExecOperation();
 80088b2:	f7ff feef 	bl	8008694 <_DMA2D_ExecOperation>
  
  /* Take the TransferInProgress flag */
  TransferInProgress = 1;
 80088b6:	4b18      	ldr	r3, [pc, #96]	; (8008918 <_DMA_MixColorsBulk+0x74>)
 80088b8:	2201      	movs	r2, #1
 80088ba:	701a      	strb	r2, [r3, #0]

  /* Setup DMA2D Configuration */
  DMA2D->CR      = 0x00020000UL | (1 << 9);
 80088bc:	4b17      	ldr	r3, [pc, #92]	; (800891c <_DMA_MixColorsBulk+0x78>)
 80088be:	4a18      	ldr	r2, [pc, #96]	; (8008920 <_DMA_MixColorsBulk+0x7c>)
 80088c0:	601a      	str	r2, [r3, #0]
  DMA2D->FGMAR   = (U32)pColorFG;
 80088c2:	4a16      	ldr	r2, [pc, #88]	; (800891c <_DMA_MixColorsBulk+0x78>)
 80088c4:	68fb      	ldr	r3, [r7, #12]
 80088c6:	60d3      	str	r3, [r2, #12]
  DMA2D->BGMAR   = (U32)pColorBG;
 80088c8:	4a14      	ldr	r2, [pc, #80]	; (800891c <_DMA_MixColorsBulk+0x78>)
 80088ca:	68bb      	ldr	r3, [r7, #8]
 80088cc:	6153      	str	r3, [r2, #20]
  DMA2D->OMAR    = (U32)pColorDst;
 80088ce:	4a13      	ldr	r2, [pc, #76]	; (800891c <_DMA_MixColorsBulk+0x78>)
 80088d0:	687b      	ldr	r3, [r7, #4]
 80088d2:	63d3      	str	r3, [r2, #60]	; 0x3c
  DMA2D->FGPFCCR = LTDC_PIXEL_FORMAT_ARGB8888
                 | (1UL << 16)
                 | ((U32)Intens << 24);
 80088d4:	78fb      	ldrb	r3, [r7, #3]
 80088d6:	061b      	lsls	r3, r3, #24
  DMA2D->FGPFCCR = LTDC_PIXEL_FORMAT_ARGB8888
 80088d8:	4a10      	ldr	r2, [pc, #64]	; (800891c <_DMA_MixColorsBulk+0x78>)
                 | ((U32)Intens << 24);
 80088da:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  DMA2D->FGPFCCR = LTDC_PIXEL_FORMAT_ARGB8888
 80088de:	61d3      	str	r3, [r2, #28]
  DMA2D->BGPFCCR = LTDC_PIXEL_FORMAT_ARGB8888
                 | (0UL << 16)
                 | ((U32)(255 - Intens) << 24);
 80088e0:	78fb      	ldrb	r3, [r7, #3]
 80088e2:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
  DMA2D->BGPFCCR = LTDC_PIXEL_FORMAT_ARGB8888
 80088e6:	4a0d      	ldr	r2, [pc, #52]	; (800891c <_DMA_MixColorsBulk+0x78>)
                 | ((U32)(255 - Intens) << 24);
 80088e8:	061b      	lsls	r3, r3, #24
  DMA2D->BGPFCCR = LTDC_PIXEL_FORMAT_ARGB8888
 80088ea:	6253      	str	r3, [r2, #36]	; 0x24
  DMA2D->OPFCCR  = LTDC_PIXEL_FORMAT_ARGB8888;
 80088ec:	4b0b      	ldr	r3, [pc, #44]	; (800891c <_DMA_MixColorsBulk+0x78>)
 80088ee:	2200      	movs	r2, #0
 80088f0:	635a      	str	r2, [r3, #52]	; 0x34
  DMA2D->NLR     = (U32)(NumItems << 16) | 1;
 80088f2:	69bb      	ldr	r3, [r7, #24]
 80088f4:	041b      	lsls	r3, r3, #16
 80088f6:	4a09      	ldr	r2, [pc, #36]	; (800891c <_DMA_MixColorsBulk+0x78>)
 80088f8:	f043 0301 	orr.w	r3, r3, #1
 80088fc:	6453      	str	r3, [r2, #68]	; 0x44
  
  /* Start the transfer, and enable the transfer complete IT */
  DMA2D->CR     |= (1|DMA2D_IT_TC);
 80088fe:	4b07      	ldr	r3, [pc, #28]	; (800891c <_DMA_MixColorsBulk+0x78>)
 8008900:	681a      	ldr	r2, [r3, #0]
 8008902:	4906      	ldr	r1, [pc, #24]	; (800891c <_DMA_MixColorsBulk+0x78>)
 8008904:	f240 2301 	movw	r3, #513	; 0x201
 8008908:	4313      	orrs	r3, r2
 800890a:	600b      	str	r3, [r1, #0]

  /* Wait for the end of the transfer */
  _DMA2D_ExecOperation();
 800890c:	f7ff fec2 	bl	8008694 <_DMA2D_ExecOperation>
}
 8008910:	bf00      	nop
 8008912:	3710      	adds	r7, #16
 8008914:	46bd      	mov	sp, r7
 8008916:	bd80      	pop	{r7, pc}
 8008918:	20000fb4 	.word	0x20000fb4
 800891c:	4002b000 	.word	0x4002b000
 8008920:	00020200 	.word	0x00020200

08008924 <_DMA_ConvertColor>:
  * @param  PixelFormatDst: Destination pixel format
  * @param  NumItems      : Number of lines
  * @retval None
  */
static void _DMA_ConvertColor(void * pSrc, void * pDst,  U32 PixelFormatSrc, U32 PixelFormatDst, U32 NumItems) 
{
 8008924:	b580      	push	{r7, lr}
 8008926:	b084      	sub	sp, #16
 8008928:	af00      	add	r7, sp, #0
 800892a:	60f8      	str	r0, [r7, #12]
 800892c:	60b9      	str	r1, [r7, #8]
 800892e:	607a      	str	r2, [r7, #4]
 8008930:	603b      	str	r3, [r7, #0]
  /* Wait if there is a transfer in progress */
  _DMA2D_ExecOperation();
 8008932:	f7ff feaf 	bl	8008694 <_DMA2D_ExecOperation>
  
  /* Take the TransferInProgress flag */
  TransferInProgress = 1;
 8008936:	4b16      	ldr	r3, [pc, #88]	; (8008990 <_DMA_ConvertColor+0x6c>)
 8008938:	2201      	movs	r2, #1
 800893a:	701a      	strb	r2, [r3, #0]

  /* Setup DMA2D Configuration */
  DMA2D->CR      = 0x00010000UL | (1 << 9);
 800893c:	4b15      	ldr	r3, [pc, #84]	; (8008994 <_DMA_ConvertColor+0x70>)
 800893e:	f44f 3281 	mov.w	r2, #66048	; 0x10200
 8008942:	601a      	str	r2, [r3, #0]
  DMA2D->FGMAR   = (U32)pSrc;
 8008944:	4a13      	ldr	r2, [pc, #76]	; (8008994 <_DMA_ConvertColor+0x70>)
 8008946:	68fb      	ldr	r3, [r7, #12]
 8008948:	60d3      	str	r3, [r2, #12]
  DMA2D->OMAR    = (U32)pDst;
 800894a:	4a12      	ldr	r2, [pc, #72]	; (8008994 <_DMA_ConvertColor+0x70>)
 800894c:	68bb      	ldr	r3, [r7, #8]
 800894e:	63d3      	str	r3, [r2, #60]	; 0x3c
  DMA2D->FGOR    = 0;
 8008950:	4b10      	ldr	r3, [pc, #64]	; (8008994 <_DMA_ConvertColor+0x70>)
 8008952:	2200      	movs	r2, #0
 8008954:	611a      	str	r2, [r3, #16]
  DMA2D->OOR     = 0;
 8008956:	4b0f      	ldr	r3, [pc, #60]	; (8008994 <_DMA_ConvertColor+0x70>)
 8008958:	2200      	movs	r2, #0
 800895a:	641a      	str	r2, [r3, #64]	; 0x40
  DMA2D->FGPFCCR = PixelFormatSrc;
 800895c:	4a0d      	ldr	r2, [pc, #52]	; (8008994 <_DMA_ConvertColor+0x70>)
 800895e:	687b      	ldr	r3, [r7, #4]
 8008960:	61d3      	str	r3, [r2, #28]
  DMA2D->OPFCCR  = PixelFormatDst;
 8008962:	4a0c      	ldr	r2, [pc, #48]	; (8008994 <_DMA_ConvertColor+0x70>)
 8008964:	683b      	ldr	r3, [r7, #0]
 8008966:	6353      	str	r3, [r2, #52]	; 0x34
  DMA2D->NLR     = (U32)(NumItems << 16) | 1;
 8008968:	69bb      	ldr	r3, [r7, #24]
 800896a:	041b      	lsls	r3, r3, #16
 800896c:	4a09      	ldr	r2, [pc, #36]	; (8008994 <_DMA_ConvertColor+0x70>)
 800896e:	f043 0301 	orr.w	r3, r3, #1
 8008972:	6453      	str	r3, [r2, #68]	; 0x44
  
  /* Start the transfer, and enable the transfer complete IT */
  DMA2D->CR     |= (1|DMA2D_IT_TC);
 8008974:	4b07      	ldr	r3, [pc, #28]	; (8008994 <_DMA_ConvertColor+0x70>)
 8008976:	681a      	ldr	r2, [r3, #0]
 8008978:	4906      	ldr	r1, [pc, #24]	; (8008994 <_DMA_ConvertColor+0x70>)
 800897a:	f240 2301 	movw	r3, #513	; 0x201
 800897e:	4313      	orrs	r3, r2
 8008980:	600b      	str	r3, [r1, #0]
  
  /* Wait for the end of the transfer */
  _DMA2D_ExecOperation();  
 8008982:	f7ff fe87 	bl	8008694 <_DMA2D_ExecOperation>
}
 8008986:	bf00      	nop
 8008988:	3710      	adds	r7, #16
 800898a:	46bd      	mov	sp, r7
 800898c:	bd80      	pop	{r7, pc}
 800898e:	bf00      	nop
 8008990:	20000fb4 	.word	0x20000fb4
 8008994:	4002b000 	.word	0x4002b000

08008998 <_DMA_DrawBitmapL8>:
  * @param  xSize         : Picture horizontal size
  * @param  ySize         : Picture vertical size
  * @retval None
  */
static void _DMA_DrawBitmapL8(void * pSrc, void * pDst,  U32 OffSrc, U32 OffDst, U32 PixelFormatDst, U32 xSize, U32 ySize) 
{
 8008998:	b580      	push	{r7, lr}
 800899a:	b084      	sub	sp, #16
 800899c:	af00      	add	r7, sp, #0
 800899e:	60f8      	str	r0, [r7, #12]
 80089a0:	60b9      	str	r1, [r7, #8]
 80089a2:	607a      	str	r2, [r7, #4]
 80089a4:	603b      	str	r3, [r7, #0]
  /* Wait if there is a transfer in progress */
  _DMA2D_ExecOperation();
 80089a6:	f7ff fe75 	bl	8008694 <_DMA2D_ExecOperation>
  
  /* Take the TransferInProgress flag */
  TransferInProgress = 1;
 80089aa:	4b16      	ldr	r3, [pc, #88]	; (8008a04 <_DMA_DrawBitmapL8+0x6c>)
 80089ac:	2201      	movs	r2, #1
 80089ae:	701a      	strb	r2, [r3, #0]

  /* Setup DMA2D Configuration */
  DMA2D->CR      = 0x00010000UL | (1 << 9);
 80089b0:	4b15      	ldr	r3, [pc, #84]	; (8008a08 <_DMA_DrawBitmapL8+0x70>)
 80089b2:	f44f 3281 	mov.w	r2, #66048	; 0x10200
 80089b6:	601a      	str	r2, [r3, #0]
  DMA2D->FGMAR   = (U32)pSrc;
 80089b8:	4a13      	ldr	r2, [pc, #76]	; (8008a08 <_DMA_DrawBitmapL8+0x70>)
 80089ba:	68fb      	ldr	r3, [r7, #12]
 80089bc:	60d3      	str	r3, [r2, #12]
  DMA2D->OMAR    = (U32)pDst;
 80089be:	4a12      	ldr	r2, [pc, #72]	; (8008a08 <_DMA_DrawBitmapL8+0x70>)
 80089c0:	68bb      	ldr	r3, [r7, #8]
 80089c2:	63d3      	str	r3, [r2, #60]	; 0x3c
  DMA2D->FGOR    = OffSrc;
 80089c4:	4a10      	ldr	r2, [pc, #64]	; (8008a08 <_DMA_DrawBitmapL8+0x70>)
 80089c6:	687b      	ldr	r3, [r7, #4]
 80089c8:	6113      	str	r3, [r2, #16]
  DMA2D->OOR     = OffDst;
 80089ca:	4a0f      	ldr	r2, [pc, #60]	; (8008a08 <_DMA_DrawBitmapL8+0x70>)
 80089cc:	683b      	ldr	r3, [r7, #0]
 80089ce:	6413      	str	r3, [r2, #64]	; 0x40
  DMA2D->FGPFCCR = LTDC_PIXEL_FORMAT_L8;
 80089d0:	4b0d      	ldr	r3, [pc, #52]	; (8008a08 <_DMA_DrawBitmapL8+0x70>)
 80089d2:	2205      	movs	r2, #5
 80089d4:	61da      	str	r2, [r3, #28]
  DMA2D->OPFCCR  = PixelFormatDst;
 80089d6:	4a0c      	ldr	r2, [pc, #48]	; (8008a08 <_DMA_DrawBitmapL8+0x70>)
 80089d8:	69bb      	ldr	r3, [r7, #24]
 80089da:	6353      	str	r3, [r2, #52]	; 0x34
  DMA2D->NLR     = (U32)(xSize << 16) | ySize;
 80089dc:	69fb      	ldr	r3, [r7, #28]
 80089de:	041a      	lsls	r2, r3, #16
 80089e0:	4909      	ldr	r1, [pc, #36]	; (8008a08 <_DMA_DrawBitmapL8+0x70>)
 80089e2:	6a3b      	ldr	r3, [r7, #32]
 80089e4:	4313      	orrs	r3, r2
 80089e6:	644b      	str	r3, [r1, #68]	; 0x44
  
  /* Start the transfer, and enable the transfer complete IT */
  DMA2D->CR     |= (1|DMA2D_IT_TC);
 80089e8:	4b07      	ldr	r3, [pc, #28]	; (8008a08 <_DMA_DrawBitmapL8+0x70>)
 80089ea:	681a      	ldr	r2, [r3, #0]
 80089ec:	4906      	ldr	r1, [pc, #24]	; (8008a08 <_DMA_DrawBitmapL8+0x70>)
 80089ee:	f240 2301 	movw	r3, #513	; 0x201
 80089f2:	4313      	orrs	r3, r2
 80089f4:	600b      	str	r3, [r1, #0]
  
  /* Wait for the end of the transfer */
  _DMA2D_ExecOperation(); 
 80089f6:	f7ff fe4d 	bl	8008694 <_DMA2D_ExecOperation>
}
 80089fa:	bf00      	nop
 80089fc:	3710      	adds	r7, #16
 80089fe:	46bd      	mov	sp, r7
 8008a00:	bd80      	pop	{r7, pc}
 8008a02:	bf00      	nop
 8008a04:	20000fb4 	.word	0x20000fb4
 8008a08:	4002b000 	.word	0x4002b000

08008a0c <_DMA_DrawBitmapA4>:
  * @param  xSize         : Picture horizontal size
  * @param  ySize         : Picture vertical size
  * @retval int
  */
static int _DMA_DrawBitmapA4(void * pSrc, void * pDst,  U32 OffSrc, U32 OffDst, U32 PixelFormatDst, U32 xSize, U32 ySize) 
{
 8008a0c:	b580      	push	{r7, lr}
 8008a0e:	b08a      	sub	sp, #40	; 0x28
 8008a10:	af00      	add	r7, sp, #0
 8008a12:	60f8      	str	r0, [r7, #12]
 8008a14:	60b9      	str	r1, [r7, #8]
 8008a16:	607a      	str	r2, [r7, #4]
 8008a18:	603b      	str	r3, [r7, #0]
  U8 * pRD;
  U8 * pWR;
  U32 NumBytes, Color, Index;

  /* Check size of conversion buffer */
  NumBytes = ((xSize + 1) & ~1) * ySize;
 8008a1a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8008a1c:	3301      	adds	r3, #1
 8008a1e:	f023 0201 	bic.w	r2, r3, #1
 8008a22:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008a24:	fb02 f303 	mul.w	r3, r2, r3
 8008a28:	61fb      	str	r3, [r7, #28]
  if ((NumBytes > sizeof(_aBuffer)) || (NumBytes == 0)) 
 8008a2a:	69fb      	ldr	r3, [r7, #28]
 8008a2c:	f5b3 4fb4 	cmp.w	r3, #23040	; 0x5a00
 8008a30:	d802      	bhi.n	8008a38 <_DMA_DrawBitmapA4+0x2c>
 8008a32:	69fb      	ldr	r3, [r7, #28]
 8008a34:	2b00      	cmp	r3, #0
 8008a36:	d101      	bne.n	8008a3c <_DMA_DrawBitmapA4+0x30>
  {
    return 1;
 8008a38:	2301      	movs	r3, #1
 8008a3a:	e05b      	b.n	8008af4 <_DMA_DrawBitmapA4+0xe8>
  }
  
  /* Wait if there is a transfer in progress */ 
  _DMA2D_ExecOperation();
 8008a3c:	f7ff fe2a 	bl	8008694 <_DMA2D_ExecOperation>
  
  /* Take the TransferInProgress flag */
  TransferInProgress = 1;
 8008a40:	4b2e      	ldr	r3, [pc, #184]	; (8008afc <_DMA_DrawBitmapA4+0xf0>)
 8008a42:	2201      	movs	r2, #1
 8008a44:	701a      	strb	r2, [r3, #0]

  /* Conversion (swapping nibbles) */
  pWR = (U8 *)_aBuffer;
 8008a46:	4b2e      	ldr	r3, [pc, #184]	; (8008b00 <_DMA_DrawBitmapA4+0xf4>)
 8008a48:	623b      	str	r3, [r7, #32]
  pRD = (U8 *)pSrc;
 8008a4a:	68fb      	ldr	r3, [r7, #12]
 8008a4c:	627b      	str	r3, [r7, #36]	; 0x24
  do 
  {
    *pWR++ = _aMirror[*pRD++];
 8008a4e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008a50:	1c5a      	adds	r2, r3, #1
 8008a52:	627a      	str	r2, [r7, #36]	; 0x24
 8008a54:	781b      	ldrb	r3, [r3, #0]
 8008a56:	4619      	mov	r1, r3
 8008a58:	6a3b      	ldr	r3, [r7, #32]
 8008a5a:	1c5a      	adds	r2, r3, #1
 8008a5c:	623a      	str	r2, [r7, #32]
 8008a5e:	4a29      	ldr	r2, [pc, #164]	; (8008b04 <_DMA_DrawBitmapA4+0xf8>)
 8008a60:	5c52      	ldrb	r2, [r2, r1]
 8008a62:	701a      	strb	r2, [r3, #0]
  } while (--NumBytes);
 8008a64:	69fb      	ldr	r3, [r7, #28]
 8008a66:	3b01      	subs	r3, #1
 8008a68:	61fb      	str	r3, [r7, #28]
 8008a6a:	69fb      	ldr	r3, [r7, #28]
 8008a6c:	2b00      	cmp	r3, #0
 8008a6e:	d1ee      	bne.n	8008a4e <_DMA_DrawBitmapA4+0x42>
  
  /* Get current drawing color (ARGB) */
  Index = LCD_GetColorIndex();
 8008a70:	f004 fa10 	bl	800ce94 <LCD_GetColorIndex>
 8008a74:	4603      	mov	r3, r0
 8008a76:	61bb      	str	r3, [r7, #24]
  Color = LCD_Index2Color(Index);
 8008a78:	69bb      	ldr	r3, [r7, #24]
 8008a7a:	4618      	mov	r0, r3
 8008a7c:	f004 f88c 	bl	800cb98 <LCD_Index2Color>
 8008a80:	6178      	str	r0, [r7, #20]

  /* Setup DMA2D Configuration */
  DMA2D->CR = 0x00020000UL;
 8008a82:	4b21      	ldr	r3, [pc, #132]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008a84:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8008a88:	601a      	str	r2, [r3, #0]
  DMA2D->FGCOLR  = Color;
 8008a8a:	4a1f      	ldr	r2, [pc, #124]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008a8c:	697b      	ldr	r3, [r7, #20]
 8008a8e:	6213      	str	r3, [r2, #32]
  DMA2D->FGMAR   = (U32)_aBuffer;
 8008a90:	4b1d      	ldr	r3, [pc, #116]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008a92:	4a1b      	ldr	r2, [pc, #108]	; (8008b00 <_DMA_DrawBitmapA4+0xf4>)
 8008a94:	60da      	str	r2, [r3, #12]
  DMA2D->FGOR    = 0;
 8008a96:	4b1c      	ldr	r3, [pc, #112]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008a98:	2200      	movs	r2, #0
 8008a9a:	611a      	str	r2, [r3, #16]
  DMA2D->FGPFCCR = 0xA;
 8008a9c:	4b1a      	ldr	r3, [pc, #104]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008a9e:	220a      	movs	r2, #10
 8008aa0:	61da      	str	r2, [r3, #28]
  DMA2D->NLR     = (U32)((xSize + OffSrc) << 16) | ySize;
 8008aa2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8008aa4:	687b      	ldr	r3, [r7, #4]
 8008aa6:	4413      	add	r3, r2
 8008aa8:	041a      	lsls	r2, r3, #16
 8008aaa:	4917      	ldr	r1, [pc, #92]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008aac:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008aae:	4313      	orrs	r3, r2
 8008ab0:	644b      	str	r3, [r1, #68]	; 0x44
  DMA2D->BGMAR   = (U32)pDst;
 8008ab2:	4a15      	ldr	r2, [pc, #84]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008ab4:	68bb      	ldr	r3, [r7, #8]
 8008ab6:	6153      	str	r3, [r2, #20]
  DMA2D->BGOR    = OffDst - OffSrc;
 8008ab8:	4913      	ldr	r1, [pc, #76]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008aba:	683a      	ldr	r2, [r7, #0]
 8008abc:	687b      	ldr	r3, [r7, #4]
 8008abe:	1ad3      	subs	r3, r2, r3
 8008ac0:	618b      	str	r3, [r1, #24]
  DMA2D->BGPFCCR = PixelFormatDst;
 8008ac2:	4a11      	ldr	r2, [pc, #68]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008ac4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008ac6:	6253      	str	r3, [r2, #36]	; 0x24
  DMA2D->OMAR    = DMA2D->BGMAR;
 8008ac8:	4b0f      	ldr	r3, [pc, #60]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008aca:	4a0f      	ldr	r2, [pc, #60]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008acc:	695b      	ldr	r3, [r3, #20]
 8008ace:	63d3      	str	r3, [r2, #60]	; 0x3c
  DMA2D->OOR     = DMA2D->BGOR;
 8008ad0:	4b0d      	ldr	r3, [pc, #52]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008ad2:	4a0d      	ldr	r2, [pc, #52]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008ad4:	699b      	ldr	r3, [r3, #24]
 8008ad6:	6413      	str	r3, [r2, #64]	; 0x40
  DMA2D->OPFCCR  = DMA2D->BGPFCCR;
 8008ad8:	4b0b      	ldr	r3, [pc, #44]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008ada:	4a0b      	ldr	r2, [pc, #44]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008adc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008ade:	6353      	str	r3, [r2, #52]	; 0x34
  
  /* Start the transfer, and enable the transfer complete IT */
  DMA2D->CR     |= (1|DMA2D_IT_TC);
 8008ae0:	4b09      	ldr	r3, [pc, #36]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008ae2:	681a      	ldr	r2, [r3, #0]
 8008ae4:	4908      	ldr	r1, [pc, #32]	; (8008b08 <_DMA_DrawBitmapA4+0xfc>)
 8008ae6:	f240 2301 	movw	r3, #513	; 0x201
 8008aea:	4313      	orrs	r3, r2
 8008aec:	600b      	str	r3, [r1, #0]
  
  /* Wait for the end of the transfer */
  _DMA2D_ExecOperation(); 
 8008aee:	f7ff fdd1 	bl	8008694 <_DMA2D_ExecOperation>
  
  return 0;
 8008af2:	2300      	movs	r3, #0
}
 8008af4:	4618      	mov	r0, r3
 8008af6:	3728      	adds	r7, #40	; 0x28
 8008af8:	46bd      	mov	sp, r7
 8008afa:	bd80      	pop	{r7, pc}
 8008afc:	20000fb4 	.word	0x20000fb4
 8008b00:	20001024 	.word	0x20001024
 8008b04:	0801e778 	.word	0x0801e778
 8008b08:	4002b000 	.word	0x4002b000

08008b0c <_DMA_DrawAlphaBitmap>:
  * @param  OffLineDst : Destination line offset
  * @param  PixelFormat: Pixel format
  * @retval None
  */
static void _DMA_DrawAlphaBitmap(void * pDst, const void * pSrc, int xSize, int ySize, int OffLineSrc, int OffLineDst, int PixelFormat) 
{
 8008b0c:	b580      	push	{r7, lr}
 8008b0e:	b084      	sub	sp, #16
 8008b10:	af00      	add	r7, sp, #0
 8008b12:	60f8      	str	r0, [r7, #12]
 8008b14:	60b9      	str	r1, [r7, #8]
 8008b16:	607a      	str	r2, [r7, #4]
 8008b18:	603b      	str	r3, [r7, #0]
  /* Wait if there is a transfer in progress */ 
  _DMA2D_ExecOperation();
 8008b1a:	f7ff fdbb 	bl	8008694 <_DMA2D_ExecOperation>
  
  /* Take the TransferInProgress flag */
  TransferInProgress = 1;
 8008b1e:	4b1b      	ldr	r3, [pc, #108]	; (8008b8c <_DMA_DrawAlphaBitmap+0x80>)
 8008b20:	2201      	movs	r2, #1
 8008b22:	701a      	strb	r2, [r3, #0]
  
  /* Setup DMA2D Configuration */ 
  DMA2D->CR      = 0x00020000UL | (1 << 9);
 8008b24:	4b1a      	ldr	r3, [pc, #104]	; (8008b90 <_DMA_DrawAlphaBitmap+0x84>)
 8008b26:	4a1b      	ldr	r2, [pc, #108]	; (8008b94 <_DMA_DrawAlphaBitmap+0x88>)
 8008b28:	601a      	str	r2, [r3, #0]
  DMA2D->FGMAR   = (U32)pSrc;
 8008b2a:	4a19      	ldr	r2, [pc, #100]	; (8008b90 <_DMA_DrawAlphaBitmap+0x84>)
 8008b2c:	68bb      	ldr	r3, [r7, #8]
 8008b2e:	60d3      	str	r3, [r2, #12]
  DMA2D->BGMAR   = (U32)pDst;
 8008b30:	4a17      	ldr	r2, [pc, #92]	; (8008b90 <_DMA_DrawAlphaBitmap+0x84>)
 8008b32:	68fb      	ldr	r3, [r7, #12]
 8008b34:	6153      	str	r3, [r2, #20]
  DMA2D->OMAR    = (U32)pDst;
 8008b36:	4a16      	ldr	r2, [pc, #88]	; (8008b90 <_DMA_DrawAlphaBitmap+0x84>)
 8008b38:	68fb      	ldr	r3, [r7, #12]
 8008b3a:	63d3      	str	r3, [r2, #60]	; 0x3c
  DMA2D->FGOR    = OffLineSrc;
 8008b3c:	4a14      	ldr	r2, [pc, #80]	; (8008b90 <_DMA_DrawAlphaBitmap+0x84>)
 8008b3e:	69bb      	ldr	r3, [r7, #24]
 8008b40:	6113      	str	r3, [r2, #16]
  DMA2D->BGOR    = OffLineDst;
 8008b42:	4a13      	ldr	r2, [pc, #76]	; (8008b90 <_DMA_DrawAlphaBitmap+0x84>)
 8008b44:	69fb      	ldr	r3, [r7, #28]
 8008b46:	6193      	str	r3, [r2, #24]
  DMA2D->OOR     = OffLineDst;
 8008b48:	4a11      	ldr	r2, [pc, #68]	; (8008b90 <_DMA_DrawAlphaBitmap+0x84>)
 8008b4a:	69fb      	ldr	r3, [r7, #28]
 8008b4c:	6413      	str	r3, [r2, #64]	; 0x40
  DMA2D->FGPFCCR = LTDC_PIXEL_FORMAT_ARGB8888;
 8008b4e:	4b10      	ldr	r3, [pc, #64]	; (8008b90 <_DMA_DrawAlphaBitmap+0x84>)
 8008b50:	2200      	movs	r2, #0
 8008b52:	61da      	str	r2, [r3, #28]
  DMA2D->BGPFCCR = PixelFormat;
 8008b54:	4a0e      	ldr	r2, [pc, #56]	; (8008b90 <_DMA_DrawAlphaBitmap+0x84>)
 8008b56:	6a3b      	ldr	r3, [r7, #32]
 8008b58:	6253      	str	r3, [r2, #36]	; 0x24
  DMA2D->OPFCCR  = PixelFormat;
 8008b5a:	4a0d      	ldr	r2, [pc, #52]	; (8008b90 <_DMA_DrawAlphaBitmap+0x84>)
 8008b5c:	6a3b      	ldr	r3, [r7, #32]
 8008b5e:	6353      	str	r3, [r2, #52]	; 0x34
  DMA2D->NLR     = (U32)(xSize << 16) | (U16)ySize;
 8008b60:	687b      	ldr	r3, [r7, #4]
 8008b62:	041b      	lsls	r3, r3, #16
 8008b64:	4619      	mov	r1, r3
 8008b66:	683b      	ldr	r3, [r7, #0]
 8008b68:	b29b      	uxth	r3, r3
 8008b6a:	4a09      	ldr	r2, [pc, #36]	; (8008b90 <_DMA_DrawAlphaBitmap+0x84>)
 8008b6c:	430b      	orrs	r3, r1
 8008b6e:	6453      	str	r3, [r2, #68]	; 0x44

  /* Start the transfer, and enable the transfer complete IT */
  DMA2D->CR     |= (1|DMA2D_IT_TC);
 8008b70:	4b07      	ldr	r3, [pc, #28]	; (8008b90 <_DMA_DrawAlphaBitmap+0x84>)
 8008b72:	681a      	ldr	r2, [r3, #0]
 8008b74:	4906      	ldr	r1, [pc, #24]	; (8008b90 <_DMA_DrawAlphaBitmap+0x84>)
 8008b76:	f240 2301 	movw	r3, #513	; 0x201
 8008b7a:	4313      	orrs	r3, r2
 8008b7c:	600b      	str	r3, [r1, #0]
  
  /* Wait for the end of the transfer */
  _DMA2D_ExecOperation();
 8008b7e:	f7ff fd89 	bl	8008694 <_DMA2D_ExecOperation>
}
 8008b82:	bf00      	nop
 8008b84:	3710      	adds	r7, #16
 8008b86:	46bd      	mov	sp, r7
 8008b88:	bd80      	pop	{r7, pc}
 8008b8a:	bf00      	nop
 8008b8c:	20000fb4 	.word	0x20000fb4
 8008b90:	4002b000 	.word	0x4002b000
 8008b94:	00020200 	.word	0x00020200

08008b98 <_DMA_LoadLUT>:
  * @param  pColor  : CLUT address
  * @param  NumItems: Number of items to load
  * @retval None
  */
static void _DMA_LoadLUT(LCD_COLOR * pColor, U32 NumItems)
{
 8008b98:	b580      	push	{r7, lr}
 8008b9a:	b082      	sub	sp, #8
 8008b9c:	af00      	add	r7, sp, #0
 8008b9e:	6078      	str	r0, [r7, #4]
 8008ba0:	6039      	str	r1, [r7, #0]
  /* Wait if there is a transfer in progress */ 
  _DMA2D_ExecOperation();
 8008ba2:	f7ff fd77 	bl	8008694 <_DMA2D_ExecOperation>
  
  /* Take the TransferInProgress flag */
  TransferInProgress = 1;
 8008ba6:	4b0f      	ldr	r3, [pc, #60]	; (8008be4 <_DMA_LoadLUT+0x4c>)
 8008ba8:	2201      	movs	r2, #1
 8008baa:	701a      	strb	r2, [r3, #0]
  /* Setup DMA2D Configuration */
  DMA2D->FGCMAR  = (U32)pColor;
 8008bac:	4a0e      	ldr	r2, [pc, #56]	; (8008be8 <_DMA_LoadLUT+0x50>)
 8008bae:	687b      	ldr	r3, [r7, #4]
 8008bb0:	62d3      	str	r3, [r2, #44]	; 0x2c
  DMA2D->FGPFCCR  = LTDC_PIXEL_FORMAT_ARGB8888
                  | ((NumItems - 1) & 0xFF) << 8;
 8008bb2:	683b      	ldr	r3, [r7, #0]
 8008bb4:	3b01      	subs	r3, #1
 8008bb6:	021b      	lsls	r3, r3, #8
  DMA2D->FGPFCCR  = LTDC_PIXEL_FORMAT_ARGB8888
 8008bb8:	4a0b      	ldr	r2, [pc, #44]	; (8008be8 <_DMA_LoadLUT+0x50>)
                  | ((NumItems - 1) & 0xFF) << 8;
 8008bba:	b29b      	uxth	r3, r3
  DMA2D->FGPFCCR  = LTDC_PIXEL_FORMAT_ARGB8888
 8008bbc:	61d3      	str	r3, [r2, #28]
  
    DMA2D->CR     |= DMA2D_IT_CTC;
 8008bbe:	4b0a      	ldr	r3, [pc, #40]	; (8008be8 <_DMA_LoadLUT+0x50>)
 8008bc0:	681b      	ldr	r3, [r3, #0]
 8008bc2:	4a09      	ldr	r2, [pc, #36]	; (8008be8 <_DMA_LoadLUT+0x50>)
 8008bc4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8008bc8:	6013      	str	r3, [r2, #0]
    
  /* Start loading */
  DMA2D->FGPFCCR |= (1 << 5);
 8008bca:	4b07      	ldr	r3, [pc, #28]	; (8008be8 <_DMA_LoadLUT+0x50>)
 8008bcc:	69db      	ldr	r3, [r3, #28]
 8008bce:	4a06      	ldr	r2, [pc, #24]	; (8008be8 <_DMA_LoadLUT+0x50>)
 8008bd0:	f043 0320 	orr.w	r3, r3, #32
 8008bd4:	61d3      	str	r3, [r2, #28]
  
  /* Wait for the end of the transfer */
  _DMA2D_ExecOperation();
 8008bd6:	f7ff fd5d 	bl	8008694 <_DMA2D_ExecOperation>
}
 8008bda:	bf00      	nop
 8008bdc:	3708      	adds	r7, #8
 8008bde:	46bd      	mov	sp, r7
 8008be0:	bd80      	pop	{r7, pc}
 8008be2:	bf00      	nop
 8008be4:	20000fb4 	.word	0x20000fb4
 8008be8:	4002b000 	.word	0x4002b000

08008bec <_DMA_AlphaBlending>:
  * @param  pColorDst: Destination color
  * @param  NumItems : Number of items
  * @retval None
  */
static void _DMA_AlphaBlending(LCD_COLOR * pColorFG, LCD_COLOR * pColorBG, LCD_COLOR * pColorDst, U32 NumItems) 
{
 8008bec:	b580      	push	{r7, lr}
 8008bee:	b084      	sub	sp, #16
 8008bf0:	af00      	add	r7, sp, #0
 8008bf2:	60f8      	str	r0, [r7, #12]
 8008bf4:	60b9      	str	r1, [r7, #8]
 8008bf6:	607a      	str	r2, [r7, #4]
 8008bf8:	603b      	str	r3, [r7, #0]
  _DMA_AlphaBlendingBulk(pColorFG, pColorBG, pColorDst, NumItems);
 8008bfa:	683b      	ldr	r3, [r7, #0]
 8008bfc:	687a      	ldr	r2, [r7, #4]
 8008bfe:	68b9      	ldr	r1, [r7, #8]
 8008c00:	68f8      	ldr	r0, [r7, #12]
 8008c02:	f7ff fe0b 	bl	800881c <_DMA_AlphaBlendingBulk>
}
 8008c06:	bf00      	nop
 8008c08:	3710      	adds	r7, #16
 8008c0a:	46bd      	mov	sp, r7
 8008c0c:	bd80      	pop	{r7, pc}

08008c0e <_DMA_Index2ColorBulk>:
  * @param  SizeOfIndex: Size of index color
  * @param  PixelFormat: Pixel format
  * @retval None
  */
static void _DMA_Index2ColorBulk(void * pIndex, LCD_COLOR * pColor, U32 NumItems, U8 SizeOfIndex, U32 PixelFormat) 
{
 8008c0e:	b580      	push	{r7, lr}
 8008c10:	b086      	sub	sp, #24
 8008c12:	af02      	add	r7, sp, #8
 8008c14:	60f8      	str	r0, [r7, #12]
 8008c16:	60b9      	str	r1, [r7, #8]
 8008c18:	607a      	str	r2, [r7, #4]
 8008c1a:	70fb      	strb	r3, [r7, #3]
  _DMA_ConvertColor(pIndex, pColor, PixelFormat, LTDC_PIXEL_FORMAT_ARGB8888, NumItems);
 8008c1c:	687b      	ldr	r3, [r7, #4]
 8008c1e:	9300      	str	r3, [sp, #0]
 8008c20:	2300      	movs	r3, #0
 8008c22:	69ba      	ldr	r2, [r7, #24]
 8008c24:	68b9      	ldr	r1, [r7, #8]
 8008c26:	68f8      	ldr	r0, [r7, #12]
 8008c28:	f7ff fe7c 	bl	8008924 <_DMA_ConvertColor>
}
 8008c2c:	bf00      	nop
 8008c2e:	3710      	adds	r7, #16
 8008c30:	46bd      	mov	sp, r7
 8008c32:	bd80      	pop	{r7, pc}

08008c34 <_DMA_Color2IndexBulk>:
  * @param  SizeOfIndex: Size of index color
  * @param  PixelFormat: Pixel format
  * @retval None
  */
static void _DMA_Color2IndexBulk(LCD_COLOR * pColor, void * pIndex, U32 NumItems, U8 SizeOfIndex, U32 PixelFormat)
{
 8008c34:	b580      	push	{r7, lr}
 8008c36:	b086      	sub	sp, #24
 8008c38:	af02      	add	r7, sp, #8
 8008c3a:	60f8      	str	r0, [r7, #12]
 8008c3c:	60b9      	str	r1, [r7, #8]
 8008c3e:	607a      	str	r2, [r7, #4]
 8008c40:	70fb      	strb	r3, [r7, #3]
  _DMA_ConvertColor(pColor, pIndex, LTDC_PIXEL_FORMAT_ARGB8888, PixelFormat, NumItems);
 8008c42:	687b      	ldr	r3, [r7, #4]
 8008c44:	9300      	str	r3, [sp, #0]
 8008c46:	69bb      	ldr	r3, [r7, #24]
 8008c48:	2200      	movs	r2, #0
 8008c4a:	68b9      	ldr	r1, [r7, #8]
 8008c4c:	68f8      	ldr	r0, [r7, #12]
 8008c4e:	f7ff fe69 	bl	8008924 <_DMA_ConvertColor>
}
 8008c52:	bf00      	nop
 8008c54:	3710      	adds	r7, #16
 8008c56:	46bd      	mov	sp, r7
 8008c58:	bd80      	pop	{r7, pc}

08008c5a <_LCD_MixColorsBulk>:
  * @param  ySize  : Vertical size
  * @param  Intens : Color Intensity
  * @retval None
  */
static void _LCD_MixColorsBulk(U32 * pFG, U32 * pBG, U32 * pDst, unsigned OffFG, unsigned OffBG, unsigned OffDest, unsigned xSize, unsigned ySize, U8 Intens) 
{
 8008c5a:	b580      	push	{r7, lr}
 8008c5c:	b088      	sub	sp, #32
 8008c5e:	af02      	add	r7, sp, #8
 8008c60:	60f8      	str	r0, [r7, #12]
 8008c62:	60b9      	str	r1, [r7, #8]
 8008c64:	607a      	str	r2, [r7, #4]
 8008c66:	603b      	str	r3, [r7, #0]
  
  GUI_USE_PARA(OffFG);
  GUI_USE_PARA(OffDest);
   
  /* Do the same operation for all the lines */
  for (y = 0; y < ySize; y++) 
 8008c68:	2300      	movs	r3, #0
 8008c6a:	617b      	str	r3, [r7, #20]
 8008c6c:	e021      	b.n	8008cb2 <_LCD_MixColorsBulk+0x58>
  {
    /* Use DMA2D for mixing up */
    _DMA_MixColorsBulk(pFG, pBG, pDst, Intens, xSize);
 8008c6e:	f897 2030 	ldrb.w	r2, [r7, #48]	; 0x30
 8008c72:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008c74:	9300      	str	r3, [sp, #0]
 8008c76:	4613      	mov	r3, r2
 8008c78:	687a      	ldr	r2, [r7, #4]
 8008c7a:	68b9      	ldr	r1, [r7, #8]
 8008c7c:	68f8      	ldr	r0, [r7, #12]
 8008c7e:	f7ff fe11 	bl	80088a4 <_DMA_MixColorsBulk>
    pFG  += xSize + OffFG;
 8008c82:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8008c84:	683b      	ldr	r3, [r7, #0]
 8008c86:	4413      	add	r3, r2
 8008c88:	009b      	lsls	r3, r3, #2
 8008c8a:	68fa      	ldr	r2, [r7, #12]
 8008c8c:	4413      	add	r3, r2
 8008c8e:	60fb      	str	r3, [r7, #12]
    pBG  += xSize + OffBG;
 8008c90:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8008c92:	6a3b      	ldr	r3, [r7, #32]
 8008c94:	4413      	add	r3, r2
 8008c96:	009b      	lsls	r3, r3, #2
 8008c98:	68ba      	ldr	r2, [r7, #8]
 8008c9a:	4413      	add	r3, r2
 8008c9c:	60bb      	str	r3, [r7, #8]
    pDst += xSize + OffDest;
 8008c9e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8008ca0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008ca2:	4413      	add	r3, r2
 8008ca4:	009b      	lsls	r3, r3, #2
 8008ca6:	687a      	ldr	r2, [r7, #4]
 8008ca8:	4413      	add	r3, r2
 8008caa:	607b      	str	r3, [r7, #4]
  for (y = 0; y < ySize; y++) 
 8008cac:	697b      	ldr	r3, [r7, #20]
 8008cae:	3301      	adds	r3, #1
 8008cb0:	617b      	str	r3, [r7, #20]
 8008cb2:	697b      	ldr	r3, [r7, #20]
 8008cb4:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8008cb6:	429a      	cmp	r2, r3
 8008cb8:	d8d9      	bhi.n	8008c6e <_LCD_MixColorsBulk+0x14>
  }
}
 8008cba:	bf00      	nop
 8008cbc:	bf00      	nop
 8008cbe:	3718      	adds	r7, #24
 8008cc0:	46bd      	mov	sp, r7
 8008cc2:	bd80      	pop	{r7, pc}

08008cc4 <_GetBufferSize>:
  * @brief  Get buffer size.
  * @param  LayerIndex: Layer index
  * @retval U32       : Buffer size 
  */
static U32 _GetBufferSize(int LayerIndex) 
{
 8008cc4:	b480      	push	{r7}
 8008cc6:	b085      	sub	sp, #20
 8008cc8:	af00      	add	r7, sp, #0
 8008cca:	6078      	str	r0, [r7, #4]
  U32 BufferSize;

  BufferSize = _axSize[LayerIndex] * _aySize[LayerIndex] * _aBytesPerPixels[LayerIndex];
 8008ccc:	4a0b      	ldr	r2, [pc, #44]	; (8008cfc <_GetBufferSize+0x38>)
 8008cce:	687b      	ldr	r3, [r7, #4]
 8008cd0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008cd4:	490a      	ldr	r1, [pc, #40]	; (8008d00 <_GetBufferSize+0x3c>)
 8008cd6:	687a      	ldr	r2, [r7, #4]
 8008cd8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8008cdc:	fb02 f303 	mul.w	r3, r2, r3
 8008ce0:	4908      	ldr	r1, [pc, #32]	; (8008d04 <_GetBufferSize+0x40>)
 8008ce2:	687a      	ldr	r2, [r7, #4]
 8008ce4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8008ce8:	fb02 f303 	mul.w	r3, r2, r3
 8008cec:	60fb      	str	r3, [r7, #12]
  
  return BufferSize;
 8008cee:	68fb      	ldr	r3, [r7, #12]
}
 8008cf0:	4618      	mov	r0, r3
 8008cf2:	3714      	adds	r7, #20
 8008cf4:	46bd      	mov	sp, r7
 8008cf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cfa:	4770      	bx	lr
 8008cfc:	20001018 	.word	0x20001018
 8008d00:	2000101c 	.word	0x2000101c
 8008d04:	20001020 	.word	0x20001020

08008d08 <_LCD_CopyBuffer>:
  * @param  IndexSrc  : Source index
  * @param  IndexDst  : Destination index
  * @retval None 
  */
static void _LCD_CopyBuffer(int LayerIndex, int IndexSrc, int IndexDst) 
{
 8008d08:	b590      	push	{r4, r7, lr}
 8008d0a:	b08d      	sub	sp, #52	; 0x34
 8008d0c:	af04      	add	r7, sp, #16
 8008d0e:	60f8      	str	r0, [r7, #12]
 8008d10:	60b9      	str	r1, [r7, #8]
 8008d12:	607a      	str	r2, [r7, #4]
  U32 BufferSize, AddrSrc, AddrDst;
  
  BufferSize = _GetBufferSize(LayerIndex);
 8008d14:	68f8      	ldr	r0, [r7, #12]
 8008d16:	f7ff ffd5 	bl	8008cc4 <_GetBufferSize>
 8008d1a:	61f8      	str	r0, [r7, #28]
  AddrSrc    = _aAddr[LayerIndex] + BufferSize * IndexSrc;
 8008d1c:	4a17      	ldr	r2, [pc, #92]	; (8008d7c <_LCD_CopyBuffer+0x74>)
 8008d1e:	68fb      	ldr	r3, [r7, #12]
 8008d20:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008d24:	68bb      	ldr	r3, [r7, #8]
 8008d26:	69f9      	ldr	r1, [r7, #28]
 8008d28:	fb01 f303 	mul.w	r3, r1, r3
 8008d2c:	4413      	add	r3, r2
 8008d2e:	61bb      	str	r3, [r7, #24]
  AddrDst    = _aAddr[LayerIndex] + BufferSize * IndexDst;
 8008d30:	4a12      	ldr	r2, [pc, #72]	; (8008d7c <_LCD_CopyBuffer+0x74>)
 8008d32:	68fb      	ldr	r3, [r7, #12]
 8008d34:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008d38:	687b      	ldr	r3, [r7, #4]
 8008d3a:	69f9      	ldr	r1, [r7, #28]
 8008d3c:	fb01 f303 	mul.w	r3, r1, r3
 8008d40:	4413      	add	r3, r2
 8008d42:	617b      	str	r3, [r7, #20]
  _DMA_Copy(LayerIndex, (void *)AddrSrc, (void *)AddrDst, _axSize[LayerIndex], _aySize[LayerIndex], 0, 0);
 8008d44:	69b9      	ldr	r1, [r7, #24]
 8008d46:	697a      	ldr	r2, [r7, #20]
 8008d48:	480d      	ldr	r0, [pc, #52]	; (8008d80 <_LCD_CopyBuffer+0x78>)
 8008d4a:	68fb      	ldr	r3, [r7, #12]
 8008d4c:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8008d50:	4c0c      	ldr	r4, [pc, #48]	; (8008d84 <_LCD_CopyBuffer+0x7c>)
 8008d52:	68fb      	ldr	r3, [r7, #12]
 8008d54:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 8008d58:	2400      	movs	r4, #0
 8008d5a:	9402      	str	r4, [sp, #8]
 8008d5c:	2400      	movs	r4, #0
 8008d5e:	9401      	str	r4, [sp, #4]
 8008d60:	9300      	str	r3, [sp, #0]
 8008d62:	4603      	mov	r3, r0
 8008d64:	68f8      	ldr	r0, [r7, #12]
 8008d66:	f7ff fcab 	bl	80086c0 <_DMA_Copy>
  /* After this function has been called all drawing operations are routed to Buffer[IndexDst] */
  _aBufferIndex[LayerIndex] = IndexDst;
 8008d6a:	4907      	ldr	r1, [pc, #28]	; (8008d88 <_LCD_CopyBuffer+0x80>)
 8008d6c:	68fb      	ldr	r3, [r7, #12]
 8008d6e:	687a      	ldr	r2, [r7, #4]
 8008d70:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8008d74:	bf00      	nop
 8008d76:	3724      	adds	r7, #36	; 0x24
 8008d78:	46bd      	mov	sp, r7
 8008d7a:	bd90      	pop	{r4, r7, pc}
 8008d7c:	0801e878 	.word	0x0801e878
 8008d80:	20001018 	.word	0x20001018
 8008d84:	2000101c 	.word	0x2000101c
 8008d88:	20001014 	.word	0x20001014

08008d8c <_LCD_CopyRect>:
  * @param  xSize     : Rectangle width
  * @param  ySize     : Rectangle height
  * @retval None 
  */
static void _LCD_CopyRect(int LayerIndex, int x0, int y0, int x1, int y1, int xSize, int ySize)
{
 8008d8c:	b580      	push	{r7, lr}
 8008d8e:	b08c      	sub	sp, #48	; 0x30
 8008d90:	af04      	add	r7, sp, #16
 8008d92:	60f8      	str	r0, [r7, #12]
 8008d94:	60b9      	str	r1, [r7, #8]
 8008d96:	607a      	str	r2, [r7, #4]
 8008d98:	603b      	str	r3, [r7, #0]
  U32 BufferSize, AddrSrc, AddrDst;
  int OffLine;

  BufferSize = _GetBufferSize(LayerIndex);
 8008d9a:	68f8      	ldr	r0, [r7, #12]
 8008d9c:	f7ff ff92 	bl	8008cc4 <_GetBufferSize>
 8008da0:	61f8      	str	r0, [r7, #28]
  AddrSrc = _aAddr[LayerIndex] + BufferSize * _aBufferIndex[LayerIndex] + (y0 * _axSize[LayerIndex] + x0) * _aBytesPerPixels[LayerIndex];
 8008da2:	4a2a      	ldr	r2, [pc, #168]	; (8008e4c <_LCD_CopyRect+0xc0>)
 8008da4:	68fb      	ldr	r3, [r7, #12]
 8008da6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008daa:	4929      	ldr	r1, [pc, #164]	; (8008e50 <_LCD_CopyRect+0xc4>)
 8008dac:	68fb      	ldr	r3, [r7, #12]
 8008dae:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008db2:	6879      	ldr	r1, [r7, #4]
 8008db4:	fb01 f103 	mul.w	r1, r1, r3
 8008db8:	68bb      	ldr	r3, [r7, #8]
 8008dba:	440b      	add	r3, r1
 8008dbc:	4825      	ldr	r0, [pc, #148]	; (8008e54 <_LCD_CopyRect+0xc8>)
 8008dbe:	68f9      	ldr	r1, [r7, #12]
 8008dc0:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 8008dc4:	fb01 f303 	mul.w	r3, r1, r3
 8008dc8:	4618      	mov	r0, r3
 8008dca:	4923      	ldr	r1, [pc, #140]	; (8008e58 <_LCD_CopyRect+0xcc>)
 8008dcc:	68fb      	ldr	r3, [r7, #12]
 8008dce:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008dd2:	4619      	mov	r1, r3
 8008dd4:	69fb      	ldr	r3, [r7, #28]
 8008dd6:	fb03 f301 	mul.w	r3, r3, r1
 8008dda:	4403      	add	r3, r0
 8008ddc:	4413      	add	r3, r2
 8008dde:	61bb      	str	r3, [r7, #24]
  AddrDst = _aAddr[LayerIndex] + BufferSize * _aBufferIndex[LayerIndex] + (y1 * _axSize[LayerIndex] + x1) * _aBytesPerPixels[LayerIndex];
 8008de0:	4a1a      	ldr	r2, [pc, #104]	; (8008e4c <_LCD_CopyRect+0xc0>)
 8008de2:	68fb      	ldr	r3, [r7, #12]
 8008de4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008de8:	4919      	ldr	r1, [pc, #100]	; (8008e50 <_LCD_CopyRect+0xc4>)
 8008dea:	68fb      	ldr	r3, [r7, #12]
 8008dec:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008df0:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8008df2:	fb01 f103 	mul.w	r1, r1, r3
 8008df6:	683b      	ldr	r3, [r7, #0]
 8008df8:	440b      	add	r3, r1
 8008dfa:	4816      	ldr	r0, [pc, #88]	; (8008e54 <_LCD_CopyRect+0xc8>)
 8008dfc:	68f9      	ldr	r1, [r7, #12]
 8008dfe:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 8008e02:	fb01 f303 	mul.w	r3, r1, r3
 8008e06:	4618      	mov	r0, r3
 8008e08:	4913      	ldr	r1, [pc, #76]	; (8008e58 <_LCD_CopyRect+0xcc>)
 8008e0a:	68fb      	ldr	r3, [r7, #12]
 8008e0c:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008e10:	4619      	mov	r1, r3
 8008e12:	69fb      	ldr	r3, [r7, #28]
 8008e14:	fb03 f301 	mul.w	r3, r3, r1
 8008e18:	4403      	add	r3, r0
 8008e1a:	4413      	add	r3, r2
 8008e1c:	617b      	str	r3, [r7, #20]
  OffLine = _axSize[LayerIndex] - xSize;
 8008e1e:	4a0c      	ldr	r2, [pc, #48]	; (8008e50 <_LCD_CopyRect+0xc4>)
 8008e20:	68fb      	ldr	r3, [r7, #12]
 8008e22:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008e26:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008e28:	1ad3      	subs	r3, r2, r3
 8008e2a:	613b      	str	r3, [r7, #16]
  _DMA_Copy(LayerIndex, (void *)AddrSrc, (void *)AddrDst, xSize, ySize, OffLine, OffLine);
 8008e2c:	69b9      	ldr	r1, [r7, #24]
 8008e2e:	697a      	ldr	r2, [r7, #20]
 8008e30:	693b      	ldr	r3, [r7, #16]
 8008e32:	9302      	str	r3, [sp, #8]
 8008e34:	693b      	ldr	r3, [r7, #16]
 8008e36:	9301      	str	r3, [sp, #4]
 8008e38:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008e3a:	9300      	str	r3, [sp, #0]
 8008e3c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008e3e:	68f8      	ldr	r0, [r7, #12]
 8008e40:	f7ff fc3e 	bl	80086c0 <_DMA_Copy>
}
 8008e44:	bf00      	nop
 8008e46:	3720      	adds	r7, #32
 8008e48:	46bd      	mov	sp, r7
 8008e4a:	bd80      	pop	{r7, pc}
 8008e4c:	0801e878 	.word	0x0801e878
 8008e50:	20001018 	.word	0x20001018
 8008e54:	20001020 	.word	0x20001020
 8008e58:	20001014 	.word	0x20001014

08008e5c <_LCD_FillRect>:
  * @param  y1        : Vertical rect end
  * @param  PixelIndex: Color to be used for the Fill operation
  * @retval None 
  */
static void _LCD_FillRect(int LayerIndex, int x0, int y0, int x1, int y1, U32 PixelIndex) 
{
 8008e5c:	b580      	push	{r7, lr}
 8008e5e:	b08a      	sub	sp, #40	; 0x28
 8008e60:	af02      	add	r7, sp, #8
 8008e62:	60f8      	str	r0, [r7, #12]
 8008e64:	60b9      	str	r1, [r7, #8]
 8008e66:	607a      	str	r2, [r7, #4]
 8008e68:	603b      	str	r3, [r7, #0]
  U32 BufferSize, AddrDst;
  int xSize, ySize;
  
  /* Depending on the draw mode, do it differently */
  if (GUI_GetDrawMode() == GUI_DM_XOR) 
 8008e6a:	f002 f83f 	bl	800aeec <GUI_GetDrawMode>
 8008e6e:	4603      	mov	r3, r0
 8008e70:	2b01      	cmp	r3, #1
 8008e72:	d110      	bne.n	8008e96 <_LCD_FillRect+0x3a>
  {
    /* Use SW Fill rectangle */
    LCD_SetDevFunc(LayerIndex, LCD_DEVFUNC_FILLRECT, NULL);
 8008e74:	2200      	movs	r2, #0
 8008e76:	2119      	movs	r1, #25
 8008e78:	68f8      	ldr	r0, [r7, #12]
 8008e7a:	f004 fa90 	bl	800d39e <LCD_SetDevFunc>
    LCD_FillRect(x0, y0, x1, y1);
 8008e7e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008e80:	683a      	ldr	r2, [r7, #0]
 8008e82:	6879      	ldr	r1, [r7, #4]
 8008e84:	68b8      	ldr	r0, [r7, #8]
 8008e86:	f003 fbef 	bl	800c668 <LCD_FillRect>
    /* Then set custom callback function for fillrect operation */
    LCD_SetDevFunc(LayerIndex, LCD_DEVFUNC_FILLRECT, (void(*)(void))_LCD_FillRect);
 8008e8a:	4a23      	ldr	r2, [pc, #140]	; (8008f18 <_LCD_FillRect+0xbc>)
 8008e8c:	2119      	movs	r1, #25
 8008e8e:	68f8      	ldr	r0, [r7, #12]
 8008e90:	f004 fa85 	bl	800d39e <LCD_SetDevFunc>
    ySize = y1 - y0 + 1;
    BufferSize = _GetBufferSize(LayerIndex);
    AddrDst = _aAddr[LayerIndex] + BufferSize * _aBufferIndex[LayerIndex] + (y0 * _axSize[LayerIndex] + x0) * _aBytesPerPixels[LayerIndex];
    _DMA_Fill(LayerIndex, (void *)AddrDst, xSize, ySize, _axSize[LayerIndex] - xSize, PixelIndex);
  }
}
 8008e94:	e03b      	b.n	8008f0e <_LCD_FillRect+0xb2>
    xSize = x1 - x0 + 1;
 8008e96:	683a      	ldr	r2, [r7, #0]
 8008e98:	68bb      	ldr	r3, [r7, #8]
 8008e9a:	1ad3      	subs	r3, r2, r3
 8008e9c:	3301      	adds	r3, #1
 8008e9e:	61fb      	str	r3, [r7, #28]
    ySize = y1 - y0 + 1;
 8008ea0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8008ea2:	687b      	ldr	r3, [r7, #4]
 8008ea4:	1ad3      	subs	r3, r2, r3
 8008ea6:	3301      	adds	r3, #1
 8008ea8:	61bb      	str	r3, [r7, #24]
    BufferSize = _GetBufferSize(LayerIndex);
 8008eaa:	68f8      	ldr	r0, [r7, #12]
 8008eac:	f7ff ff0a 	bl	8008cc4 <_GetBufferSize>
 8008eb0:	6178      	str	r0, [r7, #20]
    AddrDst = _aAddr[LayerIndex] + BufferSize * _aBufferIndex[LayerIndex] + (y0 * _axSize[LayerIndex] + x0) * _aBytesPerPixels[LayerIndex];
 8008eb2:	4a1a      	ldr	r2, [pc, #104]	; (8008f1c <_LCD_FillRect+0xc0>)
 8008eb4:	68fb      	ldr	r3, [r7, #12]
 8008eb6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008eba:	4919      	ldr	r1, [pc, #100]	; (8008f20 <_LCD_FillRect+0xc4>)
 8008ebc:	68fb      	ldr	r3, [r7, #12]
 8008ebe:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008ec2:	6879      	ldr	r1, [r7, #4]
 8008ec4:	fb01 f103 	mul.w	r1, r1, r3
 8008ec8:	68bb      	ldr	r3, [r7, #8]
 8008eca:	440b      	add	r3, r1
 8008ecc:	4815      	ldr	r0, [pc, #84]	; (8008f24 <_LCD_FillRect+0xc8>)
 8008ece:	68f9      	ldr	r1, [r7, #12]
 8008ed0:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 8008ed4:	fb01 f303 	mul.w	r3, r1, r3
 8008ed8:	4618      	mov	r0, r3
 8008eda:	4913      	ldr	r1, [pc, #76]	; (8008f28 <_LCD_FillRect+0xcc>)
 8008edc:	68fb      	ldr	r3, [r7, #12]
 8008ede:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008ee2:	4619      	mov	r1, r3
 8008ee4:	697b      	ldr	r3, [r7, #20]
 8008ee6:	fb03 f301 	mul.w	r3, r3, r1
 8008eea:	4403      	add	r3, r0
 8008eec:	4413      	add	r3, r2
 8008eee:	613b      	str	r3, [r7, #16]
    _DMA_Fill(LayerIndex, (void *)AddrDst, xSize, ySize, _axSize[LayerIndex] - xSize, PixelIndex);
 8008ef0:	6939      	ldr	r1, [r7, #16]
 8008ef2:	4a0b      	ldr	r2, [pc, #44]	; (8008f20 <_LCD_FillRect+0xc4>)
 8008ef4:	68fb      	ldr	r3, [r7, #12]
 8008ef6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008efa:	69fb      	ldr	r3, [r7, #28]
 8008efc:	1ad3      	subs	r3, r2, r3
 8008efe:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8008f00:	9201      	str	r2, [sp, #4]
 8008f02:	9300      	str	r3, [sp, #0]
 8008f04:	69bb      	ldr	r3, [r7, #24]
 8008f06:	69fa      	ldr	r2, [r7, #28]
 8008f08:	68f8      	ldr	r0, [r7, #12]
 8008f0a:	f7ff fc4d 	bl	80087a8 <_DMA_Fill>
}
 8008f0e:	bf00      	nop
 8008f10:	3720      	adds	r7, #32
 8008f12:	46bd      	mov	sp, r7
 8008f14:	bd80      	pop	{r7, pc}
 8008f16:	bf00      	nop
 8008f18:	08008e5d 	.word	0x08008e5d
 8008f1c:	0801e878 	.word	0x0801e878
 8008f20:	20001018 	.word	0x20001018
 8008f24:	20001020 	.word	0x20001020
 8008f28:	20001014 	.word	0x20001014

08008f2c <_LCD_DrawBitmap32bpp>:
  * @param  ySize       : Vertical bitmap size
  * @param  BytesPerLine: Number of bytes per Line
  * @retval None 
  */
static void _LCD_DrawBitmap32bpp(int LayerIndex, int x, int y, U16 const * p, int xSize, int ySize, int BytesPerLine) 
{
 8008f2c:	b580      	push	{r7, lr}
 8008f2e:	b08c      	sub	sp, #48	; 0x30
 8008f30:	af04      	add	r7, sp, #16
 8008f32:	60f8      	str	r0, [r7, #12]
 8008f34:	60b9      	str	r1, [r7, #8]
 8008f36:	607a      	str	r2, [r7, #4]
 8008f38:	603b      	str	r3, [r7, #0]
  U32 BufferSize, AddrDst;
  int OffLineSrc, OffLineDst;
 
  BufferSize = _GetBufferSize(LayerIndex);
 8008f3a:	68f8      	ldr	r0, [r7, #12]
 8008f3c:	f7ff fec2 	bl	8008cc4 <_GetBufferSize>
 8008f40:	61f8      	str	r0, [r7, #28]
  AddrDst = _aAddr[LayerIndex] + BufferSize * _aBufferIndex[LayerIndex] + (y * _axSize[LayerIndex] + x) * _aBytesPerPixels[LayerIndex];
 8008f42:	4a1f      	ldr	r2, [pc, #124]	; (8008fc0 <_LCD_DrawBitmap32bpp+0x94>)
 8008f44:	68fb      	ldr	r3, [r7, #12]
 8008f46:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008f4a:	491e      	ldr	r1, [pc, #120]	; (8008fc4 <_LCD_DrawBitmap32bpp+0x98>)
 8008f4c:	68fb      	ldr	r3, [r7, #12]
 8008f4e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008f52:	6879      	ldr	r1, [r7, #4]
 8008f54:	fb01 f103 	mul.w	r1, r1, r3
 8008f58:	68bb      	ldr	r3, [r7, #8]
 8008f5a:	440b      	add	r3, r1
 8008f5c:	481a      	ldr	r0, [pc, #104]	; (8008fc8 <_LCD_DrawBitmap32bpp+0x9c>)
 8008f5e:	68f9      	ldr	r1, [r7, #12]
 8008f60:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 8008f64:	fb01 f303 	mul.w	r3, r1, r3
 8008f68:	4618      	mov	r0, r3
 8008f6a:	4918      	ldr	r1, [pc, #96]	; (8008fcc <_LCD_DrawBitmap32bpp+0xa0>)
 8008f6c:	68fb      	ldr	r3, [r7, #12]
 8008f6e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008f72:	4619      	mov	r1, r3
 8008f74:	69fb      	ldr	r3, [r7, #28]
 8008f76:	fb03 f301 	mul.w	r3, r3, r1
 8008f7a:	4403      	add	r3, r0
 8008f7c:	4413      	add	r3, r2
 8008f7e:	61bb      	str	r3, [r7, #24]
  OffLineSrc = (BytesPerLine / 4) - xSize;
 8008f80:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008f82:	2b00      	cmp	r3, #0
 8008f84:	da00      	bge.n	8008f88 <_LCD_DrawBitmap32bpp+0x5c>
 8008f86:	3303      	adds	r3, #3
 8008f88:	109b      	asrs	r3, r3, #2
 8008f8a:	461a      	mov	r2, r3
 8008f8c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008f8e:	1ad3      	subs	r3, r2, r3
 8008f90:	617b      	str	r3, [r7, #20]
  OffLineDst = _axSize[LayerIndex] - xSize;
 8008f92:	4a0c      	ldr	r2, [pc, #48]	; (8008fc4 <_LCD_DrawBitmap32bpp+0x98>)
 8008f94:	68fb      	ldr	r3, [r7, #12]
 8008f96:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008f9a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008f9c:	1ad3      	subs	r3, r2, r3
 8008f9e:	613b      	str	r3, [r7, #16]
  _DMA_Copy(LayerIndex, (void *)p, (void *)AddrDst, xSize, ySize, OffLineSrc, OffLineDst);
 8008fa0:	69ba      	ldr	r2, [r7, #24]
 8008fa2:	693b      	ldr	r3, [r7, #16]
 8008fa4:	9302      	str	r3, [sp, #8]
 8008fa6:	697b      	ldr	r3, [r7, #20]
 8008fa8:	9301      	str	r3, [sp, #4]
 8008faa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008fac:	9300      	str	r3, [sp, #0]
 8008fae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008fb0:	6839      	ldr	r1, [r7, #0]
 8008fb2:	68f8      	ldr	r0, [r7, #12]
 8008fb4:	f7ff fb84 	bl	80086c0 <_DMA_Copy>
}
 8008fb8:	bf00      	nop
 8008fba:	3720      	adds	r7, #32
 8008fbc:	46bd      	mov	sp, r7
 8008fbe:	bd80      	pop	{r7, pc}
 8008fc0:	0801e878 	.word	0x0801e878
 8008fc4:	20001018 	.word	0x20001018
 8008fc8:	20001020 	.word	0x20001020
 8008fcc:	20001014 	.word	0x20001014

08008fd0 <_LCD_DrawBitmap16bpp>:
  * @param  ySize       : Vertical bitmap size
  * @param  BytesPerLine: Number of bytes per Line
  * @retval None 
  */
static void _LCD_DrawBitmap16bpp(int LayerIndex, int x, int y, U16 const * p, int xSize, int ySize, int BytesPerLine) 
{
 8008fd0:	b580      	push	{r7, lr}
 8008fd2:	b08c      	sub	sp, #48	; 0x30
 8008fd4:	af04      	add	r7, sp, #16
 8008fd6:	60f8      	str	r0, [r7, #12]
 8008fd8:	60b9      	str	r1, [r7, #8]
 8008fda:	607a      	str	r2, [r7, #4]
 8008fdc:	603b      	str	r3, [r7, #0]
  U32 BufferSize, AddrDst;
  int OffLineSrc, OffLineDst;
 
  BufferSize = _GetBufferSize(LayerIndex);
 8008fde:	68f8      	ldr	r0, [r7, #12]
 8008fe0:	f7ff fe70 	bl	8008cc4 <_GetBufferSize>
 8008fe4:	61f8      	str	r0, [r7, #28]
  AddrDst = _aAddr[LayerIndex] + BufferSize * _aBufferIndex[LayerIndex] + (y * _axSize[LayerIndex] + x) * _aBytesPerPixels[LayerIndex];
 8008fe6:	4a1f      	ldr	r2, [pc, #124]	; (8009064 <_LCD_DrawBitmap16bpp+0x94>)
 8008fe8:	68fb      	ldr	r3, [r7, #12]
 8008fea:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8008fee:	491e      	ldr	r1, [pc, #120]	; (8009068 <_LCD_DrawBitmap16bpp+0x98>)
 8008ff0:	68fb      	ldr	r3, [r7, #12]
 8008ff2:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8008ff6:	6879      	ldr	r1, [r7, #4]
 8008ff8:	fb01 f103 	mul.w	r1, r1, r3
 8008ffc:	68bb      	ldr	r3, [r7, #8]
 8008ffe:	440b      	add	r3, r1
 8009000:	481a      	ldr	r0, [pc, #104]	; (800906c <_LCD_DrawBitmap16bpp+0x9c>)
 8009002:	68f9      	ldr	r1, [r7, #12]
 8009004:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 8009008:	fb01 f303 	mul.w	r3, r1, r3
 800900c:	4618      	mov	r0, r3
 800900e:	4918      	ldr	r1, [pc, #96]	; (8009070 <_LCD_DrawBitmap16bpp+0xa0>)
 8009010:	68fb      	ldr	r3, [r7, #12]
 8009012:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8009016:	4619      	mov	r1, r3
 8009018:	69fb      	ldr	r3, [r7, #28]
 800901a:	fb03 f301 	mul.w	r3, r3, r1
 800901e:	4403      	add	r3, r0
 8009020:	4413      	add	r3, r2
 8009022:	61bb      	str	r3, [r7, #24]
  OffLineSrc = (BytesPerLine / 2) - xSize;
 8009024:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009026:	2b00      	cmp	r3, #0
 8009028:	da00      	bge.n	800902c <_LCD_DrawBitmap16bpp+0x5c>
 800902a:	3301      	adds	r3, #1
 800902c:	105b      	asrs	r3, r3, #1
 800902e:	461a      	mov	r2, r3
 8009030:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009032:	1ad3      	subs	r3, r2, r3
 8009034:	617b      	str	r3, [r7, #20]
  OffLineDst = _axSize[LayerIndex] - xSize;
 8009036:	4a0c      	ldr	r2, [pc, #48]	; (8009068 <_LCD_DrawBitmap16bpp+0x98>)
 8009038:	68fb      	ldr	r3, [r7, #12]
 800903a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800903e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009040:	1ad3      	subs	r3, r2, r3
 8009042:	613b      	str	r3, [r7, #16]
  _DMA_Copy(LayerIndex, (void *)p, (void *)AddrDst, xSize, ySize, OffLineSrc, OffLineDst);
 8009044:	69ba      	ldr	r2, [r7, #24]
 8009046:	693b      	ldr	r3, [r7, #16]
 8009048:	9302      	str	r3, [sp, #8]
 800904a:	697b      	ldr	r3, [r7, #20]
 800904c:	9301      	str	r3, [sp, #4]
 800904e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009050:	9300      	str	r3, [sp, #0]
 8009052:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009054:	6839      	ldr	r1, [r7, #0]
 8009056:	68f8      	ldr	r0, [r7, #12]
 8009058:	f7ff fb32 	bl	80086c0 <_DMA_Copy>
}
 800905c:	bf00      	nop
 800905e:	3720      	adds	r7, #32
 8009060:	46bd      	mov	sp, r7
 8009062:	bd80      	pop	{r7, pc}
 8009064:	0801e878 	.word	0x0801e878
 8009068:	20001018 	.word	0x20001018
 800906c:	20001020 	.word	0x20001020
 8009070:	20001014 	.word	0x20001014

08009074 <_LCD_DrawBitmap8bpp>:
  * @param  xSize       : Horizontal bitmap size
  * @param  ySize       : Vertical bitmap size
  * @param  BytesPerLine: Number of bytes per Line
  * @retval None 
  */
static void _LCD_DrawBitmap8bpp(int LayerIndex, int x, int y, U8 const * p, int xSize, int ySize, int BytesPerLine) {
 8009074:	b590      	push	{r4, r7, lr}
 8009076:	b08f      	sub	sp, #60	; 0x3c
 8009078:	af04      	add	r7, sp, #16
 800907a:	60f8      	str	r0, [r7, #12]
 800907c:	60b9      	str	r1, [r7, #8]
 800907e:	607a      	str	r2, [r7, #4]
 8009080:	603b      	str	r3, [r7, #0]
  U32 BufferSize, AddrDst;
  int OffLineSrc, OffLineDst;
  U32 PixelFormat;
  
  PixelFormat = _GetPixelformat(LayerIndex);
 8009082:	68f8      	ldr	r0, [r7, #12]
 8009084:	f7ff f87a 	bl	800817c <_GetPixelformat>
 8009088:	6278      	str	r0, [r7, #36]	; 0x24
  BufferSize = _GetBufferSize(LayerIndex);
 800908a:	68f8      	ldr	r0, [r7, #12]
 800908c:	f7ff fe1a 	bl	8008cc4 <_GetBufferSize>
 8009090:	6238      	str	r0, [r7, #32]
  AddrDst = _aAddr[LayerIndex] + BufferSize * _aBufferIndex[LayerIndex] + (y * _axSize[LayerIndex] + x) * _aBytesPerPixels[LayerIndex];
 8009092:	4a1e      	ldr	r2, [pc, #120]	; (800910c <_LCD_DrawBitmap8bpp+0x98>)
 8009094:	68fb      	ldr	r3, [r7, #12]
 8009096:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800909a:	491d      	ldr	r1, [pc, #116]	; (8009110 <_LCD_DrawBitmap8bpp+0x9c>)
 800909c:	68fb      	ldr	r3, [r7, #12]
 800909e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80090a2:	6879      	ldr	r1, [r7, #4]
 80090a4:	fb01 f103 	mul.w	r1, r1, r3
 80090a8:	68bb      	ldr	r3, [r7, #8]
 80090aa:	440b      	add	r3, r1
 80090ac:	4819      	ldr	r0, [pc, #100]	; (8009114 <_LCD_DrawBitmap8bpp+0xa0>)
 80090ae:	68f9      	ldr	r1, [r7, #12]
 80090b0:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 80090b4:	fb01 f303 	mul.w	r3, r1, r3
 80090b8:	4618      	mov	r0, r3
 80090ba:	4917      	ldr	r1, [pc, #92]	; (8009118 <_LCD_DrawBitmap8bpp+0xa4>)
 80090bc:	68fb      	ldr	r3, [r7, #12]
 80090be:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80090c2:	4619      	mov	r1, r3
 80090c4:	6a3b      	ldr	r3, [r7, #32]
 80090c6:	fb03 f301 	mul.w	r3, r3, r1
 80090ca:	4403      	add	r3, r0
 80090cc:	4413      	add	r3, r2
 80090ce:	61fb      	str	r3, [r7, #28]
  OffLineSrc = BytesPerLine - xSize;
 80090d0:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 80090d2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80090d4:	1ad3      	subs	r3, r2, r3
 80090d6:	61bb      	str	r3, [r7, #24]
  OffLineDst = _axSize[LayerIndex] - xSize;
 80090d8:	4a0d      	ldr	r2, [pc, #52]	; (8009110 <_LCD_DrawBitmap8bpp+0x9c>)
 80090da:	68fb      	ldr	r3, [r7, #12]
 80090dc:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80090e0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80090e2:	1ad3      	subs	r3, r2, r3
 80090e4:	617b      	str	r3, [r7, #20]
  _DMA_DrawBitmapL8((void *)p, (void *)AddrDst, OffLineSrc, OffLineDst, PixelFormat, xSize, ySize);
 80090e6:	69f9      	ldr	r1, [r7, #28]
 80090e8:	69b8      	ldr	r0, [r7, #24]
 80090ea:	697c      	ldr	r4, [r7, #20]
 80090ec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80090ee:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80090f0:	9202      	str	r2, [sp, #8]
 80090f2:	9301      	str	r3, [sp, #4]
 80090f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80090f6:	9300      	str	r3, [sp, #0]
 80090f8:	4623      	mov	r3, r4
 80090fa:	4602      	mov	r2, r0
 80090fc:	6838      	ldr	r0, [r7, #0]
 80090fe:	f7ff fc4b 	bl	8008998 <_DMA_DrawBitmapL8>
}
 8009102:	bf00      	nop
 8009104:	372c      	adds	r7, #44	; 0x2c
 8009106:	46bd      	mov	sp, r7
 8009108:	bd90      	pop	{r4, r7, pc}
 800910a:	bf00      	nop
 800910c:	0801e878 	.word	0x0801e878
 8009110:	20001018 	.word	0x20001018
 8009114:	20001020 	.word	0x20001020
 8009118:	20001014 	.word	0x20001014

0800911c <_LCD_DrawBitmap4bpp>:
  * @param  xSize       : Horizontal bitmap size
  * @param  ySize       : Vertical bitmap size
  * @param  BytesPerLine: Number of bytes per Line
  * @retval int 
  */
static int _LCD_DrawBitmap4bpp(int LayerIndex, int x, int y, U8 const * p, int xSize, int ySize, int BytesPerLine) {
 800911c:	b590      	push	{r4, r7, lr}
 800911e:	b08f      	sub	sp, #60	; 0x3c
 8009120:	af04      	add	r7, sp, #16
 8009122:	60f8      	str	r0, [r7, #12]
 8009124:	60b9      	str	r1, [r7, #8]
 8009126:	607a      	str	r2, [r7, #4]
 8009128:	603b      	str	r3, [r7, #0]
  U32 BufferSize, AddrDst;
  int OffLineSrc, OffLineDst;
  U32 PixelFormat;
  
  if (x < 0) 
 800912a:	68bb      	ldr	r3, [r7, #8]
 800912c:	2b00      	cmp	r3, #0
 800912e:	da01      	bge.n	8009134 <_LCD_DrawBitmap4bpp+0x18>
  {
    return 1;
 8009130:	2301      	movs	r3, #1
 8009132:	e061      	b.n	80091f8 <_LCD_DrawBitmap4bpp+0xdc>
  }
  if ((x + xSize) >= _axSize[LayerIndex]) 
 8009134:	68ba      	ldr	r2, [r7, #8]
 8009136:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009138:	441a      	add	r2, r3
 800913a:	4931      	ldr	r1, [pc, #196]	; (8009200 <_LCD_DrawBitmap4bpp+0xe4>)
 800913c:	68fb      	ldr	r3, [r7, #12]
 800913e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8009142:	429a      	cmp	r2, r3
 8009144:	db01      	blt.n	800914a <_LCD_DrawBitmap4bpp+0x2e>
  {
    return 1;
 8009146:	2301      	movs	r3, #1
 8009148:	e056      	b.n	80091f8 <_LCD_DrawBitmap4bpp+0xdc>
  }
  if (y < 0) 
 800914a:	687b      	ldr	r3, [r7, #4]
 800914c:	2b00      	cmp	r3, #0
 800914e:	da01      	bge.n	8009154 <_LCD_DrawBitmap4bpp+0x38>
  {
    return 1;
 8009150:	2301      	movs	r3, #1
 8009152:	e051      	b.n	80091f8 <_LCD_DrawBitmap4bpp+0xdc>
  }
  if ((y + ySize) >= _aySize[LayerIndex]) 
 8009154:	687a      	ldr	r2, [r7, #4]
 8009156:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8009158:	441a      	add	r2, r3
 800915a:	492a      	ldr	r1, [pc, #168]	; (8009204 <_LCD_DrawBitmap4bpp+0xe8>)
 800915c:	68fb      	ldr	r3, [r7, #12]
 800915e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8009162:	429a      	cmp	r2, r3
 8009164:	db01      	blt.n	800916a <_LCD_DrawBitmap4bpp+0x4e>
  {
    return 1;
 8009166:	2301      	movs	r3, #1
 8009168:	e046      	b.n	80091f8 <_LCD_DrawBitmap4bpp+0xdc>
  }
  PixelFormat = _GetPixelformat(LayerIndex);
 800916a:	68f8      	ldr	r0, [r7, #12]
 800916c:	f7ff f806 	bl	800817c <_GetPixelformat>
 8009170:	6278      	str	r0, [r7, #36]	; 0x24
  
  /* Check if destination has direct color mode */
  if (PixelFormat > LTDC_PIXEL_FORMAT_ARGB4444) 
 8009172:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009174:	2b04      	cmp	r3, #4
 8009176:	d901      	bls.n	800917c <_LCD_DrawBitmap4bpp+0x60>
  {
    return 1;
 8009178:	2301      	movs	r3, #1
 800917a:	e03d      	b.n	80091f8 <_LCD_DrawBitmap4bpp+0xdc>
  }
  BufferSize = _GetBufferSize(LayerIndex);
 800917c:	68f8      	ldr	r0, [r7, #12]
 800917e:	f7ff fda1 	bl	8008cc4 <_GetBufferSize>
 8009182:	6238      	str	r0, [r7, #32]
  AddrDst = _aAddr[LayerIndex] + BufferSize * _aBufferIndex[LayerIndex] + (y * _axSize[LayerIndex] + x) * _aBytesPerPixels[LayerIndex];
 8009184:	4a20      	ldr	r2, [pc, #128]	; (8009208 <_LCD_DrawBitmap4bpp+0xec>)
 8009186:	68fb      	ldr	r3, [r7, #12]
 8009188:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800918c:	491c      	ldr	r1, [pc, #112]	; (8009200 <_LCD_DrawBitmap4bpp+0xe4>)
 800918e:	68fb      	ldr	r3, [r7, #12]
 8009190:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8009194:	6879      	ldr	r1, [r7, #4]
 8009196:	fb01 f103 	mul.w	r1, r1, r3
 800919a:	68bb      	ldr	r3, [r7, #8]
 800919c:	440b      	add	r3, r1
 800919e:	481b      	ldr	r0, [pc, #108]	; (800920c <_LCD_DrawBitmap4bpp+0xf0>)
 80091a0:	68f9      	ldr	r1, [r7, #12]
 80091a2:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 80091a6:	fb01 f303 	mul.w	r3, r1, r3
 80091aa:	4618      	mov	r0, r3
 80091ac:	4918      	ldr	r1, [pc, #96]	; (8009210 <_LCD_DrawBitmap4bpp+0xf4>)
 80091ae:	68fb      	ldr	r3, [r7, #12]
 80091b0:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80091b4:	4619      	mov	r1, r3
 80091b6:	6a3b      	ldr	r3, [r7, #32]
 80091b8:	fb03 f301 	mul.w	r3, r3, r1
 80091bc:	4403      	add	r3, r0
 80091be:	4413      	add	r3, r2
 80091c0:	61fb      	str	r3, [r7, #28]
  OffLineSrc = (BytesPerLine * 2) - xSize;
 80091c2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80091c4:	005a      	lsls	r2, r3, #1
 80091c6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80091c8:	1ad3      	subs	r3, r2, r3
 80091ca:	61bb      	str	r3, [r7, #24]
  OffLineDst = _axSize[LayerIndex] - xSize;
 80091cc:	4a0c      	ldr	r2, [pc, #48]	; (8009200 <_LCD_DrawBitmap4bpp+0xe4>)
 80091ce:	68fb      	ldr	r3, [r7, #12]
 80091d0:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80091d4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80091d6:	1ad3      	subs	r3, r2, r3
 80091d8:	617b      	str	r3, [r7, #20]
  return _DMA_DrawBitmapA4((void *)p, (void *)AddrDst, OffLineSrc, OffLineDst, PixelFormat, xSize, ySize);;
 80091da:	69f9      	ldr	r1, [r7, #28]
 80091dc:	69b8      	ldr	r0, [r7, #24]
 80091de:	697c      	ldr	r4, [r7, #20]
 80091e0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80091e2:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80091e4:	9202      	str	r2, [sp, #8]
 80091e6:	9301      	str	r3, [sp, #4]
 80091e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80091ea:	9300      	str	r3, [sp, #0]
 80091ec:	4623      	mov	r3, r4
 80091ee:	4602      	mov	r2, r0
 80091f0:	6838      	ldr	r0, [r7, #0]
 80091f2:	f7ff fc0b 	bl	8008a0c <_DMA_DrawBitmapA4>
 80091f6:	4603      	mov	r3, r0
}
 80091f8:	4618      	mov	r0, r3
 80091fa:	372c      	adds	r7, #44	; 0x2c
 80091fc:	46bd      	mov	sp, r7
 80091fe:	bd90      	pop	{r4, r7, pc}
 8009200:	20001018 	.word	0x20001018
 8009204:	2000101c 	.word	0x2000101c
 8009208:	0801e878 	.word	0x0801e878
 800920c:	20001020 	.word	0x20001020
 8009210:	20001014 	.word	0x20001014

08009214 <_LCD_DrawMemdev16bpp>:
  * @param  BytesPerLineDst: Destination number of bytes per Line
  * @param  BytesPerLineSrc: Source number of bytes per Line
  * @retval None 
  */
static void _LCD_DrawMemdev16bpp(void * pDst, const void * pSrc, int xSize, int ySize, int BytesPerLineDst, int BytesPerLineSrc) 
{
 8009214:	b580      	push	{r7, lr}
 8009216:	b088      	sub	sp, #32
 8009218:	af02      	add	r7, sp, #8
 800921a:	60f8      	str	r0, [r7, #12]
 800921c:	60b9      	str	r1, [r7, #8]
 800921e:	607a      	str	r2, [r7, #4]
 8009220:	603b      	str	r3, [r7, #0]
  int OffLineSrc, OffLineDst;
 
  OffLineSrc = (BytesPerLineSrc / 2) - xSize;
 8009222:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009224:	2b00      	cmp	r3, #0
 8009226:	da00      	bge.n	800922a <_LCD_DrawMemdev16bpp+0x16>
 8009228:	3301      	adds	r3, #1
 800922a:	105b      	asrs	r3, r3, #1
 800922c:	461a      	mov	r2, r3
 800922e:	687b      	ldr	r3, [r7, #4]
 8009230:	1ad3      	subs	r3, r2, r3
 8009232:	617b      	str	r3, [r7, #20]
  OffLineDst = (BytesPerLineDst / 2) - xSize;
 8009234:	6a3b      	ldr	r3, [r7, #32]
 8009236:	2b00      	cmp	r3, #0
 8009238:	da00      	bge.n	800923c <_LCD_DrawMemdev16bpp+0x28>
 800923a:	3301      	adds	r3, #1
 800923c:	105b      	asrs	r3, r3, #1
 800923e:	461a      	mov	r2, r3
 8009240:	687b      	ldr	r3, [r7, #4]
 8009242:	1ad3      	subs	r3, r2, r3
 8009244:	613b      	str	r3, [r7, #16]
  _DMA_CopyRGB565(pSrc, pDst, xSize, ySize, OffLineSrc, OffLineDst);
 8009246:	693b      	ldr	r3, [r7, #16]
 8009248:	9301      	str	r3, [sp, #4]
 800924a:	697b      	ldr	r3, [r7, #20]
 800924c:	9300      	str	r3, [sp, #0]
 800924e:	683b      	ldr	r3, [r7, #0]
 8009250:	687a      	ldr	r2, [r7, #4]
 8009252:	68f9      	ldr	r1, [r7, #12]
 8009254:	68b8      	ldr	r0, [r7, #8]
 8009256:	f7ff fa6f 	bl	8008738 <_DMA_CopyRGB565>
}
 800925a:	bf00      	nop
 800925c:	3718      	adds	r7, #24
 800925e:	46bd      	mov	sp, r7
 8009260:	bd80      	pop	{r7, pc}

08009262 <_LCD_DrawMemdevAlpha>:
  * @param  BytesPerLineDst: Destination number of bytes per Line
  * @param  BytesPerLineSrc: Source number of bytes per Line
  * @retval None 
  */
static void _LCD_DrawMemdevAlpha(void * pDst, const void * pSrc, int xSize, int ySize, int BytesPerLineDst, int BytesPerLineSrc) 
{
 8009262:	b580      	push	{r7, lr}
 8009264:	b08a      	sub	sp, #40	; 0x28
 8009266:	af04      	add	r7, sp, #16
 8009268:	60f8      	str	r0, [r7, #12]
 800926a:	60b9      	str	r1, [r7, #8]
 800926c:	607a      	str	r2, [r7, #4]
 800926e:	603b      	str	r3, [r7, #0]
  int OffLineSrc, OffLineDst;
 
  OffLineSrc = (BytesPerLineSrc / 4) - xSize;
 8009270:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009272:	2b00      	cmp	r3, #0
 8009274:	da00      	bge.n	8009278 <_LCD_DrawMemdevAlpha+0x16>
 8009276:	3303      	adds	r3, #3
 8009278:	109b      	asrs	r3, r3, #2
 800927a:	461a      	mov	r2, r3
 800927c:	687b      	ldr	r3, [r7, #4]
 800927e:	1ad3      	subs	r3, r2, r3
 8009280:	617b      	str	r3, [r7, #20]
  OffLineDst = (BytesPerLineDst / 4) - xSize;
 8009282:	6a3b      	ldr	r3, [r7, #32]
 8009284:	2b00      	cmp	r3, #0
 8009286:	da00      	bge.n	800928a <_LCD_DrawMemdevAlpha+0x28>
 8009288:	3303      	adds	r3, #3
 800928a:	109b      	asrs	r3, r3, #2
 800928c:	461a      	mov	r2, r3
 800928e:	687b      	ldr	r3, [r7, #4]
 8009290:	1ad3      	subs	r3, r2, r3
 8009292:	613b      	str	r3, [r7, #16]
  _DMA_DrawAlphaBitmap(pDst, pSrc, xSize, ySize, OffLineSrc, OffLineDst, LTDC_PIXEL_FORMAT_ARGB8888);
 8009294:	2300      	movs	r3, #0
 8009296:	9302      	str	r3, [sp, #8]
 8009298:	693b      	ldr	r3, [r7, #16]
 800929a:	9301      	str	r3, [sp, #4]
 800929c:	697b      	ldr	r3, [r7, #20]
 800929e:	9300      	str	r3, [sp, #0]
 80092a0:	683b      	ldr	r3, [r7, #0]
 80092a2:	687a      	ldr	r2, [r7, #4]
 80092a4:	68b9      	ldr	r1, [r7, #8]
 80092a6:	68f8      	ldr	r0, [r7, #12]
 80092a8:	f7ff fc30 	bl	8008b0c <_DMA_DrawAlphaBitmap>
}
 80092ac:	bf00      	nop
 80092ae:	3718      	adds	r7, #24
 80092b0:	46bd      	mov	sp, r7
 80092b2:	bd80      	pop	{r7, pc}

080092b4 <_LCD_DrawBitmapAlpha>:
  * @param  ySize       : Vertical bitmap size
  * @param  BytesPerLine: Bytes per Line
  * @retval None 
  */
static void _LCD_DrawBitmapAlpha(int LayerIndex, int x, int y, const void * p, int xSize, int ySize, int BytesPerLine) 
{
 80092b4:	b580      	push	{r7, lr}
 80092b6:	b08e      	sub	sp, #56	; 0x38
 80092b8:	af04      	add	r7, sp, #16
 80092ba:	60f8      	str	r0, [r7, #12]
 80092bc:	60b9      	str	r1, [r7, #8]
 80092be:	607a      	str	r2, [r7, #4]
 80092c0:	603b      	str	r3, [r7, #0]
  U32 BufferSize, AddrDst;
  int OffLineSrc, OffLineDst;
  U32 PixelFormat;

  PixelFormat = _GetPixelformat(LayerIndex);
 80092c2:	68f8      	ldr	r0, [r7, #12]
 80092c4:	f7fe ff5a 	bl	800817c <_GetPixelformat>
 80092c8:	6278      	str	r0, [r7, #36]	; 0x24
  BufferSize = _GetBufferSize(LayerIndex);
 80092ca:	68f8      	ldr	r0, [r7, #12]
 80092cc:	f7ff fcfa 	bl	8008cc4 <_GetBufferSize>
 80092d0:	6238      	str	r0, [r7, #32]
  AddrDst = _aAddr[LayerIndex] + BufferSize * _aBufferIndex[LayerIndex] + (y * _axSize[LayerIndex] + x) * _aBytesPerPixels[LayerIndex];
 80092d2:	4a1f      	ldr	r2, [pc, #124]	; (8009350 <_LCD_DrawBitmapAlpha+0x9c>)
 80092d4:	68fb      	ldr	r3, [r7, #12]
 80092d6:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80092da:	491e      	ldr	r1, [pc, #120]	; (8009354 <_LCD_DrawBitmapAlpha+0xa0>)
 80092dc:	68fb      	ldr	r3, [r7, #12]
 80092de:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80092e2:	6879      	ldr	r1, [r7, #4]
 80092e4:	fb01 f103 	mul.w	r1, r1, r3
 80092e8:	68bb      	ldr	r3, [r7, #8]
 80092ea:	440b      	add	r3, r1
 80092ec:	481a      	ldr	r0, [pc, #104]	; (8009358 <_LCD_DrawBitmapAlpha+0xa4>)
 80092ee:	68f9      	ldr	r1, [r7, #12]
 80092f0:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 80092f4:	fb01 f303 	mul.w	r3, r1, r3
 80092f8:	4618      	mov	r0, r3
 80092fa:	4918      	ldr	r1, [pc, #96]	; (800935c <_LCD_DrawBitmapAlpha+0xa8>)
 80092fc:	68fb      	ldr	r3, [r7, #12]
 80092fe:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8009302:	4619      	mov	r1, r3
 8009304:	6a3b      	ldr	r3, [r7, #32]
 8009306:	fb03 f301 	mul.w	r3, r3, r1
 800930a:	4403      	add	r3, r0
 800930c:	4413      	add	r3, r2
 800930e:	61fb      	str	r3, [r7, #28]
  OffLineSrc = (BytesPerLine / 4) - xSize;
 8009310:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009312:	2b00      	cmp	r3, #0
 8009314:	da00      	bge.n	8009318 <_LCD_DrawBitmapAlpha+0x64>
 8009316:	3303      	adds	r3, #3
 8009318:	109b      	asrs	r3, r3, #2
 800931a:	461a      	mov	r2, r3
 800931c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800931e:	1ad3      	subs	r3, r2, r3
 8009320:	61bb      	str	r3, [r7, #24]
  OffLineDst = _axSize[LayerIndex] - xSize;
 8009322:	4a0c      	ldr	r2, [pc, #48]	; (8009354 <_LCD_DrawBitmapAlpha+0xa0>)
 8009324:	68fb      	ldr	r3, [r7, #12]
 8009326:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800932a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800932c:	1ad3      	subs	r3, r2, r3
 800932e:	617b      	str	r3, [r7, #20]
  _DMA_DrawAlphaBitmap((void *)AddrDst, p, xSize, ySize, OffLineSrc, OffLineDst, PixelFormat);
 8009330:	69f8      	ldr	r0, [r7, #28]
 8009332:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009334:	9302      	str	r3, [sp, #8]
 8009336:	697b      	ldr	r3, [r7, #20]
 8009338:	9301      	str	r3, [sp, #4]
 800933a:	69bb      	ldr	r3, [r7, #24]
 800933c:	9300      	str	r3, [sp, #0]
 800933e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009340:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009342:	6839      	ldr	r1, [r7, #0]
 8009344:	f7ff fbe2 	bl	8008b0c <_DMA_DrawAlphaBitmap>
}
 8009348:	bf00      	nop
 800934a:	3728      	adds	r7, #40	; 0x28
 800934c:	46bd      	mov	sp, r7
 800934e:	bd80      	pop	{r7, pc}
 8009350:	0801e878 	.word	0x0801e878
 8009354:	20001018 	.word	0x20001018
 8009358:	20001020 	.word	0x20001020
 800935c:	20001014 	.word	0x20001014

08009360 <_LCD_GetpPalConvTable>:
  * @param  pBitmap   : Bitmap
  * @param  LayerIndex: Layer index
  * @retval LCD_PIXELINDEX 
  */
static LCD_PIXELINDEX * _LCD_GetpPalConvTable(const LCD_LOGPALETTE GUI_UNI_PTR * pLogPal, const GUI_BITMAP GUI_UNI_PTR * pBitmap, int LayerIndex) 
{
 8009360:	b580      	push	{r7, lr}
 8009362:	b086      	sub	sp, #24
 8009364:	af00      	add	r7, sp, #0
 8009366:	60f8      	str	r0, [r7, #12]
 8009368:	60b9      	str	r1, [r7, #8]
 800936a:	607a      	str	r2, [r7, #4]
  void (* pFunc)(void);
  int DoDefault = 0;
 800936c:	2300      	movs	r3, #0
 800936e:	617b      	str	r3, [r7, #20]

  /* Check if we have a non transparent device independent bitmap */
  if (pBitmap->BitsPerPixel == 8) 
 8009370:	68bb      	ldr	r3, [r7, #8]
 8009372:	88db      	ldrh	r3, [r3, #6]
 8009374:	2b08      	cmp	r3, #8
 8009376:	d119      	bne.n	80093ac <_LCD_GetpPalConvTable+0x4c>
  {
    pFunc = LCD_GetDevFunc(LayerIndex, LCD_DEVFUNC_DRAWBMP_8BPP);
 8009378:	2125      	movs	r1, #37	; 0x25
 800937a:	6878      	ldr	r0, [r7, #4]
 800937c:	f003 fdf0 	bl	800cf60 <LCD_GetDevFunc>
 8009380:	6138      	str	r0, [r7, #16]
    if (pFunc) 
 8009382:	693b      	ldr	r3, [r7, #16]
 8009384:	2b00      	cmp	r3, #0
 8009386:	d00e      	beq.n	80093a6 <_LCD_GetpPalConvTable+0x46>
    {
      if (pBitmap->pPal) 
 8009388:	68bb      	ldr	r3, [r7, #8]
 800938a:	68db      	ldr	r3, [r3, #12]
 800938c:	2b00      	cmp	r3, #0
 800938e:	d007      	beq.n	80093a0 <_LCD_GetpPalConvTable+0x40>
      {
        if (pBitmap->pPal->HasTrans) 
 8009390:	68bb      	ldr	r3, [r7, #8]
 8009392:	68db      	ldr	r3, [r3, #12]
 8009394:	791b      	ldrb	r3, [r3, #4]
 8009396:	2b00      	cmp	r3, #0
 8009398:	d00a      	beq.n	80093b0 <_LCD_GetpPalConvTable+0x50>
        {
          DoDefault = 1;
 800939a:	2301      	movs	r3, #1
 800939c:	617b      	str	r3, [r7, #20]
 800939e:	e007      	b.n	80093b0 <_LCD_GetpPalConvTable+0x50>
        }
      }
      else
      {
        DoDefault = 1;
 80093a0:	2301      	movs	r3, #1
 80093a2:	617b      	str	r3, [r7, #20]
 80093a4:	e004      	b.n	80093b0 <_LCD_GetpPalConvTable+0x50>
      }
    }
    else
    {
      DoDefault = 1;
 80093a6:	2301      	movs	r3, #1
 80093a8:	617b      	str	r3, [r7, #20]
 80093aa:	e001      	b.n	80093b0 <_LCD_GetpPalConvTable+0x50>
    }
  }
  else 
  {
    DoDefault = 1;
 80093ac:	2301      	movs	r3, #1
 80093ae:	617b      	str	r3, [r7, #20]
  }
  
  /* Default palette management for other cases */
  if (DoDefault) 
 80093b0:	697b      	ldr	r3, [r7, #20]
 80093b2:	2b00      	cmp	r3, #0
 80093b4:	d004      	beq.n	80093c0 <_LCD_GetpPalConvTable+0x60>
  {
    /* Return a pointer to the index values to be used by the controller */
    return LCD_GetpPalConvTable(pLogPal);
 80093b6:	68f8      	ldr	r0, [r7, #12]
 80093b8:	f003 fd1c 	bl	800cdf4 <LCD_GetpPalConvTable>
 80093bc:	4603      	mov	r3, r0
 80093be:	e009      	b.n	80093d4 <_LCD_GetpPalConvTable+0x74>
  }

  /* Load LUT using DMA2D */
  _DMA_LoadLUT((U32 *)pLogPal->pPalEntries, pLogPal->NumEntries);
 80093c0:	68fb      	ldr	r3, [r7, #12]
 80093c2:	689a      	ldr	r2, [r3, #8]
 80093c4:	68fb      	ldr	r3, [r7, #12]
 80093c6:	681b      	ldr	r3, [r3, #0]
 80093c8:	4619      	mov	r1, r3
 80093ca:	4610      	mov	r0, r2
 80093cc:	f7ff fbe4 	bl	8008b98 <_DMA_LoadLUT>
  
  /* Return something not NULL */
  return _pBuffer_DMA2D;
 80093d0:	4b02      	ldr	r3, [pc, #8]	; (80093dc <_LCD_GetpPalConvTable+0x7c>)
 80093d2:	681b      	ldr	r3, [r3, #0]
}
 80093d4:	4618      	mov	r0, r3
 80093d6:	3718      	adds	r7, #24
 80093d8:	46bd      	mov	sp, r7
 80093da:	bd80      	pop	{r7, pc}
 80093dc:	20000100 	.word	0x20000100

080093e0 <HAL_LTDC_LineEventCallback>:
/**
  * @brief  End of frame interrupt for managing multiple buffering
  * @param  hltdc: ltdc handle 
  * @retval None
  */
void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef *hltdc) {
 80093e0:	b580      	push	{r7, lr}
 80093e2:	b084      	sub	sp, #16
 80093e4:	af00      	add	r7, sp, #0
 80093e6:	6078      	str	r0, [r7, #4]
  U32 Addr;
  int i;

  for (i = 0; i < GUI_NUM_LAYERS; i++) 
 80093e8:	2300      	movs	r3, #0
 80093ea:	60fb      	str	r3, [r7, #12]
 80093ec:	e044      	b.n	8009478 <HAL_LTDC_LineEventCallback+0x98>
  {
    if (_aPendingBuffer[i] >= 0) 
 80093ee:	4a28      	ldr	r2, [pc, #160]	; (8009490 <HAL_LTDC_LineEventCallback+0xb0>)
 80093f0:	68fb      	ldr	r3, [r7, #12]
 80093f2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80093f6:	2b00      	cmp	r3, #0
 80093f8:	db3b      	blt.n	8009472 <HAL_LTDC_LineEventCallback+0x92>
    {
      /* Calculate address of buffer to be used  as visible frame buffer */
      Addr = _aAddr[i] + _axSize[i] * _aySize[i] * _aPendingBuffer[i] * _aBytesPerPixels[i];
 80093fa:	4a26      	ldr	r2, [pc, #152]	; (8009494 <HAL_LTDC_LineEventCallback+0xb4>)
 80093fc:	68fb      	ldr	r3, [r7, #12]
 80093fe:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009402:	4925      	ldr	r1, [pc, #148]	; (8009498 <HAL_LTDC_LineEventCallback+0xb8>)
 8009404:	68fa      	ldr	r2, [r7, #12]
 8009406:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800940a:	4824      	ldr	r0, [pc, #144]	; (800949c <HAL_LTDC_LineEventCallback+0xbc>)
 800940c:	68f9      	ldr	r1, [r7, #12]
 800940e:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 8009412:	fb01 f202 	mul.w	r2, r1, r2
 8009416:	481e      	ldr	r0, [pc, #120]	; (8009490 <HAL_LTDC_LineEventCallback+0xb0>)
 8009418:	68f9      	ldr	r1, [r7, #12]
 800941a:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 800941e:	fb01 f202 	mul.w	r2, r1, r2
 8009422:	481f      	ldr	r0, [pc, #124]	; (80094a0 <HAL_LTDC_LineEventCallback+0xc0>)
 8009424:	68f9      	ldr	r1, [r7, #12]
 8009426:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 800942a:	fb01 f202 	mul.w	r2, r1, r2
 800942e:	4413      	add	r3, r2
 8009430:	60bb      	str	r3, [r7, #8]
      
      /* Store address into the LTDC regs */	  
      __HAL_LTDC_LAYER(hltdc, i)->CFBAR = Addr;     
 8009432:	687b      	ldr	r3, [r7, #4]
 8009434:	681b      	ldr	r3, [r3, #0]
 8009436:	461a      	mov	r2, r3
 8009438:	68fb      	ldr	r3, [r7, #12]
 800943a:	01db      	lsls	r3, r3, #7
 800943c:	4413      	add	r3, r2
 800943e:	3384      	adds	r3, #132	; 0x84
 8009440:	461a      	mov	r2, r3
 8009442:	68bb      	ldr	r3, [r7, #8]
 8009444:	6293      	str	r3, [r2, #40]	; 0x28
      __HAL_LTDC_RELOAD_CONFIG(hltdc);   
 8009446:	687b      	ldr	r3, [r7, #4]
 8009448:	681b      	ldr	r3, [r3, #0]
 800944a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800944c:	687b      	ldr	r3, [r7, #4]
 800944e:	681b      	ldr	r3, [r3, #0]
 8009450:	f042 0201 	orr.w	r2, r2, #1
 8009454:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Tell emWin that buffer is used */
      GUI_MULTIBUF_ConfirmEx(i, _aPendingBuffer[i]);
 8009456:	4a0e      	ldr	r2, [pc, #56]	; (8009490 <HAL_LTDC_LineEventCallback+0xb0>)
 8009458:	68fb      	ldr	r3, [r7, #12]
 800945a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800945e:	4619      	mov	r1, r3
 8009460:	68f8      	ldr	r0, [r7, #12]
 8009462:	f002 fa8f 	bl	800b984 <GUI_MULTIBUF_ConfirmEx>
      
      /* Clear pending buffer flag of layer */
      _aPendingBuffer[i] = -1;
 8009466:	4a0a      	ldr	r2, [pc, #40]	; (8009490 <HAL_LTDC_LineEventCallback+0xb0>)
 8009468:	68fb      	ldr	r3, [r7, #12]
 800946a:	f04f 31ff 	mov.w	r1, #4294967295
 800946e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
  for (i = 0; i < GUI_NUM_LAYERS; i++) 
 8009472:	68fb      	ldr	r3, [r7, #12]
 8009474:	3301      	adds	r3, #1
 8009476:	60fb      	str	r3, [r7, #12]
 8009478:	68fb      	ldr	r3, [r7, #12]
 800947a:	2b00      	cmp	r3, #0
 800947c:	ddb7      	ble.n	80093ee <HAL_LTDC_LineEventCallback+0xe>
    }
  }
  HAL_LTDC_ProgramLineEvent(hltdc, 0);
 800947e:	2100      	movs	r1, #0
 8009480:	6878      	ldr	r0, [r7, #4]
 8009482:	f7fd f833 	bl	80064ec <HAL_LTDC_ProgramLineEvent>
}
 8009486:	bf00      	nop
 8009488:	3710      	adds	r7, #16
 800948a:	46bd      	mov	sp, r7
 800948c:	bd80      	pop	{r7, pc}
 800948e:	bf00      	nop
 8009490:	200000f8 	.word	0x200000f8
 8009494:	0801e878 	.word	0x0801e878
 8009498:	20001018 	.word	0x20001018
 800949c:	2000101c 	.word	0x2000101c
 80094a0:	20001020 	.word	0x20001020

080094a4 <LCD_X_DisplayDriver>:
  * @param  Cmd       : Commands
  * @param  pData     : Pointer to a LCD_X_DATA structure
  * @retval int 
  */
int LCD_X_DisplayDriver(unsigned LayerIndex, unsigned Cmd, void * pData) 
{
 80094a4:	b580      	push	{r7, lr}
 80094a6:	b092      	sub	sp, #72	; 0x48
 80094a8:	af00      	add	r7, sp, #0
 80094aa:	60f8      	str	r0, [r7, #12]
 80094ac:	60b9      	str	r1, [r7, #8]
 80094ae:	607a      	str	r2, [r7, #4]
  int r = 0;
 80094b0:	2300      	movs	r3, #0
 80094b2:	647b      	str	r3, [r7, #68]	; 0x44
 80094b4:	68bb      	ldr	r3, [r7, #8]
 80094b6:	3b01      	subs	r3, #1
 80094b8:	2b0d      	cmp	r3, #13
 80094ba:	f200 810d 	bhi.w	80096d8 <LCD_X_DisplayDriver+0x234>
 80094be:	a201      	add	r2, pc, #4	; (adr r2, 80094c4 <LCD_X_DisplayDriver+0x20>)
 80094c0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80094c4:	080094fd 	.word	0x080094fd
 80094c8:	080096d9 	.word	0x080096d9
 80094cc:	08009505 	.word	0x08009505
 80094d0:	0800954f 	.word	0x0800954f
 80094d4:	08009569 	.word	0x08009569
 80094d8:	0800957b 	.word	0x0800957b
 80094dc:	0800960f 	.word	0x0800960f
 80094e0:	080095f5 	.word	0x080095f5
 80094e4:	0800958d 	.word	0x0800958d
 80094e8:	08009675 	.word	0x08009675
 80094ec:	080096d9 	.word	0x080096d9
 80094f0:	08009689 	.word	0x08009689
 80094f4:	080096a9 	.word	0x080096a9
 80094f8:	0800953d 	.word	0x0800953d
  switch (Cmd) 
  {
    case LCD_X_INITCONTROLLER: 
    {
      /* Called during the initialization process in order to set up the display controller and put it into operation */
      LCD_LL_LayerInit(LayerIndex);
 80094fc:	68f8      	ldr	r0, [r7, #12]
 80094fe:	f7fe ffbf 	bl	8008480 <LCD_LL_LayerInit>
      break;
 8009502:	e0ed      	b.n	80096e0 <LCD_X_DisplayDriver+0x23c>
    case LCD_X_SETORG: 
    {
      /* Required for setting the display origin which is passed in the 'xPos' and 'yPos' element of p */
      LCD_X_SETORG_INFO * p;
      
      p = (LCD_X_SETORG_INFO *)pData;
 8009504:	687b      	ldr	r3, [r7, #4]
 8009506:	61fb      	str	r3, [r7, #28]
      addr = _aAddr[LayerIndex] + p->yPos * _axSize[LayerIndex] * _aBytesPerPixels[LayerIndex];
 8009508:	4a78      	ldr	r2, [pc, #480]	; (80096ec <LCD_X_DisplayDriver+0x248>)
 800950a:	68fb      	ldr	r3, [r7, #12]
 800950c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009510:	69fa      	ldr	r2, [r7, #28]
 8009512:	6852      	ldr	r2, [r2, #4]
 8009514:	4876      	ldr	r0, [pc, #472]	; (80096f0 <LCD_X_DisplayDriver+0x24c>)
 8009516:	68f9      	ldr	r1, [r7, #12]
 8009518:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 800951c:	fb01 f202 	mul.w	r2, r1, r2
 8009520:	4874      	ldr	r0, [pc, #464]	; (80096f4 <LCD_X_DisplayDriver+0x250>)
 8009522:	68f9      	ldr	r1, [r7, #12]
 8009524:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 8009528:	fb01 f202 	mul.w	r2, r1, r2
 800952c:	4413      	add	r3, r2
 800952e:	61bb      	str	r3, [r7, #24]
      HAL_LTDC_SetAddress(&hltdc, addr, LayerIndex);
 8009530:	68fa      	ldr	r2, [r7, #12]
 8009532:	69b9      	ldr	r1, [r7, #24]
 8009534:	4870      	ldr	r0, [pc, #448]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 8009536:	f7fc ffa3 	bl	8006480 <HAL_LTDC_SetAddress>
      break;
 800953a:	e0d1      	b.n	80096e0 <LCD_X_DisplayDriver+0x23c>
    case LCD_X_SHOWBUFFER: 
    {
      /* Required if multiple buffers are used. The 'Index' element of p contains the buffer index. */
      LCD_X_SHOWBUFFER_INFO * p;
      
      p = (LCD_X_SHOWBUFFER_INFO *)pData;
 800953c:	687b      	ldr	r3, [r7, #4]
 800953e:	643b      	str	r3, [r7, #64]	; 0x40
      _aPendingBuffer[LayerIndex] = p->Index;
 8009540:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8009542:	681a      	ldr	r2, [r3, #0]
 8009544:	496d      	ldr	r1, [pc, #436]	; (80096fc <LCD_X_DisplayDriver+0x258>)
 8009546:	68fb      	ldr	r3, [r7, #12]
 8009548:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      break;
 800954c:	e0c8      	b.n	80096e0 <LCD_X_DisplayDriver+0x23c>
    case LCD_X_SETLUTENTRY: 
    {
      /* Required for setting a lookup table entry which is passed in the 'Pos' and 'Color' element of p */
      LCD_X_SETLUTENTRY_INFO * p;
      
      p = (LCD_X_SETLUTENTRY_INFO *)pData;
 800954e:	687b      	ldr	r3, [r7, #4]
 8009550:	623b      	str	r3, [r7, #32]
      HAL_LTDC_ConfigCLUT(&hltdc, (uint32_t*)p->Color, p->Pos, LayerIndex);
 8009552:	6a3b      	ldr	r3, [r7, #32]
 8009554:	681b      	ldr	r3, [r3, #0]
 8009556:	4619      	mov	r1, r3
 8009558:	6a3b      	ldr	r3, [r7, #32]
 800955a:	791b      	ldrb	r3, [r3, #4]
 800955c:	461a      	mov	r2, r3
 800955e:	68fb      	ldr	r3, [r7, #12]
 8009560:	4865      	ldr	r0, [pc, #404]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 8009562:	f7fc fdcd 	bl	8006100 <HAL_LTDC_ConfigCLUT>
      break;
 8009566:	e0bb      	b.n	80096e0 <LCD_X_DisplayDriver+0x23c>
    }
    case LCD_X_ON: 
    {
      /* Required if the display controller should support switching on and off */
      __HAL_LTDC_ENABLE(&hltdc);
 8009568:	4b63      	ldr	r3, [pc, #396]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 800956a:	681b      	ldr	r3, [r3, #0]
 800956c:	699a      	ldr	r2, [r3, #24]
 800956e:	4b62      	ldr	r3, [pc, #392]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 8009570:	681b      	ldr	r3, [r3, #0]
 8009572:	f042 0201 	orr.w	r2, r2, #1
 8009576:	619a      	str	r2, [r3, #24]
      break;
 8009578:	e0b2      	b.n	80096e0 <LCD_X_DisplayDriver+0x23c>
    }
    case LCD_X_OFF: 
    {
      /* Required if the display controller should support switching on and off */
      __HAL_LTDC_DISABLE(&hltdc);
 800957a:	4b5f      	ldr	r3, [pc, #380]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 800957c:	681b      	ldr	r3, [r3, #0]
 800957e:	699a      	ldr	r2, [r3, #24]
 8009580:	4b5d      	ldr	r3, [pc, #372]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 8009582:	681b      	ldr	r3, [r3, #0]
 8009584:	f022 0201 	bic.w	r2, r2, #1
 8009588:	619a      	str	r2, [r3, #24]
      break;
 800958a:	e0a9      	b.n	80096e0 <LCD_X_DisplayDriver+0x23c>
    case LCD_X_SETVIS: 
    {
      /* Required for setting the layer visibility which is passed in the 'OnOff' element of pData */
      LCD_X_SETVIS_INFO * p;
      
      p = (LCD_X_SETVIS_INFO *)pData;
 800958c:	687b      	ldr	r3, [r7, #4]
 800958e:	62fb      	str	r3, [r7, #44]	; 0x2c
      if(p->OnOff == ENABLE )
 8009590:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009592:	681b      	ldr	r3, [r3, #0]
 8009594:	2b01      	cmp	r3, #1
 8009596:	d112      	bne.n	80095be <LCD_X_DisplayDriver+0x11a>
      {
        __HAL_LTDC_LAYER_ENABLE(&hltdc, LayerIndex); 
 8009598:	4b57      	ldr	r3, [pc, #348]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 800959a:	681b      	ldr	r3, [r3, #0]
 800959c:	461a      	mov	r2, r3
 800959e:	68fb      	ldr	r3, [r7, #12]
 80095a0:	01db      	lsls	r3, r3, #7
 80095a2:	4413      	add	r3, r2
 80095a4:	3384      	adds	r3, #132	; 0x84
 80095a6:	681b      	ldr	r3, [r3, #0]
 80095a8:	4a53      	ldr	r2, [pc, #332]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 80095aa:	6812      	ldr	r2, [r2, #0]
 80095ac:	4611      	mov	r1, r2
 80095ae:	68fa      	ldr	r2, [r7, #12]
 80095b0:	01d2      	lsls	r2, r2, #7
 80095b2:	440a      	add	r2, r1
 80095b4:	3284      	adds	r2, #132	; 0x84
 80095b6:	f043 0301 	orr.w	r3, r3, #1
 80095ba:	6013      	str	r3, [r2, #0]
 80095bc:	e011      	b.n	80095e2 <LCD_X_DisplayDriver+0x13e>
      }
      else
      {
        __HAL_LTDC_LAYER_DISABLE(&hltdc, LayerIndex);
 80095be:	4b4e      	ldr	r3, [pc, #312]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 80095c0:	681b      	ldr	r3, [r3, #0]
 80095c2:	461a      	mov	r2, r3
 80095c4:	68fb      	ldr	r3, [r7, #12]
 80095c6:	01db      	lsls	r3, r3, #7
 80095c8:	4413      	add	r3, r2
 80095ca:	3384      	adds	r3, #132	; 0x84
 80095cc:	681b      	ldr	r3, [r3, #0]
 80095ce:	4a4a      	ldr	r2, [pc, #296]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 80095d0:	6812      	ldr	r2, [r2, #0]
 80095d2:	4611      	mov	r1, r2
 80095d4:	68fa      	ldr	r2, [r7, #12]
 80095d6:	01d2      	lsls	r2, r2, #7
 80095d8:	440a      	add	r2, r1
 80095da:	3284      	adds	r2, #132	; 0x84
 80095dc:	f023 0301 	bic.w	r3, r3, #1
 80095e0:	6013      	str	r3, [r2, #0]
      }
      __HAL_LTDC_RELOAD_CONFIG(&hltdc);
 80095e2:	4b45      	ldr	r3, [pc, #276]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 80095e4:	681b      	ldr	r3, [r3, #0]
 80095e6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80095e8:	4b43      	ldr	r3, [pc, #268]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 80095ea:	681b      	ldr	r3, [r3, #0]
 80095ec:	f042 0201 	orr.w	r2, r2, #1
 80095f0:	625a      	str	r2, [r3, #36]	; 0x24
      break;
 80095f2:	e075      	b.n	80096e0 <LCD_X_DisplayDriver+0x23c>
    case LCD_X_SETPOS:
    {
      /* Required for setting the layer position which is passed in the 'xPos' and 'yPos' element of pData */
      LCD_X_SETPOS_INFO * p;
      
      p = (LCD_X_SETPOS_INFO *)pData;    
 80095f4:	687b      	ldr	r3, [r7, #4]
 80095f6:	62bb      	str	r3, [r7, #40]	; 0x28
      HAL_LTDC_SetWindowPosition(&hltdc, p->xPos, p->yPos, LayerIndex);
 80095f8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80095fa:	681b      	ldr	r3, [r3, #0]
 80095fc:	4619      	mov	r1, r3
 80095fe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009600:	685b      	ldr	r3, [r3, #4]
 8009602:	461a      	mov	r2, r3
 8009604:	68fb      	ldr	r3, [r7, #12]
 8009606:	483c      	ldr	r0, [pc, #240]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 8009608:	f7fc febe 	bl	8006388 <HAL_LTDC_SetWindowPosition>
      break;
 800960c:	e068      	b.n	80096e0 <LCD_X_DisplayDriver+0x23c>
    {
      /* Required for setting the layer position which is passed in the 'xPos' and 'yPos' element of pData */
      LCD_X_SETSIZE_INFO * p;
      int xPos, yPos;

      GUI_GetLayerPosEx(LayerIndex, &xPos, &yPos);
 800960e:	f107 0210 	add.w	r2, r7, #16
 8009612:	f107 0314 	add.w	r3, r7, #20
 8009616:	4619      	mov	r1, r3
 8009618:	68f8      	ldr	r0, [r7, #12]
 800961a:	f002 fa0d 	bl	800ba38 <GUI_GetLayerPosEx>
      p = (LCD_X_SETSIZE_INFO *)pData;
 800961e:	687b      	ldr	r3, [r7, #4]
 8009620:	627b      	str	r3, [r7, #36]	; 0x24
      if (LCD_GetSwapXYEx(LayerIndex))
 8009622:	68fb      	ldr	r3, [r7, #12]
 8009624:	4618      	mov	r0, r3
 8009626:	f003 fc75 	bl	800cf14 <LCD_GetSwapXYEx>
 800962a:	4603      	mov	r3, r0
 800962c:	2b00      	cmp	r3, #0
 800962e:	d00c      	beq.n	800964a <LCD_X_DisplayDriver+0x1a6>
      {
        _axSize[LayerIndex] = p->ySize;
 8009630:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009632:	685a      	ldr	r2, [r3, #4]
 8009634:	492e      	ldr	r1, [pc, #184]	; (80096f0 <LCD_X_DisplayDriver+0x24c>)
 8009636:	68fb      	ldr	r3, [r7, #12]
 8009638:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        _aySize[LayerIndex] = p->xSize;
 800963c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800963e:	681a      	ldr	r2, [r3, #0]
 8009640:	492f      	ldr	r1, [pc, #188]	; (8009700 <LCD_X_DisplayDriver+0x25c>)
 8009642:	68fb      	ldr	r3, [r7, #12]
 8009644:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8009648:	e00b      	b.n	8009662 <LCD_X_DisplayDriver+0x1be>
      }
      else
      {
        _axSize[LayerIndex] = p->xSize;
 800964a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800964c:	681a      	ldr	r2, [r3, #0]
 800964e:	4928      	ldr	r1, [pc, #160]	; (80096f0 <LCD_X_DisplayDriver+0x24c>)
 8009650:	68fb      	ldr	r3, [r7, #12]
 8009652:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        _aySize[LayerIndex] = p->ySize;
 8009656:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009658:	685a      	ldr	r2, [r3, #4]
 800965a:	4929      	ldr	r1, [pc, #164]	; (8009700 <LCD_X_DisplayDriver+0x25c>)
 800965c:	68fb      	ldr	r3, [r7, #12]
 800965e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
      }
      HAL_LTDC_SetWindowPosition(&hltdc, xPos, yPos, LayerIndex);
 8009662:	697b      	ldr	r3, [r7, #20]
 8009664:	4619      	mov	r1, r3
 8009666:	693b      	ldr	r3, [r7, #16]
 8009668:	461a      	mov	r2, r3
 800966a:	68fb      	ldr	r3, [r7, #12]
 800966c:	4822      	ldr	r0, [pc, #136]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 800966e:	f7fc fe8b 	bl	8006388 <HAL_LTDC_SetWindowPosition>
      break;
 8009672:	e035      	b.n	80096e0 <LCD_X_DisplayDriver+0x23c>
    case LCD_X_SETALPHA: 
    {
      /* Required for setting the alpha value which is passed in the 'Alpha' element of pData */
      LCD_X_SETALPHA_INFO * p;

      p = (LCD_X_SETALPHA_INFO *)pData;
 8009674:	687b      	ldr	r3, [r7, #4]
 8009676:	633b      	str	r3, [r7, #48]	; 0x30
      HAL_LTDC_SetAlpha(&hltdc, p->Alpha, LayerIndex);
 8009678:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800967a:	681b      	ldr	r3, [r3, #0]
 800967c:	68fa      	ldr	r2, [r7, #12]
 800967e:	4619      	mov	r1, r3
 8009680:	481d      	ldr	r0, [pc, #116]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 8009682:	f7fc fec7 	bl	8006414 <HAL_LTDC_SetAlpha>
      break;
 8009686:	e02b      	b.n	80096e0 <LCD_X_DisplayDriver+0x23c>
    case LCD_X_SETCHROMAMODE: 
    {
      /* Required for setting the chroma mode which is passed in the 'ChromaMode' element of pData */
      LCD_X_SETCHROMAMODE_INFO * p;
      
      p = (LCD_X_SETCHROMAMODE_INFO *)pData;
 8009688:	687b      	ldr	r3, [r7, #4]
 800968a:	637b      	str	r3, [r7, #52]	; 0x34
      if(p->ChromaMode != 0)
 800968c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800968e:	681b      	ldr	r3, [r3, #0]
 8009690:	2b00      	cmp	r3, #0
 8009692:	d004      	beq.n	800969e <LCD_X_DisplayDriver+0x1fa>
      {
        HAL_LTDC_EnableColorKeying(&hltdc, LayerIndex);
 8009694:	68f9      	ldr	r1, [r7, #12]
 8009696:	4818      	ldr	r0, [pc, #96]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 8009698:	f7fc fda0 	bl	80061dc <HAL_LTDC_EnableColorKeying>
      }
      else
      {
        HAL_LTDC_DisableColorKeying(&hltdc, LayerIndex);      
      }
      break;
 800969c:	e020      	b.n	80096e0 <LCD_X_DisplayDriver+0x23c>
        HAL_LTDC_DisableColorKeying(&hltdc, LayerIndex);      
 800969e:	68f9      	ldr	r1, [r7, #12]
 80096a0:	4815      	ldr	r0, [pc, #84]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 80096a2:	f7fc fdd4 	bl	800624e <HAL_LTDC_DisableColorKeying>
      break;
 80096a6:	e01b      	b.n	80096e0 <LCD_X_DisplayDriver+0x23c>
    {
      /* Required for setting the chroma value which is passed in the 'ChromaMin' and 'ChromaMax' element of pData */
      LCD_X_SETCHROMA_INFO * p;
      U32 Color;

      p = (LCD_X_SETCHROMA_INFO *)pData;
 80096a8:	687b      	ldr	r3, [r7, #4]
 80096aa:	63fb      	str	r3, [r7, #60]	; 0x3c
      Color = ((p->ChromaMin & 0xFF0000) >> 16) | (p->ChromaMin & 0x00FF00) | ((p->ChromaMin & 0x0000FF) << 16);
 80096ac:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80096ae:	681b      	ldr	r3, [r3, #0]
 80096b0:	0c1b      	lsrs	r3, r3, #16
 80096b2:	b2da      	uxtb	r2, r3
 80096b4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80096b6:	681b      	ldr	r3, [r3, #0]
 80096b8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80096bc:	431a      	orrs	r2, r3
 80096be:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80096c0:	681b      	ldr	r3, [r3, #0]
 80096c2:	041b      	lsls	r3, r3, #16
 80096c4:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 80096c8:	4313      	orrs	r3, r2
 80096ca:	63bb      	str	r3, [r7, #56]	; 0x38
      HAL_LTDC_ConfigColorKeying(&hltdc, Color, LayerIndex);
 80096cc:	68fa      	ldr	r2, [r7, #12]
 80096ce:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 80096d0:	4809      	ldr	r0, [pc, #36]	; (80096f8 <LCD_X_DisplayDriver+0x254>)
 80096d2:	f7fc fcd1 	bl	8006078 <HAL_LTDC_ConfigColorKeying>
      break;
 80096d6:	e003      	b.n	80096e0 <LCD_X_DisplayDriver+0x23c>
    }
    default:
      r = -1;
 80096d8:	f04f 33ff 	mov.w	r3, #4294967295
 80096dc:	647b      	str	r3, [r7, #68]	; 0x44
      break;
 80096de:	bf00      	nop
    }
  
    return r;
 80096e0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
}
 80096e2:	4618      	mov	r0, r3
 80096e4:	3748      	adds	r7, #72	; 0x48
 80096e6:	46bd      	mov	sp, r7
 80096e8:	bd80      	pop	{r7, pc}
 80096ea:	bf00      	nop
 80096ec:	0801e878 	.word	0x0801e878
 80096f0:	20001018 	.word	0x20001018
 80096f4:	20001020 	.word	0x20001020
 80096f8:	2002d904 	.word	0x2002d904
 80096fc:	200000f8 	.word	0x200000f8
 8009700:	2000101c 	.word	0x2000101c

08009704 <LCD_X_Config>:
  *         display driver configuration
  * @param  None
  * @retval None 
  */
void LCD_X_Config(void) 
{
 8009704:	b580      	push	{r7, lr}
 8009706:	b082      	sub	sp, #8
 8009708:	af00      	add	r7, sp, #0
  int i;
  U32 PixelFormat;
  
  /* Call the Low level Init */
  LCD_LL_Init ();
 800970a:	f7fe ff3b 	bl	8008584 <LCD_LL_Init>
  
  /* At first initialize use of multiple buffers on demand */
#if (NUM_BUFFERS > 1)
  for (i = 0; i < GUI_NUM_LAYERS; i++) 
 800970e:	2300      	movs	r3, #0
 8009710:	607b      	str	r3, [r7, #4]
 8009712:	e006      	b.n	8009722 <LCD_X_Config+0x1e>
  {
    GUI_MULTIBUF_ConfigEx(i, NUM_BUFFERS);
 8009714:	2103      	movs	r1, #3
 8009716:	6878      	ldr	r0, [r7, #4]
 8009718:	f002 f948 	bl	800b9ac <GUI_MULTIBUF_ConfigEx>
  for (i = 0; i < GUI_NUM_LAYERS; i++) 
 800971c:	687b      	ldr	r3, [r7, #4]
 800971e:	3301      	adds	r3, #1
 8009720:	607b      	str	r3, [r7, #4]
 8009722:	687b      	ldr	r3, [r7, #4]
 8009724:	2b00      	cmp	r3, #0
 8009726:	ddf5      	ble.n	8009714 <LCD_X_Config+0x10>
  }
#endif
  
  /* Set display driver and color conversion for 1st layer */
  GUI_DEVICE_CreateAndLink(DISPLAY_DRIVER_0, COLOR_CONVERSION_0, 0, 0);
 8009728:	2300      	movs	r3, #0
 800972a:	2200      	movs	r2, #0
 800972c:	4952      	ldr	r1, [pc, #328]	; (8009878 <LCD_X_Config+0x174>)
 800972e:	4853      	ldr	r0, [pc, #332]	; (800987c <LCD_X_Config+0x178>)
 8009730:	f001 ffda 	bl	800b6e8 <GUI_DEVICE_CreateAndLink>
  
  /* Set size of 1st layer */
  if (LCD_GetSwapXYEx(0)) 
 8009734:	2000      	movs	r0, #0
 8009736:	f003 fbed 	bl	800cf14 <LCD_GetSwapXYEx>
 800973a:	4603      	mov	r3, r0
 800973c:	2b00      	cmp	r3, #0
 800973e:	d00e      	beq.n	800975e <LCD_X_Config+0x5a>
  {
    LCD_SetSizeEx (0, YSIZE_0, XSIZE_0);
 8009740:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8009744:	f44f 7188 	mov.w	r1, #272	; 0x110
 8009748:	2000      	movs	r0, #0
 800974a:	f003 fe70 	bl	800d42e <LCD_SetSizeEx>
    LCD_SetVSizeEx(0, YSIZE_0 * NUM_VSCREENS, XSIZE_0);
 800974e:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8009752:	f44f 7188 	mov.w	r1, #272	; 0x110
 8009756:	2000      	movs	r0, #0
 8009758:	f003 fe97 	bl	800d48a <LCD_SetVSizeEx>
 800975c:	e00d      	b.n	800977a <LCD_X_Config+0x76>
  }
  else
  {
    LCD_SetSizeEx (0, XSIZE_0, YSIZE_0);
 800975e:	f44f 7288 	mov.w	r2, #272	; 0x110
 8009762:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8009766:	2000      	movs	r0, #0
 8009768:	f003 fe61 	bl	800d42e <LCD_SetSizeEx>
    LCD_SetVSizeEx(0, XSIZE_0, YSIZE_0 * NUM_VSCREENS);
 800976c:	f44f 7288 	mov.w	r2, #272	; 0x110
 8009770:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8009774:	2000      	movs	r0, #0
 8009776:	f003 fe88 	bl	800d48a <LCD_SetVSizeEx>
    LCD_SetSizeEx (1, XSIZE_1, YSIZE_1);
    LCD_SetVSizeEx(1, XSIZE_1, YSIZE_1 * NUM_VSCREENS);
  }
#endif
  /* Setting up VRam address and get the pixel size */
  for (i = 0; i < GUI_NUM_LAYERS; i++) 
 800977a:	2300      	movs	r3, #0
 800977c:	607b      	str	r3, [r7, #4]
 800977e:	e013      	b.n	80097a8 <LCD_X_Config+0xa4>
  {
    /* Setting up VRam address */
    LCD_SetVRAMAddrEx(i, (void *)(_aAddr[i]));
 8009780:	4a3f      	ldr	r2, [pc, #252]	; (8009880 <LCD_X_Config+0x17c>)
 8009782:	687b      	ldr	r3, [r7, #4]
 8009784:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009788:	4619      	mov	r1, r3
 800978a:	6878      	ldr	r0, [r7, #4]
 800978c:	f003 fe67 	bl	800d45e <LCD_SetVRAMAddrEx>
    /* Get the pixel size */
    _aBytesPerPixels[i] = LCD_GetBitsPerPixelEx(i) >> 3;
 8009790:	6878      	ldr	r0, [r7, #4]
 8009792:	f003 fbb3 	bl	800cefc <LCD_GetBitsPerPixelEx>
 8009796:	4603      	mov	r3, r0
 8009798:	10da      	asrs	r2, r3, #3
 800979a:	493a      	ldr	r1, [pc, #232]	; (8009884 <LCD_X_Config+0x180>)
 800979c:	687b      	ldr	r3, [r7, #4]
 800979e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  for (i = 0; i < GUI_NUM_LAYERS; i++) 
 80097a2:	687b      	ldr	r3, [r7, #4]
 80097a4:	3301      	adds	r3, #1
 80097a6:	607b      	str	r3, [r7, #4]
 80097a8:	687b      	ldr	r3, [r7, #4]
 80097aa:	2b00      	cmp	r3, #0
 80097ac:	dde8      	ble.n	8009780 <LCD_X_Config+0x7c>
  }
  /* Setting up custom functions */
  for (i = 0; i < GUI_NUM_LAYERS; i++) 
 80097ae:	2300      	movs	r3, #0
 80097b0:	607b      	str	r3, [r7, #4]
 80097b2:	e033      	b.n	800981c <LCD_X_Config+0x118>
  {
    PixelFormat = _GetPixelformat(i);
 80097b4:	6878      	ldr	r0, [r7, #4]
 80097b6:	f7fe fce1 	bl	800817c <_GetPixelformat>
 80097ba:	6038      	str	r0, [r7, #0]
    /* Set custom function for copying complete buffers (used by multiple buffering) using DMA2D */
    LCD_SetDevFunc(i, LCD_DEVFUNC_COPYBUFFER, (void(*)(void))_LCD_CopyBuffer);
 80097bc:	4a32      	ldr	r2, [pc, #200]	; (8009888 <LCD_X_Config+0x184>)
 80097be:	2121      	movs	r1, #33	; 0x21
 80097c0:	6878      	ldr	r0, [r7, #4]
 80097c2:	f003 fdec 	bl	800d39e <LCD_SetDevFunc>
    if (PixelFormat <= LTDC_PIXEL_FORMAT_ARGB4444) 
 80097c6:	683b      	ldr	r3, [r7, #0]
 80097c8:	2b04      	cmp	r3, #4
 80097ca:	d804      	bhi.n	80097d6 <LCD_X_Config+0xd2>
    {
      /* Set custom function for filling operations using DMA2D */
      LCD_SetDevFunc(i, LCD_DEVFUNC_FILLRECT, (void(*)(void))_LCD_FillRect);
 80097cc:	4a2f      	ldr	r2, [pc, #188]	; (800988c <LCD_X_Config+0x188>)
 80097ce:	2119      	movs	r1, #25
 80097d0:	6878      	ldr	r0, [r7, #4]
 80097d2:	f003 fde4 	bl	800d39e <LCD_SetDevFunc>
    }
    if (_aOrientation[i] == ROTATION_0)
 80097d6:	2300      	movs	r3, #0
 80097d8:	2b00      	cmp	r3, #0
 80097da:	d11c      	bne.n	8009816 <LCD_X_Config+0x112>
    {
      /* Set custom function for copy recxtangle areas (used by GUI_CopyRect()) using DMA2D */
      LCD_SetDevFunc(i, LCD_DEVFUNC_COPYRECT, (void(*)(void))_LCD_CopyRect);
 80097dc:	4a2c      	ldr	r2, [pc, #176]	; (8009890 <LCD_X_Config+0x18c>)
 80097de:	2123      	movs	r1, #35	; 0x23
 80097e0:	6878      	ldr	r0, [r7, #4]
 80097e2:	f003 fddc 	bl	800d39e <LCD_SetDevFunc>
      
      /* Set functions for direct color mode layers. Won't work with indexed color modes because of missing LUT for DMA2D destination */
      if (PixelFormat <= LTDC_PIXEL_FORMAT_ARGB4444) 
 80097e6:	683b      	ldr	r3, [r7, #0]
 80097e8:	2b04      	cmp	r3, #4
 80097ea:	d804      	bhi.n	80097f6 <LCD_X_Config+0xf2>
      {
        /* Set up custom drawing routine for index based bitmaps using DMA2D */
        LCD_SetDevFunc(i, LCD_DEVFUNC_DRAWBMP_8BPP, (void(*)(void))_LCD_DrawBitmap8bpp);
 80097ec:	4a29      	ldr	r2, [pc, #164]	; (8009894 <LCD_X_Config+0x190>)
 80097ee:	2125      	movs	r1, #37	; 0x25
 80097f0:	6878      	ldr	r0, [r7, #4]
 80097f2:	f003 fdd4 	bl	800d39e <LCD_SetDevFunc>
      }
      
      /* Set up drawing routine for 16bpp bitmap using DMA2D */
      if (PixelFormat == LTDC_PIXEL_FORMAT_RGB565) 
 80097f6:	683b      	ldr	r3, [r7, #0]
 80097f8:	2b02      	cmp	r3, #2
 80097fa:	d104      	bne.n	8009806 <LCD_X_Config+0x102>
      {
        /* Set up drawing routine for 16bpp bitmap using DMA2D. Makes only sense with RGB565 */
        LCD_SetDevFunc(i, LCD_DEVFUNC_DRAWBMP_16BPP, (void(*)(void))_LCD_DrawBitmap16bpp);
 80097fc:	4a26      	ldr	r2, [pc, #152]	; (8009898 <LCD_X_Config+0x194>)
 80097fe:	2124      	movs	r1, #36	; 0x24
 8009800:	6878      	ldr	r0, [r7, #4]
 8009802:	f003 fdcc 	bl	800d39e <LCD_SetDevFunc>
      }
      
      /* Set up drawing routine for 32bpp bitmap using DMA2D */
      if (PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888) 
 8009806:	683b      	ldr	r3, [r7, #0]
 8009808:	2b00      	cmp	r3, #0
 800980a:	d104      	bne.n	8009816 <LCD_X_Config+0x112>
      {
        /* Set up drawing routine for 32bpp bitmap using DMA2D. Makes only sense with ARGB8888 */
        LCD_SetDevFunc(i, LCD_DEVFUNC_DRAWBMP_32BPP, (void(*)(void))_LCD_DrawBitmap32bpp);
 800980c:	4a23      	ldr	r2, [pc, #140]	; (800989c <LCD_X_Config+0x198>)
 800980e:	2128      	movs	r1, #40	; 0x28
 8009810:	6878      	ldr	r0, [r7, #4]
 8009812:	f003 fdc4 	bl	800d39e <LCD_SetDevFunc>
  for (i = 0; i < GUI_NUM_LAYERS; i++) 
 8009816:	687b      	ldr	r3, [r7, #4]
 8009818:	3301      	adds	r3, #1
 800981a:	607b      	str	r3, [r7, #4]
 800981c:	687b      	ldr	r3, [r7, #4]
 800981e:	2b00      	cmp	r3, #0
 8009820:	ddc8      	ble.n	80097b4 <LCD_X_Config+0xb0>
  }
  
  /* Set up custom color conversion using DMA2D, works only for direct color modes because of missing LUT for DMA2D destination */

  /* Set up custom bulk color conversion using DMA2D for ARGB1555 */
  GUICC_M1555I_SetCustColorConv(_Color2IndexBulk_M1555I_DMA2D, _Index2ColorBulk_M1555I_DMA2D);
 8009822:	491f      	ldr	r1, [pc, #124]	; (80098a0 <LCD_X_Config+0x19c>)
 8009824:	481f      	ldr	r0, [pc, #124]	; (80098a4 <LCD_X_Config+0x1a0>)
 8009826:	f000 fe33 	bl	800a490 <GUICC_M1555I_SetCustColorConv>

  /* Set up custom bulk color conversion using DMA2D for RGB565 */  
  GUICC_M565_SetCustColorConv  (_Color2IndexBulk_M565_DMA2D,   _Index2ColorBulk_M565_DMA2D);
 800982a:	491f      	ldr	r1, [pc, #124]	; (80098a8 <LCD_X_Config+0x1a4>)
 800982c:	481f      	ldr	r0, [pc, #124]	; (80098ac <LCD_X_Config+0x1a8>)
 800982e:	f000 ff85 	bl	800a73c <GUICC_M565_SetCustColorConv>

  /* Set up custom bulk color conversion using DMA2D for ARGB4444 */
  GUICC_M4444I_SetCustColorConv(_Color2IndexBulk_M4444I_DMA2D, _Index2ColorBulk_M4444I_DMA2D);
 8009832:	491f      	ldr	r1, [pc, #124]	; (80098b0 <LCD_X_Config+0x1ac>)
 8009834:	481f      	ldr	r0, [pc, #124]	; (80098b4 <LCD_X_Config+0x1b0>)
 8009836:	f000 fed5 	bl	800a5e4 <GUICC_M4444I_SetCustColorConv>

  /* Set up custom bulk color conversion using DMA2D for RGB888 */
  GUICC_M888_SetCustColorConv  (_Color2IndexBulk_M888_DMA2D,   _Index2ColorBulk_M888_DMA2D);
 800983a:	491f      	ldr	r1, [pc, #124]	; (80098b8 <LCD_X_Config+0x1b4>)
 800983c:	481f      	ldr	r0, [pc, #124]	; (80098bc <LCD_X_Config+0x1b8>)
 800983e:	f000 ff9d 	bl	800a77c <GUICC_M888_SetCustColorConv>

  /* Set up custom bulk color conversion using DMA2D for ARGB8888 */
  GUICC_M8888I_SetCustColorConv(_Color2IndexBulk_M8888I_DMA2D, _Index2ColorBulk_M8888I_DMA2D);
 8009842:	491f      	ldr	r1, [pc, #124]	; (80098c0 <LCD_X_Config+0x1bc>)
 8009844:	481f      	ldr	r0, [pc, #124]	; (80098c4 <LCD_X_Config+0x1c0>)
 8009846:	f000 fee7 	bl	800a618 <GUICC_M8888I_SetCustColorConv>
  
  /* Set up custom alpha blending function using DMA2D */
  GUI_SetFuncAlphaBlending(_DMA_AlphaBlending);
 800984a:	481f      	ldr	r0, [pc, #124]	; (80098c8 <LCD_X_Config+0x1c4>)
 800984c:	f002 fb3e 	bl	800becc <GUI_SetFuncAlphaBlending>
  
  /* Set up custom function for translating a bitmap palette into index values.
   * Required to load a bitmap palette into DMA2D CLUT in case of a 8bpp indexed bitmap
   */
  GUI_SetFuncGetpPalConvTable(_LCD_GetpPalConvTable);
 8009850:	481e      	ldr	r0, [pc, #120]	; (80098cc <LCD_X_Config+0x1c8>)
 8009852:	f001 fd3b 	bl	800b2cc <GUI_SetFuncGetpPalConvTable>
  
  /* Set up custom function for mixing up arrays of colors using DMA2D */
  GUI_SetFuncMixColorsBulk(_LCD_MixColorsBulk);
 8009856:	481e      	ldr	r0, [pc, #120]	; (80098d0 <LCD_X_Config+0x1cc>)
 8009858:	f002 fb40 	bl	800bedc <GUI_SetFuncMixColorsBulk>
  
  /* Set up custom function for drawing AA4 characters */
  GUI_AA_SetpfDrawCharAA4(_LCD_DrawBitmap4bpp);
 800985c:	481d      	ldr	r0, [pc, #116]	; (80098d4 <LCD_X_Config+0x1d0>)
 800985e:	f000 fc57 	bl	800a110 <GUI_AA_SetpfDrawCharAA4>
  
  /* Set up custom function for drawing 16bpp memory devices */
  GUI_MEMDEV_SetDrawMemdev16bppFunc(_LCD_DrawMemdev16bpp);
 8009862:	481d      	ldr	r0, [pc, #116]	; (80098d8 <LCD_X_Config+0x1d4>)
 8009864:	f006 f880 	bl	800f968 <GUI_MEMDEV_SetDrawMemdev16bppFunc>
  
  /* Set up custom function for Alpha drawing operations */
  GUI_SetFuncDrawAlpha(_LCD_DrawMemdevAlpha, _LCD_DrawBitmapAlpha);
 8009868:	491c      	ldr	r1, [pc, #112]	; (80098dc <LCD_X_Config+0x1d8>)
 800986a:	481d      	ldr	r0, [pc, #116]	; (80098e0 <LCD_X_Config+0x1dc>)
 800986c:	f002 fb3e 	bl	800beec <GUI_SetFuncDrawAlpha>
}
 8009870:	bf00      	nop
 8009872:	3708      	adds	r7, #8
 8009874:	46bd      	mov	sp, r7
 8009876:	bd80      	pop	{r7, pc}
 8009878:	08018974 	.word	0x08018974
 800987c:	08018eb4 	.word	0x08018eb4
 8009880:	0801e878 	.word	0x0801e878
 8009884:	20001020 	.word	0x20001020
 8009888:	08008d09 	.word	0x08008d09
 800988c:	08008e5d 	.word	0x08008e5d
 8009890:	08008d8d 	.word	0x08008d8d
 8009894:	08009075 	.word	0x08009075
 8009898:	08008fd1 	.word	0x08008fd1
 800989c:	08008f2d 	.word	0x08008f2d
 80098a0:	0800810b 	.word	0x0800810b
 80098a4:	080080e5 	.word	0x080080e5
 80098a8:	080080bf 	.word	0x080080bf
 80098ac:	08008099 	.word	0x08008099
 80098b0:	08008157 	.word	0x08008157
 80098b4:	08008131 	.word	0x08008131
 80098b8:	08008073 	.word	0x08008073
 80098bc:	0800804d 	.word	0x0800804d
 80098c0:	08008027 	.word	0x08008027
 80098c4:	08008001 	.word	0x08008001
 80098c8:	08008bed 	.word	0x08008bed
 80098cc:	08009361 	.word	0x08009361
 80098d0:	08008c5b 	.word	0x08008c5b
 80098d4:	0800911d 	.word	0x0800911d
 80098d8:	08009215 	.word	0x08009215
 80098dc:	080092b5 	.word	0x080092b5
 80098e0:	08009263 	.word	0x08009263

080098e4 <GUI_X_GetTime>:
  Some timing dependent routines require a GetTime
  and delay function. Default time unit (tick), normally is
  1 ms.
*/

GUI_TIMER_TIME GUI_X_GetTime(void) { 
 80098e4:	b480      	push	{r7}
 80098e6:	af00      	add	r7, sp, #0
  return OS_TimeMS; 
 80098e8:	4b03      	ldr	r3, [pc, #12]	; (80098f8 <GUI_X_GetTime+0x14>)
 80098ea:	681b      	ldr	r3, [r3, #0]
}
 80098ec:	4618      	mov	r0, r3
 80098ee:	46bd      	mov	sp, r7
 80098f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098f4:	4770      	bx	lr
 80098f6:	bf00      	nop
 80098f8:	2002d9ac 	.word	0x2002d9ac

080098fc <GUI_X_Init>:
*     GUI_X_Init() is called from GUI_Init is a possibility to init
*     some hardware which needs to be up and running before the GUI.
*     If not required, leave this routine blank.
*/

void GUI_X_Init(void) {}
 80098fc:	b480      	push	{r7}
 80098fe:	af00      	add	r7, sp, #0
 8009900:	bf00      	nop
 8009902:	46bd      	mov	sp, r7
 8009904:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009908:	4770      	bx	lr
	...

0800990c <GUI_initialize>:

int GUI_Initialized = 0;
TIM_HandleTypeDef Tim3Handle;


void GUI_initialize(void (*cbGesture)(Gesture_t *gesture)) {
 800990c:	b580      	push	{r7, lr}
 800990e:	b084      	sub	sp, #16
 8009910:	af00      	add	r7, sp, #0
 8009912:	6078      	str	r0, [r7, #4]
	uint32_t uwPrescalerValue = (uint32_t) ((SystemCoreClock /2) / 10000) - 1;
 8009914:	4b2b      	ldr	r3, [pc, #172]	; (80099c4 <GUI_initialize+0xb8>)
 8009916:	681b      	ldr	r3, [r3, #0]
 8009918:	4a2b      	ldr	r2, [pc, #172]	; (80099c8 <GUI_initialize+0xbc>)
 800991a:	fba2 2303 	umull	r2, r3, r2, r3
 800991e:	0b9b      	lsrs	r3, r3, #14
 8009920:	3b01      	subs	r3, #1
 8009922:	60fb      	str	r3, [r7, #12]

	/* Set TIMx instance */
	Tim3Handle.Instance = TIM3;
 8009924:	4b29      	ldr	r3, [pc, #164]	; (80099cc <GUI_initialize+0xc0>)
 8009926:	4a2a      	ldr	r2, [pc, #168]	; (80099d0 <GUI_initialize+0xc4>)
 8009928:	601a      	str	r2, [r3, #0]
       + Period = 500 - 1
       + Prescaler = ((SystemCoreClock/2)/10000) - 1
       + ClockDivision = 0
       + Counter direction = Up
	 */
	Tim3Handle.Init.Period = 500 - 1;
 800992a:	4b28      	ldr	r3, [pc, #160]	; (80099cc <GUI_initialize+0xc0>)
 800992c:	f240 12f3 	movw	r2, #499	; 0x1f3
 8009930:	60da      	str	r2, [r3, #12]
	Tim3Handle.Init.Prescaler = uwPrescalerValue;
 8009932:	4a26      	ldr	r2, [pc, #152]	; (80099cc <GUI_initialize+0xc0>)
 8009934:	68fb      	ldr	r3, [r7, #12]
 8009936:	6053      	str	r3, [r2, #4]
	Tim3Handle.Init.ClockDivision = 0;
 8009938:	4b24      	ldr	r3, [pc, #144]	; (80099cc <GUI_initialize+0xc0>)
 800993a:	2200      	movs	r2, #0
 800993c:	611a      	str	r2, [r3, #16]
	Tim3Handle.Init.CounterMode = TIM_COUNTERMODE_UP;
 800993e:	4b23      	ldr	r3, [pc, #140]	; (80099cc <GUI_initialize+0xc0>)
 8009940:	2200      	movs	r2, #0
 8009942:	609a      	str	r2, [r3, #8]
	if(HAL_TIM_Base_Init(&Tim3Handle) != HAL_OK)
 8009944:	4821      	ldr	r0, [pc, #132]	; (80099cc <GUI_initialize+0xc0>)
 8009946:	f7fe f8a6 	bl	8007a96 <HAL_TIM_Base_Init>
 800994a:	4603      	mov	r3, r0
 800994c:	2b00      	cmp	r3, #0
 800994e:	d000      	beq.n	8009952 <GUI_initialize+0x46>
	{
		while(1);
 8009950:	e7fe      	b.n	8009950 <GUI_initialize+0x44>
	}

	/*##-2- Start the TIM Base generation in interrupt mode ####################*/
	/* Start Channel1 */
	if (HAL_TIM_Base_Start_IT(&Tim3Handle) != HAL_OK)
 8009952:	481e      	ldr	r0, [pc, #120]	; (80099cc <GUI_initialize+0xc0>)
 8009954:	f7fe f8ca 	bl	8007aec <HAL_TIM_Base_Start_IT>
 8009958:	4603      	mov	r3, r0
 800995a:	2b00      	cmp	r3, #0
 800995c:	d000      	beq.n	8009960 <GUI_initialize+0x54>
	{
		while(1);
 800995e:	e7fe      	b.n	800995e <GUI_initialize+0x52>
	}

	/***********************************************************/

	BSP_TS_Init(480, 272);
 8009960:	f44f 7188 	mov.w	r1, #272	; 0x110
 8009964:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
 8009968:	f7f9 fcba 	bl	80032e0 <BSP_TS_Init>

	/* Init the STemWin GUI Library */
	BSP_SDRAM_Init(); /* Initializes the SDRAM device */
 800996c:	f7f9 fb02 	bl	8002f74 <BSP_SDRAM_Init>
	__HAL_RCC_CRC_CLK_ENABLE(); /* Enable the CRC Module */
 8009970:	4b18      	ldr	r3, [pc, #96]	; (80099d4 <GUI_initialize+0xc8>)
 8009972:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009974:	4a17      	ldr	r2, [pc, #92]	; (80099d4 <GUI_initialize+0xc8>)
 8009976:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800997a:	6313      	str	r3, [r2, #48]	; 0x30
 800997c:	4b15      	ldr	r3, [pc, #84]	; (80099d4 <GUI_initialize+0xc8>)
 800997e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009980:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8009984:	60bb      	str	r3, [r7, #8]
 8009986:	68bb      	ldr	r3, [r7, #8]
	//MX_GPIO_Init();
	GUI_Init();
 8009988:	f001 fd32 	bl	800b3f0 <GUI_Init>

	//  GUI_DispStringAt("Oscilloscope Starting...", 0, 0);

	/* Multi buffering enable */
	WM_MULTIBUF_Enable(1);
 800998c:	2001      	movs	r0, #1
 800998e:	f008 f8e3 	bl	8011b58 <WM_MULTIBUF_Enable>

	GUI_MTOUCH_Enable(1);
 8009992:	2001      	movs	r0, #1
 8009994:	f004 fe0e 	bl	800e5b4 <GUI_MTOUCH_Enable>

	GUI_Initialized = 1;
 8009998:	4b0f      	ldr	r3, [pc, #60]	; (80099d8 <GUI_initialize+0xcc>)
 800999a:	2201      	movs	r2, #1
 800999c:	601a      	str	r2, [r3, #0]

	/* Activate the use of memory device feature */
	WM_SetCreateFlags(WM_CF_MEMDEV);
 800999e:	2004      	movs	r0, #4
 80099a0:	f007 fff0 	bl	8011984 <WM_SetCreateFlags>



	GUI_SetBkColor(GUI_WHITE);
 80099a4:	f04f 30ff 	mov.w	r0, #4294967295
 80099a8:	f001 fbc1 	bl	800b12e <GUI_SetBkColor>
	GUI_Clear();
 80099ac:	f001 fcc6 	bl	800b33c <GUI_Clear>

	WM_GESTURE_Enable(1);
 80099b0:	2001      	movs	r0, #1
 80099b2:	f005 fa95 	bl	800eee0 <WM_GESTURE_Enable>

	DIALOG_init(cbGesture);
 80099b6:	6878      	ldr	r0, [r7, #4]
 80099b8:	f000 faf2 	bl	8009fa0 <DIALOG_init>
}
 80099bc:	bf00      	nop
 80099be:	3710      	adds	r7, #16
 80099c0:	46bd      	mov	sp, r7
 80099c2:	bd80      	pop	{r7, pc}
 80099c4:	200000c0 	.word	0x200000c0
 80099c8:	d1b71759 	.word	0xd1b71759
 80099cc:	2002d9b0 	.word	0x2002d9b0
 80099d0:	40000400 	.word	0x40000400
 80099d4:	40023800 	.word	0x40023800
 80099d8:	20006ea8 	.word	0x20006ea8

080099dc <BSP_Pointer_Update>:
 * @brief  Provide the GUI with current state of the touch screen
 * @param  None
 * @retval None
 */
void BSP_Pointer_Update(void)
{
 80099dc:	b590      	push	{r4, r7, lr}
 80099de:	b08d      	sub	sp, #52	; 0x34
 80099e0:	af00      	add	r7, sp, #0
	static GUI_PID_STATE TS_State = {0, 0, 0, 0};
	__IO TS_StateTypeDef  ts;
	uint16_t xDiff, yDiff;

	BSP_TS_GetState((TS_StateTypeDef *)&ts);
 80099e2:	463b      	mov	r3, r7
 80099e4:	4618      	mov	r0, r3
 80099e6:	f7f9 fcbb 	bl	8003360 <BSP_TS_GetState>

	if((ts.touchX[0] >= LCD_GetXSize()) ||(ts.touchY[0] >= LCD_GetYSize()) )
 80099ea:	887b      	ldrh	r3, [r7, #2]
 80099ec:	b29b      	uxth	r3, r3
 80099ee:	461c      	mov	r4, r3
 80099f0:	f003 fa94 	bl	800cf1c <LCD_GetXSize>
 80099f4:	4603      	mov	r3, r0
 80099f6:	429c      	cmp	r4, r3
 80099f8:	da07      	bge.n	8009a0a <BSP_Pointer_Update+0x2e>
 80099fa:	89bb      	ldrh	r3, [r7, #12]
 80099fc:	b29b      	uxth	r3, r3
 80099fe:	461c      	mov	r4, r3
 8009a00:	f003 fa94 	bl	800cf2c <LCD_GetYSize>
 8009a04:	4603      	mov	r3, r0
 8009a06:	429c      	cmp	r4, r3
 8009a08:	db05      	blt.n	8009a16 <BSP_Pointer_Update+0x3a>
	{
		ts.touchX[0] = 0;
 8009a0a:	2300      	movs	r3, #0
 8009a0c:	807b      	strh	r3, [r7, #2]
		ts.touchY[0] = 0;
 8009a0e:	2300      	movs	r3, #0
 8009a10:	81bb      	strh	r3, [r7, #12]
		ts.touchDetected =0;
 8009a12:	2300      	movs	r3, #0
 8009a14:	703b      	strb	r3, [r7, #0]
	}

	xDiff = (TS_State.x > ts.touchX[0]) ? (TS_State.x - ts.touchX[0]) : (ts.touchX[0] - TS_State.x);
 8009a16:	4b31      	ldr	r3, [pc, #196]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009a18:	681b      	ldr	r3, [r3, #0]
 8009a1a:	887a      	ldrh	r2, [r7, #2]
 8009a1c:	b292      	uxth	r2, r2
 8009a1e:	4293      	cmp	r3, r2
 8009a20:	dd07      	ble.n	8009a32 <BSP_Pointer_Update+0x56>
 8009a22:	4b2e      	ldr	r3, [pc, #184]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009a24:	681b      	ldr	r3, [r3, #0]
 8009a26:	b29a      	uxth	r2, r3
 8009a28:	887b      	ldrh	r3, [r7, #2]
 8009a2a:	b29b      	uxth	r3, r3
 8009a2c:	1ad3      	subs	r3, r2, r3
 8009a2e:	b29b      	uxth	r3, r3
 8009a30:	e006      	b.n	8009a40 <BSP_Pointer_Update+0x64>
 8009a32:	887b      	ldrh	r3, [r7, #2]
 8009a34:	b29a      	uxth	r2, r3
 8009a36:	4b29      	ldr	r3, [pc, #164]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009a38:	681b      	ldr	r3, [r3, #0]
 8009a3a:	b29b      	uxth	r3, r3
 8009a3c:	1ad3      	subs	r3, r2, r3
 8009a3e:	b29b      	uxth	r3, r3
 8009a40:	85fb      	strh	r3, [r7, #46]	; 0x2e
	yDiff = (TS_State.y > ts.touchY[0]) ? (TS_State.y - ts.touchY[0]) : (ts.touchY[0] - TS_State.y);
 8009a42:	4b26      	ldr	r3, [pc, #152]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009a44:	685b      	ldr	r3, [r3, #4]
 8009a46:	89ba      	ldrh	r2, [r7, #12]
 8009a48:	b292      	uxth	r2, r2
 8009a4a:	4293      	cmp	r3, r2
 8009a4c:	dd07      	ble.n	8009a5e <BSP_Pointer_Update+0x82>
 8009a4e:	4b23      	ldr	r3, [pc, #140]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009a50:	685b      	ldr	r3, [r3, #4]
 8009a52:	b29a      	uxth	r2, r3
 8009a54:	89bb      	ldrh	r3, [r7, #12]
 8009a56:	b29b      	uxth	r3, r3
 8009a58:	1ad3      	subs	r3, r2, r3
 8009a5a:	b29b      	uxth	r3, r3
 8009a5c:	e006      	b.n	8009a6c <BSP_Pointer_Update+0x90>
 8009a5e:	89bb      	ldrh	r3, [r7, #12]
 8009a60:	b29a      	uxth	r2, r3
 8009a62:	4b1e      	ldr	r3, [pc, #120]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009a64:	685b      	ldr	r3, [r3, #4]
 8009a66:	b29b      	uxth	r3, r3
 8009a68:	1ad3      	subs	r3, r2, r3
 8009a6a:	b29b      	uxth	r3, r3
 8009a6c:	85bb      	strh	r3, [r7, #44]	; 0x2c


	if((TS_State.Pressed != ts.touchDetected ) ||
 8009a6e:	4b1b      	ldr	r3, [pc, #108]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009a70:	7a1a      	ldrb	r2, [r3, #8]
 8009a72:	783b      	ldrb	r3, [r7, #0]
 8009a74:	b2db      	uxtb	r3, r3
 8009a76:	429a      	cmp	r2, r3
 8009a78:	d105      	bne.n	8009a86 <BSP_Pointer_Update+0xaa>
 8009a7a:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 8009a7c:	2b1e      	cmp	r3, #30
 8009a7e:	d802      	bhi.n	8009a86 <BSP_Pointer_Update+0xaa>
			(xDiff > 30 )||
 8009a80:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8009a82:	2b1e      	cmp	r3, #30
 8009a84:	d925      	bls.n	8009ad2 <BSP_Pointer_Update+0xf6>
			(yDiff > 30))
	{
		TS_State.Pressed = ts.touchDetected;
 8009a86:	783b      	ldrb	r3, [r7, #0]
 8009a88:	b2da      	uxtb	r2, r3
 8009a8a:	4b14      	ldr	r3, [pc, #80]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009a8c:	721a      	strb	r2, [r3, #8]
		TS_State.Layer = 0;
 8009a8e:	4b13      	ldr	r3, [pc, #76]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009a90:	2200      	movs	r2, #0
 8009a92:	725a      	strb	r2, [r3, #9]
		if (ts.touchDetected)
 8009a94:	783b      	ldrb	r3, [r7, #0]
 8009a96:	b2db      	uxtb	r3, r3
 8009a98:	2b00      	cmp	r3, #0
 8009a9a:	d00d      	beq.n	8009ab8 <BSP_Pointer_Update+0xdc>
		{
			TS_State.x = ts.touchX[0];
 8009a9c:	887b      	ldrh	r3, [r7, #2]
 8009a9e:	b29b      	uxth	r3, r3
 8009aa0:	461a      	mov	r2, r3
 8009aa2:	4b0e      	ldr	r3, [pc, #56]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009aa4:	601a      	str	r2, [r3, #0]
			TS_State.y = ts.touchY[0];
 8009aa6:	89bb      	ldrh	r3, [r7, #12]
 8009aa8:	b29b      	uxth	r3, r3
 8009aaa:	461a      	mov	r2, r3
 8009aac:	4b0b      	ldr	r3, [pc, #44]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009aae:	605a      	str	r2, [r3, #4]
			GUI_TOUCH_StoreStateEx(&TS_State);
 8009ab0:	480a      	ldr	r0, [pc, #40]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009ab2:	f001 ffe3 	bl	800ba7c <GUI_TOUCH_StoreStateEx>
 8009ab6:	e008      	b.n	8009aca <BSP_Pointer_Update+0xee>
		}
		else
		{
			GUI_TOUCH_StoreStateEx(&TS_State);
 8009ab8:	4808      	ldr	r0, [pc, #32]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009aba:	f001 ffdf 	bl	800ba7c <GUI_TOUCH_StoreStateEx>
			TS_State.x = 0;
 8009abe:	4b07      	ldr	r3, [pc, #28]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009ac0:	2200      	movs	r2, #0
 8009ac2:	601a      	str	r2, [r3, #0]
			TS_State.y = 0;
 8009ac4:	4b05      	ldr	r3, [pc, #20]	; (8009adc <BSP_Pointer_Update+0x100>)
 8009ac6:	2200      	movs	r2, #0
 8009ac8:	605a      	str	r2, [r3, #4]
		}

		MTOUCH_AddTouchData(&ts);
 8009aca:	463b      	mov	r3, r7
 8009acc:	4618      	mov	r0, r3
 8009ace:	f000 f967 	bl	8009da0 <MTOUCH_AddTouchData>
	}
}
 8009ad2:	bf00      	nop
 8009ad4:	3734      	adds	r7, #52	; 0x34
 8009ad6:	46bd      	mov	sp, r7
 8009ad8:	bd90      	pop	{r4, r7, pc}
 8009ada:	bf00      	nop
 8009adc:	20006eac 	.word	0x20006eac

08009ae0 <BSP_Background>:
 * @brief  BSP_Background.
 * @param  None
 * @retval None
 */
void BSP_Background(void)
{
 8009ae0:	b580      	push	{r7, lr}
 8009ae2:	af00      	add	r7, sp, #0
	/* Capture input event and updade cursor */
	if(GUI_Initialized == 1)
 8009ae4:	4b03      	ldr	r3, [pc, #12]	; (8009af4 <BSP_Background+0x14>)
 8009ae6:	681b      	ldr	r3, [r3, #0]
 8009ae8:	2b01      	cmp	r3, #1
 8009aea:	d101      	bne.n	8009af0 <BSP_Background+0x10>
	{
		BSP_Pointer_Update();
 8009aec:	f7ff ff76 	bl	80099dc <BSP_Pointer_Update>
	}
}
 8009af0:	bf00      	nop
 8009af2:	bd80      	pop	{r7, pc}
 8009af4:	20006ea8 	.word	0x20006ea8

08009af8 <TIM3_IRQHandler>:
 * @brief  This function handles TIM interrupt request.
 * @param  None
 * @retval None
 */
void TIM3_IRQHandler(void)
{
 8009af8:	b580      	push	{r7, lr}
 8009afa:	af00      	add	r7, sp, #0
	//timer 3 used for touch screen
	if (__HAL_TIM_GET_FLAG((&Tim3Handle), TIM_FLAG_UPDATE) != RESET)
 8009afc:	4b0b      	ldr	r3, [pc, #44]	; (8009b2c <TIM3_IRQHandler+0x34>)
 8009afe:	681b      	ldr	r3, [r3, #0]
 8009b00:	691b      	ldr	r3, [r3, #16]
 8009b02:	f003 0301 	and.w	r3, r3, #1
 8009b06:	2b01      	cmp	r3, #1
 8009b08:	d10d      	bne.n	8009b26 <TIM3_IRQHandler+0x2e>
	{
		if (__HAL_TIM_GET_IT_SOURCE((&Tim3Handle), TIM_IT_UPDATE) != RESET)
 8009b0a:	4b08      	ldr	r3, [pc, #32]	; (8009b2c <TIM3_IRQHandler+0x34>)
 8009b0c:	681b      	ldr	r3, [r3, #0]
 8009b0e:	68db      	ldr	r3, [r3, #12]
 8009b10:	f003 0301 	and.w	r3, r3, #1
 8009b14:	2b01      	cmp	r3, #1
 8009b16:	d106      	bne.n	8009b26 <TIM3_IRQHandler+0x2e>
		{
			__HAL_TIM_CLEAR_IT((&Tim3Handle), TIM_IT_UPDATE);
 8009b18:	4b04      	ldr	r3, [pc, #16]	; (8009b2c <TIM3_IRQHandler+0x34>)
 8009b1a:	681b      	ldr	r3, [r3, #0]
 8009b1c:	f06f 0201 	mvn.w	r2, #1
 8009b20:	611a      	str	r2, [r3, #16]
			BSP_Background();
 8009b22:	f7ff ffdd 	bl	8009ae0 <BSP_Background>

		}
	}
}
 8009b26:	bf00      	nop
 8009b28:	bd80      	pop	{r7, pc}
 8009b2a:	bf00      	nop
 8009b2c:	2002d9b0 	.word	0x2002d9b0

08009b30 <LTDC_IRQHandler>:
 * @brief  This function handles LTDC global interrupt request.
 * @param  None
 * @retval None
 */
void LTDC_IRQHandler(void)
{
 8009b30:	b580      	push	{r7, lr}
 8009b32:	af00      	add	r7, sp, #0
	HAL_LTDC_IRQHandler(&hltdc);
 8009b34:	4802      	ldr	r0, [pc, #8]	; (8009b40 <LTDC_IRQHandler+0x10>)
 8009b36:	f7fc f9a9 	bl	8005e8c <HAL_LTDC_IRQHandler>
}
 8009b3a:	bf00      	nop
 8009b3c:	bd80      	pop	{r7, pc}
 8009b3e:	bf00      	nop
 8009b40:	2002d904 	.word	0x2002d904

08009b44 <GUI_IncTick>:

void GUI_IncTick(void)
{
 8009b44:	b480      	push	{r7}
 8009b46:	af00      	add	r7, sp, #0
	OS_TimeMS++;
 8009b48:	4b04      	ldr	r3, [pc, #16]	; (8009b5c <GUI_IncTick+0x18>)
 8009b4a:	681b      	ldr	r3, [r3, #0]
 8009b4c:	3301      	adds	r3, #1
 8009b4e:	4a03      	ldr	r2, [pc, #12]	; (8009b5c <GUI_IncTick+0x18>)
 8009b50:	6013      	str	r3, [r2, #0]
}
 8009b52:	bf00      	nop
 8009b54:	46bd      	mov	sp, r7
 8009b56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b5a:	4770      	bx	lr
 8009b5c:	2002d9ac 	.word	0x2002d9ac

08009b60 <MTOUCH_CalculateDelta>:
static TS_StateTypeDef touchDataPrev = {0, {0, 0, 0, 0, 0}, {0, 0}, {0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, 0};
static TS_StateTypeDef touchDataCurr = {0, {0, 0, 0, 0, 0}, {0, 0}, {0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, {0, 0, 0, 0, 0}, 0};
static uint16_t origin[2];

static inline void MTOUCH_CalculateDelta(uint16_t x1, uint16_t x2,
		int16_t* delta, uint16_t* deltaAbs) {
 8009b60:	b480      	push	{r7}
 8009b62:	b085      	sub	sp, #20
 8009b64:	af00      	add	r7, sp, #0
 8009b66:	60ba      	str	r2, [r7, #8]
 8009b68:	607b      	str	r3, [r7, #4]
 8009b6a:	4603      	mov	r3, r0
 8009b6c:	81fb      	strh	r3, [r7, #14]
 8009b6e:	460b      	mov	r3, r1
 8009b70:	81bb      	strh	r3, [r7, #12]
	*delta = x1 - x2;
 8009b72:	89fa      	ldrh	r2, [r7, #14]
 8009b74:	89bb      	ldrh	r3, [r7, #12]
 8009b76:	1ad3      	subs	r3, r2, r3
 8009b78:	b29b      	uxth	r3, r3
 8009b7a:	b21a      	sxth	r2, r3
 8009b7c:	68bb      	ldr	r3, [r7, #8]
 8009b7e:	801a      	strh	r2, [r3, #0]
	*deltaAbs = *delta > 0 ? *delta : *delta * -1;
 8009b80:	68bb      	ldr	r3, [r7, #8]
 8009b82:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009b86:	2b00      	cmp	r3, #0
 8009b88:	bfb8      	it	lt
 8009b8a:	425b      	neglt	r3, r3
 8009b8c:	b29a      	uxth	r2, r3
 8009b8e:	687b      	ldr	r3, [r7, #4]
 8009b90:	801a      	strh	r2, [r3, #0]
}
 8009b92:	bf00      	nop
 8009b94:	3714      	adds	r7, #20
 8009b96:	46bd      	mov	sp, r7
 8009b98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b9c:	4770      	bx	lr
	...

08009ba0 <MTOUCH_DecodeGesture_1Point>:

MTOUCH_GestureID MTOUCH_DecodeGesture_1Point(void) {
 8009ba0:	b580      	push	{r7, lr}
 8009ba2:	b082      	sub	sp, #8
 8009ba4:	af00      	add	r7, sp, #0
	int16_t dx, dy;
	uint16_t dxAbs, dyAbs;

	MTOUCH_CalculateDelta(touchDataCurr.touchX[0], touchDataPrev.touchX[0], &dx, &dxAbs);
 8009ba6:	4b18      	ldr	r3, [pc, #96]	; (8009c08 <MTOUCH_DecodeGesture_1Point+0x68>)
 8009ba8:	8858      	ldrh	r0, [r3, #2]
 8009baa:	4b18      	ldr	r3, [pc, #96]	; (8009c0c <MTOUCH_DecodeGesture_1Point+0x6c>)
 8009bac:	8859      	ldrh	r1, [r3, #2]
 8009bae:	1cbb      	adds	r3, r7, #2
 8009bb0:	1dba      	adds	r2, r7, #6
 8009bb2:	f7ff ffd5 	bl	8009b60 <MTOUCH_CalculateDelta>
	MTOUCH_CalculateDelta(touchDataCurr.touchY[0], touchDataPrev.touchY[0], &dy, &dyAbs);
 8009bb6:	4b14      	ldr	r3, [pc, #80]	; (8009c08 <MTOUCH_DecodeGesture_1Point+0x68>)
 8009bb8:	8998      	ldrh	r0, [r3, #12]
 8009bba:	4b14      	ldr	r3, [pc, #80]	; (8009c0c <MTOUCH_DecodeGesture_1Point+0x6c>)
 8009bbc:	8999      	ldrh	r1, [r3, #12]
 8009bbe:	463b      	mov	r3, r7
 8009bc0:	1d3a      	adds	r2, r7, #4
 8009bc2:	f7ff ffcd 	bl	8009b60 <MTOUCH_CalculateDelta>

	if (dxAbs > dyAbs) {
 8009bc6:	887a      	ldrh	r2, [r7, #2]
 8009bc8:	883b      	ldrh	r3, [r7, #0]
 8009bca:	429a      	cmp	r2, r3
 8009bcc:	d90c      	bls.n	8009be8 <MTOUCH_DecodeGesture_1Point+0x48>
		if (dxAbs < MTOUCH_GESTURE_INERTIA)
 8009bce:	887b      	ldrh	r3, [r7, #2]
 8009bd0:	2b01      	cmp	r3, #1
 8009bd2:	d801      	bhi.n	8009bd8 <MTOUCH_DecodeGesture_1Point+0x38>
			return TOUCH;
 8009bd4:	2301      	movs	r3, #1
 8009bd6:	e013      	b.n	8009c00 <MTOUCH_DecodeGesture_1Point+0x60>
		else if (dx > 0)
 8009bd8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8009bdc:	2b00      	cmp	r3, #0
 8009bde:	dd01      	ble.n	8009be4 <MTOUCH_DecodeGesture_1Point+0x44>
			return MOVE_RIGHT;
 8009be0:	2305      	movs	r3, #5
 8009be2:	e00d      	b.n	8009c00 <MTOUCH_DecodeGesture_1Point+0x60>
		else
			return MOVE_LEFT;
 8009be4:	2304      	movs	r3, #4
 8009be6:	e00b      	b.n	8009c00 <MTOUCH_DecodeGesture_1Point+0x60>
	} else {
		if (dyAbs < MTOUCH_GESTURE_INERTIA)
 8009be8:	883b      	ldrh	r3, [r7, #0]
 8009bea:	2b01      	cmp	r3, #1
 8009bec:	d801      	bhi.n	8009bf2 <MTOUCH_DecodeGesture_1Point+0x52>
			return TOUCH;
 8009bee:	2301      	movs	r3, #1
 8009bf0:	e006      	b.n	8009c00 <MTOUCH_DecodeGesture_1Point+0x60>
		else if (dy > 0)
 8009bf2:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8009bf6:	2b00      	cmp	r3, #0
 8009bf8:	dd01      	ble.n	8009bfe <MTOUCH_DecodeGesture_1Point+0x5e>
			return MOVE_DOWN;
 8009bfa:	2303      	movs	r3, #3
 8009bfc:	e000      	b.n	8009c00 <MTOUCH_DecodeGesture_1Point+0x60>
		else
			return MOVE_UP;
 8009bfe:	2302      	movs	r3, #2
	}
}
 8009c00:	4618      	mov	r0, r3
 8009c02:	3708      	adds	r7, #8
 8009c04:	46bd      	mov	sp, r7
 8009c06:	bd80      	pop	{r7, pc}
 8009c08:	20006ee4 	.word	0x20006ee4
 8009c0c:	20006eb8 	.word	0x20006eb8

08009c10 <MTOUCH_DecodeGesture_2Point>:

MTOUCH_GestureID MTOUCH_DecodeGesture_2Point() {
 8009c10:	b580      	push	{r7, lr}
 8009c12:	b086      	sub	sp, #24
 8009c14:	af00      	add	r7, sp, #0
	int16_t dxPrev, dxCurr, dyPrev, dyCurr, dx, dy;
	uint16_t dxPrevAbs, dxCurrAbs, dyPrevAbs, dyCurrAbs, dxAbs, dyAbs;

	MTOUCH_CalculateDelta(touchDataPrev.touchX[1], touchDataPrev.touchX[0], &dxPrev, &dxPrevAbs);
 8009c16:	4b2a      	ldr	r3, [pc, #168]	; (8009cc0 <MTOUCH_DecodeGesture_2Point+0xb0>)
 8009c18:	8898      	ldrh	r0, [r3, #4]
 8009c1a:	4b29      	ldr	r3, [pc, #164]	; (8009cc0 <MTOUCH_DecodeGesture_2Point+0xb0>)
 8009c1c:	8859      	ldrh	r1, [r3, #2]
 8009c1e:	f107 030a 	add.w	r3, r7, #10
 8009c22:	f107 0216 	add.w	r2, r7, #22
 8009c26:	f7ff ff9b 	bl	8009b60 <MTOUCH_CalculateDelta>
	MTOUCH_CalculateDelta(touchDataCurr.touchX[1], touchDataCurr.touchX[0], &dxCurr, &dxCurrAbs);
 8009c2a:	4b26      	ldr	r3, [pc, #152]	; (8009cc4 <MTOUCH_DecodeGesture_2Point+0xb4>)
 8009c2c:	8898      	ldrh	r0, [r3, #4]
 8009c2e:	4b25      	ldr	r3, [pc, #148]	; (8009cc4 <MTOUCH_DecodeGesture_2Point+0xb4>)
 8009c30:	8859      	ldrh	r1, [r3, #2]
 8009c32:	f107 0308 	add.w	r3, r7, #8
 8009c36:	f107 0214 	add.w	r2, r7, #20
 8009c3a:	f7ff ff91 	bl	8009b60 <MTOUCH_CalculateDelta>
	MTOUCH_CalculateDelta(touchDataPrev.touchY[1], touchDataPrev.touchY[0], &dyPrev, &dyPrevAbs);
 8009c3e:	4b20      	ldr	r3, [pc, #128]	; (8009cc0 <MTOUCH_DecodeGesture_2Point+0xb0>)
 8009c40:	89d8      	ldrh	r0, [r3, #14]
 8009c42:	4b1f      	ldr	r3, [pc, #124]	; (8009cc0 <MTOUCH_DecodeGesture_2Point+0xb0>)
 8009c44:	8999      	ldrh	r1, [r3, #12]
 8009c46:	1dbb      	adds	r3, r7, #6
 8009c48:	f107 0212 	add.w	r2, r7, #18
 8009c4c:	f7ff ff88 	bl	8009b60 <MTOUCH_CalculateDelta>
	MTOUCH_CalculateDelta(touchDataCurr.touchY[1], touchDataCurr.touchY[0], &dyCurr, &dyCurrAbs);
 8009c50:	4b1c      	ldr	r3, [pc, #112]	; (8009cc4 <MTOUCH_DecodeGesture_2Point+0xb4>)
 8009c52:	89d8      	ldrh	r0, [r3, #14]
 8009c54:	4b1b      	ldr	r3, [pc, #108]	; (8009cc4 <MTOUCH_DecodeGesture_2Point+0xb4>)
 8009c56:	8999      	ldrh	r1, [r3, #12]
 8009c58:	1d3b      	adds	r3, r7, #4
 8009c5a:	f107 0210 	add.w	r2, r7, #16
 8009c5e:	f7ff ff7f 	bl	8009b60 <MTOUCH_CalculateDelta>

	MTOUCH_CalculateDelta(dxCurrAbs, dxPrevAbs, &dx, &dxAbs);
 8009c62:	8938      	ldrh	r0, [r7, #8]
 8009c64:	8979      	ldrh	r1, [r7, #10]
 8009c66:	1cbb      	adds	r3, r7, #2
 8009c68:	f107 020e 	add.w	r2, r7, #14
 8009c6c:	f7ff ff78 	bl	8009b60 <MTOUCH_CalculateDelta>
	MTOUCH_CalculateDelta(dyCurrAbs, dyPrevAbs, &dy, &dyAbs);
 8009c70:	88b8      	ldrh	r0, [r7, #4]
 8009c72:	88f9      	ldrh	r1, [r7, #6]
 8009c74:	463b      	mov	r3, r7
 8009c76:	f107 020c 	add.w	r2, r7, #12
 8009c7a:	f7ff ff71 	bl	8009b60 <MTOUCH_CalculateDelta>

	if (dxAbs > dyAbs) {
 8009c7e:	887a      	ldrh	r2, [r7, #2]
 8009c80:	883b      	ldrh	r3, [r7, #0]
 8009c82:	429a      	cmp	r2, r3
 8009c84:	d90c      	bls.n	8009ca0 <MTOUCH_DecodeGesture_2Point+0x90>
		if (dxAbs < MTOUCH_GESTURE_INERTIA)
 8009c86:	887b      	ldrh	r3, [r7, #2]
 8009c88:	2b01      	cmp	r3, #1
 8009c8a:	d801      	bhi.n	8009c90 <MTOUCH_DecodeGesture_2Point+0x80>
			return TOUCH;
 8009c8c:	2301      	movs	r3, #1
 8009c8e:	e013      	b.n	8009cb8 <MTOUCH_DecodeGesture_2Point+0xa8>
		else if (dx > 0)
 8009c90:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8009c94:	2b00      	cmp	r3, #0
 8009c96:	dd01      	ble.n	8009c9c <MTOUCH_DecodeGesture_2Point+0x8c>
			return SPREAD_X;
 8009c98:	2306      	movs	r3, #6
 8009c9a:	e00d      	b.n	8009cb8 <MTOUCH_DecodeGesture_2Point+0xa8>
		else
			return PINCH_X;
 8009c9c:	2307      	movs	r3, #7
 8009c9e:	e00b      	b.n	8009cb8 <MTOUCH_DecodeGesture_2Point+0xa8>
	} else {
		if (dyAbs < MTOUCH_GESTURE_INERTIA)
 8009ca0:	883b      	ldrh	r3, [r7, #0]
 8009ca2:	2b01      	cmp	r3, #1
 8009ca4:	d801      	bhi.n	8009caa <MTOUCH_DecodeGesture_2Point+0x9a>
			return TOUCH;
 8009ca6:	2301      	movs	r3, #1
 8009ca8:	e006      	b.n	8009cb8 <MTOUCH_DecodeGesture_2Point+0xa8>
		else if (dy > 0)
 8009caa:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8009cae:	2b00      	cmp	r3, #0
 8009cb0:	dd01      	ble.n	8009cb6 <MTOUCH_DecodeGesture_2Point+0xa6>
			return SPREAD_Y;
 8009cb2:	2308      	movs	r3, #8
 8009cb4:	e000      	b.n	8009cb8 <MTOUCH_DecodeGesture_2Point+0xa8>
		else
			return PINCH_Y;
 8009cb6:	2309      	movs	r3, #9
	}
}
 8009cb8:	4618      	mov	r0, r3
 8009cba:	3718      	adds	r7, #24
 8009cbc:	46bd      	mov	sp, r7
 8009cbe:	bd80      	pop	{r7, pc}
 8009cc0:	20006eb8 	.word	0x20006eb8
 8009cc4:	20006ee4 	.word	0x20006ee4

08009cc8 <MTOUCH_GetGesture>:

void MTOUCH_GetGesture(MTOUCH_GestureData_s *gestureData) {
 8009cc8:	b580      	push	{r7, lr}
 8009cca:	b082      	sub	sp, #8
 8009ccc:	af00      	add	r7, sp, #0
 8009cce:	6078      	str	r0, [r7, #4]

	if (touchDataCurr.touchDetected == 0) {
 8009cd0:	4b30      	ldr	r3, [pc, #192]	; (8009d94 <MTOUCH_GetGesture+0xcc>)
 8009cd2:	781b      	ldrb	r3, [r3, #0]
 8009cd4:	2b00      	cmp	r3, #0
 8009cd6:	d103      	bne.n	8009ce0 <MTOUCH_GetGesture+0x18>
		gestureData->gesture = NONE;
 8009cd8:	687b      	ldr	r3, [r7, #4]
 8009cda:	2200      	movs	r2, #0
 8009cdc:	701a      	strb	r2, [r3, #0]
 8009cde:	e04d      	b.n	8009d7c <MTOUCH_GetGesture+0xb4>
	} else if (touchDataCurr.touchDetected != touchDataPrev.touchDetected) {
 8009ce0:	4b2c      	ldr	r3, [pc, #176]	; (8009d94 <MTOUCH_GetGesture+0xcc>)
 8009ce2:	781a      	ldrb	r2, [r3, #0]
 8009ce4:	4b2c      	ldr	r3, [pc, #176]	; (8009d98 <MTOUCH_GetGesture+0xd0>)
 8009ce6:	781b      	ldrb	r3, [r3, #0]
 8009ce8:	429a      	cmp	r2, r3
 8009cea:	d02e      	beq.n	8009d4a <MTOUCH_GetGesture+0x82>
		if (touchDataCurr.touchDetected == 1) {
 8009cec:	4b29      	ldr	r3, [pc, #164]	; (8009d94 <MTOUCH_GetGesture+0xcc>)
 8009cee:	781b      	ldrb	r3, [r3, #0]
 8009cf0:	2b01      	cmp	r3, #1
 8009cf2:	d108      	bne.n	8009d06 <MTOUCH_GetGesture+0x3e>
			origin[0] = touchDataCurr.touchX[0];
 8009cf4:	4b27      	ldr	r3, [pc, #156]	; (8009d94 <MTOUCH_GetGesture+0xcc>)
 8009cf6:	885a      	ldrh	r2, [r3, #2]
 8009cf8:	4b28      	ldr	r3, [pc, #160]	; (8009d9c <MTOUCH_GetGesture+0xd4>)
 8009cfa:	801a      	strh	r2, [r3, #0]
			origin[1] = touchDataCurr.touchY[0];
 8009cfc:	4b25      	ldr	r3, [pc, #148]	; (8009d94 <MTOUCH_GetGesture+0xcc>)
 8009cfe:	899a      	ldrh	r2, [r3, #12]
 8009d00:	4b26      	ldr	r3, [pc, #152]	; (8009d9c <MTOUCH_GetGesture+0xd4>)
 8009d02:	805a      	strh	r2, [r3, #2]
 8009d04:	e01d      	b.n	8009d42 <MTOUCH_GetGesture+0x7a>
		} else if (touchDataCurr.touchDetected == 2) {
 8009d06:	4b23      	ldr	r3, [pc, #140]	; (8009d94 <MTOUCH_GetGesture+0xcc>)
 8009d08:	781b      	ldrb	r3, [r3, #0]
 8009d0a:	2b02      	cmp	r3, #2
 8009d0c:	d119      	bne.n	8009d42 <MTOUCH_GetGesture+0x7a>
			origin[0] = (touchDataCurr.touchX[0] + touchDataCurr.touchX[1]) / 2;
 8009d0e:	4b21      	ldr	r3, [pc, #132]	; (8009d94 <MTOUCH_GetGesture+0xcc>)
 8009d10:	885b      	ldrh	r3, [r3, #2]
 8009d12:	461a      	mov	r2, r3
 8009d14:	4b1f      	ldr	r3, [pc, #124]	; (8009d94 <MTOUCH_GetGesture+0xcc>)
 8009d16:	889b      	ldrh	r3, [r3, #4]
 8009d18:	4413      	add	r3, r2
 8009d1a:	2b00      	cmp	r3, #0
 8009d1c:	da00      	bge.n	8009d20 <MTOUCH_GetGesture+0x58>
 8009d1e:	3301      	adds	r3, #1
 8009d20:	105b      	asrs	r3, r3, #1
 8009d22:	b29a      	uxth	r2, r3
 8009d24:	4b1d      	ldr	r3, [pc, #116]	; (8009d9c <MTOUCH_GetGesture+0xd4>)
 8009d26:	801a      	strh	r2, [r3, #0]
			origin[1] = (touchDataCurr.touchY[0] + touchDataCurr.touchY[1]) / 2;
 8009d28:	4b1a      	ldr	r3, [pc, #104]	; (8009d94 <MTOUCH_GetGesture+0xcc>)
 8009d2a:	899b      	ldrh	r3, [r3, #12]
 8009d2c:	461a      	mov	r2, r3
 8009d2e:	4b19      	ldr	r3, [pc, #100]	; (8009d94 <MTOUCH_GetGesture+0xcc>)
 8009d30:	89db      	ldrh	r3, [r3, #14]
 8009d32:	4413      	add	r3, r2
 8009d34:	2b00      	cmp	r3, #0
 8009d36:	da00      	bge.n	8009d3a <MTOUCH_GetGesture+0x72>
 8009d38:	3301      	adds	r3, #1
 8009d3a:	105b      	asrs	r3, r3, #1
 8009d3c:	b29a      	uxth	r2, r3
 8009d3e:	4b17      	ldr	r3, [pc, #92]	; (8009d9c <MTOUCH_GetGesture+0xd4>)
 8009d40:	805a      	strh	r2, [r3, #2]
		}
		gestureData->gesture = TOUCH;
 8009d42:	687b      	ldr	r3, [r7, #4]
 8009d44:	2201      	movs	r2, #1
 8009d46:	701a      	strb	r2, [r3, #0]
 8009d48:	e018      	b.n	8009d7c <MTOUCH_GetGesture+0xb4>
		//MTOUCH_SetGestureOrigin(gestureData);
	} else if (touchDataCurr.touchDetected == 1) {
 8009d4a:	4b12      	ldr	r3, [pc, #72]	; (8009d94 <MTOUCH_GetGesture+0xcc>)
 8009d4c:	781b      	ldrb	r3, [r3, #0]
 8009d4e:	2b01      	cmp	r3, #1
 8009d50:	d106      	bne.n	8009d60 <MTOUCH_GetGesture+0x98>
		gestureData->gesture = MTOUCH_DecodeGesture_1Point();
 8009d52:	f7ff ff25 	bl	8009ba0 <MTOUCH_DecodeGesture_1Point>
 8009d56:	4603      	mov	r3, r0
 8009d58:	461a      	mov	r2, r3
 8009d5a:	687b      	ldr	r3, [r7, #4]
 8009d5c:	701a      	strb	r2, [r3, #0]
 8009d5e:	e00d      	b.n	8009d7c <MTOUCH_GetGesture+0xb4>
		//MTOUCH_SetGestureOrigin(gestureData);
	} else if (touchDataCurr.touchDetected == 2) {
 8009d60:	4b0c      	ldr	r3, [pc, #48]	; (8009d94 <MTOUCH_GetGesture+0xcc>)
 8009d62:	781b      	ldrb	r3, [r3, #0]
 8009d64:	2b02      	cmp	r3, #2
 8009d66:	d106      	bne.n	8009d76 <MTOUCH_GetGesture+0xae>
		gestureData->gesture = MTOUCH_DecodeGesture_2Point();
 8009d68:	f7ff ff52 	bl	8009c10 <MTOUCH_DecodeGesture_2Point>
 8009d6c:	4603      	mov	r3, r0
 8009d6e:	461a      	mov	r2, r3
 8009d70:	687b      	ldr	r3, [r7, #4]
 8009d72:	701a      	strb	r2, [r3, #0]
 8009d74:	e002      	b.n	8009d7c <MTOUCH_GetGesture+0xb4>
		//MTOUCH_SetGestureOrigin(gestureData);
	} else {
		gestureData->gesture = NONE;
 8009d76:	687b      	ldr	r3, [r7, #4]
 8009d78:	2200      	movs	r2, #0
 8009d7a:	701a      	strb	r2, [r3, #0]
	}
	gestureData->x_0 = touchDataCurr.touchX[0];
 8009d7c:	4b05      	ldr	r3, [pc, #20]	; (8009d94 <MTOUCH_GetGesture+0xcc>)
 8009d7e:	885a      	ldrh	r2, [r3, #2]
 8009d80:	687b      	ldr	r3, [r7, #4]
 8009d82:	805a      	strh	r2, [r3, #2]
	gestureData->y_0 = touchDataCurr.touchY[0];
 8009d84:	4b03      	ldr	r3, [pc, #12]	; (8009d94 <MTOUCH_GetGesture+0xcc>)
 8009d86:	899a      	ldrh	r2, [r3, #12]
 8009d88:	687b      	ldr	r3, [r7, #4]
 8009d8a:	809a      	strh	r2, [r3, #4]
}
 8009d8c:	bf00      	nop
 8009d8e:	3708      	adds	r7, #8
 8009d90:	46bd      	mov	sp, r7
 8009d92:	bd80      	pop	{r7, pc}
 8009d94:	20006ee4 	.word	0x20006ee4
 8009d98:	20006eb8 	.word	0x20006eb8
 8009d9c:	20006f10 	.word	0x20006f10

08009da0 <MTOUCH_AddTouchData>:

void MTOUCH_AddTouchData(TS_StateTypeDef *TS_State) {
 8009da0:	b4b0      	push	{r4, r5, r7}
 8009da2:	b083      	sub	sp, #12
 8009da4:	af00      	add	r7, sp, #0
 8009da6:	6078      	str	r0, [r7, #4]
	touchDataPrev = touchDataCurr;
 8009da8:	4a0e      	ldr	r2, [pc, #56]	; (8009de4 <MTOUCH_AddTouchData+0x44>)
 8009daa:	4b0f      	ldr	r3, [pc, #60]	; (8009de8 <MTOUCH_AddTouchData+0x48>)
 8009dac:	4614      	mov	r4, r2
 8009dae:	461d      	mov	r5, r3
 8009db0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009db2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009db4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009db6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009db8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009dbc:	e884 0007 	stmia.w	r4, {r0, r1, r2}
	touchDataCurr = *TS_State;
 8009dc0:	4a09      	ldr	r2, [pc, #36]	; (8009de8 <MTOUCH_AddTouchData+0x48>)
 8009dc2:	687b      	ldr	r3, [r7, #4]
 8009dc4:	4614      	mov	r4, r2
 8009dc6:	461d      	mov	r5, r3
 8009dc8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009dca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009dcc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009dce:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009dd0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8009dd4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
}
 8009dd8:	bf00      	nop
 8009dda:	370c      	adds	r7, #12
 8009ddc:	46bd      	mov	sp, r7
 8009dde:	bcb0      	pop	{r4, r5, r7}
 8009de0:	4770      	bx	lr
 8009de2:	bf00      	nop
 8009de4:	20006eb8 	.word	0x20006eb8
 8009de8:	20006ee4 	.word	0x20006ee4

08009dec <_cbDialog>:

/**
 * @brief  Callback routine of the font dialog
 * @param  pMsg: pointer to data structure of type WM_MESSAGE
 * @retval None  */
static void _cbDialog(WM_MESSAGE * pMsg) {
 8009dec:	b580      	push	{r7, lr}
 8009dee:	b086      	sub	sp, #24
 8009df0:	af00      	add	r7, sp, #0
 8009df2:	6078      	str	r0, [r7, #4]
	int     NCode;
	int     Id;

	// USER START (Optionally insert additional variables)
	// USER END
	switch (pMsg->MsgId) {
 8009df4:	687b      	ldr	r3, [r7, #4]
 8009df6:	681b      	ldr	r3, [r3, #0]
 8009df8:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8009dfc:	f000 8097 	beq.w	8009f2e <_cbDialog+0x142>
 8009e00:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 8009e04:	f300 80ae 	bgt.w	8009f64 <_cbDialog+0x178>
 8009e08:	2b26      	cmp	r3, #38	; 0x26
 8009e0a:	f000 80a1 	beq.w	8009f50 <_cbDialog+0x164>
 8009e0e:	2b26      	cmp	r3, #38	; 0x26
 8009e10:	f300 80a8 	bgt.w	8009f64 <_cbDialog+0x178>
 8009e14:	2b0e      	cmp	r3, #14
 8009e16:	dc03      	bgt.n	8009e20 <_cbDialog+0x34>
 8009e18:	2b0d      	cmp	r3, #13
 8009e1a:	f280 8088 	bge.w	8009f2e <_cbDialog+0x142>
 8009e1e:	e0a1      	b.n	8009f64 <_cbDialog+0x178>
 8009e20:	2b1d      	cmp	r3, #29
 8009e22:	f040 809f 	bne.w	8009f64 <_cbDialog+0x178>
	case WM_INIT_DIALOG:

		// Initialization of 'Window'
		hItem = pMsg->hWin;
 8009e26:	687b      	ldr	r3, [r7, #4]
 8009e28:	685b      	ldr	r3, [r3, #4]
 8009e2a:	60fb      	str	r3, [r7, #12]
		WINDOW_SetBkColor(hItem, GUI_WHITE);
 8009e2c:	f04f 31ff 	mov.w	r1, #4294967295
 8009e30:	68f8      	ldr	r0, [r7, #12]
 8009e32:	f008 fe9a 	bl	8012b6a <WINDOW_SetBkColor>

		hTxtXAxis = WM_GetDialogItem(pMsg->hWin, ID_TEXT_4);
 8009e36:	687b      	ldr	r3, [r7, #4]
 8009e38:	685b      	ldr	r3, [r3, #4]
 8009e3a:	f44f 6105 	mov.w	r1, #2128	; 0x850
 8009e3e:	4618      	mov	r0, r3
 8009e40:	f007 fc2d 	bl	801169e <WM_GetDialogItem>
 8009e44:	4603      	mov	r3, r0
 8009e46:	4a4d      	ldr	r2, [pc, #308]	; (8009f7c <_cbDialog+0x190>)
 8009e48:	6013      	str	r3, [r2, #0]
		TEXT_SetTextColor(hTxtXAxis, GUI_DARKBLUE);
 8009e4a:	4b4c      	ldr	r3, [pc, #304]	; (8009f7c <_cbDialog+0x190>)
 8009e4c:	681b      	ldr	r3, [r3, #0]
 8009e4e:	494c      	ldr	r1, [pc, #304]	; (8009f80 <_cbDialog+0x194>)
 8009e50:	4618      	mov	r0, r3
 8009e52:	f008 fce0 	bl	8012816 <TEXT_SetTextColor>
		// TEXT_SetRotation(hItemTxt, GUI_ROTATE_CCW);

#if TXT_UI
		// COMANDI DOVE VISUALIZZIAMO LE MISURE
	    hTxtTitle = WM_GetDialogItem(pMsg->hWin, ID_TEXT_0);
 8009e56:	687b      	ldr	r3, [r7, #4]
 8009e58:	685b      	ldr	r3, [r3, #4]
 8009e5a:	f44f 6101 	mov.w	r1, #2064	; 0x810
 8009e5e:	4618      	mov	r0, r3
 8009e60:	f007 fc1d 	bl	801169e <WM_GetDialogItem>
 8009e64:	4603      	mov	r3, r0
 8009e66:	4a47      	ldr	r2, [pc, #284]	; (8009f84 <_cbDialog+0x198>)
 8009e68:	6013      	str	r3, [r2, #0]
	    TEXT_SetTextColor(hTxtTitle, GUI_BLACK);
 8009e6a:	4b46      	ldr	r3, [pc, #280]	; (8009f84 <_cbDialog+0x198>)
 8009e6c:	681b      	ldr	r3, [r3, #0]
 8009e6e:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8009e72:	4618      	mov	r0, r3
 8009e74:	f008 fccf 	bl	8012816 <TEXT_SetTextColor>
	    TEXT_SetFont(hTxtTitle, &GUI_Font32B_1);
 8009e78:	4b42      	ldr	r3, [pc, #264]	; (8009f84 <_cbDialog+0x198>)
 8009e7a:	681b      	ldr	r3, [r3, #0]
 8009e7c:	4942      	ldr	r1, [pc, #264]	; (8009f88 <_cbDialog+0x19c>)
 8009e7e:	4618      	mov	r0, r3
 8009e80:	f008 fc7a 	bl	8012778 <TEXT_SetFont>

		htxtMeas[TXT_1RAW] = WM_GetDialogItem(pMsg->hWin, ID_TEXT_1);
 8009e84:	687b      	ldr	r3, [r7, #4]
 8009e86:	685b      	ldr	r3, [r3, #4]
 8009e88:	f44f 6102 	mov.w	r1, #2080	; 0x820
 8009e8c:	4618      	mov	r0, r3
 8009e8e:	f007 fc06 	bl	801169e <WM_GetDialogItem>
 8009e92:	4603      	mov	r3, r0
 8009e94:	4a3d      	ldr	r2, [pc, #244]	; (8009f8c <_cbDialog+0x1a0>)
 8009e96:	6013      	str	r3, [r2, #0]
		TEXT_SetTextColor(htxtMeas[TXT_1RAW], GUI_BLUE);
 8009e98:	4b3c      	ldr	r3, [pc, #240]	; (8009f8c <_cbDialog+0x1a0>)
 8009e9a:	681b      	ldr	r3, [r3, #0]
 8009e9c:	493c      	ldr	r1, [pc, #240]	; (8009f90 <_cbDialog+0x1a4>)
 8009e9e:	4618      	mov	r0, r3
 8009ea0:	f008 fcb9 	bl	8012816 <TEXT_SetTextColor>
		TEXT_SetFont(htxtMeas[TXT_1RAW], &GUI_Font32B_1);
 8009ea4:	4b39      	ldr	r3, [pc, #228]	; (8009f8c <_cbDialog+0x1a0>)
 8009ea6:	681b      	ldr	r3, [r3, #0]
 8009ea8:	4937      	ldr	r1, [pc, #220]	; (8009f88 <_cbDialog+0x19c>)
 8009eaa:	4618      	mov	r0, r3
 8009eac:	f008 fc64 	bl	8012778 <TEXT_SetFont>
		TEXT_SetTextAlign(htxtMeas[TXT_1RAW], TEXT_CF_LEFT);
 8009eb0:	4b36      	ldr	r3, [pc, #216]	; (8009f8c <_cbDialog+0x1a0>)
 8009eb2:	681b      	ldr	r3, [r3, #0]
 8009eb4:	2100      	movs	r1, #0
 8009eb6:	4618      	mov	r0, r3
 8009eb8:	f008 fc9a 	bl	80127f0 <TEXT_SetTextAlign>

		htxtMeas[TXT_2RAW] = WM_GetDialogItem(pMsg->hWin, ID_TEXT_2);
 8009ebc:	687b      	ldr	r3, [r7, #4]
 8009ebe:	685b      	ldr	r3, [r3, #4]
 8009ec0:	f44f 6103 	mov.w	r1, #2096	; 0x830
 8009ec4:	4618      	mov	r0, r3
 8009ec6:	f007 fbea 	bl	801169e <WM_GetDialogItem>
 8009eca:	4603      	mov	r3, r0
 8009ecc:	4a2f      	ldr	r2, [pc, #188]	; (8009f8c <_cbDialog+0x1a0>)
 8009ece:	6053      	str	r3, [r2, #4]
	    TEXT_SetTextColor(htxtMeas[TXT_2RAW], GUI_BLUE);
 8009ed0:	4b2e      	ldr	r3, [pc, #184]	; (8009f8c <_cbDialog+0x1a0>)
 8009ed2:	685b      	ldr	r3, [r3, #4]
 8009ed4:	492e      	ldr	r1, [pc, #184]	; (8009f90 <_cbDialog+0x1a4>)
 8009ed6:	4618      	mov	r0, r3
 8009ed8:	f008 fc9d 	bl	8012816 <TEXT_SetTextColor>
		TEXT_SetFont(htxtMeas[TXT_2RAW], &GUI_Font32B_1);
 8009edc:	4b2b      	ldr	r3, [pc, #172]	; (8009f8c <_cbDialog+0x1a0>)
 8009ede:	685b      	ldr	r3, [r3, #4]
 8009ee0:	4929      	ldr	r1, [pc, #164]	; (8009f88 <_cbDialog+0x19c>)
 8009ee2:	4618      	mov	r0, r3
 8009ee4:	f008 fc48 	bl	8012778 <TEXT_SetFont>
		TEXT_SetTextAlign(htxtMeas[TXT_2RAW], TEXT_CF_LEFT);
 8009ee8:	4b28      	ldr	r3, [pc, #160]	; (8009f8c <_cbDialog+0x1a0>)
 8009eea:	685b      	ldr	r3, [r3, #4]
 8009eec:	2100      	movs	r1, #0
 8009eee:	4618      	mov	r0, r3
 8009ef0:	f008 fc7e 	bl	80127f0 <TEXT_SetTextAlign>

		htxtMeas[TXT_3RAW] = WM_GetDialogItem(pMsg->hWin, ID_TEXT_3);
 8009ef4:	687b      	ldr	r3, [r7, #4]
 8009ef6:	685b      	ldr	r3, [r3, #4]
 8009ef8:	f44f 6104 	mov.w	r1, #2112	; 0x840
 8009efc:	4618      	mov	r0, r3
 8009efe:	f007 fbce 	bl	801169e <WM_GetDialogItem>
 8009f02:	4603      	mov	r3, r0
 8009f04:	4a21      	ldr	r2, [pc, #132]	; (8009f8c <_cbDialog+0x1a0>)
 8009f06:	6093      	str	r3, [r2, #8]
	    TEXT_SetTextColor(htxtMeas[TXT_3RAW], GUI_BLUE);
 8009f08:	4b20      	ldr	r3, [pc, #128]	; (8009f8c <_cbDialog+0x1a0>)
 8009f0a:	689b      	ldr	r3, [r3, #8]
 8009f0c:	4920      	ldr	r1, [pc, #128]	; (8009f90 <_cbDialog+0x1a4>)
 8009f0e:	4618      	mov	r0, r3
 8009f10:	f008 fc81 	bl	8012816 <TEXT_SetTextColor>
	    TEXT_SetFont(htxtMeas[TXT_3RAW], &GUI_Font32B_1);
 8009f14:	4b1d      	ldr	r3, [pc, #116]	; (8009f8c <_cbDialog+0x1a0>)
 8009f16:	689b      	ldr	r3, [r3, #8]
 8009f18:	491b      	ldr	r1, [pc, #108]	; (8009f88 <_cbDialog+0x19c>)
 8009f1a:	4618      	mov	r0, r3
 8009f1c:	f008 fc2c 	bl	8012778 <TEXT_SetFont>
	    TEXT_SetTextAlign(htxtMeas[TXT_3RAW], TEXT_CF_LEFT);
 8009f20:	4b1a      	ldr	r3, [pc, #104]	; (8009f8c <_cbDialog+0x1a0>)
 8009f22:	689b      	ldr	r3, [r3, #8]
 8009f24:	2100      	movs	r1, #0
 8009f26:	4618      	mov	r0, r3
 8009f28:	f008 fc62 	bl	80127f0 <TEXT_SetTextAlign>
		hXScale = GRAPH_SCALE_Create(BOTOM_BORDER_POS+8, GUI_TA_BOTTOM, GRAPH_SCALE_CF_HORIZONTAL, GRAPH_SIZE_X/DIV_X);
		GRAPH_SCALE_SetTextColor(hXScale, GUI_DARKBLUE);
		GRAPH_AttachScale(hGraph, hXScale);
#endif

		break;
 8009f2c:	e022      	b.n	8009f74 <_cbDialog+0x188>
	case WM_TOUCH:     	 	/* Touch screen message */
	case WM_TOUCH_CHILD:    /* Touch screen message to ancestors */
	case WM_KEY:            /* Key has been pressed */
	{
		if (!gesture_occurred) {
 8009f2e:	4b19      	ldr	r3, [pc, #100]	; (8009f94 <_cbDialog+0x1a8>)
 8009f30:	681b      	ldr	r3, [r3, #0]
 8009f32:	2b00      	cmp	r3, #0
 8009f34:	d11d      	bne.n	8009f72 <_cbDialog+0x186>
			//MTOUCH_GestureData_s gestureData;
			MTOUCH_GetGesture(&gestureData);
 8009f36:	4818      	ldr	r0, [pc, #96]	; (8009f98 <_cbDialog+0x1ac>)
 8009f38:	f7ff fec6 	bl	8009cc8 <MTOUCH_GetGesture>

			GUI_cbGesture((Gesture_t *)&gestureData); // Per inviare gesture all'utente
 8009f3c:	4b17      	ldr	r3, [pc, #92]	; (8009f9c <_cbDialog+0x1b0>)
 8009f3e:	681b      	ldr	r3, [r3, #0]
 8009f40:	4815      	ldr	r0, [pc, #84]	; (8009f98 <_cbDialog+0x1ac>)
 8009f42:	4798      	blx	r3
			gesture_occurred++;
 8009f44:	4b13      	ldr	r3, [pc, #76]	; (8009f94 <_cbDialog+0x1a8>)
 8009f46:	681b      	ldr	r3, [r3, #0]
 8009f48:	3301      	adds	r3, #1
 8009f4a:	4a12      	ldr	r2, [pc, #72]	; (8009f94 <_cbDialog+0x1a8>)
 8009f4c:	6013      	str	r3, [r2, #0]
		}
	}
	break;
 8009f4e:	e010      	b.n	8009f72 <_cbDialog+0x186>
	case WM_NOTIFY_PARENT:
		Id    = WM_GetId(pMsg->hWinSrc);
 8009f50:	687b      	ldr	r3, [r7, #4]
 8009f52:	689b      	ldr	r3, [r3, #8]
 8009f54:	4618      	mov	r0, r3
 8009f56:	f007 fb6f 	bl	8011638 <WM_GetId>
 8009f5a:	6178      	str	r0, [r7, #20]
		NCode = pMsg->Data.v;
 8009f5c:	687b      	ldr	r3, [r7, #4]
 8009f5e:	68db      	ldr	r3, [r3, #12]
 8009f60:	613b      	str	r3, [r7, #16]
		switch(Id) {
		//gestione dei tasti qui
		((void)NCode);
		}
		break;
 8009f62:	e007      	b.n	8009f74 <_cbDialog+0x188>
		default:
			gesture_occurred = 0;
 8009f64:	4b0b      	ldr	r3, [pc, #44]	; (8009f94 <_cbDialog+0x1a8>)
 8009f66:	2200      	movs	r2, #0
 8009f68:	601a      	str	r2, [r3, #0]
			WM_DefaultProc(pMsg);
 8009f6a:	6878      	ldr	r0, [r7, #4]
 8009f6c:	f007 fa24 	bl	80113b8 <WM_DefaultProc>
			break;
 8009f70:	e000      	b.n	8009f74 <_cbDialog+0x188>
	break;
 8009f72:	bf00      	nop
	}
}
 8009f74:	bf00      	nop
 8009f76:	3718      	adds	r7, #24
 8009f78:	46bd      	mov	sp, r7
 8009f7a:	bd80      	pop	{r7, pc}
 8009f7c:	20006f1c 	.word	0x20006f1c
 8009f80:	ff000080 	.word	0xff000080
 8009f84:	20006f2c 	.word	0x20006f2c
 8009f88:	0801970c 	.word	0x0801970c
 8009f8c:	20006f20 	.word	0x20006f20
 8009f90:	ff0000ff 	.word	0xff0000ff
 8009f94:	20006f14 	.word	0x20006f14
 8009f98:	2002d9f0 	.word	0x2002d9f0
 8009f9c:	20006f30 	.word	0x20006f30

08009fa0 <DIALOG_init>:

void DIALOG_init(void (*cbGesture)(Gesture_t *gesture)) {
 8009fa0:	b580      	push	{r7, lr}
 8009fa2:	b084      	sub	sp, #16
 8009fa4:	af02      	add	r7, sp, #8
 8009fa6:	6078      	str	r0, [r7, #4]
	WM_MULTIBUF_Enable(1);
 8009fa8:	2001      	movs	r0, #1
 8009faa:	f007 fdd5 	bl	8011b58 <WM_MULTIBUF_Enable>
#if TXT_UI
	hDialog = GUI_CreateDialogBox(_aDialogTxt1, GUI_COUNTOF(_aDialogTxt1), _cbDialog, WM_GetDesktopWindowEx(0), 0, 0);
 8009fae:	2000      	movs	r0, #0
 8009fb0:	f007 fb26 	bl	8011600 <WM_GetDesktopWindowEx>
 8009fb4:	4603      	mov	r3, r0
 8009fb6:	2200      	movs	r2, #0
 8009fb8:	9201      	str	r2, [sp, #4]
 8009fba:	2200      	movs	r2, #0
 8009fbc:	9200      	str	r2, [sp, #0]
 8009fbe:	4a09      	ldr	r2, [pc, #36]	; (8009fe4 <DIALOG_init+0x44>)
 8009fc0:	2105      	movs	r1, #5
 8009fc2:	4809      	ldr	r0, [pc, #36]	; (8009fe8 <DIALOG_init+0x48>)
 8009fc4:	f008 fabb 	bl	801253e <GUI_CreateDialogBox>
 8009fc8:	4603      	mov	r3, r0
 8009fca:	4a08      	ldr	r2, [pc, #32]	; (8009fec <DIALOG_init+0x4c>)
 8009fcc:	6013      	str	r3, [r2, #0]
	GRAPH_AttachData (hGraph, hData1);

	hData2 = GRAPH_DATA_YT_Create(GUI_RED, GRAPH_SIZE_X, NULL, GRAPH_SIZE_X);
	GRAPH_AttachData (hGraph, hData2);
#endif
	while (cbGesture == NULL) {
 8009fce:	687b      	ldr	r3, [r7, #4]
 8009fd0:	2b00      	cmp	r3, #0
 8009fd2:	d0fc      	beq.n	8009fce <DIALOG_init+0x2e>
		// IMPLEMENTARE LA FUNZIONE DI GESTIONE DELLE GESTURE
	}
	GUI_cbGesture = cbGesture;
 8009fd4:	4a06      	ldr	r2, [pc, #24]	; (8009ff0 <DIALOG_init+0x50>)
 8009fd6:	687b      	ldr	r3, [r7, #4]
 8009fd8:	6013      	str	r3, [r2, #0]

	//WM_SetFocus(hWin1);
}
 8009fda:	bf00      	nop
 8009fdc:	3708      	adds	r7, #8
 8009fde:	46bd      	mov	sp, r7
 8009fe0:	bd80      	pop	{r7, pc}
 8009fe2:	bf00      	nop
 8009fe4:	08009ded 	.word	0x08009ded
 8009fe8:	0801e880 	.word	0x0801e880
 8009fec:	20006f18 	.word	0x20006f18
 8009ff0:	20006f30 	.word	0x20006f30

08009ff4 <GUI_poll>:


void GUI_poll(void) {
 8009ff4:	b580      	push	{r7, lr}
 8009ff6:	af00      	add	r7, sp, #0
	GUI_Exec();
 8009ff8:	f000 fff4 	bl	800afe4 <GUI_Exec>
	WM_PaintWindowAndDescs(hDialog);
 8009ffc:	4b03      	ldr	r3, [pc, #12]	; (800a00c <GUI_poll+0x18>)
 8009ffe:	681b      	ldr	r3, [r3, #0]
 800a000:	4618      	mov	r0, r3
 800a002:	f007 fe67 	bl	8011cd4 <WM_PaintWindowAndDescs>
}
 800a006:	bf00      	nop
 800a008:	bd80      	pop	{r7, pc}
 800a00a:	bf00      	nop
 800a00c:	20006f18 	.word	0x20006f18

0800a010 <GUI_setTextValue>:
void GUI_setVerticalAxisLabel(const char *axis_label) {
	yaxisText = axis_label;
}

#if TXT_UI
void GUI_setTextValue(char *pTxt, TextId_t ind) {
 800a010:	b580      	push	{r7, lr}
 800a012:	b082      	sub	sp, #8
 800a014:	af00      	add	r7, sp, #0
 800a016:	6078      	str	r0, [r7, #4]
 800a018:	460b      	mov	r3, r1
 800a01a:	70fb      	strb	r3, [r7, #3]
	TEXT_SetText(htxtMeas[ind], pTxt);
 800a01c:	78fb      	ldrb	r3, [r7, #3]
 800a01e:	4a05      	ldr	r2, [pc, #20]	; (800a034 <GUI_setTextValue+0x24>)
 800a020:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a024:	6879      	ldr	r1, [r7, #4]
 800a026:	4618      	mov	r0, r3
 800a028:	f008 fbb9 	bl	801279e <TEXT_SetText>
}
 800a02c:	bf00      	nop
 800a02e:	3708      	adds	r7, #8
 800a030:	46bd      	mov	sp, r7
 800a032:	bd80      	pop	{r7, pc}
 800a034:	20006f20 	.word	0x20006f20

0800a038 <_DrawCharAA4_Trans>:
 800a038:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a03c:	4680      	mov	r8, r0
 800a03e:	4693      	mov	fp, r2
 800a040:	461f      	mov	r7, r3
 800a042:	2500      	movs	r5, #0
 800a044:	9100      	str	r1, [sp, #0]
 800a046:	42bd      	cmp	r5, r7
 800a048:	da2a      	bge.n	800a0a0 <_DrawCharAA4_Trans+0x68>
 800a04a:	9b00      	ldr	r3, [sp, #0]
 800a04c:	4644      	mov	r4, r8
 800a04e:	465e      	mov	r6, fp
 800a050:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 800a054:	eb05 0903 	add.w	r9, r5, r3
 800a058:	2e01      	cmp	r6, #1
 800a05a:	ebc8 0004 	rsb	r0, r8, r4
 800a05e:	dd11      	ble.n	800a084 <_DrawCharAA4_Trans+0x4c>
 800a060:	f81a 3b01 	ldrb.w	r3, [sl], #1
 800a064:	4620      	mov	r0, r4
 800a066:	4649      	mov	r1, r9
 800a068:	3e02      	subs	r6, #2
 800a06a:	091a      	lsrs	r2, r3, #4
 800a06c:	9301      	str	r3, [sp, #4]
 800a06e:	f002 fe07 	bl	800cc80 <LCD_SetPixelAA4_Trans>
 800a072:	9b01      	ldr	r3, [sp, #4]
 800a074:	1c60      	adds	r0, r4, #1
 800a076:	4649      	mov	r1, r9
 800a078:	f003 020f 	and.w	r2, r3, #15
 800a07c:	3402      	adds	r4, #2
 800a07e:	f002 fdff 	bl	800cc80 <LCD_SetPixelAA4_Trans>
 800a082:	e7e9      	b.n	800a058 <_DrawCharAA4_Trans+0x20>
 800a084:	b136      	cbz	r6, 800a094 <_DrawCharAA4_Trans+0x5c>
 800a086:	f89a 2000 	ldrb.w	r2, [sl]
 800a08a:	4649      	mov	r1, r9
 800a08c:	4440      	add	r0, r8
 800a08e:	0912      	lsrs	r2, r2, #4
 800a090:	f002 fdf6 	bl	800cc80 <LCD_SetPixelAA4_Trans>
 800a094:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a096:	3501      	adds	r5, #1
 800a098:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800a09a:	4413      	add	r3, r2
 800a09c:	930d      	str	r3, [sp, #52]	; 0x34
 800a09e:	e7d2      	b.n	800a046 <_DrawCharAA4_Trans+0xe>
 800a0a0:	b003      	add	sp, #12
 800a0a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800a0a8 <_DrawCharAA4_TransCust>:
 800a0a8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800a0ac:	4699      	mov	r9, r3
 800a0ae:	4b15      	ldr	r3, [pc, #84]	; (800a104 <_DrawCharAA4_TransCust+0x5c>)
 800a0b0:	4605      	mov	r5, r0
 800a0b2:	460e      	mov	r6, r1
 800a0b4:	681b      	ldr	r3, [r3, #0]
 800a0b6:	4690      	mov	r8, r2
 800a0b8:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a0bc:	7c58      	ldrb	r0, [r3, #17]
 800a0be:	4b12      	ldr	r3, [pc, #72]	; (800a108 <_DrawCharAA4_TransCust+0x60>)
 800a0c0:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800a0c2:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a0c6:	68db      	ldr	r3, [r3, #12]
 800a0c8:	681b      	ldr	r3, [r3, #0]
 800a0ca:	b15b      	cbz	r3, 800a0e4 <_DrawCharAA4_TransCust+0x3c>
 800a0cc:	464b      	mov	r3, r9
 800a0ce:	4642      	mov	r2, r8
 800a0d0:	4631      	mov	r1, r6
 800a0d2:	4628      	mov	r0, r5
 800a0d4:	970d      	str	r7, [sp, #52]	; 0x34
 800a0d6:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 800a0da:	b004      	add	sp, #16
 800a0dc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a0e0:	f7ff bfaa 	b.w	800a038 <_DrawCharAA4_Trans>
 800a0e4:	4b09      	ldr	r3, [pc, #36]	; (800a10c <_DrawCharAA4_TransCust+0x64>)
 800a0e6:	681c      	ldr	r4, [r3, #0]
 800a0e8:	2c00      	cmp	r4, #0
 800a0ea:	d0ef      	beq.n	800a0cc <_DrawCharAA4_TransCust+0x24>
 800a0ec:	460a      	mov	r2, r1
 800a0ee:	463b      	mov	r3, r7
 800a0f0:	4629      	mov	r1, r5
 800a0f2:	e88d 0700 	stmia.w	sp, {r8, r9, sl}
 800a0f6:	47a0      	blx	r4
 800a0f8:	2800      	cmp	r0, #0
 800a0fa:	d1e7      	bne.n	800a0cc <_DrawCharAA4_TransCust+0x24>
 800a0fc:	b004      	add	sp, #16
 800a0fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a102:	bf00      	nop
 800a104:	2000003c 	.word	0x2000003c
 800a108:	2002db08 	.word	0x2002db08
 800a10c:	200002f8 	.word	0x200002f8

0800a110 <GUI_AA_SetpfDrawCharAA4>:
 800a110:	4b04      	ldr	r3, [pc, #16]	; (800a124 <GUI_AA_SetpfDrawCharAA4+0x14>)
 800a112:	b120      	cbz	r0, 800a11e <GUI_AA_SetpfDrawCharAA4+0xe>
 800a114:	4a04      	ldr	r2, [pc, #16]	; (800a128 <GUI_AA_SetpfDrawCharAA4+0x18>)
 800a116:	601a      	str	r2, [r3, #0]
 800a118:	4b04      	ldr	r3, [pc, #16]	; (800a12c <GUI_AA_SetpfDrawCharAA4+0x1c>)
 800a11a:	6018      	str	r0, [r3, #0]
 800a11c:	4770      	bx	lr
 800a11e:	4a04      	ldr	r2, [pc, #16]	; (800a130 <GUI_AA_SetpfDrawCharAA4+0x20>)
 800a120:	601a      	str	r2, [r3, #0]
 800a122:	4770      	bx	lr
 800a124:	20000000 	.word	0x20000000
 800a128:	0800a0a9 	.word	0x0800a0a9
 800a12c:	200002f8 	.word	0x200002f8
 800a130:	0800a039 	.word	0x0800a039

0800a134 <_Color2Index_1616I>:
 800a134:	4b06      	ldr	r3, [pc, #24]	; (800a150 <_Color2Index_1616I+0x1c>)
 800a136:	b510      	push	{r4, lr}
 800a138:	4604      	mov	r4, r0
 800a13a:	681b      	ldr	r3, [r3, #0]
 800a13c:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 800a140:	4798      	blx	r3
 800a142:	4b04      	ldr	r3, [pc, #16]	; (800a154 <_Color2Index_1616I+0x20>)
 800a144:	0e24      	lsrs	r4, r4, #24
 800a146:	5d1b      	ldrb	r3, [r3, r4]
 800a148:	ea40 1003 	orr.w	r0, r0, r3, lsl #4
 800a14c:	bd10      	pop	{r4, pc}
 800a14e:	bf00      	nop
 800a150:	0801dd38 	.word	0x0801dd38
 800a154:	08018bcc 	.word	0x08018bcc

0800a158 <_Index2Color_1616I>:
 800a158:	4b05      	ldr	r3, [pc, #20]	; (800a170 <_Index2Color_1616I+0x18>)
 800a15a:	b510      	push	{r4, lr}
 800a15c:	4604      	mov	r4, r0
 800a15e:	685b      	ldr	r3, [r3, #4]
 800a160:	b2c0      	uxtb	r0, r0
 800a162:	4798      	blx	r3
 800a164:	4b03      	ldr	r3, [pc, #12]	; (800a174 <_Index2Color_1616I+0x1c>)
 800a166:	0924      	lsrs	r4, r4, #4
 800a168:	5d1b      	ldrb	r3, [r3, r4]
 800a16a:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
 800a16e:	bd10      	pop	{r4, pc}
 800a170:	0801dd38 	.word	0x0801dd38
 800a174:	08018d2c 	.word	0x08018d2c

0800a178 <_GetIndexMask_1616I>:
 800a178:	20ff      	movs	r0, #255	; 0xff
 800a17a:	4770      	bx	lr

0800a17c <_Color2IndexBulk_1616I>:
 800a17c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a180:	4699      	mov	r9, r3
 800a182:	4b0c      	ldr	r3, [pc, #48]	; (800a1b4 <_Color2IndexBulk_1616I+0x38>)
 800a184:	4680      	mov	r8, r0
 800a186:	460f      	mov	r7, r1
 800a188:	681b      	ldr	r3, [r3, #0]
 800a18a:	4615      	mov	r5, r2
 800a18c:	4e0a      	ldr	r6, [pc, #40]	; (800a1b8 <_Color2IndexBulk_1616I+0x3c>)
 800a18e:	9301      	str	r3, [sp, #4]
 800a190:	f858 4b04 	ldr.w	r4, [r8], #4
 800a194:	9b01      	ldr	r3, [sp, #4]
 800a196:	f024 407f 	bic.w	r0, r4, #4278190080	; 0xff000000
 800a19a:	0e24      	lsrs	r4, r4, #24
 800a19c:	4798      	blx	r3
 800a19e:	3d01      	subs	r5, #1
 800a1a0:	5d32      	ldrb	r2, [r6, r4]
 800a1a2:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800a1a6:	7038      	strb	r0, [r7, #0]
 800a1a8:	444f      	add	r7, r9
 800a1aa:	d1f1      	bne.n	800a190 <_Color2IndexBulk_1616I+0x14>
 800a1ac:	b003      	add	sp, #12
 800a1ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a1b2:	bf00      	nop
 800a1b4:	0801dd38 	.word	0x0801dd38
 800a1b8:	08018bcc 	.word	0x08018bcc

0800a1bc <_Index2ColorBulk_1616I>:
 800a1bc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a1c0:	1e56      	subs	r6, r2, #1
 800a1c2:	4699      	mov	r9, r3
 800a1c4:	4615      	mov	r5, r2
 800a1c6:	4f0f      	ldr	r7, [pc, #60]	; (800a204 <_Index2ColorBulk_1616I+0x48>)
 800a1c8:	fb03 0606 	mla	r6, r3, r6, r0
 800a1cc:	f102 4080 	add.w	r0, r2, #1073741824	; 0x40000000
 800a1d0:	4b0d      	ldr	r3, [pc, #52]	; (800a208 <_Index2ColorBulk_1616I+0x4c>)
 800a1d2:	3801      	subs	r0, #1
 800a1d4:	685b      	ldr	r3, [r3, #4]
 800a1d6:	eb01 0480 	add.w	r4, r1, r0, lsl #2
 800a1da:	9301      	str	r3, [sp, #4]
 800a1dc:	f896 8000 	ldrb.w	r8, [r6]
 800a1e0:	ebc9 0606 	rsb	r6, r9, r6
 800a1e4:	9b01      	ldr	r3, [sp, #4]
 800a1e6:	4640      	mov	r0, r8
 800a1e8:	ea4f 1818 	mov.w	r8, r8, lsr #4
 800a1ec:	4798      	blx	r3
 800a1ee:	3d01      	subs	r5, #1
 800a1f0:	f817 2008 	ldrb.w	r2, [r7, r8]
 800a1f4:	ea40 6002 	orr.w	r0, r0, r2, lsl #24
 800a1f8:	f844 0904 	str.w	r0, [r4], #-4
 800a1fc:	d1ee      	bne.n	800a1dc <_Index2ColorBulk_1616I+0x20>
 800a1fe:	b003      	add	sp, #12
 800a200:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a204:	08018d2c 	.word	0x08018d2c
 800a208:	0801dd38 	.word	0x0801dd38

0800a20c <LCD_Color2Index_8666>:
 800a20c:	f3c0 2307 	ubfx	r3, r0, #8, #8
 800a210:	b2c2      	uxtb	r2, r0
 800a212:	f3c0 4007 	ubfx	r0, r0, #16, #8
 800a216:	4283      	cmp	r3, r0
 800a218:	b510      	push	{r4, lr}
 800a21a:	d107      	bne.n	800a22c <LCD_Color2Index_8666+0x20>
 800a21c:	429a      	cmp	r2, r3
 800a21e:	d105      	bne.n	800a22c <LCD_Color2Index_8666+0x20>
 800a220:	3208      	adds	r2, #8
 800a222:	2011      	movs	r0, #17
 800a224:	fbb2 f0f0 	udiv	r0, r2, r0
 800a228:	3078      	adds	r0, #120	; 0x78
 800a22a:	bd10      	pop	{r4, pc}
 800a22c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800a230:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800a234:	f100 047f 	add.w	r4, r0, #127	; 0x7f
 800a238:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a23c:	20ff      	movs	r0, #255	; 0xff
 800a23e:	327f      	adds	r2, #127	; 0x7f
 800a240:	337f      	adds	r3, #127	; 0x7f
 800a242:	fbb2 f1f0 	udiv	r1, r2, r0
 800a246:	fbb4 f2f0 	udiv	r2, r4, r0
 800a24a:	fbb3 f3f0 	udiv	r3, r3, r0
 800a24e:	2424      	movs	r4, #36	; 0x24
 800a250:	2006      	movs	r0, #6
 800a252:	fb04 2201 	mla	r2, r4, r1, r2
 800a256:	fb00 2003 	mla	r0, r0, r3, r2
 800a25a:	286b      	cmp	r0, #107	; 0x6b
 800a25c:	bf88      	it	hi
 800a25e:	3028      	addhi	r0, #40	; 0x28
 800a260:	bd10      	pop	{r4, pc}

0800a262 <_GetIndexMask_8666>:
 800a262:	20ff      	movs	r0, #255	; 0xff
 800a264:	4770      	bx	lr
	...

0800a268 <LCD_Index2Color_8666>:
 800a268:	f1a0 0378 	sub.w	r3, r0, #120	; 0x78
 800a26c:	2b0f      	cmp	r3, #15
 800a26e:	b530      	push	{r4, r5, lr}
 800a270:	d805      	bhi.n	800a27e <LCD_Index2Color_8666+0x16>
 800a272:	4b12      	ldr	r3, [pc, #72]	; (800a2bc <LCD_Index2Color_8666+0x54>)
 800a274:	4358      	muls	r0, r3
 800a276:	f100 4078 	add.w	r0, r0, #4160749568	; 0xf8000000
 800a27a:	3008      	adds	r0, #8
 800a27c:	e019      	b.n	800a2b2 <LCD_Index2Color_8666+0x4a>
 800a27e:	286b      	cmp	r0, #107	; 0x6b
 800a280:	d902      	bls.n	800a288 <LCD_Index2Color_8666+0x20>
 800a282:	2893      	cmp	r0, #147	; 0x93
 800a284:	d918      	bls.n	800a2b8 <LCD_Index2Color_8666+0x50>
 800a286:	3828      	subs	r0, #40	; 0x28
 800a288:	2106      	movs	r1, #6
 800a28a:	2233      	movs	r2, #51	; 0x33
 800a28c:	fbb0 f4f1 	udiv	r4, r0, r1
 800a290:	fb01 0314 	mls	r3, r1, r4, r0
 800a294:	fb02 f503 	mul.w	r5, r2, r3
 800a298:	2324      	movs	r3, #36	; 0x24
 800a29a:	fbb0 f3f3 	udiv	r3, r0, r3
 800a29e:	fbb4 f0f1 	udiv	r0, r4, r1
 800a2a2:	4353      	muls	r3, r2
 800a2a4:	fb01 4010 	mls	r0, r1, r0, r4
 800a2a8:	eb03 4305 	add.w	r3, r3, r5, lsl #16
 800a2ac:	4350      	muls	r0, r2
 800a2ae:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 800a2b2:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 800a2b6:	bd30      	pop	{r4, r5, pc}
 800a2b8:	2000      	movs	r0, #0
 800a2ba:	bd30      	pop	{r4, r5, pc}
 800a2bc:	00111111 	.word	0x00111111

0800a2c0 <_Color2Index_88666I>:
 800a2c0:	b510      	push	{r4, lr}
 800a2c2:	4604      	mov	r4, r0
 800a2c4:	4b04      	ldr	r3, [pc, #16]	; (800a2d8 <_Color2Index_88666I+0x18>)
 800a2c6:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 800a2ca:	0c24      	lsrs	r4, r4, #16
 800a2cc:	681b      	ldr	r3, [r3, #0]
 800a2ce:	4798      	blx	r3
 800a2d0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 800a2d4:	4320      	orrs	r0, r4
 800a2d6:	bd10      	pop	{r4, pc}
 800a2d8:	080188fc 	.word	0x080188fc

0800a2dc <_Index2Color_88666I>:
 800a2dc:	b510      	push	{r4, lr}
 800a2de:	4604      	mov	r4, r0
 800a2e0:	4b04      	ldr	r3, [pc, #16]	; (800a2f4 <_Index2Color_88666I+0x18>)
 800a2e2:	b2c0      	uxtb	r0, r0
 800a2e4:	0424      	lsls	r4, r4, #16
 800a2e6:	685b      	ldr	r3, [r3, #4]
 800a2e8:	4798      	blx	r3
 800a2ea:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
 800a2ee:	4320      	orrs	r0, r4
 800a2f0:	bd10      	pop	{r4, pc}
 800a2f2:	bf00      	nop
 800a2f4:	080188fc 	.word	0x080188fc

0800a2f8 <_GetIndexMask_88666I>:
 800a2f8:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800a2fc:	4770      	bx	lr
	...

0800a300 <_Color2IndexBulk_88666I>:
 800a300:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a304:	4699      	mov	r9, r3
 800a306:	4b0a      	ldr	r3, [pc, #40]	; (800a330 <_Color2IndexBulk_88666I+0x30>)
 800a308:	4680      	mov	r8, r0
 800a30a:	460f      	mov	r7, r1
 800a30c:	4616      	mov	r6, r2
 800a30e:	681d      	ldr	r5, [r3, #0]
 800a310:	f858 4b04 	ldr.w	r4, [r8], #4
 800a314:	f024 407f 	bic.w	r0, r4, #4278190080	; 0xff000000
 800a318:	0c24      	lsrs	r4, r4, #16
 800a31a:	47a8      	blx	r5
 800a31c:	3e01      	subs	r6, #1
 800a31e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 800a322:	ea40 0004 	orr.w	r0, r0, r4
 800a326:	8038      	strh	r0, [r7, #0]
 800a328:	444f      	add	r7, r9
 800a32a:	d1f1      	bne.n	800a310 <_Color2IndexBulk_88666I+0x10>
 800a32c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a330:	080188fc 	.word	0x080188fc

0800a334 <_Index2ColorBulk_88666I>:
 800a334:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a338:	f102 38ff 	add.w	r8, r2, #4294967295
 800a33c:	4699      	mov	r9, r3
 800a33e:	4617      	mov	r7, r2
 800a340:	fb03 0808 	mla	r8, r3, r8, r0
 800a344:	f102 4080 	add.w	r0, r2, #1073741824	; 0x40000000
 800a348:	4b0a      	ldr	r3, [pc, #40]	; (800a374 <_Index2ColorBulk_88666I+0x40>)
 800a34a:	3801      	subs	r0, #1
 800a34c:	685d      	ldr	r5, [r3, #4]
 800a34e:	eb01 0680 	add.w	r6, r1, r0, lsl #2
 800a352:	f8b8 4000 	ldrh.w	r4, [r8]
 800a356:	ebc9 0808 	rsb	r8, r9, r8
 800a35a:	b2e0      	uxtb	r0, r4
 800a35c:	0424      	lsls	r4, r4, #16
 800a35e:	47a8      	blx	r5
 800a360:	3f01      	subs	r7, #1
 800a362:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
 800a366:	ea40 0004 	orr.w	r0, r0, r4
 800a36a:	f846 0904 	str.w	r0, [r6], #-4
 800a36e:	d1f0      	bne.n	800a352 <_Index2ColorBulk_88666I+0x1e>
 800a370:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a374:	080188fc 	.word	0x080188fc

0800a378 <_Color2Index_M1555I>:
 800a378:	4a08      	ldr	r2, [pc, #32]	; (800a39c <_Color2Index_M1555I+0x24>)
 800a37a:	b2c3      	uxtb	r3, r0
 800a37c:	0fc1      	lsrs	r1, r0, #31
 800a37e:	5cd3      	ldrb	r3, [r2, r3]
 800a380:	eb03 33c1 	add.w	r3, r3, r1, lsl #15
 800a384:	f3c0 2107 	ubfx	r1, r0, #8, #8
 800a388:	f3c0 4007 	ubfx	r0, r0, #16, #8
 800a38c:	5c51      	ldrb	r1, [r2, r1]
 800a38e:	5c10      	ldrb	r0, [r2, r0]
 800a390:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800a394:	eb03 2080 	add.w	r0, r3, r0, lsl #10
 800a398:	4770      	bx	lr
 800a39a:	bf00      	nop
 800a39c:	08018acc 	.word	0x08018acc

0800a3a0 <_Index2Color_M1555I>:
 800a3a0:	4a09      	ldr	r2, [pc, #36]	; (800a3c8 <_Index2Color_M1555I+0x28>)
 800a3a2:	f000 031f 	and.w	r3, r0, #31
 800a3a6:	f340 31c0 	sbfx	r1, r0, #15, #1
 800a3aa:	5cd3      	ldrb	r3, [r2, r3]
 800a3ac:	eb03 6301 	add.w	r3, r3, r1, lsl #24
 800a3b0:	f3c0 1144 	ubfx	r1, r0, #5, #5
 800a3b4:	f3c0 2084 	ubfx	r0, r0, #10, #5
 800a3b8:	5c51      	ldrb	r1, [r2, r1]
 800a3ba:	5c10      	ldrb	r0, [r2, r0]
 800a3bc:	eb03 2301 	add.w	r3, r3, r1, lsl #8
 800a3c0:	eb03 4000 	add.w	r0, r3, r0, lsl #16
 800a3c4:	4770      	bx	lr
 800a3c6:	bf00      	nop
 800a3c8:	08018d0c 	.word	0x08018d0c

0800a3cc <_GetIndexMask_M1555I>:
 800a3cc:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800a3d0:	4770      	bx	lr
	...

0800a3d4 <_Color2IndexBulk_M1555I>:
 800a3d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a3d6:	f8df e050 	ldr.w	lr, [pc, #80]	; 800a428 <_Color2IndexBulk_M1555I+0x54>
 800a3da:	4606      	mov	r6, r0
 800a3dc:	460d      	mov	r5, r1
 800a3de:	4614      	mov	r4, r2
 800a3e0:	f8de e000 	ldr.w	lr, [lr]
 800a3e4:	461f      	mov	r7, r3
 800a3e6:	f1be 0f00 	cmp.w	lr, #0
 800a3ea:	d003      	beq.n	800a3f4 <_Color2IndexBulk_M1555I+0x20>
 800a3ec:	46f4      	mov	ip, lr
 800a3ee:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800a3f2:	4760      	bx	ip
 800a3f4:	490b      	ldr	r1, [pc, #44]	; (800a424 <_Color2IndexBulk_M1555I+0x50>)
 800a3f6:	f856 2b04 	ldr.w	r2, [r6], #4
 800a3fa:	3c01      	subs	r4, #1
 800a3fc:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800a400:	b2d0      	uxtb	r0, r2
 800a402:	5ccb      	ldrb	r3, [r1, r3]
 800a404:	5c08      	ldrb	r0, [r1, r0]
 800a406:	eb03 2380 	add.w	r3, r3, r0, lsl #10
 800a40a:	ea4f 70d2 	mov.w	r0, r2, lsr #31
 800a40e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800a412:	eb03 33c0 	add.w	r3, r3, r0, lsl #15
 800a416:	5c8a      	ldrb	r2, [r1, r2]
 800a418:	eb03 1342 	add.w	r3, r3, r2, lsl #5
 800a41c:	802b      	strh	r3, [r5, #0]
 800a41e:	443d      	add	r5, r7
 800a420:	d1e9      	bne.n	800a3f6 <_Color2IndexBulk_M1555I+0x22>
 800a422:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a424:	08018acc 	.word	0x08018acc
 800a428:	20000344 	.word	0x20000344

0800a42c <_Index2ColorBulk_M1555I>:
 800a42c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a42e:	4e16      	ldr	r6, [pc, #88]	; (800a488 <_Index2ColorBulk_M1555I+0x5c>)
 800a430:	4686      	mov	lr, r0
 800a432:	460f      	mov	r7, r1
 800a434:	4614      	mov	r4, r2
 800a436:	6876      	ldr	r6, [r6, #4]
 800a438:	461d      	mov	r5, r3
 800a43a:	b11e      	cbz	r6, 800a444 <_Index2ColorBulk_M1555I+0x18>
 800a43c:	46b4      	mov	ip, r6
 800a43e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800a442:	4760      	bx	ip
 800a444:	f102 4180 	add.w	r1, r2, #1073741824	; 0x40000000
 800a448:	1e50      	subs	r0, r2, #1
 800a44a:	4e10      	ldr	r6, [pc, #64]	; (800a48c <_Index2ColorBulk_M1555I+0x60>)
 800a44c:	3901      	subs	r1, #1
 800a44e:	fb03 e000 	mla	r0, r3, r0, lr
 800a452:	eb07 0181 	add.w	r1, r7, r1, lsl #2
 800a456:	8802      	ldrh	r2, [r0, #0]
 800a458:	3c01      	subs	r4, #1
 800a45a:	eba0 0005 	sub.w	r0, r0, r5
 800a45e:	f002 031f 	and.w	r3, r2, #31
 800a462:	f342 37c0 	sbfx	r7, r2, #15, #1
 800a466:	5cf3      	ldrb	r3, [r6, r3]
 800a468:	eb03 6307 	add.w	r3, r3, r7, lsl #24
 800a46c:	f3c2 1744 	ubfx	r7, r2, #5, #5
 800a470:	f3c2 2284 	ubfx	r2, r2, #10, #5
 800a474:	5df7      	ldrb	r7, [r6, r7]
 800a476:	5cb2      	ldrb	r2, [r6, r2]
 800a478:	eb03 2307 	add.w	r3, r3, r7, lsl #8
 800a47c:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 800a480:	f841 3904 	str.w	r3, [r1], #-4
 800a484:	d1e7      	bne.n	800a456 <_Index2ColorBulk_M1555I+0x2a>
 800a486:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a488:	20000344 	.word	0x20000344
 800a48c:	08018d0c 	.word	0x08018d0c

0800a490 <GUICC_M1555I_SetCustColorConv>:
 800a490:	4b01      	ldr	r3, [pc, #4]	; (800a498 <GUICC_M1555I_SetCustColorConv+0x8>)
 800a492:	e883 0003 	stmia.w	r3, {r0, r1}
 800a496:	4770      	bx	lr
 800a498:	20000344 	.word	0x20000344

0800a49c <_Color2Index_M4444I>:
 800a49c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 800a4a0:	0e03      	lsrs	r3, r0, #24
 800a4a2:	f3c0 2107 	ubfx	r1, r0, #8, #8
 800a4a6:	3308      	adds	r3, #8
 800a4a8:	3108      	adds	r1, #8
 800a4aa:	b510      	push	{r4, lr}
 800a4ac:	f102 0408 	add.w	r4, r2, #8
 800a4b0:	b2c2      	uxtb	r2, r0
 800a4b2:	2011      	movs	r0, #17
 800a4b4:	3208      	adds	r2, #8
 800a4b6:	fbb3 f3f0 	udiv	r3, r3, r0
 800a4ba:	fbb2 f2f0 	udiv	r2, r2, r0
 800a4be:	eb02 3303 	add.w	r3, r2, r3, lsl #12
 800a4c2:	fbb4 f2f0 	udiv	r2, r4, r0
 800a4c6:	fbb1 f0f0 	udiv	r0, r1, r0
 800a4ca:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800a4ce:	eb03 1000 	add.w	r0, r3, r0, lsl #4
 800a4d2:	bd10      	pop	{r4, pc}

0800a4d4 <_Index2Color_M4444I>:
 800a4d4:	4a09      	ldr	r2, [pc, #36]	; (800a4fc <_Index2Color_M4444I+0x28>)
 800a4d6:	f3c0 3303 	ubfx	r3, r0, #12, #4
 800a4da:	5cd1      	ldrb	r1, [r2, r3]
 800a4dc:	f3c0 2303 	ubfx	r3, r0, #8, #4
 800a4e0:	5cd3      	ldrb	r3, [r2, r3]
 800a4e2:	041b      	lsls	r3, r3, #16
 800a4e4:	eb03 6301 	add.w	r3, r3, r1, lsl #24
 800a4e8:	f000 010f 	and.w	r1, r0, #15
 800a4ec:	f3c0 1003 	ubfx	r0, r0, #4, #4
 800a4f0:	5c51      	ldrb	r1, [r2, r1]
 800a4f2:	5c10      	ldrb	r0, [r2, r0]
 800a4f4:	440b      	add	r3, r1
 800a4f6:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 800a4fa:	4770      	bx	lr
 800a4fc:	08018d2c 	.word	0x08018d2c

0800a500 <_GetIndexMask_M4444I>:
 800a500:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800a504:	4770      	bx	lr
	...

0800a508 <_Color2IndexBulk_M4444I>:
 800a508:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a50c:	f8df e068 	ldr.w	lr, [pc, #104]	; 800a578 <_Color2IndexBulk_M4444I+0x70>
 800a510:	4606      	mov	r6, r0
 800a512:	460d      	mov	r5, r1
 800a514:	4614      	mov	r4, r2
 800a516:	f8de e000 	ldr.w	lr, [lr]
 800a51a:	461f      	mov	r7, r3
 800a51c:	f1be 0f00 	cmp.w	lr, #0
 800a520:	d003      	beq.n	800a52a <_Color2IndexBulk_M4444I+0x22>
 800a522:	46f4      	mov	ip, lr
 800a524:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a528:	4760      	bx	ip
 800a52a:	f04f 0e11 	mov.w	lr, #17
 800a52e:	f856 0b04 	ldr.w	r0, [r6], #4
 800a532:	3c01      	subs	r4, #1
 800a534:	b2c1      	uxtb	r1, r0
 800a536:	f3c0 4807 	ubfx	r8, r0, #16, #8
 800a53a:	ea4f 6210 	mov.w	r2, r0, lsr #24
 800a53e:	f3c0 2c07 	ubfx	ip, r0, #8, #8
 800a542:	f101 0108 	add.w	r1, r1, #8
 800a546:	f108 0808 	add.w	r8, r8, #8
 800a54a:	f102 0208 	add.w	r2, r2, #8
 800a54e:	f10c 0c08 	add.w	ip, ip, #8
 800a552:	fbb2 f2fe 	udiv	r2, r2, lr
 800a556:	fbb1 f1fe 	udiv	r1, r1, lr
 800a55a:	fbb8 f3fe 	udiv	r3, r8, lr
 800a55e:	eb01 3102 	add.w	r1, r1, r2, lsl #12
 800a562:	eb01 2203 	add.w	r2, r1, r3, lsl #8
 800a566:	fbbc f3fe 	udiv	r3, ip, lr
 800a56a:	eb02 1303 	add.w	r3, r2, r3, lsl #4
 800a56e:	802b      	strh	r3, [r5, #0]
 800a570:	443d      	add	r5, r7
 800a572:	d1dc      	bne.n	800a52e <_Color2IndexBulk_M4444I+0x26>
 800a574:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a578:	2000034c 	.word	0x2000034c

0800a57c <_Index2ColorBulk_M4444I>:
 800a57c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a57e:	4e17      	ldr	r6, [pc, #92]	; (800a5dc <_Index2ColorBulk_M4444I+0x60>)
 800a580:	4686      	mov	lr, r0
 800a582:	460f      	mov	r7, r1
 800a584:	4614      	mov	r4, r2
 800a586:	6876      	ldr	r6, [r6, #4]
 800a588:	461d      	mov	r5, r3
 800a58a:	b11e      	cbz	r6, 800a594 <_Index2ColorBulk_M4444I+0x18>
 800a58c:	46b4      	mov	ip, r6
 800a58e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800a592:	4760      	bx	ip
 800a594:	f102 4180 	add.w	r1, r2, #1073741824	; 0x40000000
 800a598:	1e50      	subs	r0, r2, #1
 800a59a:	4e11      	ldr	r6, [pc, #68]	; (800a5e0 <_Index2ColorBulk_M4444I+0x64>)
 800a59c:	3901      	subs	r1, #1
 800a59e:	fb03 e000 	mla	r0, r3, r0, lr
 800a5a2:	eb07 0181 	add.w	r1, r7, r1, lsl #2
 800a5a6:	8802      	ldrh	r2, [r0, #0]
 800a5a8:	3c01      	subs	r4, #1
 800a5aa:	eba0 0005 	sub.w	r0, r0, r5
 800a5ae:	ea4f 3312 	mov.w	r3, r2, lsr #12
 800a5b2:	5cf7      	ldrb	r7, [r6, r3]
 800a5b4:	f002 030f 	and.w	r3, r2, #15
 800a5b8:	5cf3      	ldrb	r3, [r6, r3]
 800a5ba:	eb03 6307 	add.w	r3, r3, r7, lsl #24
 800a5be:	f3c2 2703 	ubfx	r7, r2, #8, #4
 800a5c2:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800a5c6:	5df7      	ldrb	r7, [r6, r7]
 800a5c8:	5cb2      	ldrb	r2, [r6, r2]
 800a5ca:	eb03 4307 	add.w	r3, r3, r7, lsl #16
 800a5ce:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800a5d2:	f841 3904 	str.w	r3, [r1], #-4
 800a5d6:	d1e6      	bne.n	800a5a6 <_Index2ColorBulk_M4444I+0x2a>
 800a5d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a5da:	bf00      	nop
 800a5dc:	2000034c 	.word	0x2000034c
 800a5e0:	08018d2c 	.word	0x08018d2c

0800a5e4 <GUICC_M4444I_SetCustColorConv>:
 800a5e4:	4b01      	ldr	r3, [pc, #4]	; (800a5ec <GUICC_M4444I_SetCustColorConv+0x8>)
 800a5e6:	e883 0003 	stmia.w	r3, {r0, r1}
 800a5ea:	4770      	bx	lr
 800a5ec:	2000034c 	.word	0x2000034c

0800a5f0 <_Color2Index_M8888I>:
 800a5f0:	4770      	bx	lr

0800a5f2 <_GetIndexMask_M8888I>:
 800a5f2:	f04f 30ff 	mov.w	r0, #4294967295
 800a5f6:	4770      	bx	lr

0800a5f8 <_Color2IndexBulk_M8888I>:
 800a5f8:	b510      	push	{r4, lr}
 800a5fa:	f850 4b04 	ldr.w	r4, [r0], #4
 800a5fe:	3a01      	subs	r2, #1
 800a600:	600c      	str	r4, [r1, #0]
 800a602:	4419      	add	r1, r3
 800a604:	d1f9      	bne.n	800a5fa <_Color2IndexBulk_M8888I+0x2>
 800a606:	bd10      	pop	{r4, pc}

0800a608 <_Index2ColorBulk_M8888I>:
 800a608:	b510      	push	{r4, lr}
 800a60a:	6804      	ldr	r4, [r0, #0]
 800a60c:	3a01      	subs	r2, #1
 800a60e:	4418      	add	r0, r3
 800a610:	f841 4b04 	str.w	r4, [r1], #4
 800a614:	d1f9      	bne.n	800a60a <_Index2ColorBulk_M8888I+0x2>
 800a616:	bd10      	pop	{r4, pc}

0800a618 <GUICC_M8888I_SetCustColorConv>:
 800a618:	4770      	bx	lr
	...

0800a61c <LCD_Index2Color_M565>:
 800a61c:	f3c0 1345 	ubfx	r3, r0, #5, #6
 800a620:	4a07      	ldr	r2, [pc, #28]	; (800a640 <LCD_Index2Color_M565+0x24>)
 800a622:	5cd1      	ldrb	r1, [r2, r3]
 800a624:	f3c0 23c4 	ubfx	r3, r0, #11, #5
 800a628:	4a06      	ldr	r2, [pc, #24]	; (800a644 <LCD_Index2Color_M565+0x28>)
 800a62a:	f000 001f 	and.w	r0, r0, #31
 800a62e:	5cd3      	ldrb	r3, [r2, r3]
 800a630:	5c10      	ldrb	r0, [r2, r0]
 800a632:	041b      	lsls	r3, r3, #16
 800a634:	eb03 2301 	add.w	r3, r3, r1, lsl #8
 800a638:	4418      	add	r0, r3
 800a63a:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 800a63e:	4770      	bx	lr
 800a640:	08018ccc 	.word	0x08018ccc
 800a644:	08018d0c 	.word	0x08018d0c

0800a648 <_Color2Index_M565>:
 800a648:	f3c0 2307 	ubfx	r3, r0, #8, #8
 800a64c:	4a06      	ldr	r2, [pc, #24]	; (800a668 <_Color2Index_M565+0x20>)
 800a64e:	5cd1      	ldrb	r1, [r2, r3]
 800a650:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800a654:	4a05      	ldr	r2, [pc, #20]	; (800a66c <_Color2Index_M565+0x24>)
 800a656:	b2c0      	uxtb	r0, r0
 800a658:	5cd3      	ldrb	r3, [r2, r3]
 800a65a:	5c10      	ldrb	r0, [r2, r0]
 800a65c:	02db      	lsls	r3, r3, #11
 800a65e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800a662:	4418      	add	r0, r3
 800a664:	4770      	bx	lr
 800a666:	bf00      	nop
 800a668:	080189cc 	.word	0x080189cc
 800a66c:	08018acc 	.word	0x08018acc

0800a670 <_GetIndexMask_M565>:
 800a670:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800a674:	4770      	bx	lr
	...

0800a678 <_Color2IndexBulk>:
 800a678:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a67a:	f8df e050 	ldr.w	lr, [pc, #80]	; 800a6cc <_Color2IndexBulk+0x54>
 800a67e:	4606      	mov	r6, r0
 800a680:	460d      	mov	r5, r1
 800a682:	4614      	mov	r4, r2
 800a684:	f8de e000 	ldr.w	lr, [lr]
 800a688:	461f      	mov	r7, r3
 800a68a:	f1be 0f00 	cmp.w	lr, #0
 800a68e:	d003      	beq.n	800a698 <_Color2IndexBulk+0x20>
 800a690:	46f4      	mov	ip, lr
 800a692:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800a696:	4760      	bx	ip
 800a698:	f8df e034 	ldr.w	lr, [pc, #52]	; 800a6d0 <_Color2IndexBulk+0x58>
 800a69c:	490a      	ldr	r1, [pc, #40]	; (800a6c8 <_Color2IndexBulk+0x50>)
 800a69e:	f856 2b04 	ldr.w	r2, [r6], #4
 800a6a2:	3c01      	subs	r4, #1
 800a6a4:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800a6a8:	f81e 0003 	ldrb.w	r0, [lr, r3]
 800a6ac:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800a6b0:	b2d2      	uxtb	r2, r2
 800a6b2:	5ccb      	ldrb	r3, [r1, r3]
 800a6b4:	5c8a      	ldrb	r2, [r1, r2]
 800a6b6:	ea4f 23c3 	mov.w	r3, r3, lsl #11
 800a6ba:	eb03 1340 	add.w	r3, r3, r0, lsl #5
 800a6be:	4413      	add	r3, r2
 800a6c0:	802b      	strh	r3, [r5, #0]
 800a6c2:	443d      	add	r5, r7
 800a6c4:	d1eb      	bne.n	800a69e <_Color2IndexBulk+0x26>
 800a6c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a6c8:	08018acc 	.word	0x08018acc
 800a6cc:	20000354 	.word	0x20000354
 800a6d0:	080189cc 	.word	0x080189cc

0800a6d4 <_Index2ColorBulk>:
 800a6d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a6d6:	4e16      	ldr	r6, [pc, #88]	; (800a730 <_Index2ColorBulk+0x5c>)
 800a6d8:	4686      	mov	lr, r0
 800a6da:	460f      	mov	r7, r1
 800a6dc:	4614      	mov	r4, r2
 800a6de:	6876      	ldr	r6, [r6, #4]
 800a6e0:	461d      	mov	r5, r3
 800a6e2:	b11e      	cbz	r6, 800a6ec <_Index2ColorBulk+0x18>
 800a6e4:	46b4      	mov	ip, r6
 800a6e6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800a6ea:	4760      	bx	ip
 800a6ec:	f102 4180 	add.w	r1, r2, #1073741824	; 0x40000000
 800a6f0:	1e50      	subs	r0, r2, #1
 800a6f2:	4e10      	ldr	r6, [pc, #64]	; (800a734 <_Index2ColorBulk+0x60>)
 800a6f4:	3901      	subs	r1, #1
 800a6f6:	fb03 e000 	mla	r0, r3, r0, lr
 800a6fa:	eb07 0181 	add.w	r1, r7, r1, lsl #2
 800a6fe:	4f0e      	ldr	r7, [pc, #56]	; (800a738 <_Index2ColorBulk+0x64>)
 800a700:	8802      	ldrh	r2, [r0, #0]
 800a702:	3c01      	subs	r4, #1
 800a704:	eba0 0005 	sub.w	r0, r0, r5
 800a708:	ea4f 23d2 	mov.w	r3, r2, lsr #11
 800a70c:	f816 e003 	ldrb.w	lr, [r6, r3]
 800a710:	f002 031f 	and.w	r3, r2, #31
 800a714:	f3c2 1245 	ubfx	r2, r2, #5, #6
 800a718:	5cf3      	ldrb	r3, [r6, r3]
 800a71a:	5cba      	ldrb	r2, [r7, r2]
 800a71c:	eb03 430e 	add.w	r3, r3, lr, lsl #16
 800a720:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800a724:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800a728:	f841 3904 	str.w	r3, [r1], #-4
 800a72c:	d1e8      	bne.n	800a700 <_Index2ColorBulk+0x2c>
 800a72e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a730:	20000354 	.word	0x20000354
 800a734:	08018d0c 	.word	0x08018d0c
 800a738:	08018ccc 	.word	0x08018ccc

0800a73c <GUICC_M565_SetCustColorConv>:
 800a73c:	4b01      	ldr	r3, [pc, #4]	; (800a744 <GUICC_M565_SetCustColorConv+0x8>)
 800a73e:	e883 0003 	stmia.w	r3, {r0, r1}
 800a742:	4770      	bx	lr
 800a744:	20000354 	.word	0x20000354

0800a748 <_Color2Index_M888>:
 800a748:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 800a74c:	4770      	bx	lr

0800a74e <_GetIndexMask_M888>:
 800a74e:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 800a752:	4770      	bx	lr

0800a754 <_Color2IndexBulk>:
 800a754:	b510      	push	{r4, lr}
 800a756:	f850 4b04 	ldr.w	r4, [r0], #4
 800a75a:	3a01      	subs	r2, #1
 800a75c:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
 800a760:	600c      	str	r4, [r1, #0]
 800a762:	4419      	add	r1, r3
 800a764:	d1f7      	bne.n	800a756 <_Color2IndexBulk+0x2>
 800a766:	bd10      	pop	{r4, pc}

0800a768 <_Index2ColorBulk>:
 800a768:	b510      	push	{r4, lr}
 800a76a:	6804      	ldr	r4, [r0, #0]
 800a76c:	3a01      	subs	r2, #1
 800a76e:	4418      	add	r0, r3
 800a770:	f044 447f 	orr.w	r4, r4, #4278190080	; 0xff000000
 800a774:	f841 4b04 	str.w	r4, [r1], #4
 800a778:	d1f7      	bne.n	800a76a <_Index2ColorBulk+0x2>
 800a77a:	bd10      	pop	{r4, pc}

0800a77c <GUICC_M888_SetCustColorConv>:
 800a77c:	4770      	bx	lr

0800a77e <LCD_Index2Color_M8888I>:
 800a77e:	4770      	bx	lr

0800a780 <LCD_Index2Color_M888>:
 800a780:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 800a784:	4770      	bx	lr
	...

0800a788 <_PushFreeBlock>:
 800a788:	4b07      	ldr	r3, [pc, #28]	; (800a7a8 <_PushFreeBlock+0x20>)
 800a78a:	685a      	ldr	r2, [r3, #4]
 800a78c:	3201      	adds	r2, #1
 800a78e:	b510      	push	{r4, lr}
 800a790:	605a      	str	r2, [r3, #4]
 800a792:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a794:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 800a796:	eb02 01c0 	add.w	r1, r2, r0, lsl #3
 800a79a:	604c      	str	r4, [r1, #4]
 800a79c:	2100      	movs	r1, #0
 800a79e:	f802 1030 	strb.w	r1, [r2, r0, lsl #3]
 800a7a2:	6258      	str	r0, [r3, #36]	; 0x24
 800a7a4:	bd10      	pop	{r4, pc}
 800a7a6:	bf00      	nop
 800a7a8:	2002d9f8 	.word	0x2002d9f8

0800a7ac <_RemoveFreeBlock>:
 800a7ac:	b510      	push	{r4, lr}
 800a7ae:	230f      	movs	r3, #15
 800a7b0:	6844      	ldr	r4, [r0, #4]
 800a7b2:	490d      	ldr	r1, [pc, #52]	; (800a7e8 <_RemoveFreeBlock+0x3c>)
 800a7b4:	eb01 02c3 	add.w	r2, r1, r3, lsl #3
 800a7b8:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800a7ba:	4294      	cmp	r4, r2
 800a7bc:	4a0a      	ldr	r2, [pc, #40]	; (800a7e8 <_RemoveFreeBlock+0x3c>)
 800a7be:	d203      	bcs.n	800a7c8 <_RemoveFreeBlock+0x1c>
 800a7c0:	f113 33ff 	adds.w	r3, r3, #4294967295
 800a7c4:	d2f6      	bcs.n	800a7b4 <_RemoveFreeBlock+0x8>
 800a7c6:	bd10      	pop	{r4, pc}
 800a7c8:	2b0f      	cmp	r3, #15
 800a7ca:	d80c      	bhi.n	800a7e6 <_RemoveFreeBlock+0x3a>
 800a7cc:	6811      	ldr	r1, [r2, #0]
 800a7ce:	1b09      	subs	r1, r1, r4
 800a7d0:	6011      	str	r1, [r2, #0]
 800a7d2:	6881      	ldr	r1, [r0, #8]
 800a7d4:	68c0      	ldr	r0, [r0, #12]
 800a7d6:	b101      	cbz	r1, 800a7da <_RemoveFreeBlock+0x2e>
 800a7d8:	6048      	str	r0, [r1, #4]
 800a7da:	b108      	cbz	r0, 800a7e0 <_RemoveFreeBlock+0x34>
 800a7dc:	6001      	str	r1, [r0, #0]
 800a7de:	bd10      	pop	{r4, pc}
 800a7e0:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800a7e4:	6459      	str	r1, [r3, #68]	; 0x44
 800a7e6:	bd10      	pop	{r4, pc}
 800a7e8:	2002d9f8 	.word	0x2002d9f8

0800a7ec <_AddFreeMemory>:
 800a7ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a7ee:	4e27      	ldr	r6, [pc, #156]	; (800a88c <_AddFreeMemory+0xa0>)
 800a7f0:	4605      	mov	r5, r0
 800a7f2:	1808      	adds	r0, r1, r0
 800a7f4:	460c      	mov	r4, r1
 800a7f6:	68f3      	ldr	r3, [r6, #12]
 800a7f8:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 800a7fa:	3b01      	subs	r3, #1
 800a7fc:	4413      	add	r3, r2
 800a7fe:	4283      	cmp	r3, r0
 800a800:	d305      	bcc.n	800a80e <_AddFreeMemory+0x22>
 800a802:	594b      	ldr	r3, [r1, r5]
 800a804:	b91b      	cbnz	r3, 800a80e <_AddFreeMemory+0x22>
 800a806:	6843      	ldr	r3, [r0, #4]
 800a808:	441d      	add	r5, r3
 800a80a:	f7ff ffcf 	bl	800a7ac <_RemoveFreeBlock>
 800a80e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 800a810:	429c      	cmp	r4, r3
 800a812:	d90a      	bls.n	800a82a <_AddFreeMemory+0x3e>
 800a814:	f854 7c04 	ldr.w	r7, [r4, #-4]
 800a818:	1be7      	subs	r7, r4, r7
 800a81a:	683b      	ldr	r3, [r7, #0]
 800a81c:	b92b      	cbnz	r3, 800a82a <_AddFreeMemory+0x3e>
 800a81e:	687b      	ldr	r3, [r7, #4]
 800a820:	463c      	mov	r4, r7
 800a822:	4638      	mov	r0, r7
 800a824:	441d      	add	r5, r3
 800a826:	f7ff ffc1 	bl	800a7ac <_RemoveFreeBlock>
 800a82a:	230f      	movs	r3, #15
 800a82c:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800a830:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800a832:	4295      	cmp	r5, r2
 800a834:	d203      	bcs.n	800a83e <_AddFreeMemory+0x52>
 800a836:	f113 33ff 	adds.w	r3, r3, #4294967295
 800a83a:	d2f7      	bcs.n	800a82c <_AddFreeMemory+0x40>
 800a83c:	e023      	b.n	800a886 <_AddFreeMemory+0x9a>
 800a83e:	2b0f      	cmp	r3, #15
 800a840:	d821      	bhi.n	800a886 <_AddFreeMemory+0x9a>
 800a842:	3308      	adds	r3, #8
 800a844:	1960      	adds	r0, r4, r5
 800a846:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800a84a:	6851      	ldr	r1, [r2, #4]
 800a84c:	2200      	movs	r2, #0
 800a84e:	6124      	str	r4, [r4, #16]
 800a850:	60a1      	str	r1, [r4, #8]
 800a852:	e884 0024 	stmia.w	r4, {r2, r5}
 800a856:	f840 5c04 	str.w	r5, [r0, #-4]
 800a85a:	f104 0008 	add.w	r0, r4, #8
 800a85e:	b101      	cbz	r1, 800a862 <_AddFreeMemory+0x76>
 800a860:	6048      	str	r0, [r1, #4]
 800a862:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 800a866:	60a1      	str	r1, [r4, #8]
 800a868:	60e2      	str	r2, [r4, #12]
 800a86a:	6058      	str	r0, [r3, #4]
 800a86c:	6833      	ldr	r3, [r6, #0]
 800a86e:	4907      	ldr	r1, [pc, #28]	; (800a88c <_AddFreeMemory+0xa0>)
 800a870:	18ea      	adds	r2, r5, r3
 800a872:	f896 3029 	ldrb.w	r3, [r6, #41]	; 0x29
 800a876:	6032      	str	r2, [r6, #0]
 800a878:	b92b      	cbnz	r3, 800a886 <_AddFreeMemory+0x9a>
 800a87a:	68cb      	ldr	r3, [r1, #12]
 800a87c:	1a9b      	subs	r3, r3, r2
 800a87e:	688a      	ldr	r2, [r1, #8]
 800a880:	4293      	cmp	r3, r2
 800a882:	bf88      	it	hi
 800a884:	608b      	strhi	r3, [r1, #8]
 800a886:	4628      	mov	r0, r5
 800a888:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a88a:	bf00      	nop
 800a88c:	2002d9f8 	.word	0x2002d9f8

0800a890 <_RemoveHoles>:
 800a890:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a894:	4f23      	ldr	r7, [pc, #140]	; (800a924 <_RemoveHoles+0x94>)
 800a896:	4683      	mov	fp, r0
 800a898:	68fe      	ldr	r6, [r7, #12]
 800a89a:	46b8      	mov	r8, r7
 800a89c:	6bbc      	ldr	r4, [r7, #56]	; 0x38
 800a89e:	3e01      	subs	r6, #1
 800a8a0:	4426      	add	r6, r4
 800a8a2:	e894 0028 	ldmia.w	r4, {r3, r5}
 800a8a6:	bb9b      	cbnz	r3, 800a910 <_RemoveHoles+0x80>
 800a8a8:	1961      	adds	r1, r4, r5
 800a8aa:	428e      	cmp	r6, r1
 800a8ac:	d930      	bls.n	800a910 <_RemoveHoles+0x80>
 800a8ae:	f854 a005 	ldr.w	sl, [r4, r5]
 800a8b2:	f1ba 0f00 	cmp.w	sl, #0
 800a8b6:	d02b      	beq.n	800a910 <_RemoveHoles+0x80>
 800a8b8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a8ba:	f813 303a 	ldrb.w	r3, [r3, sl, lsl #3]
 800a8be:	2b01      	cmp	r3, #1
 800a8c0:	d126      	bne.n	800a910 <_RemoveHoles+0x80>
 800a8c2:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 800a8c6:	4620      	mov	r0, r4
 800a8c8:	f8d1 9004 	ldr.w	r9, [r1, #4]
 800a8cc:	9300      	str	r3, [sp, #0]
 800a8ce:	9101      	str	r1, [sp, #4]
 800a8d0:	f7ff ff6c 	bl	800a7ac <_RemoveFreeBlock>
 800a8d4:	9901      	ldr	r1, [sp, #4]
 800a8d6:	f8d8 2034 	ldr.w	r2, [r8, #52]	; 0x34
 800a8da:	6808      	ldr	r0, [r1, #0]
 800a8dc:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
 800a8e0:	4620      	mov	r0, r4
 800a8e2:	6054      	str	r4, [r2, #4]
 800a8e4:	464a      	mov	r2, r9
 800a8e6:	f00a ffeb 	bl	80158c0 <memmove>
 800a8ea:	9b00      	ldr	r3, [sp, #0]
 800a8ec:	eb04 0109 	add.w	r1, r4, r9
 800a8f0:	4628      	mov	r0, r5
 800a8f2:	459a      	cmp	sl, r3
 800a8f4:	bf02      	ittt	eq
 800a8f6:	f8d8 3034 	ldreq.w	r3, [r8, #52]	; 0x34
 800a8fa:	1b5b      	subeq	r3, r3, r5
 800a8fc:	f8c8 3034 	streq.w	r3, [r8, #52]	; 0x34
 800a900:	f7ff ff74 	bl	800a7ec <_AddFreeMemory>
 800a904:	f1bb 0f00 	cmp.w	fp, #0
 800a908:	d001      	beq.n	800a90e <_RemoveHoles+0x7e>
 800a90a:	4558      	cmp	r0, fp
 800a90c:	d205      	bcs.n	800a91a <_RemoveHoles+0x8a>
 800a90e:	464d      	mov	r5, r9
 800a910:	442c      	add	r4, r5
 800a912:	42a6      	cmp	r6, r4
 800a914:	d8c5      	bhi.n	800a8a2 <_RemoveHoles+0x12>
 800a916:	2001      	movs	r0, #1
 800a918:	e000      	b.n	800a91c <_RemoveHoles+0x8c>
 800a91a:	2000      	movs	r0, #0
 800a91c:	b003      	add	sp, #12
 800a91e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a922:	bf00      	nop
 800a924:	2002d9f8 	.word	0x2002d9f8

0800a928 <GUI_ALLOC_FreeFixedBlock>:
 800a928:	b128      	cbz	r0, 800a936 <GUI_ALLOC_FreeFixedBlock+0xe>
 800a92a:	4b03      	ldr	r3, [pc, #12]	; (800a938 <GUI_ALLOC_FreeFixedBlock+0x10>)
 800a92c:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800a92e:	6002      	str	r2, [r0, #0]
 800a930:	b102      	cbz	r2, 800a934 <GUI_ALLOC_FreeFixedBlock+0xc>
 800a932:	6050      	str	r0, [r2, #4]
 800a934:	63d8      	str	r0, [r3, #60]	; 0x3c
 800a936:	4770      	bx	lr
 800a938:	2002d9f8 	.word	0x2002d9f8

0800a93c <GUI_ALLOC_h2p>:
 800a93c:	4b03      	ldr	r3, [pc, #12]	; (800a94c <GUI_ALLOC_h2p+0x10>)
 800a93e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a940:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800a944:	6840      	ldr	r0, [r0, #4]
 800a946:	3008      	adds	r0, #8
 800a948:	4770      	bx	lr
 800a94a:	bf00      	nop
 800a94c:	2002d9f8 	.word	0x2002d9f8

0800a950 <GUI_ALLOC_LockH>:
 800a950:	4b05      	ldr	r3, [pc, #20]	; (800a968 <GUI_ALLOC_LockH+0x18>)
 800a952:	69da      	ldr	r2, [r3, #28]
 800a954:	3201      	adds	r2, #1
 800a956:	61da      	str	r2, [r3, #28]
 800a958:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a95a:	f812 3030 	ldrb.w	r3, [r2, r0, lsl #3]
 800a95e:	3301      	adds	r3, #1
 800a960:	f802 3030 	strb.w	r3, [r2, r0, lsl #3]
 800a964:	f7ff bfea 	b.w	800a93c <GUI_ALLOC_h2p>
 800a968:	2002d9f8 	.word	0x2002d9f8

0800a96c <GUI_ALLOC_UnlockH>:
 800a96c:	6803      	ldr	r3, [r0, #0]
 800a96e:	490a      	ldr	r1, [pc, #40]	; (800a998 <GUI_ALLOC_UnlockH+0x2c>)
 800a970:	b530      	push	{r4, r5, lr}
 800a972:	f853 5c08 	ldr.w	r5, [r3, #-8]
 800a976:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 800a978:	f814 3035 	ldrb.w	r3, [r4, r5, lsl #3]
 800a97c:	2b01      	cmp	r3, #1
 800a97e:	d903      	bls.n	800a988 <GUI_ALLOC_UnlockH+0x1c>
 800a980:	69ca      	ldr	r2, [r1, #28]
 800a982:	b10a      	cbz	r2, 800a988 <GUI_ALLOC_UnlockH+0x1c>
 800a984:	3a01      	subs	r2, #1
 800a986:	61ca      	str	r2, [r1, #28]
 800a988:	3b01      	subs	r3, #1
 800a98a:	f804 3035 	strb.w	r3, [r4, r5, lsl #3]
 800a98e:	2300      	movs	r3, #0
 800a990:	6003      	str	r3, [r0, #0]
 800a992:	4618      	mov	r0, r3
 800a994:	bd30      	pop	{r4, r5, pc}
 800a996:	bf00      	nop
 800a998:	2002d9f8 	.word	0x2002d9f8

0800a99c <GUI_ALLOC_AssignMemory>:
 800a99c:	4b02      	ldr	r3, [pc, #8]	; (800a9a8 <GUI_ALLOC_AssignMemory+0xc>)
 800a99e:	f021 0103 	bic.w	r1, r1, #3
 800a9a2:	6018      	str	r0, [r3, #0]
 800a9a4:	6059      	str	r1, [r3, #4]
 800a9a6:	4770      	bx	lr
 800a9a8:	2000035c 	.word	0x2000035c

0800a9ac <GUI_ALLOC_GetSize>:
 800a9ac:	b130      	cbz	r0, 800a9bc <GUI_ALLOC_GetSize+0x10>
 800a9ae:	4b04      	ldr	r3, [pc, #16]	; (800a9c0 <GUI_ALLOC_GetSize+0x14>)
 800a9b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a9b2:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
 800a9b6:	6843      	ldr	r3, [r0, #4]
 800a9b8:	6858      	ldr	r0, [r3, #4]
 800a9ba:	380c      	subs	r0, #12
 800a9bc:	4770      	bx	lr
 800a9be:	bf00      	nop
 800a9c0:	2002d9f8 	.word	0x2002d9f8

0800a9c4 <GUI_ALLOC_Free>:
 800a9c4:	b510      	push	{r4, lr}
 800a9c6:	4604      	mov	r4, r0
 800a9c8:	b160      	cbz	r0, 800a9e4 <GUI_ALLOC_Free+0x20>
 800a9ca:	4b07      	ldr	r3, [pc, #28]	; (800a9e8 <GUI_ALLOC_Free+0x24>)
 800a9cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a9ce:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 800a9d2:	6859      	ldr	r1, [r3, #4]
 800a9d4:	6848      	ldr	r0, [r1, #4]
 800a9d6:	f7ff ff09 	bl	800a7ec <_AddFreeMemory>
 800a9da:	4620      	mov	r0, r4
 800a9dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a9e0:	f7ff bed2 	b.w	800a788 <_PushFreeBlock>
 800a9e4:	bd10      	pop	{r4, pc}
 800a9e6:	bf00      	nop
 800a9e8:	2002d9f8 	.word	0x2002d9f8

0800a9ec <_EnlargeBlocks>:
 800a9ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a9f0:	4c22      	ldr	r4, [pc, #136]	; (800aa7c <_EnlargeBlocks+0x90>)
 800a9f2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a9f4:	b93b      	cbnz	r3, 800aa06 <_EnlargeBlocks+0x1a>
 800a9f6:	4b22      	ldr	r3, [pc, #136]	; (800aa80 <_EnlargeBlocks+0x94>)
 800a9f8:	689d      	ldr	r5, [r3, #8]
 800a9fa:	685b      	ldr	r3, [r3, #4]
 800a9fc:	3508      	adds	r5, #8
 800a9fe:	fbb3 f5f5 	udiv	r5, r3, r5
 800aa02:	3502      	adds	r5, #2
 800aa04:	e003      	b.n	800aa0e <_EnlargeBlocks+0x22>
 800aa06:	6923      	ldr	r3, [r4, #16]
 800aa08:	1d1d      	adds	r5, r3, #4
 800aa0a:	eb05 05d3 	add.w	r5, r5, r3, lsr #3
 800aa0e:	00e8      	lsls	r0, r5, #3
 800aa10:	f000 f8f2 	bl	800abf8 <_Alloc>
 800aa14:	4680      	mov	r8, r0
 800aa16:	b360      	cbz	r0, 800aa72 <_EnlargeBlocks+0x86>
 800aa18:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800aa1a:	6922      	ldr	r2, [r4, #16]
 800aa1c:	eb01 03c0 	add.w	r3, r1, r0, lsl #3
 800aa20:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800aa22:	00d2      	lsls	r2, r2, #3
 800aa24:	685e      	ldr	r6, [r3, #4]
 800aa26:	4b17      	ldr	r3, [pc, #92]	; (800aa84 <_EnlargeBlocks+0x98>)
 800aa28:	3608      	adds	r6, #8
 800aa2a:	681b      	ldr	r3, [r3, #0]
 800aa2c:	4630      	mov	r0, r6
 800aa2e:	4798      	blx	r3
 800aa30:	6922      	ldr	r2, [r4, #16]
 800aa32:	1e69      	subs	r1, r5, #1
 800aa34:	6366      	str	r6, [r4, #52]	; 0x34
 800aa36:	4613      	mov	r3, r2
 800aa38:	f8c4 802c 	str.w	r8, [r4, #44]	; 0x2c
 800aa3c:	428b      	cmp	r3, r1
 800aa3e:	d205      	bcs.n	800aa4c <_EnlargeBlocks+0x60>
 800aa40:	3301      	adds	r3, #1
 800aa42:	eb06 00c3 	add.w	r0, r6, r3, lsl #3
 800aa46:	f840 3c04 	str.w	r3, [r0, #-4]
 800aa4a:	e7f7      	b.n	800aa3c <_EnlargeBlocks+0x50>
 800aa4c:	eb06 06c3 	add.w	r6, r6, r3, lsl #3
 800aa50:	f04f 0800 	mov.w	r8, #0
 800aa54:	4638      	mov	r0, r7
 800aa56:	f8c6 8004 	str.w	r8, [r6, #4]
 800aa5a:	6863      	ldr	r3, [r4, #4]
 800aa5c:	6262      	str	r2, [r4, #36]	; 0x24
 800aa5e:	1a9b      	subs	r3, r3, r2
 800aa60:	6125      	str	r5, [r4, #16]
 800aa62:	442b      	add	r3, r5
 800aa64:	6063      	str	r3, [r4, #4]
 800aa66:	b13f      	cbz	r7, 800aa78 <_EnlargeBlocks+0x8c>
 800aa68:	f7ff ffac 	bl	800a9c4 <GUI_ALLOC_Free>
 800aa6c:	4640      	mov	r0, r8
 800aa6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aa72:	2001      	movs	r0, #1
 800aa74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aa78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aa7c:	2002d9f8 	.word	0x2002d9f8
 800aa80:	2000035c 	.word	0x2000035c
 800aa84:	20000050 	.word	0x20000050

0800aa88 <_InitOnce>:
 800aa88:	4a17      	ldr	r2, [pc, #92]	; (800aae8 <_InitOnce+0x60>)
 800aa8a:	b570      	push	{r4, r5, r6, lr}
 800aa8c:	f892 3028 	ldrb.w	r3, [r2, #40]	; 0x28
 800aa90:	bb43      	cbnz	r3, 800aae4 <_InitOnce+0x5c>
 800aa92:	2301      	movs	r3, #1
 800aa94:	f882 3028 	strb.w	r3, [r2, #40]	; 0x28
 800aa98:	4b14      	ldr	r3, [pc, #80]	; (800aaec <_InitOnce+0x64>)
 800aa9a:	6899      	ldr	r1, [r3, #8]
 800aa9c:	b911      	cbnz	r1, 800aaa4 <_InitOnce+0x1c>
 800aa9e:	6859      	ldr	r1, [r3, #4]
 800aaa0:	0889      	lsrs	r1, r1, #2
 800aaa2:	6099      	str	r1, [r3, #8]
 800aaa4:	215a      	movs	r1, #90	; 0x5a
 800aaa6:	2610      	movs	r6, #16
 800aaa8:	6211      	str	r1, [r2, #32]
 800aaaa:	2100      	movs	r1, #0
 800aaac:	eb02 00c1 	add.w	r0, r2, r1, lsl #3
 800aab0:	fa06 f501 	lsl.w	r5, r6, r1
 800aab4:	3101      	adds	r1, #1
 800aab6:	4c0c      	ldr	r4, [pc, #48]	; (800aae8 <_InitOnce+0x60>)
 800aab8:	6405      	str	r5, [r0, #64]	; 0x40
 800aaba:	2910      	cmp	r1, #16
 800aabc:	d1f6      	bne.n	800aaac <_InitOnce+0x24>
 800aabe:	6819      	ldr	r1, [r3, #0]
 800aac0:	2501      	movs	r5, #1
 800aac2:	6858      	ldr	r0, [r3, #4]
 800aac4:	2302      	movs	r3, #2
 800aac6:	63a1      	str	r1, [r4, #56]	; 0x38
 800aac8:	6123      	str	r3, [r4, #16]
 800aaca:	f1a0 0314 	sub.w	r3, r0, #20
 800aace:	60e0      	str	r0, [r4, #12]
 800aad0:	440b      	add	r3, r1
 800aad2:	6363      	str	r3, [r4, #52]	; 0x34
 800aad4:	605d      	str	r5, [r3, #4]
 800aad6:	6265      	str	r5, [r4, #36]	; 0x24
 800aad8:	6065      	str	r5, [r4, #4]
 800aada:	f7ff fe87 	bl	800a7ec <_AddFreeMemory>
 800aade:	f7ff ff85 	bl	800a9ec <_EnlargeBlocks>
 800aae2:	6325      	str	r5, [r4, #48]	; 0x30
 800aae4:	bd70      	pop	{r4, r5, r6, pc}
 800aae6:	bf00      	nop
 800aae8:	2002d9f8 	.word	0x2002d9f8
 800aaec:	2000035c 	.word	0x2000035c

0800aaf0 <GUI_ALLOC_GetFixedBlock>:
 800aaf0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aaf4:	4607      	mov	r7, r0
 800aaf6:	4e26      	ldr	r6, [pc, #152]	; (800ab90 <GUI_ALLOC_GetFixedBlock+0xa0>)
 800aaf8:	f7ff ffc6 	bl	800aa88 <_InitOnce>
 800aafc:	3703      	adds	r7, #3
 800aafe:	6c30      	ldr	r0, [r6, #64]	; 0x40
 800ab00:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800ab02:	f027 0703 	bic.w	r7, r7, #3
 800ab06:	4614      	mov	r4, r2
 800ab08:	3704      	adds	r7, #4
 800ab0a:	4287      	cmp	r7, r0
 800ab0c:	bf38      	it	cc
 800ab0e:	4607      	movcc	r7, r0
 800ab10:	b134      	cbz	r4, 800ab20 <GUI_ALLOC_GetFixedBlock+0x30>
 800ab12:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ab16:	429f      	cmp	r7, r3
 800ab18:	6823      	ldr	r3, [r4, #0]
 800ab1a:	d02c      	beq.n	800ab76 <GUI_ALLOC_GetFixedBlock+0x86>
 800ab1c:	461c      	mov	r4, r3
 800ab1e:	e7f7      	b.n	800ab10 <GUI_ALLOC_GetFixedBlock+0x20>
 800ab20:	68f3      	ldr	r3, [r6, #12]
 800ab22:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 800ab24:	eb02 0803 	add.w	r8, r2, r3
 800ab28:	f858 5c04 	ldr.w	r5, [r8, #-4]
 800ab2c:	ebc5 0508 	rsb	r5, r5, r8
 800ab30:	682b      	ldr	r3, [r5, #0]
 800ab32:	b133      	cbz	r3, 800ab42 <GUI_ALLOC_GetFixedBlock+0x52>
 800ab34:	4620      	mov	r0, r4
 800ab36:	f7ff feab 	bl	800a890 <_RemoveHoles>
 800ab3a:	f858 5c04 	ldr.w	r5, [r8, #-4]
 800ab3e:	ebc5 0508 	rsb	r5, r5, r8
 800ab42:	682b      	ldr	r3, [r5, #0]
 800ab44:	bb0b      	cbnz	r3, 800ab8a <GUI_ALLOC_GetFixedBlock+0x9a>
 800ab46:	686b      	ldr	r3, [r5, #4]
 800ab48:	429f      	cmp	r7, r3
 800ab4a:	dc1e      	bgt.n	800ab8a <GUI_ALLOC_GetFixedBlock+0x9a>
 800ab4c:	4628      	mov	r0, r5
 800ab4e:	1d1c      	adds	r4, r3, #4
 800ab50:	f7ff fe2c 	bl	800a7ac <_RemoveFreeBlock>
 800ab54:	68f3      	ldr	r3, [r6, #12]
 800ab56:	6868      	ldr	r0, [r5, #4]
 800ab58:	1be4      	subs	r4, r4, r7
 800ab5a:	1bdb      	subs	r3, r3, r7
 800ab5c:	1bc0      	subs	r0, r0, r7
 800ab5e:	442c      	add	r4, r5
 800ab60:	60f3      	str	r3, [r6, #12]
 800ab62:	6973      	ldr	r3, [r6, #20]
 800ab64:	443b      	add	r3, r7
 800ab66:	6173      	str	r3, [r6, #20]
 800ab68:	d002      	beq.n	800ab70 <GUI_ALLOC_GetFixedBlock+0x80>
 800ab6a:	4629      	mov	r1, r5
 800ab6c:	f7ff fe3e 	bl	800a7ec <_AddFreeMemory>
 800ab70:	f844 7c04 	str.w	r7, [r4, #-4]
 800ab74:	e009      	b.n	800ab8a <GUI_ALLOC_GetFixedBlock+0x9a>
 800ab76:	b10b      	cbz	r3, 800ab7c <GUI_ALLOC_GetFixedBlock+0x8c>
 800ab78:	6861      	ldr	r1, [r4, #4]
 800ab7a:	6059      	str	r1, [r3, #4]
 800ab7c:	6861      	ldr	r1, [r4, #4]
 800ab7e:	b101      	cbz	r1, 800ab82 <GUI_ALLOC_GetFixedBlock+0x92>
 800ab80:	600b      	str	r3, [r1, #0]
 800ab82:	42a2      	cmp	r2, r4
 800ab84:	d101      	bne.n	800ab8a <GUI_ALLOC_GetFixedBlock+0x9a>
 800ab86:	6823      	ldr	r3, [r4, #0]
 800ab88:	63f3      	str	r3, [r6, #60]	; 0x3c
 800ab8a:	4620      	mov	r0, r4
 800ab8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ab90:	2002d9f8 	.word	0x2002d9f8

0800ab94 <GUI_ALLOC_GetMaxSize>:
 800ab94:	b508      	push	{r3, lr}
 800ab96:	f7ff ff77 	bl	800aa88 <_InitOnce>
 800ab9a:	2300      	movs	r3, #0
 800ab9c:	4a0b      	ldr	r2, [pc, #44]	; (800abcc <GUI_ALLOC_GetMaxSize+0x38>)
 800ab9e:	1899      	adds	r1, r3, r2
 800aba0:	f8d1 00bc 	ldr.w	r0, [r1, #188]	; 0xbc
 800aba4:	b110      	cbz	r0, 800abac <GUI_ALLOC_GetMaxSize+0x18>
 800aba6:	6883      	ldr	r3, [r0, #8]
 800aba8:	2000      	movs	r0, #0
 800abaa:	e00b      	b.n	800abc4 <GUI_ALLOC_GetMaxSize+0x30>
 800abac:	3b08      	subs	r3, #8
 800abae:	f113 0f80 	cmn.w	r3, #128	; 0x80
 800abb2:	d1f4      	bne.n	800ab9e <GUI_ALLOC_GetMaxSize+0xa>
 800abb4:	e008      	b.n	800abc8 <GUI_ALLOC_GetMaxSize+0x34>
 800abb6:	685a      	ldr	r2, [r3, #4]
 800abb8:	689b      	ldr	r3, [r3, #8]
 800abba:	4290      	cmp	r0, r2
 800abbc:	bf38      	it	cc
 800abbe:	4610      	movcc	r0, r2
 800abc0:	b113      	cbz	r3, 800abc8 <GUI_ALLOC_GetMaxSize+0x34>
 800abc2:	689b      	ldr	r3, [r3, #8]
 800abc4:	2b00      	cmp	r3, #0
 800abc6:	d1f6      	bne.n	800abb6 <GUI_ALLOC_GetMaxSize+0x22>
 800abc8:	380c      	subs	r0, #12
 800abca:	bd08      	pop	{r3, pc}
 800abcc:	2002d9f8 	.word	0x2002d9f8

0800abd0 <GUI_ALLOC_RequestSize>:
 800abd0:	b508      	push	{r3, lr}
 800abd2:	f7ff ffdf 	bl	800ab94 <GUI_ALLOC_GetMaxSize>
 800abd6:	2264      	movs	r2, #100	; 0x64
 800abd8:	f5b0 0f80 	cmp.w	r0, #4194304	; 0x400000
 800abdc:	4b05      	ldr	r3, [pc, #20]	; (800abf4 <GUI_ALLOC_RequestSize+0x24>)
 800abde:	bf85      	ittet	hi
 800abe0:	fb90 f0f2 	sdivhi	r0, r0, r2
 800abe4:	6a1b      	ldrhi	r3, [r3, #32]
 800abe6:	6a1b      	ldrls	r3, [r3, #32]
 800abe8:	4358      	mulhi	r0, r3
 800abea:	bf9c      	itt	ls
 800abec:	4358      	mulls	r0, r3
 800abee:	fbb0 f0f2 	udivls	r0, r0, r2
 800abf2:	bd08      	pop	{r3, pc}
 800abf4:	2002d9f8 	.word	0x2002d9f8

0800abf8 <_Alloc>:
 800abf8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800abfc:	4e39      	ldr	r6, [pc, #228]	; (800ace4 <_Alloc+0xec>)
 800abfe:	4604      	mov	r4, r0
 800ac00:	f7ff ff42 	bl	800aa88 <_InitOnce>
 800ac04:	6c35      	ldr	r5, [r6, #64]	; 0x40
 800ac06:	6833      	ldr	r3, [r6, #0]
 800ac08:	42ac      	cmp	r4, r5
 800ac0a:	bf24      	itt	cs
 800ac0c:	3403      	addcs	r4, #3
 800ac0e:	f024 0503 	biccs.w	r5, r4, #3
 800ac12:	4c34      	ldr	r4, [pc, #208]	; (800ace4 <_Alloc+0xec>)
 800ac14:	350c      	adds	r5, #12
 800ac16:	42ab      	cmp	r3, r5
 800ac18:	d33e      	bcc.n	800ac98 <_Alloc+0xa0>
 800ac1a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ac1c:	6862      	ldr	r2, [r4, #4]
 800ac1e:	429a      	cmp	r2, r3
 800ac20:	d90f      	bls.n	800ac42 <_Alloc+0x4a>
 800ac22:	6873      	ldr	r3, [r6, #4]
 800ac24:	6a77      	ldr	r7, [r6, #36]	; 0x24
 800ac26:	3b01      	subs	r3, #1
 800ac28:	ea4f 08c7 	mov.w	r8, r7, lsl #3
 800ac2c:	6073      	str	r3, [r6, #4]
 800ac2e:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800ac30:	eb03 0208 	add.w	r2, r3, r8
 800ac34:	6852      	ldr	r2, [r2, #4]
 800ac36:	6272      	str	r2, [r6, #36]	; 0x24
 800ac38:	2201      	movs	r2, #1
 800ac3a:	f803 2037 	strb.w	r2, [r3, r7, lsl #3]
 800ac3e:	b957      	cbnz	r7, 800ac56 <_Alloc+0x5e>
 800ac40:	e02a      	b.n	800ac98 <_Alloc+0xa0>
 800ac42:	3b01      	subs	r3, #1
 800ac44:	6323      	str	r3, [r4, #48]	; 0x30
 800ac46:	f7ff fed1 	bl	800a9ec <_EnlargeBlocks>
 800ac4a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ac4c:	3301      	adds	r3, #1
 800ac4e:	6323      	str	r3, [r4, #48]	; 0x30
 800ac50:	2800      	cmp	r0, #0
 800ac52:	d0e6      	beq.n	800ac22 <_Alloc+0x2a>
 800ac54:	e020      	b.n	800ac98 <_Alloc+0xa0>
 800ac56:	230f      	movs	r3, #15
 800ac58:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800ac5c:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800ac5e:	4295      	cmp	r5, r2
 800ac60:	d20c      	bcs.n	800ac7c <_Alloc+0x84>
 800ac62:	f113 33ff 	adds.w	r3, r3, #4294967295
 800ac66:	d2f7      	bcs.n	800ac58 <_Alloc+0x60>
 800ac68:	e008      	b.n	800ac7c <_Alloc+0x84>
 800ac6a:	6894      	ldr	r4, [r2, #8]
 800ac6c:	b12c      	cbz	r4, 800ac7a <_Alloc+0x82>
 800ac6e:	6862      	ldr	r2, [r4, #4]
 800ac70:	4295      	cmp	r5, r2
 800ac72:	d914      	bls.n	800ac9e <_Alloc+0xa6>
 800ac74:	68a2      	ldr	r2, [r4, #8]
 800ac76:	2a00      	cmp	r2, #0
 800ac78:	d1f7      	bne.n	800ac6a <_Alloc+0x72>
 800ac7a:	3301      	adds	r3, #1
 800ac7c:	2b0f      	cmp	r3, #15
 800ac7e:	d803      	bhi.n	800ac88 <_Alloc+0x90>
 800ac80:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800ac84:	6c52      	ldr	r2, [r2, #68]	; 0x44
 800ac86:	e7f6      	b.n	800ac76 <_Alloc+0x7e>
 800ac88:	4628      	mov	r0, r5
 800ac8a:	f7ff fe01 	bl	800a890 <_RemoveHoles>
 800ac8e:	2800      	cmp	r0, #0
 800ac90:	d0e1      	beq.n	800ac56 <_Alloc+0x5e>
 800ac92:	4638      	mov	r0, r7
 800ac94:	f7ff fd78 	bl	800a788 <_PushFreeBlock>
 800ac98:	2000      	movs	r0, #0
 800ac9a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ac9e:	f8d4 9004 	ldr.w	r9, [r4, #4]
 800aca2:	4620      	mov	r0, r4
 800aca4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800aca6:	ebc5 0209 	rsb	r2, r5, r9
 800acaa:	330c      	adds	r3, #12
 800acac:	429a      	cmp	r2, r3
 800acae:	bf38      	it	cc
 800acb0:	464d      	movcc	r5, r9
 800acb2:	f7ff fd7b 	bl	800a7ac <_RemoveFreeBlock>
 800acb6:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800acb8:	1961      	adds	r1, r4, r5
 800acba:	454d      	cmp	r5, r9
 800acbc:	4498      	add	r8, r3
 800acbe:	f04f 0300 	mov.w	r3, #0
 800acc2:	f8c8 4004 	str.w	r4, [r8, #4]
 800acc6:	6027      	str	r7, [r4, #0]
 800acc8:	6065      	str	r5, [r4, #4]
 800acca:	60a3      	str	r3, [r4, #8]
 800accc:	6124      	str	r4, [r4, #16]
 800acce:	f841 5c04 	str.w	r5, [r1, #-4]
 800acd2:	da03      	bge.n	800acdc <_Alloc+0xe4>
 800acd4:	ebc5 0009 	rsb	r0, r5, r9
 800acd8:	f7ff fd88 	bl	800a7ec <_AddFreeMemory>
 800acdc:	4638      	mov	r0, r7
 800acde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ace2:	bf00      	nop
 800ace4:	2002d9f8 	.word	0x2002d9f8

0800ace8 <GUI_ALLOC_AllocNoInit>:
 800ace8:	b108      	cbz	r0, 800acee <GUI_ALLOC_AllocNoInit+0x6>
 800acea:	f7ff bf85 	b.w	800abf8 <_Alloc>
 800acee:	4770      	bx	lr

0800acf0 <GUI_ALLOC_FreePtr>:
 800acf0:	b510      	push	{r4, lr}
 800acf2:	4604      	mov	r4, r0
 800acf4:	6800      	ldr	r0, [r0, #0]
 800acf6:	f7ff fe65 	bl	800a9c4 <GUI_ALLOC_Free>
 800acfa:	2300      	movs	r3, #0
 800acfc:	6023      	str	r3, [r4, #0]
 800acfe:	bd10      	pop	{r4, pc}

0800ad00 <GUI_ALLOC_AllocZero>:
 800ad00:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ad02:	4606      	mov	r6, r0
 800ad04:	f7ff fff0 	bl	800ace8 <GUI_ALLOC_AllocNoInit>
 800ad08:	4605      	mov	r5, r0
 800ad0a:	b160      	cbz	r0, 800ad26 <GUI_ALLOC_AllocZero+0x26>
 800ad0c:	f7ff fe20 	bl	800a950 <GUI_ALLOC_LockH>
 800ad10:	ac02      	add	r4, sp, #8
 800ad12:	4b06      	ldr	r3, [pc, #24]	; (800ad2c <GUI_ALLOC_AllocZero+0x2c>)
 800ad14:	4632      	mov	r2, r6
 800ad16:	f844 0d04 	str.w	r0, [r4, #-4]!
 800ad1a:	2100      	movs	r1, #0
 800ad1c:	681b      	ldr	r3, [r3, #0]
 800ad1e:	4798      	blx	r3
 800ad20:	4620      	mov	r0, r4
 800ad22:	f7ff fe23 	bl	800a96c <GUI_ALLOC_UnlockH>
 800ad26:	4628      	mov	r0, r5
 800ad28:	b002      	add	sp, #8
 800ad2a:	bd70      	pop	{r4, r5, r6, pc}
 800ad2c:	20000054 	.word	0x20000054

0800ad30 <GUIPROP__FindChar>:
 800ad30:	b138      	cbz	r0, 800ad42 <GUIPROP__FindChar+0x12>
 800ad32:	8803      	ldrh	r3, [r0, #0]
 800ad34:	428b      	cmp	r3, r1
 800ad36:	d802      	bhi.n	800ad3e <GUIPROP__FindChar+0xe>
 800ad38:	8843      	ldrh	r3, [r0, #2]
 800ad3a:	428b      	cmp	r3, r1
 800ad3c:	d201      	bcs.n	800ad42 <GUIPROP__FindChar+0x12>
 800ad3e:	6880      	ldr	r0, [r0, #8]
 800ad40:	e7f6      	b.n	800ad30 <GUIPROP__FindChar>
 800ad42:	4770      	bx	lr

0800ad44 <GUIPROP_DispChar>:
 800ad44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad48:	4c38      	ldr	r4, [pc, #224]	; (800ae2c <GUIPROP_DispChar+0xe8>)
 800ad4a:	b089      	sub	sp, #36	; 0x24
 800ad4c:	4606      	mov	r6, r0
 800ad4e:	4601      	mov	r1, r0
 800ad50:	6823      	ldr	r3, [r4, #0]
 800ad52:	f9b3 802a 	ldrsh.w	r8, [r3, #42]	; 0x2a
 800ad56:	69db      	ldr	r3, [r3, #28]
 800ad58:	69d8      	ldr	r0, [r3, #28]
 800ad5a:	f7ff ffe9 	bl	800ad30 <GUIPROP__FindChar>
 800ad5e:	2800      	cmp	r0, #0
 800ad60:	d060      	beq.n	800ae24 <GUIPROP_DispChar+0xe0>
 800ad62:	8805      	ldrh	r5, [r0, #0]
 800ad64:	6847      	ldr	r7, [r0, #4]
 800ad66:	4640      	mov	r0, r8
 800ad68:	1b75      	subs	r5, r6, r5
 800ad6a:	eb07 06c5 	add.w	r6, r7, r5, lsl #3
 800ad6e:	f896 a002 	ldrb.w	sl, [r6, #2]
 800ad72:	f001 fbf1 	bl	800c558 <LCD_SetDrawMode>
 800ad76:	f8d4 c000 	ldr.w	ip, [r4]
 800ad7a:	4681      	mov	r9, r0
 800ad7c:	f817 2035 	ldrb.w	r2, [r7, r5, lsl #3]
 800ad80:	f8dc e01c 	ldr.w	lr, [ip, #28]
 800ad84:	f8dc 3038 	ldr.w	r3, [ip, #56]	; 0x38
 800ad88:	f89e b018 	ldrb.w	fp, [lr, #24]
 800ad8c:	f9bc 1024 	ldrsh.w	r1, [ip, #36]	; 0x24
 800ad90:	f9bc 0022 	ldrsh.w	r0, [ip, #34]	; 0x22
 800ad94:	f04f 0c01 	mov.w	ip, #1
 800ad98:	9305      	str	r3, [sp, #20]
 800ad9a:	6873      	ldr	r3, [r6, #4]
 800ad9c:	f8cd a00c 	str.w	sl, [sp, #12]
 800ada0:	9304      	str	r3, [sp, #16]
 800ada2:	465b      	mov	r3, fp
 800ada4:	f8cd c008 	str.w	ip, [sp, #8]
 800ada8:	f89e c01b 	ldrb.w	ip, [lr, #27]
 800adac:	f8cd c004 	str.w	ip, [sp, #4]
 800adb0:	f89e e01a 	ldrb.w	lr, [lr, #26]
 800adb4:	f8cd e000 	str.w	lr, [sp]
 800adb8:	f001 fd6e 	bl	800c898 <LCD_DrawBitmap>
 800adbc:	6823      	ldr	r3, [r4, #0]
 800adbe:	69db      	ldr	r3, [r3, #28]
 800adc0:	7e59      	ldrb	r1, [r3, #25]
 800adc2:	f893 a018 	ldrb.w	sl, [r3, #24]
 800adc6:	9107      	str	r1, [sp, #28]
 800adc8:	4551      	cmp	r1, sl
 800adca:	d920      	bls.n	800ae0e <GUIPROP_DispChar+0xca>
 800adcc:	f1b8 0f02 	cmp.w	r8, #2
 800add0:	d01d      	beq.n	800ae0e <GUIPROP_DispChar+0xca>
 800add2:	f893 b01b 	ldrb.w	fp, [r3, #27]
 800add6:	f000 f882 	bl	800aede <GUI_GetColor>
 800adda:	4680      	mov	r8, r0
 800addc:	f000 f878 	bl	800aed0 <GUI_GetBkColor>
 800ade0:	f000 f9a7 	bl	800b132 <GUI_SetColor>
 800ade4:	6823      	ldr	r3, [r4, #0]
 800ade6:	9907      	ldr	r1, [sp, #28]
 800ade8:	f9b3 e024 	ldrsh.w	lr, [r3, #36]	; 0x24
 800adec:	f9b3 0022 	ldrsh.w	r0, [r3, #34]	; 0x22
 800adf0:	69db      	ldr	r3, [r3, #28]
 800adf2:	f817 5035 	ldrb.w	r5, [r7, r5, lsl #3]
 800adf6:	7eda      	ldrb	r2, [r3, #27]
 800adf8:	fb0b e301 	mla	r3, fp, r1, lr
 800adfc:	fb0b e10a 	mla	r1, fp, sl, lr
 800ae00:	fb05 0202 	mla	r2, r5, r2, r0
 800ae04:	f001 fc30 	bl	800c668 <LCD_FillRect>
 800ae08:	4640      	mov	r0, r8
 800ae0a:	f000 f992 	bl	800b132 <GUI_SetColor>
 800ae0e:	4648      	mov	r0, r9
 800ae10:	f001 fba2 	bl	800c558 <LCD_SetDrawMode>
 800ae14:	6823      	ldr	r3, [r4, #0]
 800ae16:	7871      	ldrb	r1, [r6, #1]
 800ae18:	69da      	ldr	r2, [r3, #28]
 800ae1a:	7e90      	ldrb	r0, [r2, #26]
 800ae1c:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 800ae1e:	fb00 2201 	mla	r2, r0, r1, r2
 800ae22:	845a      	strh	r2, [r3, #34]	; 0x22
 800ae24:	b009      	add	sp, #36	; 0x24
 800ae26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae2a:	bf00      	nop
 800ae2c:	2000003c 	.word	0x2000003c

0800ae30 <GUIPROP_GetCharDistX>:
 800ae30:	b538      	push	{r3, r4, r5, lr}
 800ae32:	4b0d      	ldr	r3, [pc, #52]	; (800ae68 <GUIPROP_GetCharDistX+0x38>)
 800ae34:	4602      	mov	r2, r0
 800ae36:	460c      	mov	r4, r1
 800ae38:	4601      	mov	r1, r0
 800ae3a:	681b      	ldr	r3, [r3, #0]
 800ae3c:	69dd      	ldr	r5, [r3, #28]
 800ae3e:	69e8      	ldr	r0, [r5, #28]
 800ae40:	f7ff ff76 	bl	800ad30 <GUIPROP__FindChar>
 800ae44:	b170      	cbz	r0, 800ae64 <GUIPROP_GetCharDistX+0x34>
 800ae46:	8803      	ldrh	r3, [r0, #0]
 800ae48:	1ad2      	subs	r2, r2, r3
 800ae4a:	6843      	ldr	r3, [r0, #4]
 800ae4c:	eb03 01c2 	add.w	r1, r3, r2, lsl #3
 800ae50:	7848      	ldrb	r0, [r1, #1]
 800ae52:	7ea9      	ldrb	r1, [r5, #26]
 800ae54:	fb10 f001 	smulbb	r0, r0, r1
 800ae58:	b124      	cbz	r4, 800ae64 <GUIPROP_GetCharDistX+0x34>
 800ae5a:	f813 3032 	ldrb.w	r3, [r3, r2, lsl #3]
 800ae5e:	fb11 f303 	smulbb	r3, r1, r3
 800ae62:	6023      	str	r3, [r4, #0]
 800ae64:	bd38      	pop	{r3, r4, r5, pc}
 800ae66:	bf00      	nop
 800ae68:	2000003c 	.word	0x2000003c

0800ae6c <GUIPROP_GetFontInfo>:
 800ae6c:	2301      	movs	r3, #1
 800ae6e:	800b      	strh	r3, [r1, #0]
 800ae70:	4770      	bx	lr

0800ae72 <GUIPROP_IsInFont>:
 800ae72:	b508      	push	{r3, lr}
 800ae74:	69c0      	ldr	r0, [r0, #28]
 800ae76:	f7ff ff5b 	bl	800ad30 <GUIPROP__FindChar>
 800ae7a:	3000      	adds	r0, #0
 800ae7c:	bf18      	it	ne
 800ae7e:	2001      	movne	r0, #1
 800ae80:	bd08      	pop	{r3, pc}

0800ae82 <GUI_CalcColorDist>:
 800ae82:	b2c3      	uxtb	r3, r0
 800ae84:	b2ca      	uxtb	r2, r1
 800ae86:	1a9a      	subs	r2, r3, r2
 800ae88:	f3c0 2307 	ubfx	r3, r0, #8, #8
 800ae8c:	b292      	uxth	r2, r2
 800ae8e:	b510      	push	{r4, lr}
 800ae90:	b214      	sxth	r4, r2
 800ae92:	2c00      	cmp	r4, #0
 800ae94:	bfbc      	itt	lt
 800ae96:	4252      	neglt	r2, r2
 800ae98:	b214      	sxthlt	r4, r2
 800ae9a:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800ae9e:	0c09      	lsrs	r1, r1, #16
 800aea0:	1a9b      	subs	r3, r3, r2
 800aea2:	ebc1 4110 	rsb	r1, r1, r0, lsr #16
 800aea6:	b29b      	uxth	r3, r3
 800aea8:	b289      	uxth	r1, r1
 800aeaa:	b21a      	sxth	r2, r3
 800aeac:	b208      	sxth	r0, r1
 800aeae:	2a00      	cmp	r2, #0
 800aeb0:	bfbc      	itt	lt
 800aeb2:	425b      	neglt	r3, r3
 800aeb4:	b21a      	sxthlt	r2, r3
 800aeb6:	2800      	cmp	r0, #0
 800aeb8:	bfb8      	it	lt
 800aeba:	4249      	neglt	r1, r1
 800aebc:	fb02 f202 	mul.w	r2, r2, r2
 800aec0:	bfb8      	it	lt
 800aec2:	b208      	sxthlt	r0, r1
 800aec4:	fb04 2204 	mla	r2, r4, r4, r2
 800aec8:	b280      	uxth	r0, r0
 800aeca:	fb00 2000 	mla	r0, r0, r0, r2
 800aece:	bd10      	pop	{r4, pc}

0800aed0 <GUI_GetBkColor>:
 800aed0:	b508      	push	{r3, lr}
 800aed2:	f001 ffd7 	bl	800ce84 <LCD_GetBkColorIndex>
 800aed6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800aeda:	f001 be5d 	b.w	800cb98 <LCD_Index2Color>

0800aede <GUI_GetColor>:
 800aede:	b508      	push	{r3, lr}
 800aee0:	f001 ffd8 	bl	800ce94 <LCD_GetColorIndex>
 800aee4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800aee8:	f001 be56 	b.w	800cb98 <LCD_Index2Color>

0800aeec <GUI_GetDrawMode>:
 800aeec:	4b01      	ldr	r3, [pc, #4]	; (800aef4 <GUI_GetDrawMode+0x8>)
 800aeee:	681b      	ldr	r3, [r3, #0]
 800aef0:	7c18      	ldrb	r0, [r3, #16]
 800aef2:	4770      	bx	lr
 800aef4:	2000003c 	.word	0x2000003c

0800aef8 <GUI_GetOrg>:
 800aef8:	4b04      	ldr	r3, [pc, #16]	; (800af0c <GUI_GetOrg+0x14>)
 800aefa:	f9b3 3000 	ldrsh.w	r3, [r3]
 800aefe:	6003      	str	r3, [r0, #0]
 800af00:	4b03      	ldr	r3, [pc, #12]	; (800af10 <GUI_GetOrg+0x18>)
 800af02:	f9b3 3000 	ldrsh.w	r3, [r3]
 800af06:	600b      	str	r3, [r1, #0]
 800af08:	4770      	bx	lr
 800af0a:	bf00      	nop
 800af0c:	2002dae0 	.word	0x2002dae0
 800af10:	2002dad0 	.word	0x2002dad0

0800af14 <GUI_GetVersionString>:
 800af14:	4804      	ldr	r0, [pc, #16]	; (800af28 <GUI_GetVersionString+0x14>)
 800af16:	2335      	movs	r3, #53	; 0x35
 800af18:	7003      	strb	r3, [r0, #0]
 800af1a:	2334      	movs	r3, #52	; 0x34
 800af1c:	7083      	strb	r3, [r0, #2]
 800af1e:	70c3      	strb	r3, [r0, #3]
 800af20:	2361      	movs	r3, #97	; 0x61
 800af22:	7103      	strb	r3, [r0, #4]
 800af24:	4770      	bx	lr
 800af26:	bf00      	nop
 800af28:	20000024 	.word	0x20000024

0800af2c <GUI_MergeRect>:
 800af2c:	b510      	push	{r4, lr}
 800af2e:	b338      	cbz	r0, 800af80 <GUI_MergeRect+0x54>
 800af30:	b309      	cbz	r1, 800af76 <GUI_MergeRect+0x4a>
 800af32:	b30a      	cbz	r2, 800af78 <GUI_MergeRect+0x4c>
 800af34:	f9b2 4000 	ldrsh.w	r4, [r2]
 800af38:	f9b1 3000 	ldrsh.w	r3, [r1]
 800af3c:	42a3      	cmp	r3, r4
 800af3e:	bfa8      	it	ge
 800af40:	4623      	movge	r3, r4
 800af42:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 800af46:	8003      	strh	r3, [r0, #0]
 800af48:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800af4c:	42a3      	cmp	r3, r4
 800af4e:	bfa8      	it	ge
 800af50:	4623      	movge	r3, r4
 800af52:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 800af56:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800af5a:	8043      	strh	r3, [r0, #2]
 800af5c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800af60:	42a3      	cmp	r3, r4
 800af62:	bfb8      	it	lt
 800af64:	4623      	movlt	r3, r4
 800af66:	8083      	strh	r3, [r0, #4]
 800af68:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800af6c:	4293      	cmp	r3, r2
 800af6e:	bfb8      	it	lt
 800af70:	4613      	movlt	r3, r2
 800af72:	80c3      	strh	r3, [r0, #6]
 800af74:	bd10      	pop	{r4, pc}
 800af76:	4611      	mov	r1, r2
 800af78:	680b      	ldr	r3, [r1, #0]
 800af7a:	6003      	str	r3, [r0, #0]
 800af7c:	684b      	ldr	r3, [r1, #4]
 800af7e:	6043      	str	r3, [r0, #4]
 800af80:	bd10      	pop	{r4, pc}

0800af82 <GUI_MoveRect>:
 800af82:	b168      	cbz	r0, 800afa0 <GUI_MoveRect+0x1e>
 800af84:	b289      	uxth	r1, r1
 800af86:	8803      	ldrh	r3, [r0, #0]
 800af88:	b292      	uxth	r2, r2
 800af8a:	440b      	add	r3, r1
 800af8c:	8003      	strh	r3, [r0, #0]
 800af8e:	8883      	ldrh	r3, [r0, #4]
 800af90:	4419      	add	r1, r3
 800af92:	8843      	ldrh	r3, [r0, #2]
 800af94:	4413      	add	r3, r2
 800af96:	8081      	strh	r1, [r0, #4]
 800af98:	8043      	strh	r3, [r0, #2]
 800af9a:	88c3      	ldrh	r3, [r0, #6]
 800af9c:	441a      	add	r2, r3
 800af9e:	80c2      	strh	r2, [r0, #6]
 800afa0:	4770      	bx	lr
	...

0800afa4 <GUI_Exec1>:
 800afa4:	4b0c      	ldr	r3, [pc, #48]	; (800afd8 <GUI_Exec1+0x34>)
 800afa6:	b510      	push	{r4, lr}
 800afa8:	681c      	ldr	r4, [r3, #0]
 800afaa:	b11c      	cbz	r4, 800afb4 <GUI_Exec1+0x10>
 800afac:	47a0      	blx	r4
 800afae:	1c04      	adds	r4, r0, #0
 800afb0:	bf18      	it	ne
 800afb2:	2401      	movne	r4, #1
 800afb4:	f006 f9b2 	bl	801131c <WM_Exec>
 800afb8:	4b08      	ldr	r3, [pc, #32]	; (800afdc <GUI_Exec1+0x38>)
 800afba:	2800      	cmp	r0, #0
 800afbc:	681b      	ldr	r3, [r3, #0]
 800afbe:	bf18      	it	ne
 800afc0:	2401      	movne	r4, #1
 800afc2:	b11b      	cbz	r3, 800afcc <GUI_Exec1+0x28>
 800afc4:	4798      	blx	r3
 800afc6:	2800      	cmp	r0, #0
 800afc8:	bf18      	it	ne
 800afca:	2401      	movne	r4, #1
 800afcc:	4b04      	ldr	r3, [pc, #16]	; (800afe0 <GUI_Exec1+0x3c>)
 800afce:	681b      	ldr	r3, [r3, #0]
 800afd0:	b103      	cbz	r3, 800afd4 <GUI_Exec1+0x30>
 800afd2:	4798      	blx	r3
 800afd4:	4620      	mov	r0, r4
 800afd6:	bd10      	pop	{r4, pc}
 800afd8:	2002dadc 	.word	0x2002dadc
 800afdc:	2002db04 	.word	0x2002db04
 800afe0:	2002dafc 	.word	0x2002dafc

0800afe4 <GUI_Exec>:
 800afe4:	b510      	push	{r4, lr}
 800afe6:	2400      	movs	r4, #0
 800afe8:	f7ff ffdc 	bl	800afa4 <GUI_Exec1>
 800afec:	b108      	cbz	r0, 800aff2 <GUI_Exec+0xe>
 800afee:	2401      	movs	r4, #1
 800aff0:	e7fa      	b.n	800afe8 <GUI_Exec+0x4>
 800aff2:	4620      	mov	r0, r4
 800aff4:	bd10      	pop	{r4, pc}

0800aff6 <GUI_GetBitmapPixelIndexEx>:
 800aff6:	2804      	cmp	r0, #4
 800aff8:	b530      	push	{r4, r5, lr}
 800affa:	9d03      	ldr	r5, [sp, #12]
 800affc:	d027      	beq.n	800b04e <GUI_GetBitmapPixelIndexEx+0x58>
 800affe:	dc10      	bgt.n	800b022 <GUI_GetBitmapPixelIndexEx+0x2c>
 800b000:	2801      	cmp	r0, #1
 800b002:	d018      	beq.n	800b036 <GUI_GetBitmapPixelIndexEx+0x40>
 800b004:	2802      	cmp	r0, #2
 800b006:	d138      	bne.n	800b07a <GUI_GetBitmapPixelIndexEx+0x84>
 800b008:	4369      	muls	r1, r5
 800b00a:	eb02 0293 	add.w	r2, r2, r3, lsr #2
 800b00e:	ea6f 0043 	mvn.w	r0, r3, lsl #1
 800b012:	5c52      	ldrb	r2, [r2, r1]
 800b014:	f000 0006 	and.w	r0, r0, #6
 800b018:	fa22 f000 	lsr.w	r0, r2, r0
 800b01c:	f000 0003 	and.w	r0, r0, #3
 800b020:	bd30      	pop	{r4, r5, pc}
 800b022:	2810      	cmp	r0, #16
 800b024:	d01d      	beq.n	800b062 <GUI_GetBitmapPixelIndexEx+0x6c>
 800b026:	2820      	cmp	r0, #32
 800b028:	d021      	beq.n	800b06e <GUI_GetBitmapPixelIndexEx+0x78>
 800b02a:	2808      	cmp	r0, #8
 800b02c:	d125      	bne.n	800b07a <GUI_GetBitmapPixelIndexEx+0x84>
 800b02e:	fb05 2101 	mla	r1, r5, r1, r2
 800b032:	5cc8      	ldrb	r0, [r1, r3]
 800b034:	bd30      	pop	{r4, r5, pc}
 800b036:	4369      	muls	r1, r5
 800b038:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 800b03c:	43d8      	mvns	r0, r3
 800b03e:	5c52      	ldrb	r2, [r2, r1]
 800b040:	f000 0007 	and.w	r0, r0, #7
 800b044:	fa22 f000 	lsr.w	r0, r2, r0
 800b048:	f000 0001 	and.w	r0, r0, #1
 800b04c:	bd30      	pop	{r4, r5, pc}
 800b04e:	eb02 0253 	add.w	r2, r2, r3, lsr #1
 800b052:	4369      	muls	r1, r5
 800b054:	07db      	lsls	r3, r3, #31
 800b056:	5c50      	ldrb	r0, [r2, r1]
 800b058:	bf4c      	ite	mi
 800b05a:	f000 000f 	andmi.w	r0, r0, #15
 800b05e:	0900      	lsrpl	r0, r0, #4
 800b060:	bd30      	pop	{r4, r5, pc}
 800b062:	104c      	asrs	r4, r1, #1
 800b064:	fb05 3304 	mla	r3, r5, r4, r3
 800b068:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
 800b06c:	bd30      	pop	{r4, r5, pc}
 800b06e:	108c      	asrs	r4, r1, #2
 800b070:	fb05 3304 	mla	r3, r5, r4, r3
 800b074:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800b078:	bd30      	pop	{r4, r5, pc}
 800b07a:	2000      	movs	r0, #0
 800b07c:	bd30      	pop	{r4, r5, pc}

0800b07e <GUI_GetBitmapPixelIndex>:
 800b07e:	b513      	push	{r0, r1, r4, lr}
 800b080:	460b      	mov	r3, r1
 800b082:	b130      	cbz	r0, 800b092 <GUI_GetBitmapPixelIndex+0x14>
 800b084:	88c4      	ldrh	r4, [r0, #6]
 800b086:	8881      	ldrh	r1, [r0, #4]
 800b088:	9200      	str	r2, [sp, #0]
 800b08a:	6882      	ldr	r2, [r0, #8]
 800b08c:	4620      	mov	r0, r4
 800b08e:	f7ff ffb2 	bl	800aff6 <GUI_GetBitmapPixelIndexEx>
 800b092:	b002      	add	sp, #8
 800b094:	bd10      	pop	{r4, pc}
	...

0800b098 <GUI_GotoXY>:
 800b098:	4b02      	ldr	r3, [pc, #8]	; (800b0a4 <GUI_GotoXY+0xc>)
 800b09a:	681b      	ldr	r3, [r3, #0]
 800b09c:	8458      	strh	r0, [r3, #34]	; 0x22
 800b09e:	2000      	movs	r0, #0
 800b0a0:	8499      	strh	r1, [r3, #36]	; 0x24
 800b0a2:	4770      	bx	lr
 800b0a4:	2000003c 	.word	0x2000003c

0800b0a8 <GUI_SetPenSize>:
 800b0a8:	4b02      	ldr	r3, [pc, #8]	; (800b0b4 <GUI_SetPenSize+0xc>)
 800b0aa:	681b      	ldr	r3, [r3, #0]
 800b0ac:	7e1a      	ldrb	r2, [r3, #24]
 800b0ae:	7618      	strb	r0, [r3, #24]
 800b0b0:	4610      	mov	r0, r2
 800b0b2:	4770      	bx	lr
 800b0b4:	2000003c 	.word	0x2000003c

0800b0b8 <GUI_RectsIntersect>:
 800b0b8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800b0bc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800b0c0:	429a      	cmp	r2, r3
 800b0c2:	dc14      	bgt.n	800b0ee <GUI_RectsIntersect+0x36>
 800b0c4:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800b0c8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800b0cc:	429a      	cmp	r2, r3
 800b0ce:	dc0e      	bgt.n	800b0ee <GUI_RectsIntersect+0x36>
 800b0d0:	f9b0 2000 	ldrsh.w	r2, [r0]
 800b0d4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800b0d8:	429a      	cmp	r2, r3
 800b0da:	dc08      	bgt.n	800b0ee <GUI_RectsIntersect+0x36>
 800b0dc:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 800b0e0:	f9b1 3000 	ldrsh.w	r3, [r1]
 800b0e4:	4283      	cmp	r3, r0
 800b0e6:	bfcc      	ite	gt
 800b0e8:	2000      	movgt	r0, #0
 800b0ea:	2001      	movle	r0, #1
 800b0ec:	4770      	bx	lr
 800b0ee:	2000      	movs	r0, #0
 800b0f0:	4770      	bx	lr
	...

0800b0f4 <GUI_SaveContext_W>:
 800b0f4:	b508      	push	{r3, lr}
 800b0f6:	4b03      	ldr	r3, [pc, #12]	; (800b104 <GUI_SaveContext_W+0x10>)
 800b0f8:	2274      	movs	r2, #116	; 0x74
 800b0fa:	6819      	ldr	r1, [r3, #0]
 800b0fc:	f00a fbd2 	bl	80158a4 <memcpy>
 800b100:	bd08      	pop	{r3, pc}
 800b102:	bf00      	nop
 800b104:	2000003c 	.word	0x2000003c

0800b108 <GUI_RestoreContext>:
 800b108:	b508      	push	{r3, lr}
 800b10a:	4b03      	ldr	r3, [pc, #12]	; (800b118 <GUI_RestoreContext+0x10>)
 800b10c:	4601      	mov	r1, r0
 800b10e:	2274      	movs	r2, #116	; 0x74
 800b110:	6818      	ldr	r0, [r3, #0]
 800b112:	f00a fbc7 	bl	80158a4 <memcpy>
 800b116:	bd08      	pop	{r3, pc}
 800b118:	2000003c 	.word	0x2000003c

0800b11c <GUI_SelectLCD>:
 800b11c:	b508      	push	{r3, lr}
 800b11e:	f002 f905 	bl	800d32c <LCD_SelectLCD>
 800b122:	f002 f9cb 	bl	800d4bc <LCD_UpdateColorIndices>
 800b126:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b12a:	f006 b933 	b.w	8011394 <WM_Activate>

0800b12e <GUI_SetBkColor>:
 800b12e:	f001 bd79 	b.w	800cc24 <LCD_SetBkColor>

0800b132 <GUI_SetColor>:
 800b132:	f001 bd7d 	b.w	800cc30 <LCD_SetColor>

0800b136 <GUI_SetDrawMode>:
 800b136:	f001 ba0f 	b.w	800c558 <LCD_SetDrawMode>
	...

0800b13c <GUI_SetFont>:
 800b13c:	4b03      	ldr	r3, [pc, #12]	; (800b14c <GUI_SetFont+0x10>)
 800b13e:	681b      	ldr	r3, [r3, #0]
 800b140:	69da      	ldr	r2, [r3, #28]
 800b142:	b100      	cbz	r0, 800b146 <GUI_SetFont+0xa>
 800b144:	61d8      	str	r0, [r3, #28]
 800b146:	4610      	mov	r0, r2
 800b148:	4770      	bx	lr
 800b14a:	bf00      	nop
 800b14c:	2000003c 	.word	0x2000003c

0800b150 <GUI_SetLineStyle>:
 800b150:	4b02      	ldr	r3, [pc, #8]	; (800b15c <GUI_SetLineStyle+0xc>)
 800b152:	681b      	ldr	r3, [r3, #0]
 800b154:	7e9a      	ldrb	r2, [r3, #26]
 800b156:	7698      	strb	r0, [r3, #26]
 800b158:	4610      	mov	r0, r2
 800b15a:	4770      	bx	lr
 800b15c:	2000003c 	.word	0x2000003c

0800b160 <GUI_SetOrg>:
 800b160:	4b09      	ldr	r3, [pc, #36]	; (800b188 <GUI_SetOrg+0x28>)
 800b162:	460a      	mov	r2, r1
 800b164:	b410      	push	{r4}
 800b166:	8018      	strh	r0, [r3, #0]
 800b168:	4b08      	ldr	r3, [pc, #32]	; (800b18c <GUI_SetOrg+0x2c>)
 800b16a:	8019      	strh	r1, [r3, #0]
 800b16c:	4b08      	ldr	r3, [pc, #32]	; (800b190 <GUI_SetOrg+0x30>)
 800b16e:	681b      	ldr	r3, [r3, #0]
 800b170:	7c59      	ldrb	r1, [r3, #17]
 800b172:	4b08      	ldr	r3, [pc, #32]	; (800b194 <GUI_SetOrg+0x34>)
 800b174:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b178:	68d9      	ldr	r1, [r3, #12]
 800b17a:	6a0c      	ldr	r4, [r1, #32]
 800b17c:	4601      	mov	r1, r0
 800b17e:	4618      	mov	r0, r3
 800b180:	4623      	mov	r3, r4
 800b182:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b186:	4718      	bx	r3
 800b188:	2002dae0 	.word	0x2002dae0
 800b18c:	2002dad0 	.word	0x2002dad0
 800b190:	2000003c 	.word	0x2000003c
 800b194:	2002db08 	.word	0x2002db08

0800b198 <GUI_SetTextAlign>:
 800b198:	4b03      	ldr	r3, [pc, #12]	; (800b1a8 <GUI_SetTextAlign+0x10>)
 800b19a:	681b      	ldr	r3, [r3, #0]
 800b19c:	f9b3 202c 	ldrsh.w	r2, [r3, #44]	; 0x2c
 800b1a0:	8598      	strh	r0, [r3, #44]	; 0x2c
 800b1a2:	4610      	mov	r0, r2
 800b1a4:	4770      	bx	lr
 800b1a6:	bf00      	nop
 800b1a8:	2000003c 	.word	0x2000003c

0800b1ac <GUI_SetTextMode>:
 800b1ac:	4b03      	ldr	r3, [pc, #12]	; (800b1bc <GUI_SetTextMode+0x10>)
 800b1ae:	681b      	ldr	r3, [r3, #0]
 800b1b0:	f9b3 202a 	ldrsh.w	r2, [r3, #42]	; 0x2a
 800b1b4:	8558      	strh	r0, [r3, #42]	; 0x2a
 800b1b6:	4610      	mov	r0, r2
 800b1b8:	4770      	bx	lr
 800b1ba:	bf00      	nop
 800b1bc:	2000003c 	.word	0x2000003c

0800b1c0 <GL_SetDefault>:
 800b1c0:	b508      	push	{r3, lr}
 800b1c2:	4b0e      	ldr	r3, [pc, #56]	; (800b1fc <GL_SetDefault+0x3c>)
 800b1c4:	6818      	ldr	r0, [r3, #0]
 800b1c6:	f001 fd2d 	bl	800cc24 <LCD_SetBkColor>
 800b1ca:	4b0d      	ldr	r3, [pc, #52]	; (800b200 <GL_SetDefault+0x40>)
 800b1cc:	6818      	ldr	r0, [r3, #0]
 800b1ce:	f001 fd2f 	bl	800cc30 <LCD_SetColor>
 800b1d2:	2001      	movs	r0, #1
 800b1d4:	f7ff ff68 	bl	800b0a8 <GUI_SetPenSize>
 800b1d8:	2000      	movs	r0, #0
 800b1da:	f7ff ffdd 	bl	800b198 <GUI_SetTextAlign>
 800b1de:	2000      	movs	r0, #0
 800b1e0:	f7ff ffe4 	bl	800b1ac <GUI_SetTextMode>
 800b1e4:	2000      	movs	r0, #0
 800b1e6:	f7ff ffa6 	bl	800b136 <GUI_SetDrawMode>
 800b1ea:	4b06      	ldr	r3, [pc, #24]	; (800b204 <GL_SetDefault+0x44>)
 800b1ec:	6818      	ldr	r0, [r3, #0]
 800b1ee:	f7ff ffa5 	bl	800b13c <GUI_SetFont>
 800b1f2:	2000      	movs	r0, #0
 800b1f4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b1f8:	f7ff bfaa 	b.w	800b150 <GUI_SetLineStyle>
 800b1fc:	20000038 	.word	0x20000038
 800b200:	20000034 	.word	0x20000034
 800b204:	20000030 	.word	0x20000030

0800b208 <_InitContext>:
 800b208:	b538      	push	{r3, r4, r5, lr}
 800b20a:	4d19      	ldr	r5, [pc, #100]	; (800b270 <_InitContext+0x68>)
 800b20c:	4604      	mov	r4, r0
 800b20e:	4b19      	ldr	r3, [pc, #100]	; (800b274 <_InitContext+0x6c>)
 800b210:	f104 0108 	add.w	r1, r4, #8
 800b214:	6703      	str	r3, [r0, #112]	; 0x70
 800b216:	692b      	ldr	r3, [r5, #16]
 800b218:	1d1a      	adds	r2, r3, #4
 800b21a:	639b      	str	r3, [r3, #56]	; 0x38
 800b21c:	641b      	str	r3, [r3, #64]	; 0x40
 800b21e:	63da      	str	r2, [r3, #60]	; 0x3c
 800b220:	f103 0208 	add.w	r2, r3, #8
 800b224:	6142      	str	r2, [r0, #20]
 800b226:	7c5a      	ldrb	r2, [r3, #17]
 800b228:	4b13      	ldr	r3, [pc, #76]	; (800b278 <_InitContext+0x70>)
 800b22a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800b22e:	68c3      	ldr	r3, [r0, #12]
 800b230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b232:	4798      	blx	r3
 800b234:	4b11      	ldr	r3, [pc, #68]	; (800b27c <_InitContext+0x74>)
 800b236:	6663      	str	r3, [r4, #100]	; 0x64
 800b238:	686b      	ldr	r3, [r5, #4]
 800b23a:	61e3      	str	r3, [r4, #28]
 800b23c:	692b      	ldr	r3, [r5, #16]
 800b23e:	3308      	adds	r3, #8
 800b240:	6163      	str	r3, [r4, #20]
 800b242:	2301      	movs	r3, #1
 800b244:	7623      	strb	r3, [r4, #24]
 800b246:	76e3      	strb	r3, [r4, #27]
 800b248:	f006 f9ce 	bl	80115e8 <WM_GetDesktopWindow>
 800b24c:	2303      	movs	r3, #3
 800b24e:	64a0      	str	r0, [r4, #72]	; 0x48
 800b250:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
 800b254:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800b258:	68e8      	ldr	r0, [r5, #12]
 800b25a:	6323      	str	r3, [r4, #48]	; 0x30
 800b25c:	6363      	str	r3, [r4, #52]	; 0x34
 800b25e:	f001 fce1 	bl	800cc24 <LCD_SetBkColor>
 800b262:	68a8      	ldr	r0, [r5, #8]
 800b264:	f001 fce4 	bl	800cc30 <LCD_SetColor>
 800b268:	4a05      	ldr	r2, [pc, #20]	; (800b280 <_InitContext+0x78>)
 800b26a:	4b06      	ldr	r3, [pc, #24]	; (800b284 <_InitContext+0x7c>)
 800b26c:	601a      	str	r2, [r3, #0]
 800b26e:	bd38      	pop	{r3, r4, r5, pc}
 800b270:	2000002c 	.word	0x2000002c
 800b274:	200003f0 	.word	0x200003f0
 800b278:	2002db08 	.word	0x2002db08
 800b27c:	080189a4 	.word	0x080189a4
 800b280:	080189bc 	.word	0x080189bc
 800b284:	2002db00 	.word	0x2002db00

0800b288 <_OnExit>:
 800b288:	b570      	push	{r4, r5, r6, lr}
 800b28a:	2400      	movs	r4, #0
 800b28c:	4d09      	ldr	r5, [pc, #36]	; (800b2b4 <_OnExit+0x2c>)
 800b28e:	4e0a      	ldr	r6, [pc, #40]	; (800b2b8 <_OnExit+0x30>)
 800b290:	2274      	movs	r2, #116	; 0x74
 800b292:	4621      	mov	r1, r4
 800b294:	4628      	mov	r0, r5
 800b296:	6833      	ldr	r3, [r6, #0]
 800b298:	67ec      	str	r4, [r5, #124]	; 0x7c
 800b29a:	4798      	blx	r3
 800b29c:	6833      	ldr	r3, [r6, #0]
 800b29e:	2208      	movs	r2, #8
 800b2a0:	4621      	mov	r1, r4
 800b2a2:	4806      	ldr	r0, [pc, #24]	; (800b2bc <_OnExit+0x34>)
 800b2a4:	4798      	blx	r3
 800b2a6:	4b06      	ldr	r3, [pc, #24]	; (800b2c0 <_OnExit+0x38>)
 800b2a8:	611d      	str	r5, [r3, #16]
 800b2aa:	4b06      	ldr	r3, [pc, #24]	; (800b2c4 <_OnExit+0x3c>)
 800b2ac:	701c      	strb	r4, [r3, #0]
 800b2ae:	4b06      	ldr	r3, [pc, #24]	; (800b2c8 <_OnExit+0x40>)
 800b2b0:	601c      	str	r4, [r3, #0]
 800b2b2:	bd70      	pop	{r4, r5, r6, pc}
 800b2b4:	20000370 	.word	0x20000370
 800b2b8:	20000054 	.word	0x20000054
 800b2bc:	2002db08 	.word	0x2002db08
 800b2c0:	2000002c 	.word	0x2000002c
 800b2c4:	2002daf0 	.word	0x2002daf0
 800b2c8:	2002dacc 	.word	0x2002dacc

0800b2cc <GUI_SetFuncGetpPalConvTable>:
 800b2cc:	4b01      	ldr	r3, [pc, #4]	; (800b2d4 <GUI_SetFuncGetpPalConvTable+0x8>)
 800b2ce:	6018      	str	r0, [r3, #0]
 800b2d0:	4770      	bx	lr
 800b2d2:	bf00      	nop
 800b2d4:	2000002c 	.word	0x2000002c

0800b2d8 <GUI_ClearRect>:
 800b2d8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b2dc:	4604      	mov	r4, r0
 800b2de:	2004      	movs	r0, #4
 800b2e0:	4616      	mov	r6, r2
 800b2e2:	461f      	mov	r7, r3
 800b2e4:	460d      	mov	r5, r1
 800b2e6:	f001 f937 	bl	800c558 <LCD_SetDrawMode>
 800b2ea:	4b13      	ldr	r3, [pc, #76]	; (800b338 <GUI_ClearRect+0x60>)
 800b2ec:	4680      	mov	r8, r0
 800b2ee:	4668      	mov	r0, sp
 800b2f0:	691b      	ldr	r3, [r3, #16]
 800b2f2:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800b2f4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800b2f6:	4414      	add	r4, r2
 800b2f8:	4416      	add	r6, r2
 800b2fa:	441d      	add	r5, r3
 800b2fc:	441f      	add	r7, r3
 800b2fe:	f8ad 4000 	strh.w	r4, [sp]
 800b302:	f8ad 6004 	strh.w	r6, [sp, #4]
 800b306:	f8ad 5002 	strh.w	r5, [sp, #2]
 800b30a:	f8ad 7006 	strh.w	r7, [sp, #6]
 800b30e:	f005 fe91 	bl	8011034 <WM__InitIVRSearch>
 800b312:	b928      	cbnz	r0, 800b320 <GUI_ClearRect+0x48>
 800b314:	4640      	mov	r0, r8
 800b316:	f001 f91f 	bl	800c558 <LCD_SetDrawMode>
 800b31a:	b002      	add	sp, #8
 800b31c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b320:	463b      	mov	r3, r7
 800b322:	4632      	mov	r2, r6
 800b324:	4629      	mov	r1, r5
 800b326:	4620      	mov	r0, r4
 800b328:	f001 f99e 	bl	800c668 <LCD_FillRect>
 800b32c:	f005 fdc0 	bl	8010eb0 <WM__GetNextIVR>
 800b330:	2800      	cmp	r0, #0
 800b332:	d1f5      	bne.n	800b320 <GUI_ClearRect+0x48>
 800b334:	e7ee      	b.n	800b314 <GUI_ClearRect+0x3c>
 800b336:	bf00      	nop
 800b338:	2000002c 	.word	0x2000002c

0800b33c <GUI_Clear>:
 800b33c:	2100      	movs	r1, #0
 800b33e:	b510      	push	{r4, lr}
 800b340:	4608      	mov	r0, r1
 800b342:	f7ff fea9 	bl	800b098 <GUI_GotoXY>
 800b346:	f643 73ff 	movw	r3, #16383	; 0x3fff
 800b34a:	4903      	ldr	r1, [pc, #12]	; (800b358 <GUI_Clear+0x1c>)
 800b34c:	461a      	mov	r2, r3
 800b34e:	4608      	mov	r0, r1
 800b350:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b354:	f7ff bfc0 	b.w	800b2d8 <GUI_ClearRect>
 800b358:	ffffc001 	.word	0xffffc001

0800b35c <GUI__Config>:
 800b35c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b35e:	4d1f      	ldr	r5, [pc, #124]	; (800b3dc <GUI__Config+0x80>)
 800b360:	b085      	sub	sp, #20
 800b362:	6feb      	ldr	r3, [r5, #124]	; 0x7c
 800b364:	2b00      	cmp	r3, #0
 800b366:	d136      	bne.n	800b3d6 <GUI__Config+0x7a>
 800b368:	2301      	movs	r3, #1
 800b36a:	466a      	mov	r2, sp
 800b36c:	466e      	mov	r6, sp
 800b36e:	67eb      	str	r3, [r5, #124]	; 0x7c
 800b370:	4b1b      	ldr	r3, [pc, #108]	; (800b3e0 <GUI__Config+0x84>)
 800b372:	f103 0708 	add.w	r7, r3, #8
 800b376:	6818      	ldr	r0, [r3, #0]
 800b378:	3308      	adds	r3, #8
 800b37a:	f853 1c04 	ldr.w	r1, [r3, #-4]
 800b37e:	4614      	mov	r4, r2
 800b380:	42bb      	cmp	r3, r7
 800b382:	c403      	stmia	r4!, {r0, r1}
 800b384:	4622      	mov	r2, r4
 800b386:	d1f6      	bne.n	800b376 <GUI__Config+0x1a>
 800b388:	6818      	ldr	r0, [r3, #0]
 800b38a:	8899      	ldrh	r1, [r3, #4]
 800b38c:	799b      	ldrb	r3, [r3, #6]
 800b38e:	6020      	str	r0, [r4, #0]
 800b390:	71a3      	strb	r3, [r4, #6]
 800b392:	4633      	mov	r3, r6
 800b394:	80a1      	strh	r1, [r4, #4]
 800b396:	4c13      	ldr	r4, [pc, #76]	; (800b3e4 <GUI__Config+0x88>)
 800b398:	f813 2b01 	ldrb.w	r2, [r3], #1
 800b39c:	f804 2b01 	strb.w	r2, [r4], #1
 800b3a0:	781a      	ldrb	r2, [r3, #0]
 800b3a2:	2a00      	cmp	r2, #0
 800b3a4:	d1f8      	bne.n	800b398 <GUI__Config+0x3c>
 800b3a6:	f7ff fdb5 	bl	800af14 <GUI_GetVersionString>
 800b3aa:	f810 3b01 	ldrb.w	r3, [r0], #1
 800b3ae:	4622      	mov	r2, r4
 800b3b0:	f804 3b01 	strb.w	r3, [r4], #1
 800b3b4:	7803      	ldrb	r3, [r0, #0]
 800b3b6:	2b00      	cmp	r3, #0
 800b3b8:	d1f7      	bne.n	800b3aa <GUI__Config+0x4e>
 800b3ba:	7053      	strb	r3, [r2, #1]
 800b3bc:	f7fc fe14 	bl	8007fe8 <GUI_X_Config>
 800b3c0:	f7fe f9a0 	bl	8009704 <LCD_X_Config>
 800b3c4:	4b08      	ldr	r3, [pc, #32]	; (800b3e8 <GUI__Config+0x8c>)
 800b3c6:	4809      	ldr	r0, [pc, #36]	; (800b3ec <GUI__Config+0x90>)
 800b3c8:	f8c5 3094 	str.w	r3, [r5, #148]	; 0x94
 800b3cc:	b005      	add	sp, #20
 800b3ce:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800b3d2:	f000 b8d1 	b.w	800b578 <GUI__RegisterExit>
 800b3d6:	b005      	add	sp, #20
 800b3d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b3da:	bf00      	nop
 800b3dc:	20000370 	.word	0x20000370
 800b3e0:	080189ac 	.word	0x080189ac
 800b3e4:	200003f0 	.word	0x200003f0
 800b3e8:	0800b289 	.word	0x0800b289
 800b3ec:	20000404 	.word	0x20000404

0800b3f0 <GUI_Init>:
 800b3f0:	b590      	push	{r4, r7, lr}
 800b3f2:	b083      	sub	sp, #12
 800b3f4:	af00      	add	r7, sp, #0
 800b3f6:	4a53      	ldr	r2, [pc, #332]	; (800b544 <GUI_Init+0x154>)
 800b3f8:	4b52      	ldr	r3, [pc, #328]	; (800b544 <GUI_Init+0x154>)
 800b3fa:	681b      	ldr	r3, [r3, #0]
 800b3fc:	f023 0301 	bic.w	r3, r3, #1
 800b400:	6013      	str	r3, [r2, #0]
 800b402:	4b51      	ldr	r3, [pc, #324]	; (800b548 <GUI_Init+0x158>)
 800b404:	681b      	ldr	r3, [r3, #0]
 800b406:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800b40a:	f240 4249 	movw	r2, #1097	; 0x449
 800b40e:	4293      	cmp	r3, r2
 800b410:	bf0c      	ite	eq
 800b412:	2301      	moveq	r3, #1
 800b414:	2300      	movne	r3, #0
 800b416:	b2da      	uxtb	r2, r3
 800b418:	4b4b      	ldr	r3, [pc, #300]	; (800b548 <GUI_Init+0x158>)
 800b41a:	681b      	ldr	r3, [r3, #0]
 800b41c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800b420:	f240 4151 	movw	r1, #1105	; 0x451
 800b424:	428b      	cmp	r3, r1
 800b426:	bf0c      	ite	eq
 800b428:	2301      	moveq	r3, #1
 800b42a:	2300      	movne	r3, #0
 800b42c:	b2db      	uxtb	r3, r3
 800b42e:	4313      	orrs	r3, r2
 800b430:	b2db      	uxtb	r3, r3
 800b432:	4619      	mov	r1, r3
 800b434:	4b44      	ldr	r3, [pc, #272]	; (800b548 <GUI_Init+0x158>)
 800b436:	681b      	ldr	r3, [r3, #0]
 800b438:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800b43c:	f240 4252 	movw	r2, #1106	; 0x452
 800b440:	4293      	cmp	r3, r2
 800b442:	bf0c      	ite	eq
 800b444:	2301      	moveq	r3, #1
 800b446:	2300      	movne	r3, #0
 800b448:	b2db      	uxtb	r3, r3
 800b44a:	430b      	orrs	r3, r1
 800b44c:	2b00      	cmp	r3, #0
 800b44e:	d010      	beq.n	800b472 <GUI_Init+0x82>
 800b450:	4b3e      	ldr	r3, [pc, #248]	; (800b54c <GUI_Init+0x15c>)
 800b452:	2201      	movs	r2, #1
 800b454:	601a      	str	r2, [r3, #0]
 800b456:	bf00      	nop
 800b458:	4b3c      	ldr	r3, [pc, #240]	; (800b54c <GUI_Init+0x15c>)
 800b45a:	681b      	ldr	r3, [r3, #0]
 800b45c:	2b00      	cmp	r3, #0
 800b45e:	d1fb      	bne.n	800b458 <GUI_Init+0x68>
 800b460:	4b3b      	ldr	r3, [pc, #236]	; (800b550 <GUI_Init+0x160>)
 800b462:	4a3c      	ldr	r2, [pc, #240]	; (800b554 <GUI_Init+0x164>)
 800b464:	601a      	str	r2, [r3, #0]
 800b466:	4b3a      	ldr	r3, [pc, #232]	; (800b550 <GUI_Init+0x160>)
 800b468:	681b      	ldr	r3, [r3, #0]
 800b46a:	4a3b      	ldr	r2, [pc, #236]	; (800b558 <GUI_Init+0x168>)
 800b46c:	4293      	cmp	r3, r2
 800b46e:	d018      	beq.n	800b4a2 <GUI_Init+0xb2>
 800b470:	e7fe      	b.n	800b470 <GUI_Init+0x80>
 800b472:	4b3a      	ldr	r3, [pc, #232]	; (800b55c <GUI_Init+0x16c>)
 800b474:	681b      	ldr	r3, [r3, #0]
 800b476:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800b47a:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 800b47e:	d110      	bne.n	800b4a2 <GUI_Init+0xb2>
 800b480:	4b37      	ldr	r3, [pc, #220]	; (800b560 <GUI_Init+0x170>)
 800b482:	2201      	movs	r2, #1
 800b484:	601a      	str	r2, [r3, #0]
 800b486:	bf00      	nop
 800b488:	4b35      	ldr	r3, [pc, #212]	; (800b560 <GUI_Init+0x170>)
 800b48a:	681b      	ldr	r3, [r3, #0]
 800b48c:	2b00      	cmp	r3, #0
 800b48e:	d1fb      	bne.n	800b488 <GUI_Init+0x98>
 800b490:	4b34      	ldr	r3, [pc, #208]	; (800b564 <GUI_Init+0x174>)
 800b492:	4a30      	ldr	r2, [pc, #192]	; (800b554 <GUI_Init+0x164>)
 800b494:	601a      	str	r2, [r3, #0]
 800b496:	4b33      	ldr	r3, [pc, #204]	; (800b564 <GUI_Init+0x174>)
 800b498:	681b      	ldr	r3, [r3, #0]
 800b49a:	4a2f      	ldr	r2, [pc, #188]	; (800b558 <GUI_Init+0x168>)
 800b49c:	4293      	cmp	r3, r2
 800b49e:	d000      	beq.n	800b4a2 <GUI_Init+0xb2>
 800b4a0:	e7fe      	b.n	800b4a0 <GUI_Init+0xb0>
 800b4a2:	f7ff ff5b 	bl	800b35c <GUI__Config>
 800b4a6:	4b30      	ldr	r3, [pc, #192]	; (800b568 <GUI_Init+0x178>)
 800b4a8:	222e      	movs	r2, #46	; 0x2e
 800b4aa:	701a      	strb	r2, [r3, #0]
 800b4ac:	f7fe fa26 	bl	80098fc <GUI_X_Init>
 800b4b0:	482e      	ldr	r0, [pc, #184]	; (800b56c <GUI_Init+0x17c>)
 800b4b2:	f7ff fea9 	bl	800b208 <_InitContext>
 800b4b6:	f001 fb0f 	bl	800cad8 <emWin_LCD_Init>
 800b4ba:	6078      	str	r0, [r7, #4]
 800b4bc:	f001 fd8e 	bl	800cfdc <LCD_GetXSizeDisplay>
 800b4c0:	4603      	mov	r3, r0
 800b4c2:	2b00      	cmp	r3, #0
 800b4c4:	bf0c      	ite	eq
 800b4c6:	2301      	moveq	r3, #1
 800b4c8:	2300      	movne	r3, #0
 800b4ca:	b2dc      	uxtb	r4, r3
 800b4cc:	f001 fd8c 	bl	800cfe8 <LCD_GetYSizeDisplay>
 800b4d0:	4603      	mov	r3, r0
 800b4d2:	2b00      	cmp	r3, #0
 800b4d4:	bf0c      	ite	eq
 800b4d6:	2301      	moveq	r3, #1
 800b4d8:	2300      	movne	r3, #0
 800b4da:	b2db      	uxtb	r3, r3
 800b4dc:	4323      	orrs	r3, r4
 800b4de:	b2db      	uxtb	r3, r3
 800b4e0:	2b00      	cmp	r3, #0
 800b4e2:	d009      	beq.n	800b4f8 <GUI_Init+0x108>
 800b4e4:	f001 fd6a 	bl	800cfbc <LCD_GetXSizeMax>
 800b4e8:	4604      	mov	r4, r0
 800b4ea:	f001 fd6a 	bl	800cfc2 <LCD_GetYSizeMax>
 800b4ee:	4603      	mov	r3, r0
 800b4f0:	4619      	mov	r1, r3
 800b4f2:	4620      	mov	r0, r4
 800b4f4:	f001 fd6c 	bl	800cfd0 <LCD_SetDisplaySize>
 800b4f8:	2100      	movs	r1, #0
 800b4fa:	2000      	movs	r0, #0
 800b4fc:	f7ff fe30 	bl	800b160 <GUI_SetOrg>
 800b500:	f005 ffb2 	bl	8011468 <WM_Init>
 800b504:	4b1a      	ldr	r3, [pc, #104]	; (800b570 <GUI_Init+0x180>)
 800b506:	681b      	ldr	r3, [r3, #0]
 800b508:	2b00      	cmp	r3, #0
 800b50a:	d012      	beq.n	800b532 <GUI_Init+0x142>
 800b50c:	e00d      	b.n	800b52a <GUI_Init+0x13a>
 800b50e:	4b18      	ldr	r3, [pc, #96]	; (800b570 <GUI_Init+0x180>)
 800b510:	681b      	ldr	r3, [r3, #0]
 800b512:	681b      	ldr	r3, [r3, #0]
 800b514:	2b00      	cmp	r3, #0
 800b516:	d003      	beq.n	800b520 <GUI_Init+0x130>
 800b518:	4b15      	ldr	r3, [pc, #84]	; (800b570 <GUI_Init+0x180>)
 800b51a:	681b      	ldr	r3, [r3, #0]
 800b51c:	681b      	ldr	r3, [r3, #0]
 800b51e:	4798      	blx	r3
 800b520:	4b13      	ldr	r3, [pc, #76]	; (800b570 <GUI_Init+0x180>)
 800b522:	681b      	ldr	r3, [r3, #0]
 800b524:	685b      	ldr	r3, [r3, #4]
 800b526:	4a12      	ldr	r2, [pc, #72]	; (800b570 <GUI_Init+0x180>)
 800b528:	6013      	str	r3, [r2, #0]
 800b52a:	4b11      	ldr	r3, [pc, #68]	; (800b570 <GUI_Init+0x180>)
 800b52c:	681b      	ldr	r3, [r3, #0]
 800b52e:	2b00      	cmp	r3, #0
 800b530:	d1ed      	bne.n	800b50e <GUI_Init+0x11e>
 800b532:	4b10      	ldr	r3, [pc, #64]	; (800b574 <GUI_Init+0x184>)
 800b534:	2201      	movs	r2, #1
 800b536:	701a      	strb	r2, [r3, #0]
 800b538:	687b      	ldr	r3, [r7, #4]
 800b53a:	4618      	mov	r0, r3
 800b53c:	370c      	adds	r7, #12
 800b53e:	46bd      	mov	sp, r7
 800b540:	bd90      	pop	{r4, r7, pc}
 800b542:	bf00      	nop
 800b544:	e0002000 	.word	0xe0002000
 800b548:	e0042000 	.word	0xe0042000
 800b54c:	40023008 	.word	0x40023008
 800b550:	40023000 	.word	0x40023000
 800b554:	f407a5c2 	.word	0xf407a5c2
 800b558:	b5e8b5cd 	.word	0xb5e8b5cd
 800b55c:	5c001000 	.word	0x5c001000
 800b560:	58024c08 	.word	0x58024c08
 800b564:	58024c00 	.word	0x58024c00
 800b568:	2002dac0 	.word	0x2002dac0
 800b56c:	20000370 	.word	0x20000370
 800b570:	200003e8 	.word	0x200003e8
 800b574:	2002dae8 	.word	0x2002dae8

0800b578 <GUI__RegisterExit>:
 800b578:	b480      	push	{r7}
 800b57a:	b083      	sub	sp, #12
 800b57c:	af00      	add	r7, sp, #0
 800b57e:	6078      	str	r0, [r7, #4]
 800b580:	4b06      	ldr	r3, [pc, #24]	; (800b59c <GUI__RegisterExit+0x24>)
 800b582:	681a      	ldr	r2, [r3, #0]
 800b584:	687b      	ldr	r3, [r7, #4]
 800b586:	605a      	str	r2, [r3, #4]
 800b588:	4a04      	ldr	r2, [pc, #16]	; (800b59c <GUI__RegisterExit+0x24>)
 800b58a:	687b      	ldr	r3, [r7, #4]
 800b58c:	6013      	str	r3, [r2, #0]
 800b58e:	bf00      	nop
 800b590:	370c      	adds	r7, #12
 800b592:	46bd      	mov	sp, r7
 800b594:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b598:	4770      	bx	lr
 800b59a:	bf00      	nop
 800b59c:	200003e4 	.word	0x200003e4

0800b5a0 <GUI_DCACHE_Clear>:
 800b5a0:	b580      	push	{r7, lr}
 800b5a2:	b082      	sub	sp, #8
 800b5a4:	af00      	add	r7, sp, #0
 800b5a6:	6078      	str	r0, [r7, #4]
 800b5a8:	4b05      	ldr	r3, [pc, #20]	; (800b5c0 <GUI_DCACHE_Clear+0x20>)
 800b5aa:	681b      	ldr	r3, [r3, #0]
 800b5ac:	2b00      	cmp	r3, #0
 800b5ae:	d003      	beq.n	800b5b8 <GUI_DCACHE_Clear+0x18>
 800b5b0:	4b03      	ldr	r3, [pc, #12]	; (800b5c0 <GUI_DCACHE_Clear+0x20>)
 800b5b2:	681b      	ldr	r3, [r3, #0]
 800b5b4:	6878      	ldr	r0, [r7, #4]
 800b5b6:	4798      	blx	r3
 800b5b8:	bf00      	nop
 800b5ba:	3708      	adds	r7, #8
 800b5bc:	46bd      	mov	sp, r7
 800b5be:	bd80      	pop	{r7, pc}
 800b5c0:	2002dacc 	.word	0x2002dacc

0800b5c4 <GUI_DEVICE__GetpDriver>:
 800b5c4:	2801      	cmp	r0, #1
 800b5c6:	dc09      	bgt.n	800b5dc <GUI_DEVICE__GetpDriver+0x18>
 800b5c8:	4b05      	ldr	r3, [pc, #20]	; (800b5e0 <GUI_DEVICE__GetpDriver+0x1c>)
 800b5ca:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800b5ce:	b120      	cbz	r0, 800b5da <GUI_DEVICE__GetpDriver+0x16>
 800b5d0:	68c3      	ldr	r3, [r0, #12]
 800b5d2:	681b      	ldr	r3, [r3, #0]
 800b5d4:	b11b      	cbz	r3, 800b5de <GUI_DEVICE__GetpDriver+0x1a>
 800b5d6:	6800      	ldr	r0, [r0, #0]
 800b5d8:	e7f9      	b.n	800b5ce <GUI_DEVICE__GetpDriver+0xa>
 800b5da:	4770      	bx	lr
 800b5dc:	2000      	movs	r0, #0
 800b5de:	4770      	bx	lr
 800b5e0:	2002db08 	.word	0x2002db08

0800b5e4 <GUI_DEVICE_Delete>:
 800b5e4:	f7ff b9a0 	b.w	800a928 <GUI_ALLOC_FreeFixedBlock>

0800b5e8 <GUI_DEVICE_Create>:
 800b5e8:	2b01      	cmp	r3, #1
 800b5ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b5ec:	4606      	mov	r6, r0
 800b5ee:	460d      	mov	r5, r1
 800b5f0:	4617      	mov	r7, r2
 800b5f2:	461c      	mov	r4, r3
 800b5f4:	dd01      	ble.n	800b5fa <GUI_DEVICE_Create+0x12>
 800b5f6:	2000      	movs	r0, #0
 800b5f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b5fa:	201c      	movs	r0, #28
 800b5fc:	f7ff fa78 	bl	800aaf0 <GUI_ALLOC_GetFixedBlock>
 800b600:	2800      	cmp	r0, #0
 800b602:	d0f8      	beq.n	800b5f6 <GUI_DEVICE_Create+0xe>
 800b604:	b10d      	cbz	r5, 800b60a <GUI_DEVICE_Create+0x22>
 800b606:	6105      	str	r5, [r0, #16]
 800b608:	e009      	b.n	800b61e <GUI_DEVICE_Create+0x36>
 800b60a:	4b09      	ldr	r3, [pc, #36]	; (800b630 <GUI_DEVICE_Create+0x48>)
 800b60c:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 800b610:	b129      	cbz	r1, 800b61e <GUI_DEVICE_Create+0x36>
 800b612:	680b      	ldr	r3, [r1, #0]
 800b614:	b10b      	cbz	r3, 800b61a <GUI_DEVICE_Create+0x32>
 800b616:	4619      	mov	r1, r3
 800b618:	e7fb      	b.n	800b612 <GUI_DEVICE_Create+0x2a>
 800b61a:	690b      	ldr	r3, [r1, #16]
 800b61c:	6103      	str	r3, [r0, #16]
 800b61e:	2300      	movs	r3, #0
 800b620:	6184      	str	r4, [r0, #24]
 800b622:	8287      	strh	r7, [r0, #20]
 800b624:	60c6      	str	r6, [r0, #12]
 800b626:	6003      	str	r3, [r0, #0]
 800b628:	6043      	str	r3, [r0, #4]
 800b62a:	6083      	str	r3, [r0, #8]
 800b62c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b62e:	bf00      	nop
 800b630:	2002db08 	.word	0x2002db08

0800b634 <GUI_DEVICE_Unlink>:
 800b634:	6981      	ldr	r1, [r0, #24]
 800b636:	4a0a      	ldr	r2, [pc, #40]	; (800b660 <GUI_DEVICE_Unlink+0x2c>)
 800b638:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800b63c:	4298      	cmp	r0, r3
 800b63e:	6803      	ldr	r3, [r0, #0]
 800b640:	d104      	bne.n	800b64c <GUI_DEVICE_Unlink+0x18>
 800b642:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 800b646:	b10b      	cbz	r3, 800b64c <GUI_DEVICE_Unlink+0x18>
 800b648:	2200      	movs	r2, #0
 800b64a:	605a      	str	r2, [r3, #4]
 800b64c:	6842      	ldr	r2, [r0, #4]
 800b64e:	b102      	cbz	r2, 800b652 <GUI_DEVICE_Unlink+0x1e>
 800b650:	6013      	str	r3, [r2, #0]
 800b652:	6803      	ldr	r3, [r0, #0]
 800b654:	b103      	cbz	r3, 800b658 <GUI_DEVICE_Unlink+0x24>
 800b656:	605a      	str	r2, [r3, #4]
 800b658:	2300      	movs	r3, #0
 800b65a:	6003      	str	r3, [r0, #0]
 800b65c:	6043      	str	r3, [r0, #4]
 800b65e:	4770      	bx	lr
 800b660:	2002db08 	.word	0x2002db08

0800b664 <GUI_DEVICE_Link>:
 800b664:	b530      	push	{r4, r5, lr}
 800b666:	b908      	cbnz	r0, 800b66c <GUI_DEVICE_Link+0x8>
 800b668:	2001      	movs	r0, #1
 800b66a:	bd30      	pop	{r4, r5, pc}
 800b66c:	6984      	ldr	r4, [r0, #24]
 800b66e:	2c01      	cmp	r4, #1
 800b670:	dcfa      	bgt.n	800b668 <GUI_DEVICE_Link+0x4>
 800b672:	4b1b      	ldr	r3, [pc, #108]	; (800b6e0 <GUI_DEVICE_Link+0x7c>)
 800b674:	781a      	ldrb	r2, [r3, #0]
 800b676:	4294      	cmp	r4, r2
 800b678:	bfa4      	itt	ge
 800b67a:	1c62      	addge	r2, r4, #1
 800b67c:	701a      	strbge	r2, [r3, #0]
 800b67e:	4a19      	ldr	r2, [pc, #100]	; (800b6e4 <GUI_DEVICE_Link+0x80>)
 800b680:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
 800b684:	4615      	mov	r5, r2
 800b686:	b91b      	cbnz	r3, 800b690 <GUI_DEVICE_Link+0x2c>
 800b688:	f842 0024 	str.w	r0, [r2, r4, lsl #2]
 800b68c:	4618      	mov	r0, r3
 800b68e:	bd30      	pop	{r4, r5, pc}
 800b690:	685a      	ldr	r2, [r3, #4]
 800b692:	b10a      	cbz	r2, 800b698 <GUI_DEVICE_Link+0x34>
 800b694:	4613      	mov	r3, r2
 800b696:	e7fb      	b.n	800b690 <GUI_DEVICE_Link+0x2c>
 800b698:	68c2      	ldr	r2, [r0, #12]
 800b69a:	6812      	ldr	r2, [r2, #0]
 800b69c:	68d9      	ldr	r1, [r3, #12]
 800b69e:	6809      	ldr	r1, [r1, #0]
 800b6a0:	4291      	cmp	r1, r2
 800b6a2:	dd03      	ble.n	800b6ac <GUI_DEVICE_Link+0x48>
 800b6a4:	681b      	ldr	r3, [r3, #0]
 800b6a6:	2b00      	cmp	r3, #0
 800b6a8:	d1f8      	bne.n	800b69c <GUI_DEVICE_Link+0x38>
 800b6aa:	e7dd      	b.n	800b668 <GUI_DEVICE_Link+0x4>
 800b6ac:	d109      	bne.n	800b6c2 <GUI_DEVICE_Link+0x5e>
 800b6ae:	8a81      	ldrh	r1, [r0, #20]
 800b6b0:	2901      	cmp	r1, #1
 800b6b2:	d106      	bne.n	800b6c2 <GUI_DEVICE_Link+0x5e>
 800b6b4:	6819      	ldr	r1, [r3, #0]
 800b6b6:	b121      	cbz	r1, 800b6c2 <GUI_DEVICE_Link+0x5e>
 800b6b8:	460b      	mov	r3, r1
 800b6ba:	68c9      	ldr	r1, [r1, #12]
 800b6bc:	6809      	ldr	r1, [r1, #0]
 800b6be:	428a      	cmp	r2, r1
 800b6c0:	ddf8      	ble.n	800b6b4 <GUI_DEVICE_Link+0x50>
 800b6c2:	685a      	ldr	r2, [r3, #4]
 800b6c4:	b112      	cbz	r2, 800b6cc <GUI_DEVICE_Link+0x68>
 800b6c6:	6010      	str	r0, [r2, #0]
 800b6c8:	6042      	str	r2, [r0, #4]
 800b6ca:	e001      	b.n	800b6d0 <GUI_DEVICE_Link+0x6c>
 800b6cc:	f845 0024 	str.w	r0, [r5, r4, lsl #2]
 800b6d0:	6058      	str	r0, [r3, #4]
 800b6d2:	4298      	cmp	r0, r3
 800b6d4:	bf08      	it	eq
 800b6d6:	2300      	moveq	r3, #0
 800b6d8:	6003      	str	r3, [r0, #0]
 800b6da:	2000      	movs	r0, #0
 800b6dc:	bd30      	pop	{r4, r5, pc}
 800b6de:	bf00      	nop
 800b6e0:	2002daba 	.word	0x2002daba
 800b6e4:	2002db08 	.word	0x2002db08

0800b6e8 <GUI_DEVICE_CreateAndLink>:
 800b6e8:	b538      	push	{r3, r4, r5, lr}
 800b6ea:	461d      	mov	r5, r3
 800b6ec:	f7ff ff7c 	bl	800b5e8 <GUI_DEVICE_Create>
 800b6f0:	4604      	mov	r4, r0
 800b6f2:	b148      	cbz	r0, 800b708 <GUI_DEVICE_CreateAndLink+0x20>
 800b6f4:	f7ff ffb6 	bl	800b664 <GUI_DEVICE_Link>
 800b6f8:	68e3      	ldr	r3, [r4, #12]
 800b6fa:	681b      	ldr	r3, [r3, #0]
 800b6fc:	b923      	cbnz	r3, 800b708 <GUI_DEVICE_CreateAndLink+0x20>
 800b6fe:	4b03      	ldr	r3, [pc, #12]	; (800b70c <GUI_DEVICE_CreateAndLink+0x24>)
 800b700:	3516      	adds	r5, #22
 800b702:	681b      	ldr	r3, [r3, #0]
 800b704:	f843 4025 	str.w	r4, [r3, r5, lsl #2]
 800b708:	4620      	mov	r0, r4
 800b70a:	bd38      	pop	{r3, r4, r5, pc}
 800b70c:	2000003c 	.word	0x2000003c

0800b710 <GUI_WrapGetNumLines>:
 800b710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b712:	4605      	mov	r5, r0
 800b714:	460e      	mov	r6, r1
 800b716:	4617      	mov	r7, r2
 800b718:	2400      	movs	r4, #0
 800b71a:	463a      	mov	r2, r7
 800b71c:	4631      	mov	r1, r6
 800b71e:	4628      	mov	r0, r5
 800b720:	f000 fefb 	bl	800c51a <GUI__WrapGetNumBytesToNextLine>
 800b724:	b110      	cbz	r0, 800b72c <GUI_WrapGetNumLines+0x1c>
 800b726:	4405      	add	r5, r0
 800b728:	3401      	adds	r4, #1
 800b72a:	e7f6      	b.n	800b71a <GUI_WrapGetNumLines+0xa>
 800b72c:	4620      	mov	r0, r4
 800b72e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800b730 <GUI_DispStringInRectWrap>:
 800b730:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b734:	b08b      	sub	sp, #44	; 0x2c
 800b736:	460d      	mov	r5, r1
 800b738:	4617      	mov	r7, r2
 800b73a:	4606      	mov	r6, r0
 800b73c:	9303      	str	r3, [sp, #12]
 800b73e:	2800      	cmp	r0, #0
 800b740:	f000 8096 	beq.w	800b870 <GUI_DispStringInRectWrap+0x140>
 800b744:	f9b1 3000 	ldrsh.w	r3, [r1]
 800b748:	f9b1 9004 	ldrsh.w	r9, [r1, #4]
 800b74c:	9301      	str	r3, [sp, #4]
 800b74e:	ebc3 0309 	rsb	r3, r3, r9
 800b752:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800b756:	f9b1 b006 	ldrsh.w	fp, [r1, #6]
 800b75a:	3301      	adds	r3, #1
 800b75c:	9302      	str	r3, [sp, #8]
 800b75e:	f007 fb5b 	bl	8012e18 <GUI_GetFontDistY>
 800b762:	f017 080c 	ands.w	r8, r7, #12
 800b766:	4682      	mov	sl, r0
 800b768:	d01e      	beq.n	800b7a8 <GUI_DispStringInRectWrap+0x78>
 800b76a:	9a03      	ldr	r2, [sp, #12]
 800b76c:	4630      	mov	r0, r6
 800b76e:	9902      	ldr	r1, [sp, #8]
 800b770:	f7ff ffce 	bl	800b710 <GUI_WrapGetNumLines>
 800b774:	f1b8 0f08 	cmp.w	r8, #8
 800b778:	d005      	beq.n	800b786 <GUI_DispStringInRectWrap+0x56>
 800b77a:	f1b8 0f0c 	cmp.w	r8, #12
 800b77e:	d009      	beq.n	800b794 <GUI_DispStringInRectWrap+0x64>
 800b780:	f1b8 0f04 	cmp.w	r8, #4
 800b784:	d110      	bne.n	800b7a8 <GUI_DispStringInRectWrap+0x78>
 800b786:	fb10 f00a 	smulbb	r0, r0, sl
 800b78a:	f10b 0401 	add.w	r4, fp, #1
 800b78e:	1a20      	subs	r0, r4, r0
 800b790:	b204      	sxth	r4, r0
 800b792:	e009      	b.n	800b7a8 <GUI_DispStringInRectWrap+0x78>
 800b794:	ebc4 030b 	rsb	r3, r4, fp
 800b798:	3301      	adds	r3, #1
 800b79a:	fb00 301a 	mls	r0, r0, sl, r3
 800b79e:	2302      	movs	r3, #2
 800b7a0:	fb90 f0f3 	sdiv	r0, r0, r3
 800b7a4:	4404      	add	r4, r0
 800b7a6:	b224      	sxth	r4, r4
 800b7a8:	4628      	mov	r0, r5
 800b7aa:	f006 f967 	bl	8011a7c <WM_SetUserClipRect>
 800b7ae:	4680      	mov	r8, r0
 800b7b0:	b188      	cbz	r0, 800b7d6 <GUI_DispStringInRectWrap+0xa6>
 800b7b2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b7b6:	4602      	mov	r2, r0
 800b7b8:	4629      	mov	r1, r5
 800b7ba:	a806      	add	r0, sp, #24
 800b7bc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b7c0:	f8ad 401a 	strh.w	r4, [sp, #26]
 800b7c4:	f8ad 901c 	strh.w	r9, [sp, #28]
 800b7c8:	f8ad b01e 	strh.w	fp, [sp, #30]
 800b7cc:	f000 fc7b 	bl	800c0c6 <GUI__IntersectRects>
 800b7d0:	a806      	add	r0, sp, #24
 800b7d2:	f006 f953 	bl	8011a7c <WM_SetUserClipRect>
 800b7d6:	fa1f f38a 	uxth.w	r3, sl
 800b7da:	f007 0703 	and.w	r7, r7, #3
 800b7de:	9304      	str	r3, [sp, #16]
 800b7e0:	3b01      	subs	r3, #1
 800b7e2:	9305      	str	r3, [sp, #20]
 800b7e4:	9a03      	ldr	r2, [sp, #12]
 800b7e6:	4630      	mov	r0, r6
 800b7e8:	9902      	ldr	r1, [sp, #8]
 800b7ea:	fa1f fb84 	uxth.w	fp, r4
 800b7ee:	f000 fe63 	bl	800c4b8 <GUI__WrapGetNumCharsDisp>
 800b7f2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b7f6:	4601      	mov	r1, r0
 800b7f8:	4682      	mov	sl, r0
 800b7fa:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b7fe:	4630      	mov	r0, r6
 800b800:	9b05      	ldr	r3, [sp, #20]
 800b802:	f8ad 4022 	strh.w	r4, [sp, #34]	; 0x22
 800b806:	445b      	add	r3, fp
 800b808:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800b80c:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b810:	f007 fb94 	bl	8012f3c <GUI__GetLineDistX>
 800b814:	2f01      	cmp	r7, #1
 800b816:	d011      	beq.n	800b83c <GUI_DispStringInRectWrap+0x10c>
 800b818:	2f02      	cmp	r7, #2
 800b81a:	d004      	beq.n	800b826 <GUI_DispStringInRectWrap+0xf6>
 800b81c:	b99f      	cbnz	r7, 800b846 <GUI_DispStringInRectWrap+0x116>
 800b81e:	882b      	ldrh	r3, [r5, #0]
 800b820:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b824:	e00f      	b.n	800b846 <GUI_DispStringInRectWrap+0x116>
 800b826:	f9b5 2000 	ldrsh.w	r2, [r5]
 800b82a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800b82e:	1a9b      	subs	r3, r3, r2
 800b830:	1a18      	subs	r0, r3, r0
 800b832:	3001      	adds	r0, #1
 800b834:	fb90 f0f7 	sdiv	r0, r0, r7
 800b838:	4410      	add	r0, r2
 800b83a:	e002      	b.n	800b842 <GUI_DispStringInRectWrap+0x112>
 800b83c:	88ab      	ldrh	r3, [r5, #4]
 800b83e:	3301      	adds	r3, #1
 800b840:	1a18      	subs	r0, r3, r0
 800b842:	f8ad 0020 	strh.w	r0, [sp, #32]
 800b846:	4630      	mov	r0, r6
 800b848:	aa08      	add	r2, sp, #32
 800b84a:	4651      	mov	r1, sl
 800b84c:	f007 fba6 	bl	8012f9c <GUI__DispLine>
 800b850:	4630      	mov	r0, r6
 800b852:	9a03      	ldr	r2, [sp, #12]
 800b854:	9902      	ldr	r1, [sp, #8]
 800b856:	f000 fe60 	bl	800c51a <GUI__WrapGetNumBytesToNextLine>
 800b85a:	9b04      	ldr	r3, [sp, #16]
 800b85c:	4406      	add	r6, r0
 800b85e:	eb03 040b 	add.w	r4, r3, fp
 800b862:	7833      	ldrb	r3, [r6, #0]
 800b864:	b224      	sxth	r4, r4
 800b866:	2b00      	cmp	r3, #0
 800b868:	d1bc      	bne.n	800b7e4 <GUI_DispStringInRectWrap+0xb4>
 800b86a:	4640      	mov	r0, r8
 800b86c:	f006 f906 	bl	8011a7c <WM_SetUserClipRect>
 800b870:	b00b      	add	sp, #44	; 0x2c
 800b872:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800b878 <_OnExit>:
 800b878:	b538      	push	{r3, r4, r5, lr}
 800b87a:	4c0e      	ldr	r4, [pc, #56]	; (800b8b4 <_OnExit+0x3c>)
 800b87c:	2208      	movs	r2, #8
 800b87e:	4d0e      	ldr	r5, [pc, #56]	; (800b8b8 <_OnExit+0x40>)
 800b880:	2100      	movs	r1, #0
 800b882:	4620      	mov	r0, r4
 800b884:	682b      	ldr	r3, [r5, #0]
 800b886:	4798      	blx	r3
 800b888:	2208      	movs	r2, #8
 800b88a:	682b      	ldr	r3, [r5, #0]
 800b88c:	2100      	movs	r1, #0
 800b88e:	18a0      	adds	r0, r4, r2
 800b890:	4798      	blx	r3
 800b892:	682b      	ldr	r3, [r5, #0]
 800b894:	2208      	movs	r2, #8
 800b896:	2100      	movs	r1, #0
 800b898:	f104 0010 	add.w	r0, r4, #16
 800b89c:	4798      	blx	r3
 800b89e:	682b      	ldr	r3, [r5, #0]
 800b8a0:	2208      	movs	r2, #8
 800b8a2:	2100      	movs	r1, #0
 800b8a4:	f104 0018 	add.w	r0, r4, #24
 800b8a8:	4798      	blx	r3
 800b8aa:	2200      	movs	r2, #0
 800b8ac:	4b03      	ldr	r3, [pc, #12]	; (800b8bc <_OnExit+0x44>)
 800b8ae:	601a      	str	r2, [r3, #0]
 800b8b0:	bd38      	pop	{r3, r4, r5, pc}
 800b8b2:	bf00      	nop
 800b8b4:	2000040c 	.word	0x2000040c
 800b8b8:	20000054 	.word	0x20000054
 800b8bc:	2002dabc 	.word	0x2002dabc

0800b8c0 <GUI_MULTIBUF_BeginEx>:
 800b8c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b8c2:	4917      	ldr	r1, [pc, #92]	; (800b920 <GUI_MULTIBUF_BeginEx+0x60>)
 800b8c4:	6a0b      	ldr	r3, [r1, #32]
 800b8c6:	2b00      	cmp	r3, #0
 800b8c8:	4b16      	ldr	r3, [pc, #88]	; (800b924 <GUI_MULTIBUF_BeginEx+0x64>)
 800b8ca:	bf0c      	ite	eq
 800b8cc:	4606      	moveq	r6, r0
 800b8ce:	2600      	movne	r6, #0
 800b8d0:	579d      	ldrsb	r5, [r3, r6]
 800b8d2:	2d01      	cmp	r5, #1
 800b8d4:	dd21      	ble.n	800b91a <GUI_MULTIBUF_BeginEx+0x5a>
 800b8d6:	eb01 0386 	add.w	r3, r1, r6, lsl #2
 800b8da:	691a      	ldr	r2, [r3, #16]
 800b8dc:	1c54      	adds	r4, r2, #1
 800b8de:	611c      	str	r4, [r3, #16]
 800b8e0:	b9da      	cbnz	r2, 800b91a <GUI_MULTIBUF_BeginEx+0x5a>
 800b8e2:	f851 7026 	ldr.w	r7, [r1, r6, lsl #2]
 800b8e6:	4611      	mov	r1, r2
 800b8e8:	689c      	ldr	r4, [r3, #8]
 800b8ea:	689a      	ldr	r2, [r3, #8]
 800b8ec:	3201      	adds	r2, #1
 800b8ee:	42aa      	cmp	r2, r5
 800b8f0:	bf08      	it	eq
 800b8f2:	460a      	moveq	r2, r1
 800b8f4:	42ba      	cmp	r2, r7
 800b8f6:	609a      	str	r2, [r3, #8]
 800b8f8:	4616      	mov	r6, r2
 800b8fa:	d0f6      	beq.n	800b8ea <GUI_MULTIBUF_BeginEx+0x2a>
 800b8fc:	f7ff fe62 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800b900:	9001      	str	r0, [sp, #4]
 800b902:	b150      	cbz	r0, 800b91a <GUI_MULTIBUF_BeginEx+0x5a>
 800b904:	68c3      	ldr	r3, [r0, #12]
 800b906:	2121      	movs	r1, #33	; 0x21
 800b908:	a801      	add	r0, sp, #4
 800b90a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b90c:	4798      	blx	r3
 800b90e:	4603      	mov	r3, r0
 800b910:	b118      	cbz	r0, 800b91a <GUI_MULTIBUF_BeginEx+0x5a>
 800b912:	4632      	mov	r2, r6
 800b914:	4621      	mov	r1, r4
 800b916:	9801      	ldr	r0, [sp, #4]
 800b918:	4798      	blx	r3
 800b91a:	b003      	add	sp, #12
 800b91c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b91e:	bf00      	nop
 800b920:	2000040c 	.word	0x2000040c
 800b924:	2002dab8 	.word	0x2002dab8

0800b928 <GUI_MULTIBUF_EndEx>:
 800b928:	4b14      	ldr	r3, [pc, #80]	; (800b97c <GUI_MULTIBUF_EndEx+0x54>)
 800b92a:	6a1a      	ldr	r2, [r3, #32]
 800b92c:	2a00      	cmp	r2, #0
 800b92e:	4a14      	ldr	r2, [pc, #80]	; (800b980 <GUI_MULTIBUF_EndEx+0x58>)
 800b930:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b932:	bf0c      	ite	eq
 800b934:	4604      	moveq	r4, r0
 800b936:	2400      	movne	r4, #0
 800b938:	4605      	mov	r5, r0
 800b93a:	5712      	ldrsb	r2, [r2, r4]
 800b93c:	2a01      	cmp	r2, #1
 800b93e:	dd1a      	ble.n	800b976 <GUI_MULTIBUF_EndEx+0x4e>
 800b940:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800b944:	6923      	ldr	r3, [r4, #16]
 800b946:	3b01      	subs	r3, #1
 800b948:	6123      	str	r3, [r4, #16]
 800b94a:	b9a3      	cbnz	r3, 800b976 <GUI_MULTIBUF_EndEx+0x4e>
 800b94c:	2001      	movs	r0, #1
 800b94e:	40a8      	lsls	r0, r5
 800b950:	f7ff fe26 	bl	800b5a0 <GUI_DCACHE_Clear>
 800b954:	68a6      	ldr	r6, [r4, #8]
 800b956:	4628      	mov	r0, r5
 800b958:	61a6      	str	r6, [r4, #24]
 800b95a:	f7ff fe33 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800b95e:	9001      	str	r0, [sp, #4]
 800b960:	b148      	cbz	r0, 800b976 <GUI_MULTIBUF_EndEx+0x4e>
 800b962:	68c3      	ldr	r3, [r0, #12]
 800b964:	2122      	movs	r1, #34	; 0x22
 800b966:	a801      	add	r0, sp, #4
 800b968:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b96a:	4798      	blx	r3
 800b96c:	4603      	mov	r3, r0
 800b96e:	b110      	cbz	r0, 800b976 <GUI_MULTIBUF_EndEx+0x4e>
 800b970:	4631      	mov	r1, r6
 800b972:	9801      	ldr	r0, [sp, #4]
 800b974:	4798      	blx	r3
 800b976:	b002      	add	sp, #8
 800b978:	bd70      	pop	{r4, r5, r6, pc}
 800b97a:	bf00      	nop
 800b97c:	2000040c 	.word	0x2000040c
 800b980:	2002dab8 	.word	0x2002dab8

0800b984 <GUI_MULTIBUF_ConfirmEx>:
 800b984:	4b08      	ldr	r3, [pc, #32]	; (800b9a8 <GUI_MULTIBUF_ConfirmEx+0x24>)
 800b986:	6a1a      	ldr	r2, [r3, #32]
 800b988:	2a00      	cmp	r2, #0
 800b98a:	bf18      	it	ne
 800b98c:	2000      	movne	r0, #0
 800b98e:	eb03 0280 	add.w	r2, r3, r0, lsl #2
 800b992:	b510      	push	{r4, lr}
 800b994:	6994      	ldr	r4, [r2, #24]
 800b996:	2c00      	cmp	r4, #0
 800b998:	bfa2      	ittt	ge
 800b99a:	f843 1020 	strge.w	r1, [r3, r0, lsl #2]
 800b99e:	f04f 33ff 	movge.w	r3, #4294967295
 800b9a2:	6193      	strge	r3, [r2, #24]
 800b9a4:	bd10      	pop	{r4, pc}
 800b9a6:	bf00      	nop
 800b9a8:	2000040c 	.word	0x2000040c

0800b9ac <GUI_MULTIBUF_ConfigEx>:
 800b9ac:	b570      	push	{r4, r5, r6, lr}
 800b9ae:	4c0a      	ldr	r4, [pc, #40]	; (800b9d8 <GUI_MULTIBUF_ConfigEx+0x2c>)
 800b9b0:	4605      	mov	r5, r0
 800b9b2:	460e      	mov	r6, r1
 800b9b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b9b6:	b92b      	cbnz	r3, 800b9c4 <GUI_MULTIBUF_ConfigEx+0x18>
 800b9b8:	4620      	mov	r0, r4
 800b9ba:	4b08      	ldr	r3, [pc, #32]	; (800b9dc <GUI_MULTIBUF_ConfigEx+0x30>)
 800b9bc:	f840 3f24 	str.w	r3, [r0, #36]!
 800b9c0:	f7ff fdda 	bl	800b578 <GUI__RegisterExit>
 800b9c4:	6a23      	ldr	r3, [r4, #32]
 800b9c6:	2b00      	cmp	r3, #0
 800b9c8:	4b05      	ldr	r3, [pc, #20]	; (800b9e0 <GUI_MULTIBUF_ConfigEx+0x34>)
 800b9ca:	bf18      	it	ne
 800b9cc:	2500      	movne	r5, #0
 800b9ce:	2e01      	cmp	r6, #1
 800b9d0:	bfb8      	it	lt
 800b9d2:	2601      	movlt	r6, #1
 800b9d4:	555e      	strb	r6, [r3, r5]
 800b9d6:	bd70      	pop	{r4, r5, r6, pc}
 800b9d8:	2000040c 	.word	0x2000040c
 800b9dc:	0800b879 	.word	0x0800b879
 800b9e0:	2002dab8 	.word	0x2002dab8

0800b9e4 <GUI_StoreKey>:
 800b9e4:	4b02      	ldr	r3, [pc, #8]	; (800b9f0 <GUI_StoreKey+0xc>)
 800b9e6:	681a      	ldr	r2, [r3, #0]
 800b9e8:	b902      	cbnz	r2, 800b9ec <GUI_StoreKey+0x8>
 800b9ea:	6018      	str	r0, [r3, #0]
 800b9ec:	f000 b89e 	b.w	800bb2c <GUI_SignalEvent>
 800b9f0:	20000438 	.word	0x20000438

0800b9f4 <GUI_PollKeyMsg>:
 800b9f4:	4a09      	ldr	r2, [pc, #36]	; (800ba1c <GUI_PollKeyMsg+0x28>)
 800b9f6:	6813      	ldr	r3, [r2, #0]
 800b9f8:	6851      	ldr	r1, [r2, #4]
 800b9fa:	428b      	cmp	r3, r1
 800b9fc:	b510      	push	{r4, lr}
 800b9fe:	d00b      	beq.n	800ba18 <GUI_PollKeyMsg+0x24>
 800ba00:	4c07      	ldr	r4, [pc, #28]	; (800ba20 <GUI_PollKeyMsg+0x2c>)
 800ba02:	42a3      	cmp	r3, r4
 800ba04:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ba08:	bf14      	ite	ne
 800ba0a:	3308      	addne	r3, #8
 800ba0c:	3b50      	subeq	r3, #80	; 0x50
 800ba0e:	6013      	str	r3, [r2, #0]
 800ba10:	f005 feea 	bl	80117e8 <WM_OnKey>
 800ba14:	2001      	movs	r0, #1
 800ba16:	bd10      	pop	{r4, pc}
 800ba18:	2000      	movs	r0, #0
 800ba1a:	bd10      	pop	{r4, pc}
 800ba1c:	20000040 	.word	0x20000040
 800ba20:	2000048c 	.word	0x2000048c

0800ba24 <GUI_GetCursorLayer>:
 800ba24:	2801      	cmp	r0, #1
 800ba26:	bf9a      	itte	ls
 800ba28:	4b02      	ldrls	r3, [pc, #8]	; (800ba34 <GUI_GetCursorLayer+0x10>)
 800ba2a:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 800ba2e:	2000      	movhi	r0, #0
 800ba30:	4770      	bx	lr
 800ba32:	bf00      	nop
 800ba34:	20000498 	.word	0x20000498

0800ba38 <GUI_GetLayerPosEx>:
 800ba38:	b538      	push	{r3, r4, r5, lr}
 800ba3a:	460d      	mov	r5, r1
 800ba3c:	4614      	mov	r4, r2
 800ba3e:	f001 fc95 	bl	800d36c <LCD_GetPosEx>
 800ba42:	b110      	cbz	r0, 800ba4a <GUI_GetLayerPosEx+0x12>
 800ba44:	2300      	movs	r3, #0
 800ba46:	602b      	str	r3, [r5, #0]
 800ba48:	6023      	str	r3, [r4, #0]
 800ba4a:	bd38      	pop	{r3, r4, r5, pc}

0800ba4c <GUI_SelectLayer>:
 800ba4c:	b570      	push	{r4, r5, r6, lr}
 800ba4e:	4d08      	ldr	r5, [pc, #32]	; (800ba70 <GUI_SelectLayer+0x24>)
 800ba50:	2801      	cmp	r0, #1
 800ba52:	4604      	mov	r4, r0
 800ba54:	682b      	ldr	r3, [r5, #0]
 800ba56:	7c5e      	ldrb	r6, [r3, #17]
 800ba58:	d808      	bhi.n	800ba6c <GUI_SelectLayer+0x20>
 800ba5a:	f7ff fdb3 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800ba5e:	b128      	cbz	r0, 800ba6c <GUI_SelectLayer+0x20>
 800ba60:	682b      	ldr	r3, [r5, #0]
 800ba62:	745c      	strb	r4, [r3, #17]
 800ba64:	f7ff fb5a 	bl	800b11c <GUI_SelectLCD>
 800ba68:	4b02      	ldr	r3, [pc, #8]	; (800ba74 <GUI_SelectLayer+0x28>)
 800ba6a:	601c      	str	r4, [r3, #0]
 800ba6c:	4630      	mov	r0, r6
 800ba6e:	bd70      	pop	{r4, r5, r6, pc}
 800ba70:	2000003c 	.word	0x2000003c
 800ba74:	2002db4c 	.word	0x2002db4c

0800ba78 <GUI_SetLayerPosEx>:
 800ba78:	f001 bcc1 	b.w	800d3fe <LCD_SetPosEx>

0800ba7c <GUI_TOUCH_StoreStateEx>:
 800ba7c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ba7e:	4c12      	ldr	r4, [pc, #72]	; (800bac8 <GUI_TOUCH_StoreStateEx+0x4c>)
 800ba80:	220c      	movs	r2, #12
 800ba82:	4606      	mov	r6, r0
 800ba84:	4621      	mov	r1, r4
 800ba86:	f009 feff 	bl	8015888 <memcmp>
 800ba8a:	b1d0      	cbz	r0, 800bac2 <GUI_TOUCH_StoreStateEx+0x46>
 800ba8c:	68e3      	ldr	r3, [r4, #12]
 800ba8e:	b18b      	cbz	r3, 800bab4 <GUI_TOUCH_StoreStateEx+0x38>
 800ba90:	ad01      	add	r5, sp, #4
 800ba92:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800ba96:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 800ba9a:	a902      	add	r1, sp, #8
 800ba9c:	4628      	mov	r0, r5
 800ba9e:	4798      	blx	r3
 800baa0:	4603      	mov	r3, r0
 800baa2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800baa6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800baaa:	b953      	cbnz	r3, 800bac2 <GUI_TOUCH_StoreStateEx+0x46>
 800baac:	4628      	mov	r0, r5
 800baae:	f007 fbf7 	bl	80132a0 <GUI_PID_StoreState>
 800bab2:	e006      	b.n	800bac2 <GUI_TOUCH_StoreStateEx+0x46>
 800bab4:	4630      	mov	r0, r6
 800bab6:	f007 fbf3 	bl	80132a0 <GUI_PID_StoreState>
 800baba:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800babe:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800bac2:	b004      	add	sp, #16
 800bac4:	bd70      	pop	{r4, r5, r6, pc}
 800bac6:	bf00      	nop
 800bac8:	200004a0 	.word	0x200004a0

0800bacc <GUI_UC__GetCharCodeInc>:
 800bacc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bace:	4e08      	ldr	r6, [pc, #32]	; (800baf0 <GUI_UC__GetCharCodeInc+0x24>)
 800bad0:	4605      	mov	r5, r0
 800bad2:	6804      	ldr	r4, [r0, #0]
 800bad4:	6833      	ldr	r3, [r6, #0]
 800bad6:	4620      	mov	r0, r4
 800bad8:	681b      	ldr	r3, [r3, #0]
 800bada:	4798      	blx	r3
 800badc:	6833      	ldr	r3, [r6, #0]
 800bade:	4607      	mov	r7, r0
 800bae0:	4620      	mov	r0, r4
 800bae2:	685b      	ldr	r3, [r3, #4]
 800bae4:	4798      	blx	r3
 800bae6:	4420      	add	r0, r4
 800bae8:	6028      	str	r0, [r5, #0]
 800baea:	4638      	mov	r0, r7
 800baec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800baee:	bf00      	nop
 800baf0:	2002db00 	.word	0x2002db00

0800baf4 <GUI_UC__NumChars2NumBytes>:
 800baf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800baf6:	4606      	mov	r6, r0
 800baf8:	460d      	mov	r5, r1
 800bafa:	2400      	movs	r4, #0
 800bafc:	4f05      	ldr	r7, [pc, #20]	; (800bb14 <GUI_UC__NumChars2NumBytes+0x20>)
 800bafe:	b13d      	cbz	r5, 800bb10 <GUI_UC__NumChars2NumBytes+0x1c>
 800bb00:	683b      	ldr	r3, [r7, #0]
 800bb02:	4630      	mov	r0, r6
 800bb04:	3d01      	subs	r5, #1
 800bb06:	685b      	ldr	r3, [r3, #4]
 800bb08:	4798      	blx	r3
 800bb0a:	4406      	add	r6, r0
 800bb0c:	4404      	add	r4, r0
 800bb0e:	e7f6      	b.n	800bafe <GUI_UC__NumChars2NumBytes+0xa>
 800bb10:	4620      	mov	r0, r4
 800bb12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bb14:	2002db00 	.word	0x2002db00

0800bb18 <_GetCharCode>:
 800bb18:	7800      	ldrb	r0, [r0, #0]
 800bb1a:	4770      	bx	lr

0800bb1c <_GetCharSize>:
 800bb1c:	2001      	movs	r0, #1
 800bb1e:	4770      	bx	lr

0800bb20 <_CalcSizeOfChar>:
 800bb20:	2001      	movs	r0, #1
 800bb22:	4770      	bx	lr

0800bb24 <_Encode>:
 800bb24:	7001      	strb	r1, [r0, #0]
 800bb26:	2001      	movs	r0, #1
 800bb28:	4770      	bx	lr
	...

0800bb2c <GUI_SignalEvent>:
 800bb2c:	4b02      	ldr	r3, [pc, #8]	; (800bb38 <GUI_SignalEvent+0xc>)
 800bb2e:	681b      	ldr	r3, [r3, #0]
 800bb30:	b103      	cbz	r3, 800bb34 <GUI_SignalEvent+0x8>
 800bb32:	4718      	bx	r3
 800bb34:	4770      	bx	lr
 800bb36:	bf00      	nop
 800bb38:	200004b0 	.word	0x200004b0

0800bb3c <GUI__MixColorsBulk>:
 800bb3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb40:	b087      	sub	sp, #28
 800bb42:	4606      	mov	r6, r0
 800bb44:	460f      	mov	r7, r1
 800bb46:	4690      	mov	r8, r2
 800bb48:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800bb4c:	9304      	str	r3, [sp, #16]
 800bb4e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bb50:	009d      	lsls	r5, r3, #2
 800bb52:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bb54:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 800bb58:	9303      	str	r3, [sp, #12]
 800bb5a:	2300      	movs	r3, #0
 800bb5c:	9301      	str	r3, [sp, #4]
 800bb5e:	4b17      	ldr	r3, [pc, #92]	; (800bbbc <GUI__MixColorsBulk+0x80>)
 800bb60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800bb62:	9901      	ldr	r1, [sp, #4]
 800bb64:	4291      	cmp	r1, r2
 800bb66:	d026      	beq.n	800bbb6 <GUI__MixColorsBulk+0x7a>
 800bb68:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
 800bb6c:	46c2      	mov	sl, r8
 800bb6e:	46b3      	mov	fp, r6
 800bb70:	9702      	str	r7, [sp, #8]
 800bb72:	f85b 0b04 	ldr.w	r0, [fp], #4
 800bb76:	9904      	ldr	r1, [sp, #16]
 800bb78:	0e02      	lsrs	r2, r0, #24
 800bb7a:	9c02      	ldr	r4, [sp, #8]
 800bb7c:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 800bb80:	9305      	str	r3, [sp, #20]
 800bb82:	434a      	muls	r2, r1
 800bb84:	21ff      	movs	r1, #255	; 0xff
 800bb86:	fbb2 f2f1 	udiv	r2, r2, r1
 800bb8a:	f854 1b04 	ldr.w	r1, [r4], #4
 800bb8e:	b2d2      	uxtb	r2, r2
 800bb90:	9402      	str	r4, [sp, #8]
 800bb92:	681c      	ldr	r4, [r3, #0]
 800bb94:	47a0      	blx	r4
 800bb96:	f1b9 0901 	subs.w	r9, r9, #1
 800bb9a:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 800bb9e:	9b05      	ldr	r3, [sp, #20]
 800bba0:	f84a 0b04 	str.w	r0, [sl], #4
 800bba4:	d1e5      	bne.n	800bb72 <GUI__MixColorsBulk+0x36>
 800bba6:	9a03      	ldr	r2, [sp, #12]
 800bba8:	442e      	add	r6, r5
 800bbaa:	44a8      	add	r8, r5
 800bbac:	4417      	add	r7, r2
 800bbae:	9a01      	ldr	r2, [sp, #4]
 800bbb0:	3201      	adds	r2, #1
 800bbb2:	9201      	str	r2, [sp, #4]
 800bbb4:	e7d4      	b.n	800bb60 <GUI__MixColorsBulk+0x24>
 800bbb6:	b007      	add	sp, #28
 800bbb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bbbc:	20000048 	.word	0x20000048

0800bbc0 <GUI__MixColors>:
 800bbc0:	0e0b      	lsrs	r3, r1, #24
 800bbc2:	ea4f 6310 	mov.w	r3, r0, lsr #24
 800bbc6:	fb02 f203 	mul.w	r2, r2, r3
 800bbca:	f04f 03ff 	mov.w	r3, #255	; 0xff
 800bbce:	bf08      	it	eq
 800bbd0:	f020 417f 	biceq.w	r1, r0, #4278190080	; 0xff000000
 800bbd4:	fbb2 f2f3 	udiv	r2, r2, r3
 800bbd8:	b530      	push	{r4, r5, lr}
 800bbda:	f3c0 2407 	ubfx	r4, r0, #8, #8
 800bbde:	1a9d      	subs	r5, r3, r2
 800bbe0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 800bbe4:	f044 7380 	orr.w	r3, r4, #16777216	; 0x1000000
 800bbe8:	0a0c      	lsrs	r4, r1, #8
 800bbea:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 800bbee:	436c      	muls	r4, r5
 800bbf0:	fb02 4403 	mla	r4, r2, r3, r4
 800bbf4:	f001 13ff 	and.w	r3, r1, #16711935	; 0xff00ff
 800bbf8:	4342      	muls	r2, r0
 800bbfa:	f004 24ff 	and.w	r4, r4, #4278255360	; 0xff00ff00
 800bbfe:	fb05 2103 	mla	r1, r5, r3, r2
 800bc02:	0a09      	lsrs	r1, r1, #8
 800bc04:	f001 10ff 	and.w	r0, r1, #16711935	; 0xff00ff
 800bc08:	4320      	orrs	r0, r4
 800bc0a:	bd30      	pop	{r4, r5, pc}

0800bc0c <_OnExit>:
 800bc0c:	b510      	push	{r4, lr}
 800bc0e:	4c08      	ldr	r4, [pc, #32]	; (800bc30 <_OnExit+0x24>)
 800bc10:	6820      	ldr	r0, [r4, #0]
 800bc12:	f7fe fe89 	bl	800a928 <GUI_ALLOC_FreeFixedBlock>
 800bc16:	6860      	ldr	r0, [r4, #4]
 800bc18:	f7fe fe86 	bl	800a928 <GUI_ALLOC_FreeFixedBlock>
 800bc1c:	68a0      	ldr	r0, [r4, #8]
 800bc1e:	f7fe fe83 	bl	800a928 <GUI_ALLOC_FreeFixedBlock>
 800bc22:	2300      	movs	r3, #0
 800bc24:	60a3      	str	r3, [r4, #8]
 800bc26:	6063      	str	r3, [r4, #4]
 800bc28:	6023      	str	r3, [r4, #0]
 800bc2a:	60e3      	str	r3, [r4, #12]
 800bc2c:	6123      	str	r3, [r4, #16]
 800bc2e:	bd10      	pop	{r4, pc}
 800bc30:	200004b8 	.word	0x200004b8

0800bc34 <GUI__GetAlphaBuffer>:
 800bc34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800bc38:	4c29      	ldr	r4, [pc, #164]	; (800bce0 <GUI__GetAlphaBuffer+0xac>)
 800bc3a:	461d      	mov	r5, r3
 800bc3c:	4606      	mov	r6, r0
 800bc3e:	4688      	mov	r8, r1
 800bc40:	6923      	ldr	r3, [r4, #16]
 800bc42:	4617      	mov	r7, r2
 800bc44:	b93b      	cbnz	r3, 800bc56 <GUI__GetAlphaBuffer+0x22>
 800bc46:	2301      	movs	r3, #1
 800bc48:	4620      	mov	r0, r4
 800bc4a:	6123      	str	r3, [r4, #16]
 800bc4c:	4b25      	ldr	r3, [pc, #148]	; (800bce4 <GUI__GetAlphaBuffer+0xb0>)
 800bc4e:	f840 3f14 	str.w	r3, [r0, #20]!
 800bc52:	f7ff fc91 	bl	800b578 <GUI__RegisterExit>
 800bc56:	68e3      	ldr	r3, [r4, #12]
 800bc58:	f8df 9084 	ldr.w	r9, [pc, #132]	; 800bce0 <GUI__GetAlphaBuffer+0xac>
 800bc5c:	b943      	cbnz	r3, 800bc70 <GUI__GetAlphaBuffer+0x3c>
 800bc5e:	4b22      	ldr	r3, [pc, #136]	; (800bce8 <GUI__GetAlphaBuffer+0xb4>)
 800bc60:	681b      	ldr	r3, [r3, #0]
 800bc62:	f8c9 300c 	str.w	r3, [r9, #12]
 800bc66:	b91b      	cbnz	r3, 800bc70 <GUI__GetAlphaBuffer+0x3c>
 800bc68:	f001 f9ae 	bl	800cfc8 <LCD_GetVXSizeMax>
 800bc6c:	f8c9 000c 	str.w	r0, [r9, #12]
 800bc70:	b10d      	cbz	r5, 800bc76 <GUI__GetAlphaBuffer+0x42>
 800bc72:	68e3      	ldr	r3, [r4, #12]
 800bc74:	602b      	str	r3, [r5, #0]
 800bc76:	b17e      	cbz	r6, 800bc98 <GUI__GetAlphaBuffer+0x64>
 800bc78:	6823      	ldr	r3, [r4, #0]
 800bc7a:	4d19      	ldr	r5, [pc, #100]	; (800bce0 <GUI__GetAlphaBuffer+0xac>)
 800bc7c:	b943      	cbnz	r3, 800bc90 <GUI__GetAlphaBuffer+0x5c>
 800bc7e:	68e8      	ldr	r0, [r5, #12]
 800bc80:	0080      	lsls	r0, r0, #2
 800bc82:	f7fe ff35 	bl	800aaf0 <GUI_ALLOC_GetFixedBlock>
 800bc86:	6028      	str	r0, [r5, #0]
 800bc88:	fab0 f580 	clz	r5, r0
 800bc8c:	096d      	lsrs	r5, r5, #5
 800bc8e:	e000      	b.n	800bc92 <GUI__GetAlphaBuffer+0x5e>
 800bc90:	2500      	movs	r5, #0
 800bc92:	6823      	ldr	r3, [r4, #0]
 800bc94:	6033      	str	r3, [r6, #0]
 800bc96:	e000      	b.n	800bc9a <GUI__GetAlphaBuffer+0x66>
 800bc98:	4635      	mov	r5, r6
 800bc9a:	f1b8 0f00 	cmp.w	r8, #0
 800bc9e:	d00d      	beq.n	800bcbc <GUI__GetAlphaBuffer+0x88>
 800bca0:	6863      	ldr	r3, [r4, #4]
 800bca2:	4e0f      	ldr	r6, [pc, #60]	; (800bce0 <GUI__GetAlphaBuffer+0xac>)
 800bca4:	b93b      	cbnz	r3, 800bcb6 <GUI__GetAlphaBuffer+0x82>
 800bca6:	68f0      	ldr	r0, [r6, #12]
 800bca8:	0080      	lsls	r0, r0, #2
 800bcaa:	f7fe ff21 	bl	800aaf0 <GUI_ALLOC_GetFixedBlock>
 800bcae:	2800      	cmp	r0, #0
 800bcb0:	6070      	str	r0, [r6, #4]
 800bcb2:	bf08      	it	eq
 800bcb4:	2501      	moveq	r5, #1
 800bcb6:	6863      	ldr	r3, [r4, #4]
 800bcb8:	f8c8 3000 	str.w	r3, [r8]
 800bcbc:	b167      	cbz	r7, 800bcd8 <GUI__GetAlphaBuffer+0xa4>
 800bcbe:	68a3      	ldr	r3, [r4, #8]
 800bcc0:	4e07      	ldr	r6, [pc, #28]	; (800bce0 <GUI__GetAlphaBuffer+0xac>)
 800bcc2:	b93b      	cbnz	r3, 800bcd4 <GUI__GetAlphaBuffer+0xa0>
 800bcc4:	68f0      	ldr	r0, [r6, #12]
 800bcc6:	0080      	lsls	r0, r0, #2
 800bcc8:	f7fe ff12 	bl	800aaf0 <GUI_ALLOC_GetFixedBlock>
 800bccc:	2800      	cmp	r0, #0
 800bcce:	60b0      	str	r0, [r6, #8]
 800bcd0:	bf08      	it	eq
 800bcd2:	2501      	moveq	r5, #1
 800bcd4:	68a3      	ldr	r3, [r4, #8]
 800bcd6:	603b      	str	r3, [r7, #0]
 800bcd8:	4628      	mov	r0, r5
 800bcda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800bcde:	bf00      	nop
 800bce0:	200004b8 	.word	0x200004b8
 800bce4:	0800bc0d 	.word	0x0800bc0d
 800bce8:	2002db10 	.word	0x2002db10

0800bcec <GUI__DoAlphaBlending>:
 800bcec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bcf0:	b093      	sub	sp, #76	; 0x4c
 800bcf2:	2400      	movs	r4, #0
 800bcf4:	4692      	mov	sl, r2
 800bcf6:	461e      	mov	r6, r3
 800bcf8:	9f1d      	ldr	r7, [sp, #116]	; 0x74
 800bcfa:	ab11      	add	r3, sp, #68	; 0x44
 800bcfc:	900a      	str	r0, [sp, #40]	; 0x28
 800bcfe:	4622      	mov	r2, r4
 800bd00:	910b      	str	r1, [sp, #44]	; 0x2c
 800bd02:	a80f      	add	r0, sp, #60	; 0x3c
 800bd04:	603c      	str	r4, [r7, #0]
 800bd06:	a910      	add	r1, sp, #64	; 0x40
 800bd08:	f7ff ff94 	bl	800bc34 <GUI__GetAlphaBuffer>
 800bd0c:	4605      	mov	r5, r0
 800bd0e:	2800      	cmp	r0, #0
 800bd10:	f040 80bd 	bne.w	800be8e <GUI__DoAlphaBlending+0x1a2>
 800bd14:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bd16:	4c60      	ldr	r4, [pc, #384]	; (800be98 <GUI__DoAlphaBlending+0x1ac>)
 800bd18:	42b3      	cmp	r3, r6
 800bd1a:	bfa8      	it	ge
 800bd1c:	4633      	movge	r3, r6
 800bd1e:	9309      	str	r3, [sp, #36]	; 0x24
 800bd20:	6823      	ldr	r3, [r4, #0]
 800bd22:	7c58      	ldrb	r0, [r3, #17]
 800bd24:	4b5d      	ldr	r3, [pc, #372]	; (800be9c <GUI__DoAlphaBlending+0x1b0>)
 800bd26:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800bd2a:	9307      	str	r3, [sp, #28]
 800bd2c:	691b      	ldr	r3, [r3, #16]
 800bd2e:	930c      	str	r3, [sp, #48]	; 0x30
 800bd30:	f001 f90c 	bl	800cf4c <GUI_GetBitsPerPixelEx>
 800bd34:	6823      	ldr	r3, [r4, #0]
 800bd36:	9008      	str	r0, [sp, #32]
 800bd38:	7c58      	ldrb	r0, [r3, #17]
 800bd3a:	f001 f92f 	bl	800cf9c <GUI_GetpfIndex2ColorEx>
 800bd3e:	4b58      	ldr	r3, [pc, #352]	; (800bea0 <GUI__DoAlphaBlending+0x1b4>)
 800bd40:	9003      	str	r0, [sp, #12]
 800bd42:	4298      	cmp	r0, r3
 800bd44:	d005      	beq.n	800bd52 <GUI__DoAlphaBlending+0x66>
 800bd46:	4b57      	ldr	r3, [pc, #348]	; (800bea4 <GUI__DoAlphaBlending+0x1b8>)
 800bd48:	1ac3      	subs	r3, r0, r3
 800bd4a:	bf18      	it	ne
 800bd4c:	2301      	movne	r3, #1
 800bd4e:	9306      	str	r3, [sp, #24]
 800bd50:	e000      	b.n	800bd54 <GUI__DoAlphaBlending+0x68>
 800bd52:	9506      	str	r5, [sp, #24]
 800bd54:	2600      	movs	r6, #0
 800bd56:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 800bd5a:	4635      	mov	r5, r6
 800bd5c:	4653      	mov	r3, sl
 800bd5e:	f853 0b04 	ldr.w	r0, [r3], #4
 800bd62:	930d      	str	r3, [sp, #52]	; 0x34
 800bd64:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800bd66:	4798      	blx	r3
 800bd68:	9004      	str	r0, [sp, #16]
 800bd6a:	0e03      	lsrs	r3, r0, #24
 800bd6c:	2bff      	cmp	r3, #255	; 0xff
 800bd6e:	9305      	str	r3, [sp, #20]
 800bd70:	d07b      	beq.n	800be6a <GUI__DoAlphaBlending+0x17e>
 800bd72:	2d00      	cmp	r5, #0
 800bd74:	d139      	bne.n	800bdea <GUI__DoAlphaBlending+0xfe>
 800bd76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bd78:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bd7a:	eb03 0906 	add.w	r9, r3, r6
 800bd7e:	4b46      	ldr	r3, [pc, #280]	; (800be98 <GUI__DoAlphaBlending+0x1ac>)
 800bd80:	681b      	ldr	r3, [r3, #0]
 800bd82:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800bd86:	454b      	cmp	r3, r9
 800bd88:	bfc4      	itt	gt
 800bd8a:	ebc9 0503 	rsbgt	r5, r9, r3
 800bd8e:	4699      	movgt	r9, r3
 800bd90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bd92:	19ac      	adds	r4, r5, r6
 800bd94:	4648      	mov	r0, r9
 800bd96:	eb03 0802 	add.w	r8, r3, r2
 800bd9a:	9b07      	ldr	r3, [sp, #28]
 800bd9c:	00a4      	lsls	r4, r4, #2
 800bd9e:	9301      	str	r3, [sp, #4]
 800bda0:	f108 32ff 	add.w	r2, r8, #4294967295
 800bda4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800bda6:	4423      	add	r3, r4
 800bda8:	9300      	str	r3, [sp, #0]
 800bdaa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bdac:	4619      	mov	r1, r3
 800bdae:	f001 fa8d 	bl	800d2cc <GUI_ReadRectEx>
 800bdb2:	9b08      	ldr	r3, [sp, #32]
 800bdb4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800bdb6:	2b17      	cmp	r3, #23
 800bdb8:	dc07      	bgt.n	800bdca <GUI__DoAlphaBlending+0xde>
 800bdba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800bdbc:	ebc5 010b 	rsb	r1, r5, fp
 800bdc0:	9a08      	ldr	r2, [sp, #32]
 800bdc2:	4420      	add	r0, r4
 800bdc4:	f000 f8a4 	bl	800bf10 <GUI__ExpandPixelIndicesEx>
 800bdc8:	e001      	b.n	800bdce <GUI__DoAlphaBlending+0xe2>
 800bdca:	9b06      	ldr	r3, [sp, #24]
 800bdcc:	b90b      	cbnz	r3, 800bdd2 <GUI__DoAlphaBlending+0xe6>
 800bdce:	2501      	movs	r5, #1
 800bdd0:	e00b      	b.n	800bdea <GUI__DoAlphaBlending+0xfe>
 800bdd2:	4404      	add	r4, r0
 800bdd4:	ebc9 0808 	rsb	r8, r9, r8
 800bdd8:	6820      	ldr	r0, [r4, #0]
 800bdda:	9b03      	ldr	r3, [sp, #12]
 800bddc:	4798      	blx	r3
 800bdde:	f1b8 0801 	subs.w	r8, r8, #1
 800bde2:	f844 0b04 	str.w	r0, [r4], #4
 800bde6:	d1f7      	bne.n	800bdd8 <GUI__DoAlphaBlending+0xec>
 800bde8:	e7f1      	b.n	800bdce <GUI__DoAlphaBlending+0xe2>
 800bdea:	4b2f      	ldr	r3, [pc, #188]	; (800bea8 <GUI__DoAlphaBlending+0x1bc>)
 800bdec:	00b4      	lsls	r4, r6, #2
 800bdee:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800bdf2:	f1b8 0f00 	cmp.w	r8, #0
 800bdf6:	d023      	beq.n	800be40 <GUI__DoAlphaBlending+0x154>
 800bdf8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800bdfa:	465b      	mov	r3, fp
 800bdfc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800bdfe:	4650      	mov	r0, sl
 800be00:	192a      	adds	r2, r5, r4
 800be02:	4421      	add	r1, r4
 800be04:	9210      	str	r2, [sp, #64]	; 0x40
 800be06:	910f      	str	r1, [sp, #60]	; 0x3c
 800be08:	47c0      	blx	r8
 800be0a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800be0c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 800be0e:	2300      	movs	r3, #0
 800be10:	f85a 1023 	ldr.w	r1, [sl, r3, lsl #2]
 800be14:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800be18:	f011 4f7f 	tst.w	r1, #4278190080	; 0xff000000
 800be1c:	d102      	bne.n	800be24 <GUI__DoAlphaBlending+0x138>
 800be1e:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 800be22:	e004      	b.n	800be2e <GUI__DoAlphaBlending+0x142>
 800be24:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800be28:	bf08      	it	eq
 800be2a:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 800be2e:	3301      	adds	r3, #1
 800be30:	459b      	cmp	fp, r3
 800be32:	d1ed      	bne.n	800be10 <GUI__DoAlphaBlending+0x124>
 800be34:	683b      	ldr	r3, [r7, #0]
 800be36:	9510      	str	r5, [sp, #64]	; 0x40
 800be38:	f043 0301 	orr.w	r3, r3, #1
 800be3c:	603b      	str	r3, [r7, #0]
 800be3e:	e024      	b.n	800be8a <GUI__DoAlphaBlending+0x19e>
 800be40:	9905      	ldr	r1, [sp, #20]
 800be42:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800be46:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800be48:	f8dd 8040 	ldr.w	r8, [sp, #64]	; 0x40
 800be4c:	b919      	cbnz	r1, 800be56 <GUI__DoAlphaBlending+0x16a>
 800be4e:	591b      	ldr	r3, [r3, r4]
 800be50:	f848 3004 	str.w	r3, [r8, r4]
 800be54:	e011      	b.n	800be7a <GUI__DoAlphaBlending+0x18e>
 800be56:	5919      	ldr	r1, [r3, r4]
 800be58:	9b04      	ldr	r3, [sp, #16]
 800be5a:	f043 407f 	orr.w	r0, r3, #4278190080	; 0xff000000
 800be5e:	4b13      	ldr	r3, [pc, #76]	; (800beac <GUI__DoAlphaBlending+0x1c0>)
 800be60:	681b      	ldr	r3, [r3, #0]
 800be62:	4798      	blx	r3
 800be64:	f848 0004 	str.w	r0, [r8, r4]
 800be68:	e003      	b.n	800be72 <GUI__DoAlphaBlending+0x186>
 800be6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800be6c:	9a04      	ldr	r2, [sp, #16]
 800be6e:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 800be72:	683b      	ldr	r3, [r7, #0]
 800be74:	f043 0301 	orr.w	r3, r3, #1
 800be78:	603b      	str	r3, [r7, #0]
 800be7a:	f1bb 0b01 	subs.w	fp, fp, #1
 800be7e:	f106 0601 	add.w	r6, r6, #1
 800be82:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 800be86:	f47f af69 	bne.w	800bd5c <GUI__DoAlphaBlending+0x70>
 800be8a:	9810      	ldr	r0, [sp, #64]	; 0x40
 800be8c:	e000      	b.n	800be90 <GUI__DoAlphaBlending+0x1a4>
 800be8e:	4620      	mov	r0, r4
 800be90:	b013      	add	sp, #76	; 0x4c
 800be92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be96:	bf00      	nop
 800be98:	2000003c 	.word	0x2000003c
 800be9c:	2002db08 	.word	0x2002db08
 800bea0:	0800a77f 	.word	0x0800a77f
 800bea4:	0800a781 	.word	0x0800a781
 800bea8:	200004b8 	.word	0x200004b8
 800beac:	20000048 	.word	0x20000048

0800beb0 <GUI__AllocAlphaBuffer>:
 800beb0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800beb2:	b908      	cbnz	r0, 800beb8 <GUI__AllocAlphaBuffer+0x8>
 800beb4:	4602      	mov	r2, r0
 800beb6:	e000      	b.n	800beba <GUI__AllocAlphaBuffer+0xa>
 800beb8:	aa03      	add	r2, sp, #12
 800beba:	2300      	movs	r3, #0
 800bebc:	a902      	add	r1, sp, #8
 800bebe:	a801      	add	r0, sp, #4
 800bec0:	f7ff feb8 	bl	800bc34 <GUI__GetAlphaBuffer>
 800bec4:	b005      	add	sp, #20
 800bec6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800becc <GUI_SetFuncAlphaBlending>:
 800becc:	4b02      	ldr	r3, [pc, #8]	; (800bed8 <GUI_SetFuncAlphaBlending+0xc>)
 800bece:	69da      	ldr	r2, [r3, #28]
 800bed0:	61d8      	str	r0, [r3, #28]
 800bed2:	4610      	mov	r0, r2
 800bed4:	4770      	bx	lr
 800bed6:	bf00      	nop
 800bed8:	200004b8 	.word	0x200004b8

0800bedc <GUI_SetFuncMixColorsBulk>:
 800bedc:	4b02      	ldr	r3, [pc, #8]	; (800bee8 <GUI_SetFuncMixColorsBulk+0xc>)
 800bede:	685a      	ldr	r2, [r3, #4]
 800bee0:	6058      	str	r0, [r3, #4]
 800bee2:	4610      	mov	r0, r2
 800bee4:	4770      	bx	lr
 800bee6:	bf00      	nop
 800bee8:	20000048 	.word	0x20000048

0800beec <GUI_SetFuncDrawAlpha>:
 800beec:	b510      	push	{r4, lr}
 800beee:	4b06      	ldr	r3, [pc, #24]	; (800bf08 <GUI_SetFuncDrawAlpha+0x1c>)
 800bef0:	4c06      	ldr	r4, [pc, #24]	; (800bf0c <GUI_SetFuncDrawAlpha+0x20>)
 800bef2:	b120      	cbz	r0, 800befe <GUI_SetFuncDrawAlpha+0x12>
 800bef4:	b119      	cbz	r1, 800befe <GUI_SetFuncDrawAlpha+0x12>
 800bef6:	6020      	str	r0, [r4, #0]
 800bef8:	2000      	movs	r0, #0
 800befa:	6019      	str	r1, [r3, #0]
 800befc:	bd10      	pop	{r4, pc}
 800befe:	2200      	movs	r2, #0
 800bf00:	2001      	movs	r0, #1
 800bf02:	6022      	str	r2, [r4, #0]
 800bf04:	601a      	str	r2, [r3, #0]
 800bf06:	bd10      	pop	{r4, pc}
 800bf08:	2002db18 	.word	0x2002db18
 800bf0c:	2002db1c 	.word	0x2002db1c

0800bf10 <GUI__ExpandPixelIndicesEx>:
 800bf10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bf14:	1e0c      	subs	r4, r1, #0
 800bf16:	4605      	mov	r5, r0
 800bf18:	f340 80b6 	ble.w	800c088 <GUI__ExpandPixelIndicesEx+0x178>
 800bf1c:	2a08      	cmp	r2, #8
 800bf1e:	685e      	ldr	r6, [r3, #4]
 800bf20:	dd04      	ble.n	800bf2c <GUI__ExpandPixelIndicesEx+0x1c>
 800bf22:	2a10      	cmp	r2, #16
 800bf24:	f340 809a 	ble.w	800c05c <GUI__ExpandPixelIndicesEx+0x14c>
 800bf28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bf2c:	3a01      	subs	r2, #1
 800bf2e:	2a07      	cmp	r2, #7
 800bf30:	f200 80aa 	bhi.w	800c088 <GUI__ExpandPixelIndicesEx+0x178>
 800bf34:	e8df f002 	tbb	[pc, r2]
 800bf38:	59a82d04 	.word	0x59a82d04
 800bf3c:	85a8a8a8 	.word	0x85a8a8a8
 800bf40:	1e67      	subs	r7, r4, #1
 800bf42:	f104 4880 	add.w	r8, r4, #1073741824	; 0x40000000
 800bf46:	10fb      	asrs	r3, r7, #3
 800bf48:	f108 38ff 	add.w	r8, r8, #4294967295
 800bf4c:	f007 0707 	and.w	r7, r7, #7
 800bf50:	f103 39ff 	add.w	r9, r3, #4294967295
 800bf54:	eb05 0888 	add.w	r8, r5, r8, lsl #2
 800bf58:	f815 a003 	ldrb.w	sl, [r5, r3]
 800bf5c:	44a9      	add	r9, r5
 800bf5e:	2580      	movs	r5, #128	; 0x80
 800bf60:	413d      	asrs	r5, r7
 800bf62:	b2ed      	uxtb	r5, r5
 800bf64:	f1c7 0307 	rsb	r3, r7, #7
 800bf68:	ea05 000a 	and.w	r0, r5, sl
 800bf6c:	4118      	asrs	r0, r3
 800bf6e:	47b0      	blx	r6
 800bf70:	f848 0904 	str.w	r0, [r8], #-4
 800bf74:	b937      	cbnz	r7, 800bf84 <GUI__ExpandPixelIndicesEx+0x74>
 800bf76:	f899 a000 	ldrb.w	sl, [r9]
 800bf7a:	2501      	movs	r5, #1
 800bf7c:	f109 39ff 	add.w	r9, r9, #4294967295
 800bf80:	2707      	movs	r7, #7
 800bf82:	e002      	b.n	800bf8a <GUI__ExpandPixelIndicesEx+0x7a>
 800bf84:	006d      	lsls	r5, r5, #1
 800bf86:	3f01      	subs	r7, #1
 800bf88:	b2ed      	uxtb	r5, r5
 800bf8a:	3c01      	subs	r4, #1
 800bf8c:	d1ea      	bne.n	800bf64 <GUI__ExpandPixelIndicesEx+0x54>
 800bf8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bf92:	1e67      	subs	r7, r4, #1
 800bf94:	f104 4880 	add.w	r8, r4, #1073741824	; 0x40000000
 800bf98:	10bb      	asrs	r3, r7, #2
 800bf9a:	f108 38ff 	add.w	r8, r8, #4294967295
 800bf9e:	f007 0703 	and.w	r7, r7, #3
 800bfa2:	f103 39ff 	add.w	r9, r3, #4294967295
 800bfa6:	f815 a003 	ldrb.w	sl, [r5, r3]
 800bfaa:	eb05 0888 	add.w	r8, r5, r8, lsl #2
 800bfae:	23c0      	movs	r3, #192	; 0xc0
 800bfb0:	44a9      	add	r9, r5
 800bfb2:	007d      	lsls	r5, r7, #1
 800bfb4:	fa43 f505 	asr.w	r5, r3, r5
 800bfb8:	b2ed      	uxtb	r5, r5
 800bfba:	007b      	lsls	r3, r7, #1
 800bfbc:	ea05 000a 	and.w	r0, r5, sl
 800bfc0:	f1c3 0306 	rsb	r3, r3, #6
 800bfc4:	4118      	asrs	r0, r3
 800bfc6:	47b0      	blx	r6
 800bfc8:	f848 0904 	str.w	r0, [r8], #-4
 800bfcc:	b937      	cbnz	r7, 800bfdc <GUI__ExpandPixelIndicesEx+0xcc>
 800bfce:	2503      	movs	r5, #3
 800bfd0:	f899 a000 	ldrb.w	sl, [r9]
 800bfd4:	f109 39ff 	add.w	r9, r9, #4294967295
 800bfd8:	462f      	mov	r7, r5
 800bfda:	e002      	b.n	800bfe2 <GUI__ExpandPixelIndicesEx+0xd2>
 800bfdc:	00ad      	lsls	r5, r5, #2
 800bfde:	3f01      	subs	r7, #1
 800bfe0:	b2ed      	uxtb	r5, r5
 800bfe2:	3c01      	subs	r4, #1
 800bfe4:	d1e9      	bne.n	800bfba <GUI__ExpandPixelIndicesEx+0xaa>
 800bfe6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bfea:	1e67      	subs	r7, r4, #1
 800bfec:	f104 4880 	add.w	r8, r4, #1073741824	; 0x40000000
 800bff0:	107b      	asrs	r3, r7, #1
 800bff2:	f108 38ff 	add.w	r8, r8, #4294967295
 800bff6:	f007 0701 	and.w	r7, r7, #1
 800bffa:	f103 39ff 	add.w	r9, r3, #4294967295
 800bffe:	f815 a003 	ldrb.w	sl, [r5, r3]
 800c002:	eb05 0888 	add.w	r8, r5, r8, lsl #2
 800c006:	23f0      	movs	r3, #240	; 0xf0
 800c008:	44a9      	add	r9, r5
 800c00a:	00bd      	lsls	r5, r7, #2
 800c00c:	fa43 f505 	asr.w	r5, r3, r5
 800c010:	b2ed      	uxtb	r5, r5
 800c012:	00bb      	lsls	r3, r7, #2
 800c014:	ea05 000a 	and.w	r0, r5, sl
 800c018:	f1c3 0304 	rsb	r3, r3, #4
 800c01c:	4118      	asrs	r0, r3
 800c01e:	47b0      	blx	r6
 800c020:	f848 0904 	str.w	r0, [r8], #-4
 800c024:	b937      	cbnz	r7, 800c034 <GUI__ExpandPixelIndicesEx+0x124>
 800c026:	f899 a000 	ldrb.w	sl, [r9]
 800c02a:	250f      	movs	r5, #15
 800c02c:	f109 39ff 	add.w	r9, r9, #4294967295
 800c030:	2701      	movs	r7, #1
 800c032:	e002      	b.n	800c03a <GUI__ExpandPixelIndicesEx+0x12a>
 800c034:	012d      	lsls	r5, r5, #4
 800c036:	2700      	movs	r7, #0
 800c038:	b2ed      	uxtb	r5, r5
 800c03a:	3c01      	subs	r4, #1
 800c03c:	d1e9      	bne.n	800c012 <GUI__ExpandPixelIndicesEx+0x102>
 800c03e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c042:	eb05 0784 	add.w	r7, r5, r4, lsl #2
 800c046:	4425      	add	r5, r4
 800c048:	1b64      	subs	r4, r4, r5
 800c04a:	f815 0d01 	ldrb.w	r0, [r5, #-1]!
 800c04e:	47b0      	blx	r6
 800c050:	f847 0d04 	str.w	r0, [r7, #-4]!
 800c054:	42e5      	cmn	r5, r4
 800c056:	d1f8      	bne.n	800c04a <GUI__ExpandPixelIndicesEx+0x13a>
 800c058:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c05c:	695f      	ldr	r7, [r3, #20]
 800c05e:	b137      	cbz	r7, 800c06e <GUI__ExpandPixelIndicesEx+0x15e>
 800c060:	4622      	mov	r2, r4
 800c062:	4629      	mov	r1, r5
 800c064:	46bc      	mov	ip, r7
 800c066:	2302      	movs	r3, #2
 800c068:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c06c:	4760      	bx	ip
 800c06e:	eb05 0744 	add.w	r7, r5, r4, lsl #1
 800c072:	eb05 0584 	add.w	r5, r5, r4, lsl #2
 800c076:	f837 0d02 	ldrh.w	r0, [r7, #-2]!
 800c07a:	47b0      	blx	r6
 800c07c:	3c01      	subs	r4, #1
 800c07e:	f845 0d04 	str.w	r0, [r5, #-4]!
 800c082:	d1f8      	bne.n	800c076 <GUI__ExpandPixelIndicesEx+0x166>
 800c084:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c088:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800c08c <GUI__IntersectRect>:
 800c08c:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c090:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c094:	429a      	cmp	r2, r3
 800c096:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c09a:	bfb8      	it	lt
 800c09c:	8003      	strhlt	r3, [r0, #0]
 800c09e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800c0a2:	429a      	cmp	r2, r3
 800c0a4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800c0a8:	bfb8      	it	lt
 800c0aa:	8043      	strhlt	r3, [r0, #2]
 800c0ac:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800c0b0:	429a      	cmp	r2, r3
 800c0b2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800c0b6:	bfc8      	it	gt
 800c0b8:	8083      	strhgt	r3, [r0, #4]
 800c0ba:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800c0be:	429a      	cmp	r2, r3
 800c0c0:	bfc8      	it	gt
 800c0c2:	80c3      	strhgt	r3, [r0, #6]
 800c0c4:	4770      	bx	lr

0800c0c6 <GUI__IntersectRects>:
 800c0c6:	b570      	push	{r4, r5, r6, lr}
 800c0c8:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c0cc:	4606      	mov	r6, r0
 800c0ce:	f9b2 5000 	ldrsh.w	r5, [r2]
 800c0d2:	f9b1 4004 	ldrsh.w	r4, [r1, #4]
 800c0d6:	429d      	cmp	r5, r3
 800c0d8:	bfb8      	it	lt
 800c0da:	461d      	movlt	r5, r3
 800c0dc:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800c0e0:	8005      	strh	r5, [r0, #0]
 800c0e2:	f9b2 0002 	ldrsh.w	r0, [r2, #2]
 800c0e6:	4283      	cmp	r3, r0
 800c0e8:	bfb8      	it	lt
 800c0ea:	4603      	movlt	r3, r0
 800c0ec:	f9b2 0004 	ldrsh.w	r0, [r2, #4]
 800c0f0:	4284      	cmp	r4, r0
 800c0f2:	8073      	strh	r3, [r6, #2]
 800c0f4:	bfa8      	it	ge
 800c0f6:	4604      	movge	r4, r0
 800c0f8:	f9b2 0006 	ldrsh.w	r0, [r2, #6]
 800c0fc:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
 800c100:	80b4      	strh	r4, [r6, #4]
 800c102:	4282      	cmp	r2, r0
 800c104:	bfa8      	it	ge
 800c106:	4602      	movge	r2, r0
 800c108:	42a5      	cmp	r5, r4
 800c10a:	80f2      	strh	r2, [r6, #6]
 800c10c:	dc04      	bgt.n	800c118 <GUI__IntersectRects+0x52>
 800c10e:	4293      	cmp	r3, r2
 800c110:	bfcc      	ite	gt
 800c112:	2000      	movgt	r0, #0
 800c114:	2001      	movle	r0, #1
 800c116:	bd70      	pop	{r4, r5, r6, pc}
 800c118:	2000      	movs	r0, #0
 800c11a:	bd70      	pop	{r4, r5, r6, pc}

0800c11c <GUI__memset>:
 800c11c:	b2c9      	uxtb	r1, r1
 800c11e:	4603      	mov	r3, r0
 800c120:	b570      	push	{r4, r5, r6, lr}
 800c122:	b12a      	cbz	r2, 800c130 <GUI__memset+0x14>
 800c124:	079c      	lsls	r4, r3, #30
 800c126:	d003      	beq.n	800c130 <GUI__memset+0x14>
 800c128:	f803 1b01 	strb.w	r1, [r3], #1
 800c12c:	3a01      	subs	r2, #1
 800c12e:	e7f8      	b.n	800c122 <GUI__memset+0x6>
 800c130:	0895      	lsrs	r5, r2, #2
 800c132:	d101      	bne.n	800c138 <GUI__memset+0x1c>
 800c134:	441a      	add	r2, r3
 800c136:	e01a      	b.n	800c16e <GUI__memset+0x52>
 800c138:	f04f 3401 	mov.w	r4, #16843009	; 0x1010101
 800c13c:	f002 0203 	and.w	r2, r2, #3
 800c140:	434c      	muls	r4, r1
 800c142:	2d03      	cmp	r5, #3
 800c144:	461e      	mov	r6, r3
 800c146:	f103 0310 	add.w	r3, r3, #16
 800c14a:	dd09      	ble.n	800c160 <GUI__memset+0x44>
 800c14c:	f843 4c10 	str.w	r4, [r3, #-16]
 800c150:	3d04      	subs	r5, #4
 800c152:	f843 4c0c 	str.w	r4, [r3, #-12]
 800c156:	f843 4c08 	str.w	r4, [r3, #-8]
 800c15a:	f843 4c04 	str.w	r4, [r3, #-4]
 800c15e:	e7f0      	b.n	800c142 <GUI__memset+0x26>
 800c160:	eb06 0385 	add.w	r3, r6, r5, lsl #2
 800c164:	429e      	cmp	r6, r3
 800c166:	d0e5      	beq.n	800c134 <GUI__memset+0x18>
 800c168:	f846 4b04 	str.w	r4, [r6], #4
 800c16c:	e7fa      	b.n	800c164 <GUI__memset+0x48>
 800c16e:	4293      	cmp	r3, r2
 800c170:	d002      	beq.n	800c178 <GUI__memset+0x5c>
 800c172:	f803 1b01 	strb.w	r1, [r3], #1
 800c176:	e7fa      	b.n	800c16e <GUI__memset+0x52>
 800c178:	bd70      	pop	{r4, r5, r6, pc}

0800c17a <GUI__memset16>:
 800c17a:	b570      	push	{r4, r5, r6, lr}
 800c17c:	0784      	lsls	r4, r0, #30
 800c17e:	bf42      	ittt	mi
 800c180:	f102 32ff 	addmi.w	r2, r2, #4294967295
 800c184:	8001      	strhmi	r1, [r0, #0]
 800c186:	3002      	addmi	r0, #2
 800c188:	0854      	lsrs	r4, r2, #1
 800c18a:	d023      	beq.n	800c1d4 <GUI__memset16+0x5a>
 800c18c:	2c03      	cmp	r4, #3
 800c18e:	4623      	mov	r3, r4
 800c190:	eb01 4501 	add.w	r5, r1, r1, lsl #16
 800c194:	d802      	bhi.n	800c19c <GUI__memset16+0x22>
 800c196:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800c19a:	e016      	b.n	800c1ca <GUI__memset16+0x50>
 800c19c:	f100 0310 	add.w	r3, r0, #16
 800c1a0:	4626      	mov	r6, r4
 800c1a2:	3e04      	subs	r6, #4
 800c1a4:	f843 5c10 	str.w	r5, [r3, #-16]
 800c1a8:	f843 5c0c 	str.w	r5, [r3, #-12]
 800c1ac:	3310      	adds	r3, #16
 800c1ae:	2e03      	cmp	r6, #3
 800c1b0:	f843 5c18 	str.w	r5, [r3, #-24]
 800c1b4:	f843 5c14 	str.w	r5, [r3, #-20]
 800c1b8:	dcf3      	bgt.n	800c1a2 <GUI__memset16+0x28>
 800c1ba:	3c04      	subs	r4, #4
 800c1bc:	08a3      	lsrs	r3, r4, #2
 800c1be:	1c5e      	adds	r6, r3, #1
 800c1c0:	eba4 0383 	sub.w	r3, r4, r3, lsl #2
 800c1c4:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 800c1c8:	e7e5      	b.n	800c196 <GUI__memset16+0x1c>
 800c1ca:	4298      	cmp	r0, r3
 800c1cc:	d002      	beq.n	800c1d4 <GUI__memset16+0x5a>
 800c1ce:	f840 5b04 	str.w	r5, [r0], #4
 800c1d2:	e7fa      	b.n	800c1ca <GUI__memset16+0x50>
 800c1d4:	07d3      	lsls	r3, r2, #31
 800c1d6:	bf48      	it	mi
 800c1d8:	8001      	strhmi	r1, [r0, #0]
 800c1da:	bd70      	pop	{r4, r5, r6, pc}

0800c1dc <GUI__ReduceRect>:
 800c1dc:	880b      	ldrh	r3, [r1, #0]
 800c1de:	b292      	uxth	r2, r2
 800c1e0:	4413      	add	r3, r2
 800c1e2:	8003      	strh	r3, [r0, #0]
 800c1e4:	888b      	ldrh	r3, [r1, #4]
 800c1e6:	1a9b      	subs	r3, r3, r2
 800c1e8:	8083      	strh	r3, [r0, #4]
 800c1ea:	884b      	ldrh	r3, [r1, #2]
 800c1ec:	4413      	add	r3, r2
 800c1ee:	8043      	strh	r3, [r0, #2]
 800c1f0:	88cb      	ldrh	r3, [r1, #6]
 800c1f2:	1a9a      	subs	r2, r3, r2
 800c1f4:	80c2      	strh	r2, [r0, #6]
 800c1f6:	4770      	bx	lr

0800c1f8 <GUI__sqrt32>:
 800c1f8:	2110      	movs	r1, #16
 800c1fa:	2300      	movs	r3, #0
 800c1fc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800c200:	b510      	push	{r4, lr}
 800c202:	18d4      	adds	r4, r2, r3
 800c204:	42a0      	cmp	r0, r4
 800c206:	bf24      	itt	cs
 800c208:	1913      	addcs	r3, r2, r4
 800c20a:	1b00      	subcs	r0, r0, r4
 800c20c:	3901      	subs	r1, #1
 800c20e:	ea4f 0292 	mov.w	r2, r2, lsr #2
 800c212:	ea4f 0353 	mov.w	r3, r3, lsr #1
 800c216:	d1f4      	bne.n	800c202 <GUI__sqrt32+0xa>
 800c218:	4618      	mov	r0, r3
 800c21a:	bd10      	pop	{r4, pc}

0800c21c <GUI__strcmp>:
 800c21c:	4b09      	ldr	r3, [pc, #36]	; (800c244 <GUI__strcmp+0x28>)
 800c21e:	2900      	cmp	r1, #0
 800c220:	bf08      	it	eq
 800c222:	4619      	moveq	r1, r3
 800c224:	2800      	cmp	r0, #0
 800c226:	bf08      	it	eq
 800c228:	4618      	moveq	r0, r3
 800c22a:	3901      	subs	r1, #1
 800c22c:	1e43      	subs	r3, r0, #1
 800c22e:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800c232:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800c236:	4290      	cmp	r0, r2
 800c238:	d102      	bne.n	800c240 <GUI__strcmp+0x24>
 800c23a:	2800      	cmp	r0, #0
 800c23c:	d1f7      	bne.n	800c22e <GUI__strcmp+0x12>
 800c23e:	e000      	b.n	800c242 <GUI__strcmp+0x26>
 800c240:	2001      	movs	r0, #1
 800c242:	4770      	bx	lr
 800c244:	0801eb80 	.word	0x0801eb80

0800c248 <GUI__strcmp_hp>:
 800c248:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c24a:	460d      	mov	r5, r1
 800c24c:	b160      	cbz	r0, 800c268 <GUI__strcmp_hp+0x20>
 800c24e:	ac02      	add	r4, sp, #8
 800c250:	f7fe fb7e 	bl	800a950 <GUI_ALLOC_LockH>
 800c254:	4629      	mov	r1, r5
 800c256:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c25a:	f7ff ffdf 	bl	800c21c <GUI__strcmp>
 800c25e:	4605      	mov	r5, r0
 800c260:	4620      	mov	r0, r4
 800c262:	f7fe fb83 	bl	800a96c <GUI_ALLOC_UnlockH>
 800c266:	e000      	b.n	800c26a <GUI__strcmp_hp+0x22>
 800c268:	2501      	movs	r5, #1
 800c26a:	4628      	mov	r0, r5
 800c26c:	b003      	add	sp, #12
 800c26e:	bd30      	pop	{r4, r5, pc}

0800c270 <GUI__strlen>:
 800c270:	4602      	mov	r2, r0
 800c272:	b130      	cbz	r0, 800c282 <GUI__strlen+0x12>
 800c274:	4603      	mov	r3, r0
 800c276:	1a98      	subs	r0, r3, r2
 800c278:	f813 1b01 	ldrb.w	r1, [r3], #1
 800c27c:	2900      	cmp	r1, #0
 800c27e:	d1fa      	bne.n	800c276 <GUI__strlen+0x6>
 800c280:	4770      	bx	lr
 800c282:	f04f 30ff 	mov.w	r0, #4294967295
 800c286:	4770      	bx	lr

0800c288 <GUI__SetText>:
 800c288:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c28a:	6807      	ldr	r7, [r0, #0]
 800c28c:	4605      	mov	r5, r0
 800c28e:	460e      	mov	r6, r1
 800c290:	4638      	mov	r0, r7
 800c292:	f7ff ffd9 	bl	800c248 <GUI__strcmp_hp>
 800c296:	b908      	cbnz	r0, 800c29c <GUI__SetText+0x14>
 800c298:	2000      	movs	r0, #0
 800c29a:	e02f      	b.n	800c2fc <GUI__SetText+0x74>
 800c29c:	4630      	mov	r0, r6
 800c29e:	f7ff ffe7 	bl	800c270 <GUI__strlen>
 800c2a2:	1c44      	adds	r4, r0, #1
 800c2a4:	4638      	mov	r0, r7
 800c2a6:	f7fe fb81 	bl	800a9ac <GUI_ALLOC_GetSize>
 800c2aa:	4284      	cmp	r4, r0
 800c2ac:	d110      	bne.n	800c2d0 <GUI__SetText+0x48>
 800c2ae:	2c00      	cmp	r4, #0
 800c2b0:	d0f2      	beq.n	800c298 <GUI__SetText+0x10>
 800c2b2:	4638      	mov	r0, r7
 800c2b4:	ad02      	add	r5, sp, #8
 800c2b6:	f7fe fb4b 	bl	800a950 <GUI_ALLOC_LockH>
 800c2ba:	4b11      	ldr	r3, [pc, #68]	; (800c300 <GUI__SetText+0x78>)
 800c2bc:	f845 0d04 	str.w	r0, [r5, #-4]!
 800c2c0:	4622      	mov	r2, r4
 800c2c2:	681b      	ldr	r3, [r3, #0]
 800c2c4:	4631      	mov	r1, r6
 800c2c6:	4798      	blx	r3
 800c2c8:	4628      	mov	r0, r5
 800c2ca:	f7fe fb4f 	bl	800a96c <GUI_ALLOC_UnlockH>
 800c2ce:	e014      	b.n	800c2fa <GUI__SetText+0x72>
 800c2d0:	4620      	mov	r0, r4
 800c2d2:	f7fe fd09 	bl	800ace8 <GUI_ALLOC_AllocNoInit>
 800c2d6:	4607      	mov	r7, r0
 800c2d8:	2800      	cmp	r0, #0
 800c2da:	d0dd      	beq.n	800c298 <GUI__SetText+0x10>
 800c2dc:	ac02      	add	r4, sp, #8
 800c2de:	f7fe fb37 	bl	800a950 <GUI_ALLOC_LockH>
 800c2e2:	4631      	mov	r1, r6
 800c2e4:	f844 0d04 	str.w	r0, [r4, #-4]!
 800c2e8:	f009 ff96 	bl	8016218 <strcpy>
 800c2ec:	4620      	mov	r0, r4
 800c2ee:	f7fe fb3d 	bl	800a96c <GUI_ALLOC_UnlockH>
 800c2f2:	4628      	mov	r0, r5
 800c2f4:	f7fe fcfc 	bl	800acf0 <GUI_ALLOC_FreePtr>
 800c2f8:	602f      	str	r7, [r5, #0]
 800c2fa:	2001      	movs	r0, #1
 800c2fc:	b003      	add	sp, #12
 800c2fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c300:	20000050 	.word	0x20000050

0800c304 <GUI__ASinHQ>:
 800c304:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 800c308:	b570      	push	{r4, r5, r6, lr}
 800c30a:	d81f      	bhi.n	800c34c <GUI__ASinHQ+0x48>
 800c30c:	d021      	beq.n	800c352 <GUI__ASinHQ+0x4e>
 800c30e:	4d12      	ldr	r5, [pc, #72]	; (800c358 <GUI__ASinHQ+0x54>)
 800c310:	2459      	movs	r4, #89	; 0x59
 800c312:	2300      	movs	r3, #0
 800c314:	462e      	mov	r6, r5
 800c316:	2b58      	cmp	r3, #88	; 0x58
 800c318:	bf16      	itet	ne
 800c31a:	1ae2      	subne	r2, r4, r3
 800c31c:	2259      	moveq	r2, #89	; 0x59
 800c31e:	eb03 0252 	addne.w	r2, r3, r2, lsr #1
 800c322:	1c51      	adds	r1, r2, #1
 800c324:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 800c328:	4288      	cmp	r0, r1
 800c32a:	d901      	bls.n	800c330 <GUI__ASinHQ+0x2c>
 800c32c:	4613      	mov	r3, r2
 800c32e:	e7f2      	b.n	800c316 <GUI__ASinHQ+0x12>
 800c330:	f856 4022 	ldr.w	r4, [r6, r2, lsl #2]
 800c334:	42a0      	cmp	r0, r4
 800c336:	d201      	bcs.n	800c33c <GUI__ASinHQ+0x38>
 800c338:	4614      	mov	r4, r2
 800c33a:	e7ec      	b.n	800c316 <GUI__ASinHQ+0x12>
 800c33c:	1b03      	subs	r3, r0, r4
 800c33e:	1b08      	subs	r0, r1, r4
 800c340:	041b      	lsls	r3, r3, #16
 800c342:	fbb3 f0f0 	udiv	r0, r3, r0
 800c346:	eb00 4002 	add.w	r0, r0, r2, lsl #16
 800c34a:	bd70      	pop	{r4, r5, r6, pc}
 800c34c:	f04f 30ff 	mov.w	r0, #4294967295
 800c350:	bd70      	pop	{r4, r5, r6, pc}
 800c352:	f44f 00b4 	mov.w	r0, #5898240	; 0x5a0000
 800c356:	bd70      	pop	{r4, r5, r6, pc}
 800c358:	08018d3c 	.word	0x08018d3c

0800c35c <GUI__ATan2>:
 800c35c:	2800      	cmp	r0, #0
 800c35e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c362:	bfba      	itte	lt
 800c364:	4240      	neglt	r0, r0
 800c366:	f04f 0801 	movlt.w	r8, #1
 800c36a:	f04f 0800 	movge.w	r8, #0
 800c36e:	2900      	cmp	r1, #0
 800c370:	460c      	mov	r4, r1
 800c372:	4616      	mov	r6, r2
 800c374:	bfba      	itte	lt
 800c376:	424c      	neglt	r4, r1
 800c378:	2701      	movlt	r7, #1
 800c37a:	2700      	movge	r7, #0
 800c37c:	fb04 f304 	mul.w	r3, r4, r4
 800c380:	fb00 3000 	mla	r0, r0, r0, r3
 800c384:	f7ff ff38 	bl	800c1f8 <GUI__sqrt32>
 800c388:	4605      	mov	r5, r0
 800c38a:	b180      	cbz	r0, 800c3ae <GUI__ATan2+0x52>
 800c38c:	0420      	lsls	r0, r4, #16
 800c38e:	fbb0 f0f5 	udiv	r0, r0, r5
 800c392:	f7ff ffb7 	bl	800c304 <GUI__ASinHQ>
 800c396:	f1b8 0f00 	cmp.w	r8, #0
 800c39a:	d001      	beq.n	800c3a0 <GUI__ATan2+0x44>
 800c39c:	f5c0 0034 	rsb	r0, r0, #11796480	; 0xb40000
 800c3a0:	b10f      	cbz	r7, 800c3a6 <GUI__ATan2+0x4a>
 800c3a2:	f1c0 70b4 	rsb	r0, r0, #23592960	; 0x1680000
 800c3a6:	b116      	cbz	r6, 800c3ae <GUI__ATan2+0x52>
 800c3a8:	6035      	str	r5, [r6, #0]
 800c3aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c3ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800c3b4 <_GetWordWrap>:
 800c3b4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3b8:	2600      	movs	r6, #0
 800c3ba:	f10d 0b08 	add.w	fp, sp, #8
 800c3be:	4690      	mov	r8, r2
 800c3c0:	f8df 9084 	ldr.w	r9, [pc, #132]	; 800c448 <_GetWordWrap+0x94>
 800c3c4:	4637      	mov	r7, r6
 800c3c6:	4634      	mov	r4, r6
 800c3c8:	4635      	mov	r5, r6
 800c3ca:	46b2      	mov	sl, r6
 800c3cc:	f84b 0d04 	str.w	r0, [fp, #-4]!
 800c3d0:	9100      	str	r1, [sp, #0]
 800c3d2:	4658      	mov	r0, fp
 800c3d4:	f7ff fb7a 	bl	800bacc <GUI_UC__GetCharCodeInc>
 800c3d8:	2e00      	cmp	r6, #0
 800c3da:	bf08      	it	eq
 800c3dc:	4606      	moveq	r6, r0
 800c3de:	b108      	cbz	r0, 800c3e4 <_GetWordWrap+0x30>
 800c3e0:	280a      	cmp	r0, #10
 800c3e2:	d10b      	bne.n	800c3fc <_GetWordWrap+0x48>
 800c3e4:	462c      	mov	r4, r5
 800c3e6:	2c00      	cmp	r4, #0
 800c3e8:	bf08      	it	eq
 800c3ea:	462c      	moveq	r4, r5
 800c3ec:	f1b8 0f00 	cmp.w	r8, #0
 800c3f0:	d026      	beq.n	800c440 <_GetWordWrap+0x8c>
 800c3f2:	ebc7 070a 	rsb	r7, r7, sl
 800c3f6:	f8c8 7000 	str.w	r7, [r8]
 800c3fa:	e021      	b.n	800c440 <_GetWordWrap+0x8c>
 800c3fc:	2820      	cmp	r0, #32
 800c3fe:	d01d      	beq.n	800c43c <_GetWordWrap+0x88>
 800c400:	2e20      	cmp	r6, #32
 800c402:	d00e      	beq.n	800c422 <_GetWordWrap+0x6e>
 800c404:	f8d9 7000 	ldr.w	r7, [r9]
 800c408:	2200      	movs	r2, #0
 800c40a:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800c40e:	428a      	cmp	r2, r1
 800c410:	da09      	bge.n	800c426 <_GetWordWrap+0x72>
 800c412:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 800c416:	4586      	cmp	lr, r0
 800c418:	d101      	bne.n	800c41e <_GetWordWrap+0x6a>
 800c41a:	1c6c      	adds	r4, r5, #1
 800c41c:	e003      	b.n	800c426 <_GetWordWrap+0x72>
 800c41e:	3201      	adds	r2, #1
 800c420:	e7f5      	b.n	800c40e <_GetWordWrap+0x5a>
 800c422:	462c      	mov	r4, r5
 800c424:	2600      	movs	r6, #0
 800c426:	f006 fcff 	bl	8012e28 <GUI_GetCharDistX>
 800c42a:	9b00      	ldr	r3, [sp, #0]
 800c42c:	4482      	add	sl, r0
 800c42e:	4607      	mov	r7, r0
 800c430:	459a      	cmp	sl, r3
 800c432:	dd01      	ble.n	800c438 <_GetWordWrap+0x84>
 800c434:	2d00      	cmp	r5, #0
 800c436:	d1d6      	bne.n	800c3e6 <_GetWordWrap+0x32>
 800c438:	3501      	adds	r5, #1
 800c43a:	e7ca      	b.n	800c3d2 <_GetWordWrap+0x1e>
 800c43c:	462c      	mov	r4, r5
 800c43e:	e7f2      	b.n	800c426 <_GetWordWrap+0x72>
 800c440:	4620      	mov	r0, r4
 800c442:	b003      	add	sp, #12
 800c444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c448:	200004d8 	.word	0x200004d8

0800c44c <_GetCharWrap>:
 800c44c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c450:	2400      	movs	r4, #0
 800c452:	ad02      	add	r5, sp, #8
 800c454:	4688      	mov	r8, r1
 800c456:	4626      	mov	r6, r4
 800c458:	f845 0d04 	str.w	r0, [r5, #-4]!
 800c45c:	4628      	mov	r0, r5
 800c45e:	f7ff fb35 	bl	800bacc <GUI_UC__GetCharCodeInc>
 800c462:	4607      	mov	r7, r0
 800c464:	b148      	cbz	r0, 800c47a <_GetCharWrap+0x2e>
 800c466:	f006 fcdf 	bl	8012e28 <GUI_GetCharDistX>
 800c46a:	4406      	add	r6, r0
 800c46c:	b10c      	cbz	r4, 800c472 <_GetCharWrap+0x26>
 800c46e:	4546      	cmp	r6, r8
 800c470:	dc03      	bgt.n	800c47a <_GetCharWrap+0x2e>
 800c472:	2f0a      	cmp	r7, #10
 800c474:	d001      	beq.n	800c47a <_GetCharWrap+0x2e>
 800c476:	3401      	adds	r4, #1
 800c478:	e7f0      	b.n	800c45c <_GetCharWrap+0x10>
 800c47a:	4620      	mov	r0, r4
 800c47c:	b002      	add	sp, #8
 800c47e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800c484 <_WrapGetNumCharsDisp>:
 800c484:	2a01      	cmp	r2, #1
 800c486:	b410      	push	{r4}
 800c488:	d006      	beq.n	800c498 <_WrapGetNumCharsDisp+0x14>
 800c48a:	2a02      	cmp	r2, #2
 800c48c:	d10b      	bne.n	800c4a6 <_WrapGetNumCharsDisp+0x22>
 800c48e:	4b09      	ldr	r3, [pc, #36]	; (800c4b4 <_WrapGetNumCharsDisp+0x30>)
 800c490:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c494:	685b      	ldr	r3, [r3, #4]
 800c496:	4718      	bx	r3
 800c498:	4a06      	ldr	r2, [pc, #24]	; (800c4b4 <_WrapGetNumCharsDisp+0x30>)
 800c49a:	6814      	ldr	r4, [r2, #0]
 800c49c:	461a      	mov	r2, r3
 800c49e:	4623      	mov	r3, r4
 800c4a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c4a4:	4718      	bx	r3
 800c4a6:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800c4aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c4ae:	f006 bd1b 	b.w	8012ee8 <GUI__GetLineNumChars>
 800c4b2:	bf00      	nop
 800c4b4:	20000058 	.word	0x20000058

0800c4b8 <GUI__WrapGetNumCharsDisp>:
 800c4b8:	2300      	movs	r3, #0
 800c4ba:	f7ff bfe3 	b.w	800c484 <_WrapGetNumCharsDisp>

0800c4be <GUI__WrapGetNumCharsToNextLine>:
 800c4be:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c4c0:	b085      	sub	sp, #20
 800c4c2:	4617      	mov	r7, r2
 800c4c4:	460e      	mov	r6, r1
 800c4c6:	ab03      	add	r3, sp, #12
 800c4c8:	9001      	str	r0, [sp, #4]
 800c4ca:	f7ff ffdb 	bl	800c484 <_WrapGetNumCharsDisp>
 800c4ce:	4601      	mov	r1, r0
 800c4d0:	4604      	mov	r4, r0
 800c4d2:	9801      	ldr	r0, [sp, #4]
 800c4d4:	f7ff fb0e 	bl	800baf4 <GUI_UC__NumChars2NumBytes>
 800c4d8:	9b01      	ldr	r3, [sp, #4]
 800c4da:	ad04      	add	r5, sp, #16
 800c4dc:	4418      	add	r0, r3
 800c4de:	f845 0d0c 	str.w	r0, [r5, #-12]!
 800c4e2:	4628      	mov	r0, r5
 800c4e4:	f7ff faf2 	bl	800bacc <GUI_UC__GetCharCodeInc>
 800c4e8:	280a      	cmp	r0, #10
 800c4ea:	d101      	bne.n	800c4f0 <GUI__WrapGetNumCharsToNextLine+0x32>
 800c4ec:	3401      	adds	r4, #1
 800c4ee:	e011      	b.n	800c514 <GUI__WrapGetNumCharsToNextLine+0x56>
 800c4f0:	2f01      	cmp	r7, #1
 800c4f2:	d10f      	bne.n	800c514 <GUI__WrapGetNumCharsToNextLine+0x56>
 800c4f4:	2820      	cmp	r0, #32
 800c4f6:	d10d      	bne.n	800c514 <GUI__WrapGetNumCharsToNextLine+0x56>
 800c4f8:	f006 fc96 	bl	8012e28 <GUI_GetCharDistX>
 800c4fc:	4607      	mov	r7, r0
 800c4fe:	9b03      	ldr	r3, [sp, #12]
 800c500:	429e      	cmp	r6, r3
 800c502:	db07      	blt.n	800c514 <GUI__WrapGetNumCharsToNextLine+0x56>
 800c504:	443b      	add	r3, r7
 800c506:	4628      	mov	r0, r5
 800c508:	3401      	adds	r4, #1
 800c50a:	9303      	str	r3, [sp, #12]
 800c50c:	f7ff fade 	bl	800bacc <GUI_UC__GetCharCodeInc>
 800c510:	2820      	cmp	r0, #32
 800c512:	d0f4      	beq.n	800c4fe <GUI__WrapGetNumCharsToNextLine+0x40>
 800c514:	4620      	mov	r0, r4
 800c516:	b005      	add	sp, #20
 800c518:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c51a <GUI__WrapGetNumBytesToNextLine>:
 800c51a:	b510      	push	{r4, lr}
 800c51c:	4604      	mov	r4, r0
 800c51e:	f7ff ffce 	bl	800c4be <GUI__WrapGetNumCharsToNextLine>
 800c522:	4601      	mov	r1, r0
 800c524:	4620      	mov	r0, r4
 800c526:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c52a:	f7ff bae3 	b.w	800baf4 <GUI_UC__NumChars2NumBytes>
	...

0800c530 <_SetDrawMode>:
 800c530:	4b08      	ldr	r3, [pc, #32]	; (800c554 <_SetDrawMode+0x24>)
 800c532:	681b      	ldr	r3, [r3, #0]
 800c534:	b570      	push	{r4, r5, r6, lr}
 800c536:	7c1a      	ldrb	r2, [r3, #16]
 800c538:	ea82 0100 	eor.w	r1, r2, r0
 800c53c:	0749      	lsls	r1, r1, #29
 800c53e:	d505      	bpl.n	800c54c <_SetDrawMode+0x1c>
 800c540:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 800c542:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 800c544:	6825      	ldr	r5, [r4, #0]
 800c546:	680e      	ldr	r6, [r1, #0]
 800c548:	6026      	str	r6, [r4, #0]
 800c54a:	600d      	str	r5, [r1, #0]
 800c54c:	7418      	strb	r0, [r3, #16]
 800c54e:	4610      	mov	r0, r2
 800c550:	bd70      	pop	{r4, r5, r6, pc}
 800c552:	bf00      	nop
 800c554:	2000003c 	.word	0x2000003c

0800c558 <LCD_SetDrawMode>:
 800c558:	4b01      	ldr	r3, [pc, #4]	; (800c560 <LCD_SetDrawMode+0x8>)
 800c55a:	681b      	ldr	r3, [r3, #0]
 800c55c:	689b      	ldr	r3, [r3, #8]
 800c55e:	4718      	bx	r3
 800c560:	20000060 	.word	0x20000060

0800c564 <LCD_DrawPixel>:
 800c564:	4b15      	ldr	r3, [pc, #84]	; (800c5bc <LCD_DrawPixel+0x58>)
 800c566:	460a      	mov	r2, r1
 800c568:	681b      	ldr	r3, [r3, #0]
 800c56a:	f9b3 100a 	ldrsh.w	r1, [r3, #10]
 800c56e:	4291      	cmp	r1, r2
 800c570:	b430      	push	{r4, r5}
 800c572:	4604      	mov	r4, r0
 800c574:	dc20      	bgt.n	800c5b8 <LCD_DrawPixel+0x54>
 800c576:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800c57a:	428a      	cmp	r2, r1
 800c57c:	dc1c      	bgt.n	800c5b8 <LCD_DrawPixel+0x54>
 800c57e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 800c582:	4281      	cmp	r1, r0
 800c584:	dc18      	bgt.n	800c5b8 <LCD_DrawPixel+0x54>
 800c586:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
 800c58a:	4288      	cmp	r0, r1
 800c58c:	dc14      	bgt.n	800c5b8 <LCD_DrawPixel+0x54>
 800c58e:	7c19      	ldrb	r1, [r3, #16]
 800c590:	7c58      	ldrb	r0, [r3, #17]
 800c592:	f011 0f01 	tst.w	r1, #1
 800c596:	490a      	ldr	r1, [pc, #40]	; (800c5c0 <LCD_DrawPixel+0x5c>)
 800c598:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800c59c:	d004      	beq.n	800c5a8 <LCD_DrawPixel+0x44>
 800c59e:	68c3      	ldr	r3, [r0, #12]
 800c5a0:	4621      	mov	r1, r4
 800c5a2:	69db      	ldr	r3, [r3, #28]
 800c5a4:	bc30      	pop	{r4, r5}
 800c5a6:	4718      	bx	r3
 800c5a8:	68c1      	ldr	r1, [r0, #12]
 800c5aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c5ac:	698d      	ldr	r5, [r1, #24]
 800c5ae:	4621      	mov	r1, r4
 800c5b0:	681b      	ldr	r3, [r3, #0]
 800c5b2:	46ac      	mov	ip, r5
 800c5b4:	bc30      	pop	{r4, r5}
 800c5b6:	4760      	bx	ip
 800c5b8:	bc30      	pop	{r4, r5}
 800c5ba:	4770      	bx	lr
 800c5bc:	2000003c 	.word	0x2000003c
 800c5c0:	2002db08 	.word	0x2002db08

0800c5c4 <LCD_DrawHLine>:
 800c5c4:	4b11      	ldr	r3, [pc, #68]	; (800c60c <LCD_DrawHLine+0x48>)
 800c5c6:	b430      	push	{r4, r5}
 800c5c8:	681c      	ldr	r4, [r3, #0]
 800c5ca:	460d      	mov	r5, r1
 800c5cc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c5d0:	428b      	cmp	r3, r1
 800c5d2:	dc19      	bgt.n	800c608 <LCD_DrawHLine+0x44>
 800c5d4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800c5d8:	4299      	cmp	r1, r3
 800c5da:	dc15      	bgt.n	800c608 <LCD_DrawHLine+0x44>
 800c5dc:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c5e0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c5e4:	4281      	cmp	r1, r0
 800c5e6:	bfb8      	it	lt
 800c5e8:	4601      	movlt	r1, r0
 800c5ea:	4293      	cmp	r3, r2
 800c5ec:	bfa8      	it	ge
 800c5ee:	4613      	movge	r3, r2
 800c5f0:	4299      	cmp	r1, r3
 800c5f2:	dc09      	bgt.n	800c608 <LCD_DrawHLine+0x44>
 800c5f4:	7c60      	ldrb	r0, [r4, #17]
 800c5f6:	4a06      	ldr	r2, [pc, #24]	; (800c610 <LCD_DrawHLine+0x4c>)
 800c5f8:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 800c5fc:	68c2      	ldr	r2, [r0, #12]
 800c5fe:	6894      	ldr	r4, [r2, #8]
 800c600:	462a      	mov	r2, r5
 800c602:	46a4      	mov	ip, r4
 800c604:	bc30      	pop	{r4, r5}
 800c606:	4760      	bx	ip
 800c608:	bc30      	pop	{r4, r5}
 800c60a:	4770      	bx	lr
 800c60c:	2000003c 	.word	0x2000003c
 800c610:	2002db08 	.word	0x2002db08

0800c614 <LCD_DrawVLine>:
 800c614:	4b12      	ldr	r3, [pc, #72]	; (800c660 <LCD_DrawVLine+0x4c>)
 800c616:	b430      	push	{r4, r5}
 800c618:	681c      	ldr	r4, [r3, #0]
 800c61a:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c61e:	4283      	cmp	r3, r0
 800c620:	dc1b      	bgt.n	800c65a <LCD_DrawVLine+0x46>
 800c622:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c626:	4298      	cmp	r0, r3
 800c628:	dc17      	bgt.n	800c65a <LCD_DrawVLine+0x46>
 800c62a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c62e:	4299      	cmp	r1, r3
 800c630:	bfb8      	it	lt
 800c632:	4619      	movlt	r1, r3
 800c634:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 800c638:	4293      	cmp	r3, r2
 800c63a:	bfa8      	it	ge
 800c63c:	4613      	movge	r3, r2
 800c63e:	4299      	cmp	r1, r3
 800c640:	dc0b      	bgt.n	800c65a <LCD_DrawVLine+0x46>
 800c642:	4a08      	ldr	r2, [pc, #32]	; (800c664 <LCD_DrawVLine+0x50>)
 800c644:	7c64      	ldrb	r4, [r4, #17]
 800c646:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 800c64a:	68e2      	ldr	r2, [r4, #12]
 800c64c:	68d5      	ldr	r5, [r2, #12]
 800c64e:	460a      	mov	r2, r1
 800c650:	4601      	mov	r1, r0
 800c652:	4620      	mov	r0, r4
 800c654:	46ac      	mov	ip, r5
 800c656:	bc30      	pop	{r4, r5}
 800c658:	4760      	bx	ip
 800c65a:	bc30      	pop	{r4, r5}
 800c65c:	4770      	bx	lr
 800c65e:	bf00      	nop
 800c660:	2000003c 	.word	0x2000003c
 800c664:	2002db08 	.word	0x2002db08

0800c668 <LCD_FillRect>:
 800c668:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c66a:	4c13      	ldr	r4, [pc, #76]	; (800c6b8 <LCD_FillRect+0x50>)
 800c66c:	6824      	ldr	r4, [r4, #0]
 800c66e:	f9b4 5008 	ldrsh.w	r5, [r4, #8]
 800c672:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800c676:	4285      	cmp	r5, r0
 800c678:	bfb8      	it	lt
 800c67a:	4605      	movlt	r5, r0
 800c67c:	4296      	cmp	r6, r2
 800c67e:	bfa8      	it	ge
 800c680:	4616      	movge	r6, r2
 800c682:	42ae      	cmp	r6, r5
 800c684:	db15      	blt.n	800c6b2 <LCD_FillRect+0x4a>
 800c686:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800c68a:	428a      	cmp	r2, r1
 800c68c:	bfb8      	it	lt
 800c68e:	460a      	movlt	r2, r1
 800c690:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800c694:	428b      	cmp	r3, r1
 800c696:	bfa8      	it	ge
 800c698:	460b      	movge	r3, r1
 800c69a:	429a      	cmp	r2, r3
 800c69c:	dc09      	bgt.n	800c6b2 <LCD_FillRect+0x4a>
 800c69e:	7c60      	ldrb	r0, [r4, #17]
 800c6a0:	4906      	ldr	r1, [pc, #24]	; (800c6bc <LCD_FillRect+0x54>)
 800c6a2:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800c6a6:	68c1      	ldr	r1, [r0, #12]
 800c6a8:	9300      	str	r3, [sp, #0]
 800c6aa:	4633      	mov	r3, r6
 800c6ac:	690c      	ldr	r4, [r1, #16]
 800c6ae:	4629      	mov	r1, r5
 800c6b0:	47a0      	blx	r4
 800c6b2:	b002      	add	sp, #8
 800c6b4:	bd70      	pop	{r4, r5, r6, pc}
 800c6b6:	bf00      	nop
 800c6b8:	2000003c 	.word	0x2000003c
 800c6bc:	2002db08 	.word	0x2002db08

0800c6c0 <LCD__DrawBitmap_1bpp>:
 800c6c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6c4:	b08f      	sub	sp, #60	; 0x3c
 800c6c6:	f8df e1cc 	ldr.w	lr, [pc, #460]	; 800c894 <LCD__DrawBitmap_1bpp+0x1d4>
 800c6ca:	460c      	mov	r4, r1
 800c6cc:	4617      	mov	r7, r2
 800c6ce:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800c6d0:	f8de e000 	ldr.w	lr, [lr]
 800c6d4:	9502      	str	r5, [sp, #8]
 800c6d6:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800c6d8:	9007      	str	r0, [sp, #28]
 800c6da:	9508      	str	r5, [sp, #32]
 800c6dc:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800c6de:	9301      	str	r3, [sp, #4]
 800c6e0:	9503      	str	r5, [sp, #12]
 800c6e2:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 800c6e6:	9e1c      	ldr	r6, [sp, #112]	; 0x70
 800c6e8:	f8dd b074 	ldr.w	fp, [sp, #116]	; 0x74
 800c6ec:	9d1e      	ldr	r5, [sp, #120]	; 0x78
 800c6ee:	f1be 0f00 	cmp.w	lr, #0
 800c6f2:	d002      	beq.n	800c6fa <LCD__DrawBitmap_1bpp+0x3a>
 800c6f4:	f8de 4000 	ldr.w	r4, [lr]
 800c6f8:	e054      	b.n	800c7a4 <LCD__DrawBitmap_1bpp+0xe4>
 800c6fa:	9b02      	ldr	r3, [sp, #8]
 800c6fc:	9a08      	ldr	r2, [sp, #32]
 800c6fe:	4313      	orrs	r3, r2
 800c700:	2b01      	cmp	r3, #1
 800c702:	d154      	bne.n	800c7ae <LCD__DrawBitmap_1bpp+0xee>
 800c704:	4b61      	ldr	r3, [pc, #388]	; (800c88c <LCD__DrawBitmap_1bpp+0x1cc>)
 800c706:	6818      	ldr	r0, [r3, #0]
 800c708:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c70c:	1a53      	subs	r3, r2, r1
 800c70e:	2b00      	cmp	r3, #0
 800c710:	dd0a      	ble.n	800c728 <LCD__DrawBitmap_1bpp+0x68>
 800c712:	9901      	ldr	r1, [sp, #4]
 800c714:	ebc3 0e01 	rsb	lr, r3, r1
 800c718:	f1be 0f00 	cmp.w	lr, #0
 800c71c:	f340 80b2 	ble.w	800c884 <LCD__DrawBitmap_1bpp+0x1c4>
 800c720:	9903      	ldr	r1, [sp, #12]
 800c722:	fb01 6603 	mla	r6, r1, r3, r6
 800c726:	e002      	b.n	800c72e <LCD__DrawBitmap_1bpp+0x6e>
 800c728:	f8dd e004 	ldr.w	lr, [sp, #4]
 800c72c:	460a      	mov	r2, r1
 800c72e:	9b01      	ldr	r3, [sp, #4]
 800c730:	441c      	add	r4, r3
 800c732:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 800c736:	3c01      	subs	r4, #1
 800c738:	1ae4      	subs	r4, r4, r3
 800c73a:	2c00      	cmp	r4, #0
 800c73c:	dd05      	ble.n	800c74a <LCD__DrawBitmap_1bpp+0x8a>
 800c73e:	ebc4 0e0e 	rsb	lr, r4, lr
 800c742:	f1be 0f00 	cmp.w	lr, #0
 800c746:	f340 809d 	ble.w	800c884 <LCD__DrawBitmap_1bpp+0x1c4>
 800c74a:	9b07      	ldr	r3, [sp, #28]
 800c74c:	f9b0 100c 	ldrsh.w	r1, [r0, #12]
 800c750:	443b      	add	r3, r7
 800c752:	3b01      	subs	r3, #1
 800c754:	1a5b      	subs	r3, r3, r1
 800c756:	2b00      	cmp	r3, #0
 800c758:	bfc8      	it	gt
 800c75a:	1aff      	subgt	r7, r7, r3
 800c75c:	9b07      	ldr	r3, [sp, #28]
 800c75e:	1b59      	subs	r1, r3, r5
 800c760:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800c764:	4299      	cmp	r1, r3
 800c766:	da09      	bge.n	800c77c <LCD__DrawBitmap_1bpp+0xbc>
 800c768:	1a5b      	subs	r3, r3, r1
 800c76a:	441d      	add	r5, r3
 800c76c:	1aff      	subs	r7, r7, r3
 800c76e:	f023 0307 	bic.w	r3, r3, #7
 800c772:	eb06 06e5 	add.w	r6, r6, r5, asr #3
 800c776:	f005 0507 	and.w	r5, r5, #7
 800c77a:	4419      	add	r1, r3
 800c77c:	2f00      	cmp	r7, #0
 800c77e:	f340 8081 	ble.w	800c884 <LCD__DrawBitmap_1bpp+0x1c4>
 800c782:	7c40      	ldrb	r0, [r0, #17]
 800c784:	4b42      	ldr	r3, [pc, #264]	; (800c890 <LCD__DrawBitmap_1bpp+0x1d0>)
 800c786:	9c03      	ldr	r4, [sp, #12]
 800c788:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800c78c:	68c3      	ldr	r3, [r0, #12]
 800c78e:	f8cd b074 	str.w	fp, [sp, #116]	; 0x74
 800c792:	951c      	str	r5, [sp, #112]	; 0x70
 800c794:	961b      	str	r6, [sp, #108]	; 0x6c
 800c796:	941a      	str	r4, [sp, #104]	; 0x68
 800c798:	f8cd a064 	str.w	sl, [sp, #100]	; 0x64
 800c79c:	f8cd e060 	str.w	lr, [sp, #96]	; 0x60
 800c7a0:	685c      	ldr	r4, [r3, #4]
 800c7a2:	463b      	mov	r3, r7
 800c7a4:	46a4      	mov	ip, r4
 800c7a6:	b00f      	add	sp, #60	; 0x3c
 800c7a8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7ac:	4760      	bx	ip
 800c7ae:	f1ca 0308 	rsb	r3, sl, #8
 800c7b2:	4675      	mov	r5, lr
 800c7b4:	f8df 90d4 	ldr.w	r9, [pc, #212]	; 800c88c <LCD__DrawBitmap_1bpp+0x1cc>
 800c7b8:	930b      	str	r3, [sp, #44]	; 0x2c
 800c7ba:	9b02      	ldr	r3, [sp, #8]
 800c7bc:	f8cd e014 	str.w	lr, [sp, #20]
 800c7c0:	3b01      	subs	r3, #1
 800c7c2:	930d      	str	r3, [sp, #52]	; 0x34
 800c7c4:	9b05      	ldr	r3, [sp, #20]
 800c7c6:	9a01      	ldr	r2, [sp, #4]
 800c7c8:	4293      	cmp	r3, r2
 800c7ca:	da5b      	bge.n	800c884 <LCD__DrawBitmap_1bpp+0x1c4>
 800c7cc:	9b08      	ldr	r3, [sp, #32]
 800c7ce:	18e3      	adds	r3, r4, r3
 800c7d0:	9309      	str	r3, [sp, #36]	; 0x24
 800c7d2:	3b01      	subs	r3, #1
 800c7d4:	930a      	str	r3, [sp, #40]	; 0x28
 800c7d6:	f8d9 3000 	ldr.w	r3, [r9]
 800c7da:	990a      	ldr	r1, [sp, #40]	; 0x28
 800c7dc:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800c7e0:	428a      	cmp	r2, r1
 800c7e2:	dc48      	bgt.n	800c876 <LCD__DrawBitmap_1bpp+0x1b6>
 800c7e4:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 800c7e8:	429c      	cmp	r4, r3
 800c7ea:	dc44      	bgt.n	800c876 <LCD__DrawBitmap_1bpp+0x1b6>
 800c7ec:	9b07      	ldr	r3, [sp, #28]
 800c7ee:	f04f 0800 	mov.w	r8, #0
 800c7f2:	9606      	str	r6, [sp, #24]
 800c7f4:	9300      	str	r3, [sp, #0]
 800c7f6:	f8cd 8010 	str.w	r8, [sp, #16]
 800c7fa:	9b04      	ldr	r3, [sp, #16]
 800c7fc:	42bb      	cmp	r3, r7
 800c7fe:	da3a      	bge.n	800c876 <LCD__DrawBitmap_1bpp+0x1b6>
 800c800:	f1b8 0f00 	cmp.w	r8, #0
 800c804:	d105      	bne.n	800c812 <LCD__DrawBitmap_1bpp+0x152>
 800c806:	9b06      	ldr	r3, [sp, #24]
 800c808:	f04f 0808 	mov.w	r8, #8
 800c80c:	781d      	ldrb	r5, [r3, #0]
 800c80e:	3301      	adds	r3, #1
 800c810:	9306      	str	r3, [sp, #24]
 800c812:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c814:	ebca 0808 	rsb	r8, sl, r8
 800c818:	fa45 f303 	asr.w	r3, r5, r3
 800c81c:	fa05 f50a 	lsl.w	r5, r5, sl
 800c820:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 800c824:	b2ed      	uxtb	r5, r5
 800c826:	d104      	bne.n	800c832 <LCD__DrawBitmap_1bpp+0x172>
 800c828:	f8d9 2000 	ldr.w	r2, [r9]
 800c82c:	7c12      	ldrb	r2, [r2, #16]
 800c82e:	0792      	lsls	r2, r2, #30
 800c830:	d419      	bmi.n	800c866 <LCD__DrawBitmap_1bpp+0x1a6>
 800c832:	f8d9 2000 	ldr.w	r2, [r9]
 800c836:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800c838:	6810      	ldr	r0, [r2, #0]
 800c83a:	900c      	str	r0, [sp, #48]	; 0x30
 800c83c:	f1bb 0f00 	cmp.w	fp, #0
 800c840:	d002      	beq.n	800c848 <LCD__DrawBitmap_1bpp+0x188>
 800c842:	f85b 3021 	ldr.w	r3, [fp, r1, lsl #2]
 800c846:	e000      	b.n	800c84a <LCD__DrawBitmap_1bpp+0x18a>
 800c848:	b2db      	uxtb	r3, r3
 800c84a:	6013      	str	r3, [r2, #0]
 800c84c:	9900      	ldr	r1, [sp, #0]
 800c84e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c850:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c852:	440a      	add	r2, r1
 800c854:	9800      	ldr	r0, [sp, #0]
 800c856:	4621      	mov	r1, r4
 800c858:	f7ff ff06 	bl	800c668 <LCD_FillRect>
 800c85c:	f8d9 3000 	ldr.w	r3, [r9]
 800c860:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800c862:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c864:	601a      	str	r2, [r3, #0]
 800c866:	9b04      	ldr	r3, [sp, #16]
 800c868:	9a02      	ldr	r2, [sp, #8]
 800c86a:	3301      	adds	r3, #1
 800c86c:	9304      	str	r3, [sp, #16]
 800c86e:	9b00      	ldr	r3, [sp, #0]
 800c870:	4413      	add	r3, r2
 800c872:	9300      	str	r3, [sp, #0]
 800c874:	e7c1      	b.n	800c7fa <LCD__DrawBitmap_1bpp+0x13a>
 800c876:	9b05      	ldr	r3, [sp, #20]
 800c878:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800c87a:	3301      	adds	r3, #1
 800c87c:	9305      	str	r3, [sp, #20]
 800c87e:	9b03      	ldr	r3, [sp, #12]
 800c880:	441e      	add	r6, r3
 800c882:	e79f      	b.n	800c7c4 <LCD__DrawBitmap_1bpp+0x104>
 800c884:	b00f      	add	sp, #60	; 0x3c
 800c886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c88a:	bf00      	nop
 800c88c:	2000003c 	.word	0x2000003c
 800c890:	2002db08 	.word	0x2002db08
 800c894:	2002dac4 	.word	0x2002dac4

0800c898 <LCD_DrawBitmap>:
 800c898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c89c:	b08f      	sub	sp, #60	; 0x3c
 800c89e:	f8df e218 	ldr.w	lr, [pc, #536]	; 800cab8 <LCD_DrawBitmap+0x220>
 800c8a2:	4605      	mov	r5, r0
 800c8a4:	4690      	mov	r8, r2
 800c8a6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800c8a8:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 800c8aa:	9402      	str	r4, [sp, #8]
 800c8ac:	9c19      	ldr	r4, [sp, #100]	; 0x64
 800c8ae:	f8de e000 	ldr.w	lr, [lr]
 800c8b2:	9408      	str	r4, [sp, #32]
 800c8b4:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
 800c8b6:	9100      	str	r1, [sp, #0]
 800c8b8:	9403      	str	r4, [sp, #12]
 800c8ba:	9301      	str	r3, [sp, #4]
 800c8bc:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 800c8be:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800c8c0:	9604      	str	r6, [sp, #16]
 800c8c2:	f1be 0f00 	cmp.w	lr, #0
 800c8c6:	d002      	beq.n	800c8ce <LCD_DrawBitmap+0x36>
 800c8c8:	f8de 4000 	ldr.w	r4, [lr]
 800c8cc:	e07a      	b.n	800c9c4 <LCD_DrawBitmap+0x12c>
 800c8ce:	9b02      	ldr	r3, [sp, #8]
 800c8d0:	9a08      	ldr	r2, [sp, #32]
 800c8d2:	4313      	orrs	r3, r2
 800c8d4:	2b01      	cmp	r3, #1
 800c8d6:	d17a      	bne.n	800c9ce <LCD_DrawBitmap+0x136>
 800c8d8:	4b75      	ldr	r3, [pc, #468]	; (800cab0 <LCD_DrawBitmap+0x218>)
 800c8da:	9901      	ldr	r1, [sp, #4]
 800c8dc:	6818      	ldr	r0, [r3, #0]
 800c8de:	9b00      	ldr	r3, [sp, #0]
 800c8e0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c8e4:	1ad3      	subs	r3, r2, r3
 800c8e6:	2b00      	cmp	r3, #0
 800c8e8:	dd07      	ble.n	800c8fa <LCD_DrawBitmap+0x62>
 800c8ea:	1ac9      	subs	r1, r1, r3
 800c8ec:	2900      	cmp	r1, #0
 800c8ee:	f340 80db 	ble.w	800caa8 <LCD_DrawBitmap+0x210>
 800c8f2:	9e03      	ldr	r6, [sp, #12]
 800c8f4:	fb06 4403 	mla	r4, r6, r3, r4
 800c8f8:	e000      	b.n	800c8fc <LCD_DrawBitmap+0x64>
 800c8fa:	9a00      	ldr	r2, [sp, #0]
 800c8fc:	e89d 0048 	ldmia.w	sp, {r3, r6}
 800c900:	441e      	add	r6, r3
 800c902:	f9b0 300e 	ldrsh.w	r3, [r0, #14]
 800c906:	3e01      	subs	r6, #1
 800c908:	1af6      	subs	r6, r6, r3
 800c90a:	2e00      	cmp	r6, #0
 800c90c:	dd03      	ble.n	800c916 <LCD_DrawBitmap+0x7e>
 800c90e:	1b89      	subs	r1, r1, r6
 800c910:	2900      	cmp	r1, #0
 800c912:	f340 80c9 	ble.w	800caa8 <LCD_DrawBitmap+0x210>
 800c916:	eb05 0308 	add.w	r3, r5, r8
 800c91a:	f9b0 600c 	ldrsh.w	r6, [r0, #12]
 800c91e:	3b01      	subs	r3, #1
 800c920:	1b9b      	subs	r3, r3, r6
 800c922:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800c926:	2b00      	cmp	r3, #0
 800c928:	bfc8      	it	gt
 800c92a:	ebc3 0808 	rsbgt	r8, r3, r8
 800c92e:	42b5      	cmp	r5, r6
 800c930:	da31      	bge.n	800c996 <LCD_DrawBitmap+0xfe>
 800c932:	1b73      	subs	r3, r6, r5
 800c934:	2f08      	cmp	r7, #8
 800c936:	ebc3 0808 	rsb	r8, r3, r8
 800c93a:	d027      	beq.n	800c98c <LCD_DrawBitmap+0xf4>
 800c93c:	dc0d      	bgt.n	800c95a <LCD_DrawBitmap+0xc2>
 800c93e:	2f02      	cmp	r7, #2
 800c940:	d014      	beq.n	800c96c <LCD_DrawBitmap+0xd4>
 800c942:	2f04      	cmp	r7, #4
 800c944:	d01a      	beq.n	800c97c <LCD_DrawBitmap+0xe4>
 800c946:	2f01      	cmp	r7, #1
 800c948:	d126      	bne.n	800c998 <LCD_DrawBitmap+0x100>
 800c94a:	f023 0607 	bic.w	r6, r3, #7
 800c94e:	eb04 04e3 	add.w	r4, r4, r3, asr #3
 800c952:	f003 0307 	and.w	r3, r3, #7
 800c956:	4435      	add	r5, r6
 800c958:	e01e      	b.n	800c998 <LCD_DrawBitmap+0x100>
 800c95a:	2f18      	cmp	r7, #24
 800c95c:	d018      	beq.n	800c990 <LCD_DrawBitmap+0xf8>
 800c95e:	2f20      	cmp	r7, #32
 800c960:	d016      	beq.n	800c990 <LCD_DrawBitmap+0xf8>
 800c962:	2f10      	cmp	r7, #16
 800c964:	d118      	bne.n	800c998 <LCD_DrawBitmap+0x100>
 800c966:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800c96a:	e013      	b.n	800c994 <LCD_DrawBitmap+0xfc>
 800c96c:	f023 0603 	bic.w	r6, r3, #3
 800c970:	eb04 04a3 	add.w	r4, r4, r3, asr #2
 800c974:	f003 0303 	and.w	r3, r3, #3
 800c978:	4435      	add	r5, r6
 800c97a:	e00d      	b.n	800c998 <LCD_DrawBitmap+0x100>
 800c97c:	f023 0601 	bic.w	r6, r3, #1
 800c980:	eb04 0463 	add.w	r4, r4, r3, asr #1
 800c984:	f003 0301 	and.w	r3, r3, #1
 800c988:	4435      	add	r5, r6
 800c98a:	e005      	b.n	800c998 <LCD_DrawBitmap+0x100>
 800c98c:	441c      	add	r4, r3
 800c98e:	e001      	b.n	800c994 <LCD_DrawBitmap+0xfc>
 800c990:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 800c994:	4635      	mov	r5, r6
 800c996:	2300      	movs	r3, #0
 800c998:	f1b8 0f00 	cmp.w	r8, #0
 800c99c:	f340 8084 	ble.w	800caa8 <LCD_DrawBitmap+0x210>
 800c9a0:	7c46      	ldrb	r6, [r0, #17]
 800c9a2:	4844      	ldr	r0, [pc, #272]	; (800cab4 <LCD_DrawBitmap+0x21c>)
 800c9a4:	f850 0026 	ldr.w	r0, [r0, r6, lsl #2]
 800c9a8:	9e04      	ldr	r6, [sp, #16]
 800c9aa:	f8d0 e00c 	ldr.w	lr, [r0, #12]
 800c9ae:	931c      	str	r3, [sp, #112]	; 0x70
 800c9b0:	9b03      	ldr	r3, [sp, #12]
 800c9b2:	9118      	str	r1, [sp, #96]	; 0x60
 800c9b4:	4629      	mov	r1, r5
 800c9b6:	931a      	str	r3, [sp, #104]	; 0x68
 800c9b8:	4643      	mov	r3, r8
 800c9ba:	961d      	str	r6, [sp, #116]	; 0x74
 800c9bc:	941b      	str	r4, [sp, #108]	; 0x6c
 800c9be:	9719      	str	r7, [sp, #100]	; 0x64
 800c9c0:	f8de 4004 	ldr.w	r4, [lr, #4]
 800c9c4:	46a4      	mov	ip, r4
 800c9c6:	b00f      	add	sp, #60	; 0x3c
 800c9c8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c9cc:	4760      	bx	ip
 800c9ce:	f1c7 0308 	rsb	r3, r7, #8
 800c9d2:	46f3      	mov	fp, lr
 800c9d4:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 800cab0 <LCD_DrawBitmap+0x218>
 800c9d8:	930b      	str	r3, [sp, #44]	; 0x2c
 800c9da:	9b02      	ldr	r3, [sp, #8]
 800c9dc:	f8cd e018 	str.w	lr, [sp, #24]
 800c9e0:	3b01      	subs	r3, #1
 800c9e2:	930d      	str	r3, [sp, #52]	; 0x34
 800c9e4:	9b06      	ldr	r3, [sp, #24]
 800c9e6:	9a01      	ldr	r2, [sp, #4]
 800c9e8:	4293      	cmp	r3, r2
 800c9ea:	da5d      	bge.n	800caa8 <LCD_DrawBitmap+0x210>
 800c9ec:	9a00      	ldr	r2, [sp, #0]
 800c9ee:	9b08      	ldr	r3, [sp, #32]
 800c9f0:	4413      	add	r3, r2
 800c9f2:	9309      	str	r3, [sp, #36]	; 0x24
 800c9f4:	3b01      	subs	r3, #1
 800c9f6:	930a      	str	r3, [sp, #40]	; 0x28
 800c9f8:	f8da 3000 	ldr.w	r3, [sl]
 800c9fc:	990a      	ldr	r1, [sp, #40]	; 0x28
 800c9fe:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800ca02:	428a      	cmp	r2, r1
 800ca04:	dc48      	bgt.n	800ca98 <LCD_DrawBitmap+0x200>
 800ca06:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
 800ca0a:	9a00      	ldr	r2, [sp, #0]
 800ca0c:	429a      	cmp	r2, r3
 800ca0e:	dc43      	bgt.n	800ca98 <LCD_DrawBitmap+0x200>
 800ca10:	f04f 0900 	mov.w	r9, #0
 800ca14:	462e      	mov	r6, r5
 800ca16:	9407      	str	r4, [sp, #28]
 800ca18:	f8cd 9014 	str.w	r9, [sp, #20]
 800ca1c:	9b05      	ldr	r3, [sp, #20]
 800ca1e:	4543      	cmp	r3, r8
 800ca20:	da3a      	bge.n	800ca98 <LCD_DrawBitmap+0x200>
 800ca22:	f1b9 0f00 	cmp.w	r9, #0
 800ca26:	d106      	bne.n	800ca36 <LCD_DrawBitmap+0x19e>
 800ca28:	9b07      	ldr	r3, [sp, #28]
 800ca2a:	f04f 0908 	mov.w	r9, #8
 800ca2e:	f893 b000 	ldrb.w	fp, [r3]
 800ca32:	3301      	adds	r3, #1
 800ca34:	9307      	str	r3, [sp, #28]
 800ca36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ca38:	fa0b f207 	lsl.w	r2, fp, r7
 800ca3c:	ebc7 0909 	rsb	r9, r7, r9
 800ca40:	fa4b f303 	asr.w	r3, fp, r3
 800ca44:	fa5f fb82 	uxtb.w	fp, r2
 800ca48:	f013 01ff 	ands.w	r1, r3, #255	; 0xff
 800ca4c:	d104      	bne.n	800ca58 <LCD_DrawBitmap+0x1c0>
 800ca4e:	f8da 2000 	ldr.w	r2, [sl]
 800ca52:	7c12      	ldrb	r2, [r2, #16]
 800ca54:	0792      	lsls	r2, r2, #30
 800ca56:	d417      	bmi.n	800ca88 <LCD_DrawBitmap+0x1f0>
 800ca58:	f8da 2000 	ldr.w	r2, [sl]
 800ca5c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800ca5e:	6810      	ldr	r0, [r2, #0]
 800ca60:	900c      	str	r0, [sp, #48]	; 0x30
 800ca62:	9804      	ldr	r0, [sp, #16]
 800ca64:	b110      	cbz	r0, 800ca6c <LCD_DrawBitmap+0x1d4>
 800ca66:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 800ca6a:	e000      	b.n	800ca6e <LCD_DrawBitmap+0x1d6>
 800ca6c:	b2db      	uxtb	r3, r3
 800ca6e:	6013      	str	r3, [r2, #0]
 800ca70:	4630      	mov	r0, r6
 800ca72:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800ca74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ca76:	4432      	add	r2, r6
 800ca78:	9900      	ldr	r1, [sp, #0]
 800ca7a:	f7ff fdf5 	bl	800c668 <LCD_FillRect>
 800ca7e:	f8da 3000 	ldr.w	r3, [sl]
 800ca82:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800ca84:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ca86:	601a      	str	r2, [r3, #0]
 800ca88:	9b05      	ldr	r3, [sp, #20]
 800ca8a:	9a02      	ldr	r2, [sp, #8]
 800ca8c:	3301      	adds	r3, #1
 800ca8e:	9305      	str	r3, [sp, #20]
 800ca90:	4633      	mov	r3, r6
 800ca92:	4413      	add	r3, r2
 800ca94:	461e      	mov	r6, r3
 800ca96:	e7c1      	b.n	800ca1c <LCD_DrawBitmap+0x184>
 800ca98:	9b06      	ldr	r3, [sp, #24]
 800ca9a:	3301      	adds	r3, #1
 800ca9c:	9306      	str	r3, [sp, #24]
 800ca9e:	9b03      	ldr	r3, [sp, #12]
 800caa0:	441c      	add	r4, r3
 800caa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800caa4:	9300      	str	r3, [sp, #0]
 800caa6:	e79d      	b.n	800c9e4 <LCD_DrawBitmap+0x14c>
 800caa8:	b00f      	add	sp, #60	; 0x3c
 800caaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800caae:	bf00      	nop
 800cab0:	2000003c 	.word	0x2000003c
 800cab4:	2002db08 	.word	0x2002db08
 800cab8:	2002dac4 	.word	0x2002dac4

0800cabc <LCD_SetClipRectMax>:
 800cabc:	4b04      	ldr	r3, [pc, #16]	; (800cad0 <LCD_SetClipRectMax+0x14>)
 800cabe:	6819      	ldr	r1, [r3, #0]
 800cac0:	4b04      	ldr	r3, [pc, #16]	; (800cad4 <LCD_SetClipRectMax+0x18>)
 800cac2:	7c4a      	ldrb	r2, [r1, #17]
 800cac4:	3108      	adds	r1, #8
 800cac6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800caca:	68c3      	ldr	r3, [r0, #12]
 800cacc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cace:	4718      	bx	r3
 800cad0:	2000003c 	.word	0x2000003c
 800cad4:	2002db08 	.word	0x2002db08

0800cad8 <emWin_LCD_Init>:
 800cad8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cada:	f7ff ffef 	bl	800cabc <LCD_SetClipRectMax>
 800cade:	f000 f935 	bl	800cd4c <LCD_InitColors>
 800cae2:	4604      	mov	r4, r0
 800cae4:	2800      	cmp	r0, #0
 800cae6:	d144      	bne.n	800cb72 <emWin_LCD_Init+0x9a>
 800cae8:	4605      	mov	r5, r0
 800caea:	4628      	mov	r0, r5
 800caec:	f7fe fd6a 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800caf0:	9001      	str	r0, [sp, #4]
 800caf2:	b150      	cbz	r0, 800cb0a <emWin_LCD_Init+0x32>
 800caf4:	68c3      	ldr	r3, [r0, #12]
 800caf6:	210c      	movs	r1, #12
 800caf8:	a801      	add	r0, sp, #4
 800cafa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cafc:	4798      	blx	r3
 800cafe:	4603      	mov	r3, r0
 800cb00:	2800      	cmp	r0, #0
 800cb02:	d034      	beq.n	800cb6e <emWin_LCD_Init+0x96>
 800cb04:	9801      	ldr	r0, [sp, #4]
 800cb06:	4798      	blx	r3
 800cb08:	4304      	orrs	r4, r0
 800cb0a:	3501      	adds	r5, #1
 800cb0c:	2d02      	cmp	r5, #2
 800cb0e:	d1ec      	bne.n	800caea <emWin_LCD_Init+0x12>
 800cb10:	bb7c      	cbnz	r4, 800cb72 <emWin_LCD_Init+0x9a>
 800cb12:	f000 f973 	bl	800cdfc <LCD_InitLUT>
 800cb16:	4b18      	ldr	r3, [pc, #96]	; (800cb78 <emWin_LCD_Init+0xa0>)
 800cb18:	681a      	ldr	r2, [r3, #0]
 800cb1a:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 800cb1e:	429a      	cmp	r2, r3
 800cb20:	d101      	bne.n	800cb26 <emWin_LCD_Init+0x4e>
 800cb22:	2000      	movs	r0, #0
 800cb24:	e026      	b.n	800cb74 <emWin_LCD_Init+0x9c>
 800cb26:	2401      	movs	r4, #1
 800cb28:	4620      	mov	r0, r4
 800cb2a:	f7fe fd4b 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800cb2e:	9001      	str	r0, [sp, #4]
 800cb30:	b1c8      	cbz	r0, 800cb66 <emWin_LCD_Init+0x8e>
 800cb32:	4620      	mov	r0, r4
 800cb34:	f7fe ff8a 	bl	800ba4c <GUI_SelectLayer>
 800cb38:	2004      	movs	r0, #4
 800cb3a:	f7ff fd0d 	bl	800c558 <LCD_SetDrawMode>
 800cb3e:	f643 73ff 	movw	r3, #16383	; 0x3fff
 800cb42:	2100      	movs	r1, #0
 800cb44:	461a      	mov	r2, r3
 800cb46:	4608      	mov	r0, r1
 800cb48:	f7ff fd8e 	bl	800c668 <LCD_FillRect>
 800cb4c:	2000      	movs	r0, #0
 800cb4e:	f7ff fd03 	bl	800c558 <LCD_SetDrawMode>
 800cb52:	9b01      	ldr	r3, [sp, #4]
 800cb54:	210e      	movs	r1, #14
 800cb56:	a801      	add	r0, sp, #4
 800cb58:	68db      	ldr	r3, [r3, #12]
 800cb5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb5c:	4798      	blx	r3
 800cb5e:	4603      	mov	r3, r0
 800cb60:	b108      	cbz	r0, 800cb66 <emWin_LCD_Init+0x8e>
 800cb62:	9801      	ldr	r0, [sp, #4]
 800cb64:	4798      	blx	r3
 800cb66:	f114 34ff 	adds.w	r4, r4, #4294967295
 800cb6a:	d2dd      	bcs.n	800cb28 <emWin_LCD_Init+0x50>
 800cb6c:	e7d9      	b.n	800cb22 <emWin_LCD_Init+0x4a>
 800cb6e:	2001      	movs	r0, #1
 800cb70:	e000      	b.n	800cb74 <emWin_LCD_Init+0x9c>
 800cb72:	4620      	mov	r0, r4
 800cb74:	b003      	add	sp, #12
 800cb76:	bd30      	pop	{r4, r5, pc}
 800cb78:	20000038 	.word	0x20000038

0800cb7c <LCD_Color2Index>:
 800cb7c:	4b04      	ldr	r3, [pc, #16]	; (800cb90 <LCD_Color2Index+0x14>)
 800cb7e:	681b      	ldr	r3, [r3, #0]
 800cb80:	7c5a      	ldrb	r2, [r3, #17]
 800cb82:	4b04      	ldr	r3, [pc, #16]	; (800cb94 <LCD_Color2Index+0x18>)
 800cb84:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800cb88:	691b      	ldr	r3, [r3, #16]
 800cb8a:	681b      	ldr	r3, [r3, #0]
 800cb8c:	4718      	bx	r3
 800cb8e:	bf00      	nop
 800cb90:	2000003c 	.word	0x2000003c
 800cb94:	2002db08 	.word	0x2002db08

0800cb98 <LCD_Index2Color>:
 800cb98:	4b04      	ldr	r3, [pc, #16]	; (800cbac <LCD_Index2Color+0x14>)
 800cb9a:	681b      	ldr	r3, [r3, #0]
 800cb9c:	7c5a      	ldrb	r2, [r3, #17]
 800cb9e:	4b04      	ldr	r3, [pc, #16]	; (800cbb0 <LCD_Index2Color+0x18>)
 800cba0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800cba4:	691b      	ldr	r3, [r3, #16]
 800cba6:	685b      	ldr	r3, [r3, #4]
 800cba8:	4718      	bx	r3
 800cbaa:	bf00      	nop
 800cbac:	2000003c 	.word	0x2000003c
 800cbb0:	2002db08 	.word	0x2002db08

0800cbb4 <LCD_SetColorIndex>:
 800cbb4:	4b04      	ldr	r3, [pc, #16]	; (800cbc8 <LCD_SetColorIndex+0x14>)
 800cbb6:	681b      	ldr	r3, [r3, #0]
 800cbb8:	7c1a      	ldrb	r2, [r3, #16]
 800cbba:	0752      	lsls	r2, r2, #29
 800cbbc:	bf4c      	ite	mi
 800cbbe:	6b9b      	ldrmi	r3, [r3, #56]	; 0x38
 800cbc0:	6bdb      	ldrpl	r3, [r3, #60]	; 0x3c
 800cbc2:	6018      	str	r0, [r3, #0]
 800cbc4:	4770      	bx	lr
 800cbc6:	bf00      	nop
 800cbc8:	2000003c 	.word	0x2000003c

0800cbcc <_SetColor>:
 800cbcc:	b508      	push	{r3, lr}
 800cbce:	4b06      	ldr	r3, [pc, #24]	; (800cbe8 <_SetColor+0x1c>)
 800cbd0:	681b      	ldr	r3, [r3, #0]
 800cbd2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800cbd4:	4281      	cmp	r1, r0
 800cbd6:	d006      	beq.n	800cbe6 <_SetColor+0x1a>
 800cbd8:	6318      	str	r0, [r3, #48]	; 0x30
 800cbda:	f7ff ffcf 	bl	800cb7c <LCD_Color2Index>
 800cbde:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800cbe2:	f7ff bfe7 	b.w	800cbb4 <LCD_SetColorIndex>
 800cbe6:	bd08      	pop	{r3, pc}
 800cbe8:	2000003c 	.word	0x2000003c

0800cbec <LCD_SetBkColorIndex>:
 800cbec:	4b04      	ldr	r3, [pc, #16]	; (800cc00 <LCD_SetBkColorIndex+0x14>)
 800cbee:	681b      	ldr	r3, [r3, #0]
 800cbf0:	7c1a      	ldrb	r2, [r3, #16]
 800cbf2:	0752      	lsls	r2, r2, #29
 800cbf4:	bf4c      	ite	mi
 800cbf6:	6bdb      	ldrmi	r3, [r3, #60]	; 0x3c
 800cbf8:	6b9b      	ldrpl	r3, [r3, #56]	; 0x38
 800cbfa:	6018      	str	r0, [r3, #0]
 800cbfc:	4770      	bx	lr
 800cbfe:	bf00      	nop
 800cc00:	2000003c 	.word	0x2000003c

0800cc04 <_SetBkColor>:
 800cc04:	b508      	push	{r3, lr}
 800cc06:	4b06      	ldr	r3, [pc, #24]	; (800cc20 <_SetBkColor+0x1c>)
 800cc08:	681b      	ldr	r3, [r3, #0]
 800cc0a:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800cc0c:	4281      	cmp	r1, r0
 800cc0e:	d006      	beq.n	800cc1e <_SetBkColor+0x1a>
 800cc10:	6358      	str	r0, [r3, #52]	; 0x34
 800cc12:	f7ff ffb3 	bl	800cb7c <LCD_Color2Index>
 800cc16:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800cc1a:	f7ff bfe7 	b.w	800cbec <LCD_SetBkColorIndex>
 800cc1e:	bd08      	pop	{r3, pc}
 800cc20:	2000003c 	.word	0x2000003c

0800cc24 <LCD_SetBkColor>:
 800cc24:	4b01      	ldr	r3, [pc, #4]	; (800cc2c <LCD_SetBkColor+0x8>)
 800cc26:	681b      	ldr	r3, [r3, #0]
 800cc28:	685b      	ldr	r3, [r3, #4]
 800cc2a:	4718      	bx	r3
 800cc2c:	20000060 	.word	0x20000060

0800cc30 <LCD_SetColor>:
 800cc30:	4b01      	ldr	r3, [pc, #4]	; (800cc38 <LCD_SetColor+0x8>)
 800cc32:	681b      	ldr	r3, [r3, #0]
 800cc34:	681b      	ldr	r3, [r3, #0]
 800cc36:	4718      	bx	r3
 800cc38:	20000060 	.word	0x20000060

0800cc3c <LCD_AA_MixColors16>:
 800cc3c:	0e0b      	lsrs	r3, r1, #24
 800cc3e:	b510      	push	{r4, lr}
 800cc40:	4c0d      	ldr	r4, [pc, #52]	; (800cc78 <LCD_AA_MixColors16+0x3c>)
 800cc42:	d110      	bne.n	800cc66 <LCD_AA_MixColors16+0x2a>
 800cc44:	0e03      	lsrs	r3, r0, #24
 800cc46:	2bff      	cmp	r3, #255	; 0xff
 800cc48:	d108      	bne.n	800cc5c <LCD_AA_MixColors16+0x20>
 800cc4a:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 800cc4e:	6863      	ldr	r3, [r4, #4]
 800cc50:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800cc54:	4303      	orrs	r3, r0
 800cc56:	ea43 6002 	orr.w	r0, r3, r2, lsl #24
 800cc5a:	bd10      	pop	{r4, pc}
 800cc5c:	b91b      	cbnz	r3, 800cc66 <LCD_AA_MixColors16+0x2a>
 800cc5e:	6862      	ldr	r2, [r4, #4]
 800cc60:	ea41 0002 	orr.w	r0, r1, r2
 800cc64:	bd10      	pop	{r4, pc}
 800cc66:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800cc6a:	4b04      	ldr	r3, [pc, #16]	; (800cc7c <LCD_AA_MixColors16+0x40>)
 800cc6c:	b2d2      	uxtb	r2, r2
 800cc6e:	681b      	ldr	r3, [r3, #0]
 800cc70:	4798      	blx	r3
 800cc72:	6861      	ldr	r1, [r4, #4]
 800cc74:	4308      	orrs	r0, r1
 800cc76:	bd10      	pop	{r4, pc}
 800cc78:	20000064 	.word	0x20000064
 800cc7c:	20000048 	.word	0x20000048

0800cc80 <LCD_SetPixelAA4_Trans>:
 800cc80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cc84:	4604      	mov	r4, r0
 800cc86:	460d      	mov	r5, r1
 800cc88:	4616      	mov	r6, r2
 800cc8a:	2a00      	cmp	r2, #0
 800cc8c:	d040      	beq.n	800cd10 <LCD_SetPixelAA4_Trans+0x90>
 800cc8e:	f8df 808c 	ldr.w	r8, [pc, #140]	; 800cd1c <LCD_SetPixelAA4_Trans+0x9c>
 800cc92:	f8d8 3000 	ldr.w	r3, [r8]
 800cc96:	f9b3 200a 	ldrsh.w	r2, [r3, #10]
 800cc9a:	4291      	cmp	r1, r2
 800cc9c:	db38      	blt.n	800cd10 <LCD_SetPixelAA4_Trans+0x90>
 800cc9e:	f9b3 200e 	ldrsh.w	r2, [r3, #14]
 800cca2:	4291      	cmp	r1, r2
 800cca4:	dc34      	bgt.n	800cd10 <LCD_SetPixelAA4_Trans+0x90>
 800cca6:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 800ccaa:	4290      	cmp	r0, r2
 800ccac:	db30      	blt.n	800cd10 <LCD_SetPixelAA4_Trans+0x90>
 800ccae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 800ccb2:	4290      	cmp	r0, r2
 800ccb4:	dc2c      	bgt.n	800cd10 <LCD_SetPixelAA4_Trans+0x90>
 800ccb6:	2e0e      	cmp	r6, #14
 800ccb8:	4f16      	ldr	r7, [pc, #88]	; (800cd14 <LCD_SetPixelAA4_Trans+0x94>)
 800ccba:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800ccbc:	d909      	bls.n	800ccd2 <LCD_SetPixelAA4_Trans+0x52>
 800ccbe:	7c5b      	ldrb	r3, [r3, #17]
 800ccc0:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
 800ccc4:	68c3      	ldr	r3, [r0, #12]
 800ccc6:	699e      	ldr	r6, [r3, #24]
 800ccc8:	6813      	ldr	r3, [r2, #0]
 800ccca:	460a      	mov	r2, r1
 800cccc:	46b4      	mov	ip, r6
 800ccce:	4621      	mov	r1, r4
 800ccd0:	e01b      	b.n	800cd0a <LCD_SetPixelAA4_Trans+0x8a>
 800ccd2:	6810      	ldr	r0, [r2, #0]
 800ccd4:	f7ff ff60 	bl	800cb98 <LCD_Index2Color>
 800ccd8:	4629      	mov	r1, r5
 800ccda:	4681      	mov	r9, r0
 800ccdc:	4620      	mov	r0, r4
 800ccde:	f000 fa1b 	bl	800d118 <LCD_GetPixelColor>
 800cce2:	4b0d      	ldr	r3, [pc, #52]	; (800cd18 <LCD_SetPixelAA4_Trans+0x98>)
 800cce4:	4632      	mov	r2, r6
 800cce6:	4601      	mov	r1, r0
 800cce8:	681b      	ldr	r3, [r3, #0]
 800ccea:	4648      	mov	r0, r9
 800ccec:	4798      	blx	r3
 800ccee:	f7ff ff45 	bl	800cb7c <LCD_Color2Index>
 800ccf2:	f8d8 3000 	ldr.w	r3, [r8]
 800ccf6:	462a      	mov	r2, r5
 800ccf8:	4621      	mov	r1, r4
 800ccfa:	7c5b      	ldrb	r3, [r3, #17]
 800ccfc:	f857 6023 	ldr.w	r6, [r7, r3, lsl #2]
 800cd00:	68f3      	ldr	r3, [r6, #12]
 800cd02:	699f      	ldr	r7, [r3, #24]
 800cd04:	4603      	mov	r3, r0
 800cd06:	4630      	mov	r0, r6
 800cd08:	46bc      	mov	ip, r7
 800cd0a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cd0e:	4760      	bx	ip
 800cd10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cd14:	2002db08 	.word	0x2002db08
 800cd18:	20000064 	.word	0x20000064
 800cd1c:	2000003c 	.word	0x2000003c

0800cd20 <LCD_AA_SetOrMask>:
 800cd20:	4b02      	ldr	r3, [pc, #8]	; (800cd2c <LCD_AA_SetOrMask+0xc>)
 800cd22:	685a      	ldr	r2, [r3, #4]
 800cd24:	6058      	str	r0, [r3, #4]
 800cd26:	4610      	mov	r0, r2
 800cd28:	4770      	bx	lr
 800cd2a:	bf00      	nop
 800cd2c:	20000064 	.word	0x20000064

0800cd30 <_OnExit>:
 800cd30:	b510      	push	{r4, lr}
 800cd32:	4c04      	ldr	r4, [pc, #16]	; (800cd44 <_OnExit+0x14>)
 800cd34:	6820      	ldr	r0, [r4, #0]
 800cd36:	f7fd fdf7 	bl	800a928 <GUI_ALLOC_FreeFixedBlock>
 800cd3a:	2300      	movs	r3, #0
 800cd3c:	4a02      	ldr	r2, [pc, #8]	; (800cd48 <_OnExit+0x18>)
 800cd3e:	6023      	str	r3, [r4, #0]
 800cd40:	6013      	str	r3, [r2, #0]
 800cd42:	bd10      	pop	{r4, pc}
 800cd44:	2002db20 	.word	0x2002db20
 800cd48:	200004e0 	.word	0x200004e0

0800cd4c <LCD_InitColors>:
 800cd4c:	b538      	push	{r3, r4, r5, lr}
 800cd4e:	4d0a      	ldr	r5, [pc, #40]	; (800cd78 <LCD_InitColors+0x2c>)
 800cd50:	682c      	ldr	r4, [r5, #0]
 800cd52:	b964      	cbnz	r4, 800cd6e <LCD_InitColors+0x22>
 800cd54:	4b09      	ldr	r3, [pc, #36]	; (800cd7c <LCD_InitColors+0x30>)
 800cd56:	6818      	ldr	r0, [r3, #0]
 800cd58:	0080      	lsls	r0, r0, #2
 800cd5a:	f7fd fec9 	bl	800aaf0 <GUI_ALLOC_GetFixedBlock>
 800cd5e:	6028      	str	r0, [r5, #0]
 800cd60:	b138      	cbz	r0, 800cd72 <LCD_InitColors+0x26>
 800cd62:	4807      	ldr	r0, [pc, #28]	; (800cd80 <LCD_InitColors+0x34>)
 800cd64:	4b07      	ldr	r3, [pc, #28]	; (800cd84 <LCD_InitColors+0x38>)
 800cd66:	f840 3f04 	str.w	r3, [r0, #4]!
 800cd6a:	f7fe fc05 	bl	800b578 <GUI__RegisterExit>
 800cd6e:	2000      	movs	r0, #0
 800cd70:	bd38      	pop	{r3, r4, r5, pc}
 800cd72:	2001      	movs	r0, #1
 800cd74:	bd38      	pop	{r3, r4, r5, pc}
 800cd76:	bf00      	nop
 800cd78:	2002db20 	.word	0x2002db20
 800cd7c:	2000007c 	.word	0x2000007c
 800cd80:	200004e0 	.word	0x200004e0
 800cd84:	0800cd31 	.word	0x0800cd31

0800cd88 <LCD_GetpPalConvTableUncached>:
 800cd88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cd8c:	4604      	mov	r4, r0
 800cd8e:	b318      	cbz	r0, 800cdd8 <LCD_GetpPalConvTableUncached+0x50>
 800cd90:	6887      	ldr	r7, [r0, #8]
 800cd92:	b31f      	cbz	r7, 800cddc <LCD_GetpPalConvTableUncached+0x54>
 800cd94:	4d14      	ldr	r5, [pc, #80]	; (800cde8 <LCD_GetpPalConvTableUncached+0x60>)
 800cd96:	6828      	ldr	r0, [r5, #0]
 800cd98:	b320      	cbz	r0, 800cde4 <LCD_GetpPalConvTableUncached+0x5c>
 800cd9a:	6822      	ldr	r2, [r4, #0]
 800cd9c:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 800cda0:	dc1f      	bgt.n	800cde2 <LCD_GetpPalConvTableUncached+0x5a>
 800cda2:	4b12      	ldr	r3, [pc, #72]	; (800cdec <LCD_GetpPalConvTableUncached+0x64>)
 800cda4:	2600      	movs	r6, #0
 800cda6:	681b      	ldr	r3, [r3, #0]
 800cda8:	429a      	cmp	r2, r3
 800cdaa:	bfa8      	it	ge
 800cdac:	461a      	movge	r2, r3
 800cdae:	4690      	mov	r8, r2
 800cdb0:	4546      	cmp	r6, r8
 800cdb2:	da09      	bge.n	800cdc8 <LCD_GetpPalConvTableUncached+0x40>
 800cdb4:	f8d5 9000 	ldr.w	r9, [r5]
 800cdb8:	f857 0026 	ldr.w	r0, [r7, r6, lsl #2]
 800cdbc:	f7ff fede 	bl	800cb7c <LCD_Color2Index>
 800cdc0:	f849 0026 	str.w	r0, [r9, r6, lsl #2]
 800cdc4:	3601      	adds	r6, #1
 800cdc6:	e7f3      	b.n	800cdb0 <LCD_GetpPalConvTableUncached+0x28>
 800cdc8:	4b09      	ldr	r3, [pc, #36]	; (800cdf0 <LCD_GetpPalConvTableUncached+0x68>)
 800cdca:	681b      	ldr	r3, [r3, #0]
 800cdcc:	b10b      	cbz	r3, 800cdd2 <LCD_GetpPalConvTableUncached+0x4a>
 800cdce:	4620      	mov	r0, r4
 800cdd0:	4798      	blx	r3
 800cdd2:	6828      	ldr	r0, [r5, #0]
 800cdd4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800cdd8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800cddc:	4638      	mov	r0, r7
 800cdde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800cde2:	2000      	movs	r0, #0
 800cde4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800cde8:	2002db20 	.word	0x2002db20
 800cdec:	2000007c 	.word	0x2000007c
 800cdf0:	200004e0 	.word	0x200004e0

0800cdf4 <LCD_GetpPalConvTable>:
 800cdf4:	f7ff bfc8 	b.w	800cd88 <LCD_GetpPalConvTableUncached>

0800cdf8 <LCD_GetpPalConvTableBM>:
 800cdf8:	f7ff bfc6 	b.w	800cd88 <LCD_GetpPalConvTableUncached>

0800cdfc <LCD_InitLUT>:
 800cdfc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce00:	4e1d      	ldr	r6, [pc, #116]	; (800ce78 <LCD_InitLUT+0x7c>)
 800ce02:	f000 f94c 	bl	800d09e <LCD_GetNumLayers>
 800ce06:	2400      	movs	r4, #0
 800ce08:	4680      	mov	r8, r0
 800ce0a:	46b1      	mov	r9, r6
 800ce0c:	f8df a070 	ldr.w	sl, [pc, #112]	; 800ce80 <LCD_InitLUT+0x84>
 800ce10:	4544      	cmp	r4, r8
 800ce12:	da2d      	bge.n	800ce70 <LCD_InitLUT+0x74>
 800ce14:	4620      	mov	r0, r4
 800ce16:	f7fe fbd5 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800ce1a:	b338      	cbz	r0, 800ce6c <LCD_InitLUT+0x70>
 800ce1c:	6833      	ldr	r3, [r6, #0]
 800ce1e:	4620      	mov	r0, r4
 800ce20:	f893 b011 	ldrb.w	fp, [r3, #17]
 800ce24:	745c      	strb	r4, [r3, #17]
 800ce26:	f000 f869 	bl	800cefc <LCD_GetBitsPerPixelEx>
 800ce2a:	2808      	cmp	r0, #8
 800ce2c:	dd04      	ble.n	800ce38 <LCD_InitLUT+0x3c>
 800ce2e:	f8d9 3000 	ldr.w	r3, [r9]
 800ce32:	f883 b011 	strb.w	fp, [r3, #17]
 800ce36:	e019      	b.n	800ce6c <LCD_InitLUT+0x70>
 800ce38:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
 800ce3c:	691a      	ldr	r2, [r3, #16]
 800ce3e:	4b0f      	ldr	r3, [pc, #60]	; (800ce7c <LCD_InitLUT+0x80>)
 800ce40:	429a      	cmp	r2, r3
 800ce42:	d0f4      	beq.n	800ce2e <LCD_InitLUT+0x32>
 800ce44:	4620      	mov	r0, r4
 800ce46:	2500      	movs	r5, #0
 800ce48:	f000 f85b 	bl	800cf02 <LCD_GetNumColorsEx>
 800ce4c:	4603      	mov	r3, r0
 800ce4e:	429d      	cmp	r5, r3
 800ce50:	daed      	bge.n	800ce2e <LCD_InitLUT+0x32>
 800ce52:	b2ef      	uxtb	r7, r5
 800ce54:	9301      	str	r3, [sp, #4]
 800ce56:	3501      	adds	r5, #1
 800ce58:	4638      	mov	r0, r7
 800ce5a:	f7ff fe9d 	bl	800cb98 <LCD_Index2Color>
 800ce5e:	4639      	mov	r1, r7
 800ce60:	4602      	mov	r2, r0
 800ce62:	4620      	mov	r0, r4
 800ce64:	f000 fab3 	bl	800d3ce <LCD_SetLUTEntryEx>
 800ce68:	9b01      	ldr	r3, [sp, #4]
 800ce6a:	e7f0      	b.n	800ce4e <LCD_InitLUT+0x52>
 800ce6c:	3401      	adds	r4, #1
 800ce6e:	e7cf      	b.n	800ce10 <LCD_InitLUT+0x14>
 800ce70:	b003      	add	sp, #12
 800ce72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce76:	bf00      	nop
 800ce78:	2000003c 	.word	0x2000003c
 800ce7c:	0801dd50 	.word	0x0801dd50
 800ce80:	2002db08 	.word	0x2002db08

0800ce84 <LCD_GetBkColorIndex>:
 800ce84:	4b02      	ldr	r3, [pc, #8]	; (800ce90 <LCD_GetBkColorIndex+0xc>)
 800ce86:	681b      	ldr	r3, [r3, #0]
 800ce88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ce8a:	6818      	ldr	r0, [r3, #0]
 800ce8c:	4770      	bx	lr
 800ce8e:	bf00      	nop
 800ce90:	2000003c 	.word	0x2000003c

0800ce94 <LCD_GetColorIndex>:
 800ce94:	4b02      	ldr	r3, [pc, #8]	; (800cea0 <LCD_GetColorIndex+0xc>)
 800ce96:	681b      	ldr	r3, [r3, #0]
 800ce98:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ce9a:	6818      	ldr	r0, [r3, #0]
 800ce9c:	4770      	bx	lr
 800ce9e:	bf00      	nop
 800cea0:	2000003c 	.word	0x2000003c

0800cea4 <_GetDevProp>:
 800cea4:	2801      	cmp	r0, #1
 800cea6:	b510      	push	{r4, lr}
 800cea8:	460c      	mov	r4, r1
 800ceaa:	dc08      	bgt.n	800cebe <_GetDevProp+0x1a>
 800ceac:	f7fe fb8a 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800ceb0:	b128      	cbz	r0, 800cebe <_GetDevProp+0x1a>
 800ceb2:	68c3      	ldr	r3, [r0, #12]
 800ceb4:	4621      	mov	r1, r4
 800ceb6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ceb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cebc:	4718      	bx	r3
 800cebe:	2000      	movs	r0, #0
 800cec0:	bd10      	pop	{r4, pc}

0800cec2 <_GetMaxValue>:
 800cec2:	b538      	push	{r3, r4, r5, lr}
 800cec4:	4601      	mov	r1, r0
 800cec6:	4605      	mov	r5, r0
 800cec8:	2001      	movs	r0, #1
 800ceca:	f7ff ffeb 	bl	800cea4 <_GetDevProp>
 800cece:	4604      	mov	r4, r0
 800ced0:	4629      	mov	r1, r5
 800ced2:	2000      	movs	r0, #0
 800ced4:	f7ff ffe6 	bl	800cea4 <_GetDevProp>
 800ced8:	42a0      	cmp	r0, r4
 800ceda:	bfb8      	it	lt
 800cedc:	4620      	movlt	r0, r4
 800cede:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
 800cee2:	bd38      	pop	{r3, r4, r5, pc}

0800cee4 <LCD_GetXSizeEx>:
 800cee4:	2101      	movs	r1, #1
 800cee6:	f7ff bfdd 	b.w	800cea4 <_GetDevProp>

0800ceea <LCD_GetYSizeEx>:
 800ceea:	2102      	movs	r1, #2
 800ceec:	f7ff bfda 	b.w	800cea4 <_GetDevProp>

0800cef0 <LCD_GetVXSizeEx>:
 800cef0:	2103      	movs	r1, #3
 800cef2:	f7ff bfd7 	b.w	800cea4 <_GetDevProp>

0800cef6 <LCD_GetVYSizeEx>:
 800cef6:	2104      	movs	r1, #4
 800cef8:	f7ff bfd4 	b.w	800cea4 <_GetDevProp>

0800cefc <LCD_GetBitsPerPixelEx>:
 800cefc:	2108      	movs	r1, #8
 800cefe:	f7ff bfd1 	b.w	800cea4 <_GetDevProp>

0800cf02 <LCD_GetNumColorsEx>:
 800cf02:	2109      	movs	r1, #9
 800cf04:	f7ff bfce 	b.w	800cea4 <_GetDevProp>

0800cf08 <LCD_GetMirrorXEx>:
 800cf08:	210c      	movs	r1, #12
 800cf0a:	f7ff bfcb 	b.w	800cea4 <_GetDevProp>

0800cf0e <LCD_GetMirrorYEx>:
 800cf0e:	210d      	movs	r1, #13
 800cf10:	f7ff bfc8 	b.w	800cea4 <_GetDevProp>

0800cf14 <LCD_GetSwapXYEx>:
 800cf14:	210e      	movs	r1, #14
 800cf16:	f7ff bfc5 	b.w	800cea4 <_GetDevProp>
	...

0800cf1c <LCD_GetXSize>:
 800cf1c:	4b02      	ldr	r3, [pc, #8]	; (800cf28 <LCD_GetXSize+0xc>)
 800cf1e:	681b      	ldr	r3, [r3, #0]
 800cf20:	7c58      	ldrb	r0, [r3, #17]
 800cf22:	f7ff bfdf 	b.w	800cee4 <LCD_GetXSizeEx>
 800cf26:	bf00      	nop
 800cf28:	2000003c 	.word	0x2000003c

0800cf2c <LCD_GetYSize>:
 800cf2c:	4b02      	ldr	r3, [pc, #8]	; (800cf38 <LCD_GetYSize+0xc>)
 800cf2e:	681b      	ldr	r3, [r3, #0]
 800cf30:	7c58      	ldrb	r0, [r3, #17]
 800cf32:	f7ff bfda 	b.w	800ceea <LCD_GetYSizeEx>
 800cf36:	bf00      	nop
 800cf38:	2000003c 	.word	0x2000003c

0800cf3c <LCD_GetNumColors>:
 800cf3c:	4b02      	ldr	r3, [pc, #8]	; (800cf48 <LCD_GetNumColors+0xc>)
 800cf3e:	681b      	ldr	r3, [r3, #0]
 800cf40:	7c58      	ldrb	r0, [r3, #17]
 800cf42:	f7ff bfde 	b.w	800cf02 <LCD_GetNumColorsEx>
 800cf46:	bf00      	nop
 800cf48:	2000003c 	.word	0x2000003c

0800cf4c <GUI_GetBitsPerPixelEx>:
 800cf4c:	4b03      	ldr	r3, [pc, #12]	; (800cf5c <GUI_GetBitsPerPixelEx+0x10>)
 800cf4e:	2108      	movs	r1, #8
 800cf50:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800cf54:	68c3      	ldr	r3, [r0, #12]
 800cf56:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cf58:	4718      	bx	r3
 800cf5a:	bf00      	nop
 800cf5c:	2002db08 	.word	0x2002db08

0800cf60 <LCD_GetDevFunc>:
 800cf60:	4b03      	ldr	r3, [pc, #12]	; (800cf70 <LCD_GetDevFunc+0x10>)
 800cf62:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 800cf66:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800cf6a:	68d2      	ldr	r2, [r2, #12]
 800cf6c:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800cf6e:	4710      	bx	r2
 800cf70:	2002db08 	.word	0x2002db08

0800cf74 <LCD_GetPaletteEx>:
 800cf74:	b510      	push	{r4, lr}
 800cf76:	f7fe fb25 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800cf7a:	b128      	cbz	r0, 800cf88 <LCD_GetPaletteEx+0x14>
 800cf7c:	68c3      	ldr	r3, [r0, #12]
 800cf7e:	2102      	movs	r1, #2
 800cf80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cf82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cf86:	4718      	bx	r3
 800cf88:	bd10      	pop	{r4, pc}
	...

0800cf8c <LCD_GetPalette>:
 800cf8c:	4b02      	ldr	r3, [pc, #8]	; (800cf98 <LCD_GetPalette+0xc>)
 800cf8e:	681b      	ldr	r3, [r3, #0]
 800cf90:	7c58      	ldrb	r0, [r3, #17]
 800cf92:	f7ff bfef 	b.w	800cf74 <LCD_GetPaletteEx>
 800cf96:	bf00      	nop
 800cf98:	2000003c 	.word	0x2000003c

0800cf9c <GUI_GetpfIndex2ColorEx>:
 800cf9c:	4b02      	ldr	r3, [pc, #8]	; (800cfa8 <GUI_GetpfIndex2ColorEx+0xc>)
 800cf9e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800cfa2:	691b      	ldr	r3, [r3, #16]
 800cfa4:	6858      	ldr	r0, [r3, #4]
 800cfa6:	4770      	bx	lr
 800cfa8:	2002db08 	.word	0x2002db08

0800cfac <GUI_GetpfColor2IndexEx>:
 800cfac:	4b02      	ldr	r3, [pc, #8]	; (800cfb8 <GUI_GetpfColor2IndexEx+0xc>)
 800cfae:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800cfb2:	691b      	ldr	r3, [r3, #16]
 800cfb4:	6818      	ldr	r0, [r3, #0]
 800cfb6:	4770      	bx	lr
 800cfb8:	2002db08 	.word	0x2002db08

0800cfbc <LCD_GetXSizeMax>:
 800cfbc:	2001      	movs	r0, #1
 800cfbe:	f7ff bf80 	b.w	800cec2 <_GetMaxValue>

0800cfc2 <LCD_GetYSizeMax>:
 800cfc2:	2002      	movs	r0, #2
 800cfc4:	f7ff bf7d 	b.w	800cec2 <_GetMaxValue>

0800cfc8 <LCD_GetVXSizeMax>:
 800cfc8:	2003      	movs	r0, #3
 800cfca:	f7ff bf7a 	b.w	800cec2 <_GetMaxValue>
	...

0800cfd0 <LCD_SetDisplaySize>:
 800cfd0:	4b01      	ldr	r3, [pc, #4]	; (800cfd8 <LCD_SetDisplaySize+0x8>)
 800cfd2:	e883 0003 	stmia.w	r3, {r0, r1}
 800cfd6:	4770      	bx	lr
 800cfd8:	200004ec 	.word	0x200004ec

0800cfdc <LCD_GetXSizeDisplay>:
 800cfdc:	4b01      	ldr	r3, [pc, #4]	; (800cfe4 <LCD_GetXSizeDisplay+0x8>)
 800cfde:	6818      	ldr	r0, [r3, #0]
 800cfe0:	4770      	bx	lr
 800cfe2:	bf00      	nop
 800cfe4:	200004ec 	.word	0x200004ec

0800cfe8 <LCD_GetYSizeDisplay>:
 800cfe8:	4b01      	ldr	r3, [pc, #4]	; (800cff0 <LCD_GetYSizeDisplay+0x8>)
 800cfea:	6858      	ldr	r0, [r3, #4]
 800cfec:	4770      	bx	lr
 800cfee:	bf00      	nop
 800cff0:	200004ec 	.word	0x200004ec

0800cff4 <LCD__GetBPP>:
 800cff4:	2800      	cmp	r0, #0
 800cff6:	d03b      	beq.n	800d070 <LCD__GetBPP+0x7c>
 800cff8:	f030 0301 	bics.w	r3, r0, #1
 800cffc:	d029      	beq.n	800d052 <LCD__GetBPP+0x5e>
 800cffe:	f030 0303 	bics.w	r3, r0, #3
 800d002:	d028      	beq.n	800d056 <LCD__GetBPP+0x62>
 800d004:	f030 0307 	bics.w	r3, r0, #7
 800d008:	d027      	beq.n	800d05a <LCD__GetBPP+0x66>
 800d00a:	f030 030f 	bics.w	r3, r0, #15
 800d00e:	d026      	beq.n	800d05e <LCD__GetBPP+0x6a>
 800d010:	f030 031f 	bics.w	r3, r0, #31
 800d014:	d025      	beq.n	800d062 <LCD__GetBPP+0x6e>
 800d016:	f030 03ff 	bics.w	r3, r0, #255	; 0xff
 800d01a:	d024      	beq.n	800d066 <LCD__GetBPP+0x72>
 800d01c:	f420 73ff 	bic.w	r3, r0, #510	; 0x1fe
 800d020:	f023 0301 	bic.w	r3, r3, #1
 800d024:	b30b      	cbz	r3, 800d06a <LCD__GetBPP+0x76>
 800d026:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
 800d02a:	f023 030f 	bic.w	r3, r3, #15
 800d02e:	b1e3      	cbz	r3, 800d06a <LCD__GetBPP+0x76>
 800d030:	f420 43ff 	bic.w	r3, r0, #32640	; 0x7f80
 800d034:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d038:	b1bb      	cbz	r3, 800d06a <LCD__GetBPP+0x76>
 800d03a:	0c03      	lsrs	r3, r0, #16
 800d03c:	041b      	lsls	r3, r3, #16
 800d03e:	b1a3      	cbz	r3, 800d06a <LCD__GetBPP+0x76>
 800d040:	0c83      	lsrs	r3, r0, #18
 800d042:	049b      	lsls	r3, r3, #18
 800d044:	b19b      	cbz	r3, 800d06e <LCD__GetBPP+0x7a>
 800d046:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800d04a:	bf0c      	ite	eq
 800d04c:	2018      	moveq	r0, #24
 800d04e:	2020      	movne	r0, #32
 800d050:	4770      	bx	lr
 800d052:	2001      	movs	r0, #1
 800d054:	4770      	bx	lr
 800d056:	2002      	movs	r0, #2
 800d058:	4770      	bx	lr
 800d05a:	2003      	movs	r0, #3
 800d05c:	4770      	bx	lr
 800d05e:	2004      	movs	r0, #4
 800d060:	4770      	bx	lr
 800d062:	2005      	movs	r0, #5
 800d064:	4770      	bx	lr
 800d066:	2008      	movs	r0, #8
 800d068:	4770      	bx	lr
 800d06a:	2010      	movs	r0, #16
 800d06c:	4770      	bx	lr
 800d06e:	2012      	movs	r0, #18
 800d070:	4770      	bx	lr

0800d072 <LCD__GetBPPDevice>:
 800d072:	b508      	push	{r3, lr}
 800d074:	f7ff ffbe 	bl	800cff4 <LCD__GetBPP>
 800d078:	2801      	cmp	r0, #1
 800d07a:	d00f      	beq.n	800d09c <LCD__GetBPPDevice+0x2a>
 800d07c:	1e83      	subs	r3, r0, #2
 800d07e:	2b06      	cmp	r3, #6
 800d080:	d909      	bls.n	800d096 <LCD__GetBPPDevice+0x24>
 800d082:	f1a0 0309 	sub.w	r3, r0, #9
 800d086:	2b07      	cmp	r3, #7
 800d088:	d907      	bls.n	800d09a <LCD__GetBPPDevice+0x28>
 800d08a:	3811      	subs	r0, #17
 800d08c:	280f      	cmp	r0, #15
 800d08e:	bf8c      	ite	hi
 800d090:	2000      	movhi	r0, #0
 800d092:	2020      	movls	r0, #32
 800d094:	bd08      	pop	{r3, pc}
 800d096:	2008      	movs	r0, #8
 800d098:	bd08      	pop	{r3, pc}
 800d09a:	2010      	movs	r0, #16
 800d09c:	bd08      	pop	{r3, pc}

0800d09e <LCD_GetNumLayers>:
 800d09e:	b510      	push	{r4, lr}
 800d0a0:	2000      	movs	r0, #0
 800d0a2:	f7fe fa8f 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800d0a6:	1c04      	adds	r4, r0, #0
 800d0a8:	f04f 0001 	mov.w	r0, #1
 800d0ac:	bf18      	it	ne
 800d0ae:	2401      	movne	r4, #1
 800d0b0:	f7fe fa88 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800d0b4:	b100      	cbz	r0, 800d0b8 <LCD_GetNumLayers+0x1a>
 800d0b6:	3401      	adds	r4, #1
 800d0b8:	4620      	mov	r0, r4
 800d0ba:	bd10      	pop	{r4, pc}

0800d0bc <LCD_GetPixelIndex>:
 800d0bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d0be:	4f14      	ldr	r7, [pc, #80]	; (800d110 <LCD_GetPixelIndex+0x54>)
 800d0c0:	4604      	mov	r4, r0
 800d0c2:	4e14      	ldr	r6, [pc, #80]	; (800d114 <LCD_GetPixelIndex+0x58>)
 800d0c4:	460d      	mov	r5, r1
 800d0c6:	683b      	ldr	r3, [r7, #0]
 800d0c8:	4669      	mov	r1, sp
 800d0ca:	7c5b      	ldrb	r3, [r3, #17]
 800d0cc:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 800d0d0:	68c3      	ldr	r3, [r0, #12]
 800d0d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d0d4:	4798      	blx	r3
 800d0d6:	f9bd 3000 	ldrsh.w	r3, [sp]
 800d0da:	42a3      	cmp	r3, r4
 800d0dc:	dc15      	bgt.n	800d10a <LCD_GetPixelIndex+0x4e>
 800d0de:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d0e2:	429c      	cmp	r4, r3
 800d0e4:	dc11      	bgt.n	800d10a <LCD_GetPixelIndex+0x4e>
 800d0e6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800d0ea:	42ab      	cmp	r3, r5
 800d0ec:	dc0d      	bgt.n	800d10a <LCD_GetPixelIndex+0x4e>
 800d0ee:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800d0f2:	429d      	cmp	r5, r3
 800d0f4:	dc09      	bgt.n	800d10a <LCD_GetPixelIndex+0x4e>
 800d0f6:	683b      	ldr	r3, [r7, #0]
 800d0f8:	462a      	mov	r2, r5
 800d0fa:	4621      	mov	r1, r4
 800d0fc:	7c5b      	ldrb	r3, [r3, #17]
 800d0fe:	f856 0023 	ldr.w	r0, [r6, r3, lsl #2]
 800d102:	68c3      	ldr	r3, [r0, #12]
 800d104:	695b      	ldr	r3, [r3, #20]
 800d106:	4798      	blx	r3
 800d108:	e000      	b.n	800d10c <LCD_GetPixelIndex+0x50>
 800d10a:	2000      	movs	r0, #0
 800d10c:	b003      	add	sp, #12
 800d10e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d110:	2000003c 	.word	0x2000003c
 800d114:	2002db08 	.word	0x2002db08

0800d118 <LCD_GetPixelColor>:
 800d118:	b508      	push	{r3, lr}
 800d11a:	f7ff ffcf 	bl	800d0bc <LCD_GetPixelIndex>
 800d11e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d122:	f7ff bd39 	b.w	800cb98 <LCD_Index2Color>
	...

0800d128 <LCD_ReadRectEx>:
 800d128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d12c:	b087      	sub	sp, #28
 800d12e:	4690      	mov	r8, r2
 800d130:	4607      	mov	r7, r0
 800d132:	460e      	mov	r6, r1
 800d134:	9303      	str	r3, [sp, #12]
 800d136:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d138:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800d13a:	68da      	ldr	r2, [r3, #12]
 800d13c:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800d13e:	f8d2 9014 	ldr.w	r9, [r2, #20]
 800d142:	b96b      	cbnz	r3, 800d160 <LCD_ReadRectEx+0x38>
 800d144:	4b60      	ldr	r3, [pc, #384]	; (800d2c8 <LCD_ReadRectEx+0x1a0>)
 800d146:	681b      	ldr	r3, [r3, #0]
 800d148:	7c58      	ldrb	r0, [r3, #17]
 800d14a:	f7ff feff 	bl	800cf4c <GUI_GetBitsPerPixelEx>
 800d14e:	2808      	cmp	r0, #8
 800d150:	dd15      	ble.n	800d17e <LCD_ReadRectEx+0x56>
 800d152:	2811      	cmp	r0, #17
 800d154:	bfb4      	ite	lt
 800d156:	f04f 0a02 	movlt.w	sl, #2
 800d15a:	f04f 0a04 	movge.w	sl, #4
 800d15e:	e010      	b.n	800d182 <LCD_ReadRectEx+0x5a>
 800d160:	2101      	movs	r1, #1
 800d162:	a811      	add	r0, sp, #68	; 0x44
 800d164:	4798      	blx	r3
 800d166:	4605      	mov	r5, r0
 800d168:	2800      	cmp	r0, #0
 800d16a:	d0eb      	beq.n	800d144 <LCD_ReadRectEx+0x1c>
 800d16c:	9b03      	ldr	r3, [sp, #12]
 800d16e:	4632      	mov	r2, r6
 800d170:	9401      	str	r4, [sp, #4]
 800d172:	4639      	mov	r1, r7
 800d174:	9300      	str	r3, [sp, #0]
 800d176:	4643      	mov	r3, r8
 800d178:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d17a:	47a8      	blx	r5
 800d17c:	e0a0      	b.n	800d2c0 <LCD_ReadRectEx+0x198>
 800d17e:	f04f 0a01 	mov.w	sl, #1
 800d182:	1e43      	subs	r3, r0, #1
 800d184:	2500      	movs	r5, #0
 800d186:	9304      	str	r3, [sp, #16]
 800d188:	9b03      	ldr	r3, [sp, #12]
 800d18a:	429e      	cmp	r6, r3
 800d18c:	f300 8098 	bgt.w	800d2c0 <LCD_ReadRectEx+0x198>
 800d190:	f1ba 0f02 	cmp.w	sl, #2
 800d194:	d009      	beq.n	800d1aa <LCD_ReadRectEx+0x82>
 800d196:	f1ba 0f04 	cmp.w	sl, #4
 800d19a:	d004      	beq.n	800d1a6 <LCD_ReadRectEx+0x7e>
 800d19c:	f1ba 0f01 	cmp.w	sl, #1
 800d1a0:	f040 808c 	bne.w	800d2bc <LCD_ReadRectEx+0x194>
 800d1a4:	e003      	b.n	800d1ae <LCD_ReadRectEx+0x86>
 800d1a6:	46bb      	mov	fp, r7
 800d1a8:	e07d      	b.n	800d2a6 <LCD_ReadRectEx+0x17e>
 800d1aa:	46bb      	mov	fp, r7
 800d1ac:	e070      	b.n	800d290 <LCD_ReadRectEx+0x168>
 800d1ae:	9b04      	ldr	r3, [sp, #16]
 800d1b0:	2b07      	cmp	r3, #7
 800d1b2:	f200 8083 	bhi.w	800d2bc <LCD_ReadRectEx+0x194>
 800d1b6:	e8df f003 	tbb	[pc, r3]
 800d1ba:	0a0e      	.short	0x0a0e
 800d1bc:	04040707 	.word	0x04040707
 800d1c0:	0404      	.short	0x0404
 800d1c2:	ebc4 0b07 	rsb	fp, r4, r7
 800d1c6:	e059      	b.n	800d27c <LCD_ReadRectEx+0x154>
 800d1c8:	46bb      	mov	fp, r7
 800d1ca:	230f      	movs	r3, #15
 800d1cc:	e03b      	b.n	800d246 <LCD_ReadRectEx+0x11e>
 800d1ce:	46bb      	mov	fp, r7
 800d1d0:	f64f 733f 	movw	r3, #65343	; 0xff3f
 800d1d4:	e019      	b.n	800d20a <LCD_ReadRectEx+0xe2>
 800d1d6:	46bb      	mov	fp, r7
 800d1d8:	45c3      	cmp	fp, r8
 800d1da:	dc6f      	bgt.n	800d2bc <LCD_ReadRectEx+0x194>
 800d1dc:	4632      	mov	r2, r6
 800d1de:	4659      	mov	r1, fp
 800d1e0:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d1e2:	f10b 0b01 	add.w	fp, fp, #1
 800d1e6:	47c8      	blx	r9
 800d1e8:	f64f 737f 	movw	r3, #65407	; 0xff7f
 800d1ec:	7822      	ldrb	r2, [r4, #0]
 800d1ee:	412b      	asrs	r3, r5
 800d1f0:	401a      	ands	r2, r3
 800d1f2:	f1c5 0307 	rsb	r3, r5, #7
 800d1f6:	3501      	adds	r5, #1
 800d1f8:	4098      	lsls	r0, r3
 800d1fa:	f025 0307 	bic.w	r3, r5, #7
 800d1fe:	4310      	orrs	r0, r2
 800d200:	7020      	strb	r0, [r4, #0]
 800d202:	eb04 04e5 	add.w	r4, r4, r5, asr #3
 800d206:	411d      	asrs	r5, r3
 800d208:	e7e6      	b.n	800d1d8 <LCD_ReadRectEx+0xb0>
 800d20a:	45c3      	cmp	fp, r8
 800d20c:	dc56      	bgt.n	800d2bc <LCD_ReadRectEx+0x194>
 800d20e:	4659      	mov	r1, fp
 800d210:	4632      	mov	r2, r6
 800d212:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d214:	f10b 0b01 	add.w	fp, fp, #1
 800d218:	9305      	str	r3, [sp, #20]
 800d21a:	47c8      	blx	r9
 800d21c:	006a      	lsls	r2, r5, #1
 800d21e:	9b05      	ldr	r3, [sp, #20]
 800d220:	f894 e000 	ldrb.w	lr, [r4]
 800d224:	3501      	adds	r5, #1
 800d226:	fa43 f102 	asr.w	r1, r3, r2
 800d22a:	f1c2 0206 	rsb	r2, r2, #6
 800d22e:	ea0e 0101 	and.w	r1, lr, r1
 800d232:	4090      	lsls	r0, r2
 800d234:	ea41 0200 	orr.w	r2, r1, r0
 800d238:	7022      	strb	r2, [r4, #0]
 800d23a:	f025 0203 	bic.w	r2, r5, #3
 800d23e:	eb04 04a5 	add.w	r4, r4, r5, asr #2
 800d242:	4115      	asrs	r5, r2
 800d244:	e7e1      	b.n	800d20a <LCD_ReadRectEx+0xe2>
 800d246:	45c3      	cmp	fp, r8
 800d248:	dc38      	bgt.n	800d2bc <LCD_ReadRectEx+0x194>
 800d24a:	4659      	mov	r1, fp
 800d24c:	4632      	mov	r2, r6
 800d24e:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d250:	f10b 0b01 	add.w	fp, fp, #1
 800d254:	9305      	str	r3, [sp, #20]
 800d256:	47c8      	blx	r9
 800d258:	00aa      	lsls	r2, r5, #2
 800d25a:	9b05      	ldr	r3, [sp, #20]
 800d25c:	f894 e000 	ldrb.w	lr, [r4]
 800d260:	fa03 f102 	lsl.w	r1, r3, r2
 800d264:	f1c2 0204 	rsb	r2, r2, #4
 800d268:	ea0e 0101 	and.w	r1, lr, r1
 800d26c:	4090      	lsls	r0, r2
 800d26e:	ea41 0200 	orr.w	r2, r1, r0
 800d272:	7022      	strb	r2, [r4, #0]
 800d274:	442c      	add	r4, r5
 800d276:	f085 0501 	eor.w	r5, r5, #1
 800d27a:	e7e4      	b.n	800d246 <LCD_ReadRectEx+0x11e>
 800d27c:	eb04 010b 	add.w	r1, r4, fp
 800d280:	4588      	cmp	r8, r1
 800d282:	db1b      	blt.n	800d2bc <LCD_ReadRectEx+0x194>
 800d284:	4632      	mov	r2, r6
 800d286:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d288:	47c8      	blx	r9
 800d28a:	f804 0b01 	strb.w	r0, [r4], #1
 800d28e:	e7f5      	b.n	800d27c <LCD_ReadRectEx+0x154>
 800d290:	45c3      	cmp	fp, r8
 800d292:	dc13      	bgt.n	800d2bc <LCD_ReadRectEx+0x194>
 800d294:	4659      	mov	r1, fp
 800d296:	4632      	mov	r2, r6
 800d298:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d29a:	f10b 0b01 	add.w	fp, fp, #1
 800d29e:	47c8      	blx	r9
 800d2a0:	f824 0b02 	strh.w	r0, [r4], #2
 800d2a4:	e7f4      	b.n	800d290 <LCD_ReadRectEx+0x168>
 800d2a6:	45c3      	cmp	fp, r8
 800d2a8:	dc08      	bgt.n	800d2bc <LCD_ReadRectEx+0x194>
 800d2aa:	4659      	mov	r1, fp
 800d2ac:	4632      	mov	r2, r6
 800d2ae:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d2b0:	f10b 0b01 	add.w	fp, fp, #1
 800d2b4:	47c8      	blx	r9
 800d2b6:	f844 0b04 	str.w	r0, [r4], #4
 800d2ba:	e7f4      	b.n	800d2a6 <LCD_ReadRectEx+0x17e>
 800d2bc:	3601      	adds	r6, #1
 800d2be:	e763      	b.n	800d188 <LCD_ReadRectEx+0x60>
 800d2c0:	b007      	add	sp, #28
 800d2c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2c6:	bf00      	nop
 800d2c8:	2000003c 	.word	0x2000003c

0800d2cc <GUI_ReadRectEx>:
 800d2cc:	b4f0      	push	{r4, r5, r6, r7}
 800d2ce:	4d16      	ldr	r5, [pc, #88]	; (800d328 <GUI_ReadRectEx+0x5c>)
 800d2d0:	9e04      	ldr	r6, [sp, #16]
 800d2d2:	682d      	ldr	r5, [r5, #0]
 800d2d4:	9c05      	ldr	r4, [sp, #20]
 800d2d6:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
 800d2da:	42b8      	cmp	r0, r7
 800d2dc:	bfb8      	it	lt
 800d2de:	4638      	movlt	r0, r7
 800d2e0:	f9b5 700c 	ldrsh.w	r7, [r5, #12]
 800d2e4:	42ba      	cmp	r2, r7
 800d2e6:	bfa8      	it	ge
 800d2e8:	463a      	movge	r2, r7
 800d2ea:	4290      	cmp	r0, r2
 800d2ec:	dc1a      	bgt.n	800d324 <GUI_ReadRectEx+0x58>
 800d2ee:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
 800d2f2:	f9b5 500e 	ldrsh.w	r5, [r5, #14]
 800d2f6:	42b9      	cmp	r1, r7
 800d2f8:	bfb8      	it	lt
 800d2fa:	4639      	movlt	r1, r7
 800d2fc:	42ab      	cmp	r3, r5
 800d2fe:	bfa8      	it	ge
 800d300:	462b      	movge	r3, r5
 800d302:	428b      	cmp	r3, r1
 800d304:	db0e      	blt.n	800d324 <GUI_ReadRectEx+0x58>
 800d306:	68e5      	ldr	r5, [r4, #12]
 800d308:	682d      	ldr	r5, [r5, #0]
 800d30a:	f035 0504 	bics.w	r5, r5, #4
 800d30e:	d104      	bne.n	800d31a <GUI_ReadRectEx+0x4e>
 800d310:	9405      	str	r4, [sp, #20]
 800d312:	9604      	str	r6, [sp, #16]
 800d314:	bcf0      	pop	{r4, r5, r6, r7}
 800d316:	f7ff bf07 	b.w	800d128 <LCD_ReadRectEx>
 800d31a:	6825      	ldr	r5, [r4, #0]
 800d31c:	2d00      	cmp	r5, #0
 800d31e:	d0f7      	beq.n	800d310 <GUI_ReadRectEx+0x44>
 800d320:	462c      	mov	r4, r5
 800d322:	e7f0      	b.n	800d306 <GUI_ReadRectEx+0x3a>
 800d324:	bcf0      	pop	{r4, r5, r6, r7}
 800d326:	4770      	bx	lr
 800d328:	2000003c 	.word	0x2000003c

0800d32c <LCD_SelectLCD>:
 800d32c:	4b0d      	ldr	r3, [pc, #52]	; (800d364 <LCD_SelectLCD+0x38>)
 800d32e:	681a      	ldr	r2, [r3, #0]
 800d330:	b510      	push	{r4, lr}
 800d332:	7c51      	ldrb	r1, [r2, #17]
 800d334:	461c      	mov	r4, r3
 800d336:	4a0c      	ldr	r2, [pc, #48]	; (800d368 <LCD_SelectLCD+0x3c>)
 800d338:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 800d33c:	b140      	cbz	r0, 800d350 <LCD_SelectLCD+0x24>
 800d33e:	68c3      	ldr	r3, [r0, #12]
 800d340:	b113      	cbz	r3, 800d348 <LCD_SelectLCD+0x1c>
 800d342:	681b      	ldr	r3, [r3, #0]
 800d344:	2b04      	cmp	r3, #4
 800d346:	d001      	beq.n	800d34c <LCD_SelectLCD+0x20>
 800d348:	6800      	ldr	r0, [r0, #0]
 800d34a:	e7f7      	b.n	800d33c <LCD_SelectLCD+0x10>
 800d34c:	f7fe f972 	bl	800b634 <GUI_DEVICE_Unlink>
 800d350:	6823      	ldr	r3, [r4, #0]
 800d352:	2200      	movs	r2, #0
 800d354:	661a      	str	r2, [r3, #96]	; 0x60
 800d356:	f103 0208 	add.w	r2, r3, #8
 800d35a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d35e:	615a      	str	r2, [r3, #20]
 800d360:	f7ff bbac 	b.w	800cabc <LCD_SetClipRectMax>
 800d364:	2000003c 	.word	0x2000003c
 800d368:	2002db08 	.word	0x2002db08

0800d36c <LCD_GetPosEx>:
 800d36c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d36e:	460c      	mov	r4, r1
 800d370:	4615      	mov	r5, r2
 800d372:	f7fe f927 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800d376:	9001      	str	r0, [sp, #4]
 800d378:	b908      	cbnz	r0, 800d37e <LCD_GetPosEx+0x12>
 800d37a:	2001      	movs	r0, #1
 800d37c:	e00d      	b.n	800d39a <LCD_GetPosEx+0x2e>
 800d37e:	68c3      	ldr	r3, [r0, #12]
 800d380:	2104      	movs	r1, #4
 800d382:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d384:	eb0d 0001 	add.w	r0, sp, r1
 800d388:	4798      	blx	r3
 800d38a:	4603      	mov	r3, r0
 800d38c:	2800      	cmp	r0, #0
 800d38e:	d0f4      	beq.n	800d37a <LCD_GetPosEx+0xe>
 800d390:	9801      	ldr	r0, [sp, #4]
 800d392:	462a      	mov	r2, r5
 800d394:	4621      	mov	r1, r4
 800d396:	4798      	blx	r3
 800d398:	2000      	movs	r0, #0
 800d39a:	b003      	add	sp, #12
 800d39c:	bd30      	pop	{r4, r5, pc}

0800d39e <LCD_SetDevFunc>:
 800d39e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d3a0:	460c      	mov	r4, r1
 800d3a2:	4615      	mov	r5, r2
 800d3a4:	f7fe f90e 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800d3a8:	9001      	str	r0, [sp, #4]
 800d3aa:	b908      	cbnz	r0, 800d3b0 <LCD_SetDevFunc+0x12>
 800d3ac:	2001      	movs	r0, #1
 800d3ae:	e00c      	b.n	800d3ca <LCD_SetDevFunc+0x2c>
 800d3b0:	68c3      	ldr	r3, [r0, #12]
 800d3b2:	2116      	movs	r1, #22
 800d3b4:	a801      	add	r0, sp, #4
 800d3b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d3b8:	4798      	blx	r3
 800d3ba:	4603      	mov	r3, r0
 800d3bc:	2800      	cmp	r0, #0
 800d3be:	d0f5      	beq.n	800d3ac <LCD_SetDevFunc+0xe>
 800d3c0:	9801      	ldr	r0, [sp, #4]
 800d3c2:	462a      	mov	r2, r5
 800d3c4:	4621      	mov	r1, r4
 800d3c6:	4798      	blx	r3
 800d3c8:	2000      	movs	r0, #0
 800d3ca:	b003      	add	sp, #12
 800d3cc:	bd30      	pop	{r4, r5, pc}

0800d3ce <LCD_SetLUTEntryEx>:
 800d3ce:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d3d0:	460c      	mov	r4, r1
 800d3d2:	4615      	mov	r5, r2
 800d3d4:	f7fe f8f6 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800d3d8:	9001      	str	r0, [sp, #4]
 800d3da:	b908      	cbnz	r0, 800d3e0 <LCD_SetLUTEntryEx+0x12>
 800d3dc:	2001      	movs	r0, #1
 800d3de:	e00c      	b.n	800d3fa <LCD_SetLUTEntryEx+0x2c>
 800d3e0:	68c3      	ldr	r3, [r0, #12]
 800d3e2:	2110      	movs	r1, #16
 800d3e4:	a801      	add	r0, sp, #4
 800d3e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d3e8:	4798      	blx	r3
 800d3ea:	4603      	mov	r3, r0
 800d3ec:	2800      	cmp	r0, #0
 800d3ee:	d0f5      	beq.n	800d3dc <LCD_SetLUTEntryEx+0xe>
 800d3f0:	9801      	ldr	r0, [sp, #4]
 800d3f2:	462a      	mov	r2, r5
 800d3f4:	4621      	mov	r1, r4
 800d3f6:	4798      	blx	r3
 800d3f8:	2000      	movs	r0, #0
 800d3fa:	b003      	add	sp, #12
 800d3fc:	bd30      	pop	{r4, r5, pc}

0800d3fe <LCD_SetPosEx>:
 800d3fe:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d400:	460c      	mov	r4, r1
 800d402:	4615      	mov	r5, r2
 800d404:	f7fe f8de 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800d408:	9001      	str	r0, [sp, #4]
 800d40a:	b908      	cbnz	r0, 800d410 <LCD_SetPosEx+0x12>
 800d40c:	2001      	movs	r0, #1
 800d40e:	e00c      	b.n	800d42a <LCD_SetPosEx+0x2c>
 800d410:	68c3      	ldr	r3, [r0, #12]
 800d412:	2103      	movs	r1, #3
 800d414:	a801      	add	r0, sp, #4
 800d416:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d418:	4798      	blx	r3
 800d41a:	4603      	mov	r3, r0
 800d41c:	2800      	cmp	r0, #0
 800d41e:	d0f5      	beq.n	800d40c <LCD_SetPosEx+0xe>
 800d420:	9801      	ldr	r0, [sp, #4]
 800d422:	462a      	mov	r2, r5
 800d424:	4621      	mov	r1, r4
 800d426:	4798      	blx	r3
 800d428:	2000      	movs	r0, #0
 800d42a:	b003      	add	sp, #12
 800d42c:	bd30      	pop	{r4, r5, pc}

0800d42e <LCD_SetSizeEx>:
 800d42e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d430:	460c      	mov	r4, r1
 800d432:	4615      	mov	r5, r2
 800d434:	f7fe f8c6 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800d438:	9001      	str	r0, [sp, #4]
 800d43a:	b908      	cbnz	r0, 800d440 <LCD_SetSizeEx+0x12>
 800d43c:	2001      	movs	r0, #1
 800d43e:	e00c      	b.n	800d45a <LCD_SetSizeEx+0x2c>
 800d440:	68c3      	ldr	r3, [r0, #12]
 800d442:	210b      	movs	r1, #11
 800d444:	a801      	add	r0, sp, #4
 800d446:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d448:	4798      	blx	r3
 800d44a:	4603      	mov	r3, r0
 800d44c:	2800      	cmp	r0, #0
 800d44e:	d0f5      	beq.n	800d43c <LCD_SetSizeEx+0xe>
 800d450:	9801      	ldr	r0, [sp, #4]
 800d452:	462a      	mov	r2, r5
 800d454:	4621      	mov	r1, r4
 800d456:	4798      	blx	r3
 800d458:	2000      	movs	r0, #0
 800d45a:	b003      	add	sp, #12
 800d45c:	bd30      	pop	{r4, r5, pc}

0800d45e <LCD_SetVRAMAddrEx>:
 800d45e:	b513      	push	{r0, r1, r4, lr}
 800d460:	460c      	mov	r4, r1
 800d462:	f7fe f8af 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800d466:	9001      	str	r0, [sp, #4]
 800d468:	b908      	cbnz	r0, 800d46e <LCD_SetVRAMAddrEx+0x10>
 800d46a:	2001      	movs	r0, #1
 800d46c:	e00b      	b.n	800d486 <LCD_SetVRAMAddrEx+0x28>
 800d46e:	68c3      	ldr	r3, [r0, #12]
 800d470:	2109      	movs	r1, #9
 800d472:	a801      	add	r0, sp, #4
 800d474:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d476:	4798      	blx	r3
 800d478:	4603      	mov	r3, r0
 800d47a:	2800      	cmp	r0, #0
 800d47c:	d0f5      	beq.n	800d46a <LCD_SetVRAMAddrEx+0xc>
 800d47e:	9801      	ldr	r0, [sp, #4]
 800d480:	4621      	mov	r1, r4
 800d482:	4798      	blx	r3
 800d484:	2000      	movs	r0, #0
 800d486:	b002      	add	sp, #8
 800d488:	bd10      	pop	{r4, pc}

0800d48a <LCD_SetVSizeEx>:
 800d48a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d48c:	460c      	mov	r4, r1
 800d48e:	4615      	mov	r5, r2
 800d490:	f7fe f898 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 800d494:	9001      	str	r0, [sp, #4]
 800d496:	b908      	cbnz	r0, 800d49c <LCD_SetVSizeEx+0x12>
 800d498:	2001      	movs	r0, #1
 800d49a:	e00c      	b.n	800d4b6 <LCD_SetVSizeEx+0x2c>
 800d49c:	68c3      	ldr	r3, [r0, #12]
 800d49e:	210a      	movs	r1, #10
 800d4a0:	a801      	add	r0, sp, #4
 800d4a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d4a4:	4798      	blx	r3
 800d4a6:	4603      	mov	r3, r0
 800d4a8:	2800      	cmp	r0, #0
 800d4aa:	d0f5      	beq.n	800d498 <LCD_SetVSizeEx+0xe>
 800d4ac:	9801      	ldr	r0, [sp, #4]
 800d4ae:	462a      	mov	r2, r5
 800d4b0:	4621      	mov	r1, r4
 800d4b2:	4798      	blx	r3
 800d4b4:	2000      	movs	r0, #0
 800d4b6:	b003      	add	sp, #12
 800d4b8:	bd30      	pop	{r4, r5, pc}
	...

0800d4bc <LCD_UpdateColorIndices>:
 800d4bc:	b510      	push	{r4, lr}
 800d4be:	4c07      	ldr	r4, [pc, #28]	; (800d4dc <LCD_UpdateColorIndices+0x20>)
 800d4c0:	6823      	ldr	r3, [r4, #0]
 800d4c2:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800d4c4:	f7ff fb5a 	bl	800cb7c <LCD_Color2Index>
 800d4c8:	f7ff fb74 	bl	800cbb4 <LCD_SetColorIndex>
 800d4cc:	6823      	ldr	r3, [r4, #0]
 800d4ce:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800d4d0:	f7ff fb54 	bl	800cb7c <LCD_Color2Index>
 800d4d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d4d8:	f7ff bb88 	b.w	800cbec <LCD_SetBkColorIndex>
 800d4dc:	2000003c 	.word	0x2000003c

0800d4e0 <_GetRect>:
 800d4e0:	6882      	ldr	r2, [r0, #8]
 800d4e2:	2300      	movs	r3, #0
 800d4e4:	800b      	strh	r3, [r1, #0]
 800d4e6:	804b      	strh	r3, [r1, #2]
 800d4e8:	6993      	ldr	r3, [r2, #24]
 800d4ea:	3b01      	subs	r3, #1
 800d4ec:	808b      	strh	r3, [r1, #4]
 800d4ee:	69d3      	ldr	r3, [r2, #28]
 800d4f0:	3b01      	subs	r3, #1
 800d4f2:	80cb      	strh	r3, [r1, #6]
 800d4f4:	4770      	bx	lr

0800d4f6 <_SetPixelIndex>:
 800d4f6:	b510      	push	{r4, lr}
 800d4f8:	6884      	ldr	r4, [r0, #8]
 800d4fa:	6a20      	ldr	r0, [r4, #32]
 800d4fc:	fb00 1202 	mla	r2, r0, r2, r1
 800d500:	6821      	ldr	r1, [r4, #0]
 800d502:	f821 3012 	strh.w	r3, [r1, r2, lsl #1]
 800d506:	bd10      	pop	{r4, pc}

0800d508 <_GetPixelIndex>:
 800d508:	6880      	ldr	r0, [r0, #8]
 800d50a:	6a03      	ldr	r3, [r0, #32]
 800d50c:	fb03 1202 	mla	r2, r3, r2, r1
 800d510:	6803      	ldr	r3, [r0, #0]
 800d512:	f833 0012 	ldrh.w	r0, [r3, r2, lsl #1]
 800d516:	4770      	bx	lr

0800d518 <_XorPixel>:
 800d518:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d51c:	4604      	mov	r4, r0
 800d51e:	460d      	mov	r5, r1
 800d520:	4616      	mov	r6, r2
 800d522:	f7ff fff1 	bl	800d508 <_GetPixelIndex>
 800d526:	6923      	ldr	r3, [r4, #16]
 800d528:	4607      	mov	r7, r0
 800d52a:	689b      	ldr	r3, [r3, #8]
 800d52c:	4798      	blx	r3
 800d52e:	4632      	mov	r2, r6
 800d530:	ea87 0300 	eor.w	r3, r7, r0
 800d534:	4629      	mov	r1, r5
 800d536:	4620      	mov	r0, r4
 800d538:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d53c:	f7ff bfdb 	b.w	800d4f6 <_SetPixelIndex>

0800d540 <_GetDevProp>:
 800d540:	3901      	subs	r1, #1
 800d542:	6883      	ldr	r3, [r0, #8]
 800d544:	290d      	cmp	r1, #13
 800d546:	d814      	bhi.n	800d572 <_GetDevProp+0x32>
 800d548:	e8df f001 	tbb	[pc, r1]
 800d54c:	0f0d0b09 	.word	0x0f0d0b09
 800d550:	16131313 	.word	0x16131313
 800d554:	07111107 	.word	0x07111107
 800d558:	0707      	.short	0x0707
 800d55a:	2000      	movs	r0, #0
 800d55c:	4770      	bx	lr
 800d55e:	6918      	ldr	r0, [r3, #16]
 800d560:	4770      	bx	lr
 800d562:	6958      	ldr	r0, [r3, #20]
 800d564:	4770      	bx	lr
 800d566:	6998      	ldr	r0, [r3, #24]
 800d568:	4770      	bx	lr
 800d56a:	69d8      	ldr	r0, [r3, #28]
 800d56c:	4770      	bx	lr
 800d56e:	2001      	movs	r0, #1
 800d570:	4770      	bx	lr
 800d572:	f04f 30ff 	mov.w	r0, #4294967295
 800d576:	4770      	bx	lr
 800d578:	2010      	movs	r0, #16
 800d57a:	4770      	bx	lr

0800d57c <_GetDevData>:
 800d57c:	2901      	cmp	r1, #1
 800d57e:	4802      	ldr	r0, [pc, #8]	; (800d588 <_GetDevData+0xc>)
 800d580:	bf18      	it	ne
 800d582:	2000      	movne	r0, #0
 800d584:	4770      	bx	lr
 800d586:	bf00      	nop
 800d588:	0801dca0 	.word	0x0801dca0

0800d58c <_ReadRect>:
 800d58c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d590:	6886      	ldr	r6, [r0, #8]
 800d592:	9d07      	ldr	r5, [sp, #28]
 800d594:	6a30      	ldr	r0, [r6, #32]
 800d596:	6836      	ldr	r6, [r6, #0]
 800d598:	0047      	lsls	r7, r0, #1
 800d59a:	fb00 1002 	mla	r0, r0, r2, r1
 800d59e:	9c08      	ldr	r4, [sp, #32]
 800d5a0:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800d5a4:	07c8      	lsls	r0, r1, #31
 800d5a6:	1a41      	subs	r1, r0, r1
 800d5a8:	18c8      	adds	r0, r1, r3
 800d5aa:	3301      	adds	r3, #1
 800d5ac:	4419      	add	r1, r3
 800d5ae:	0040      	lsls	r0, r0, #1
 800d5b0:	2300      	movs	r3, #0
 800d5b2:	0049      	lsls	r1, r1, #1
 800d5b4:	eb03 0c06 	add.w	ip, r3, r6
 800d5b8:	f1a4 0e02 	sub.w	lr, r4, #2
 800d5bc:	eb04 0800 	add.w	r8, r4, r0
 800d5c0:	f83c 9b02 	ldrh.w	r9, [ip], #2
 800d5c4:	f82e 9f02 	strh.w	r9, [lr, #2]!
 800d5c8:	45c6      	cmp	lr, r8
 800d5ca:	d1f9      	bne.n	800d5c0 <_ReadRect+0x34>
 800d5cc:	3201      	adds	r2, #1
 800d5ce:	440c      	add	r4, r1
 800d5d0:	443b      	add	r3, r7
 800d5d2:	f102 3eff 	add.w	lr, r2, #4294967295
 800d5d6:	45ae      	cmp	lr, r5
 800d5d8:	dbec      	blt.n	800d5b4 <_ReadRect+0x28>
 800d5da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800d5e0 <_GetDevFunc>:
 800d5e0:	3901      	subs	r1, #1
 800d5e2:	2928      	cmp	r1, #40	; 0x28
 800d5e4:	d848      	bhi.n	800d678 <_GetDevFunc+0x98>
 800d5e6:	e8df f001 	tbb	[pc, r1]
 800d5ea:	1f45      	.short	0x1f45
 800d5ec:	21471d1b 	.word	0x21471d1b
 800d5f0:	17494747 	.word	0x17494747
 800d5f4:	25472319 	.word	0x25472319
 800d5f8:	47474727 	.word	0x47474727
 800d5fc:	332d2b29 	.word	0x332d2b29
 800d600:	47354747 	.word	0x47354747
 800d604:	47474747 	.word	0x47474747
 800d608:	312f3947 	.word	0x312f3947
 800d60c:	473d4741 	.word	0x473d4741
 800d610:	4747      	.short	0x4747
 800d612:	15          	.byte	0x15
 800d613:	00          	.byte	0x00
 800d614:	481a      	ldr	r0, [pc, #104]	; (800d680 <_GetDevFunc+0xa0>)
 800d616:	4770      	bx	lr
 800d618:	481a      	ldr	r0, [pc, #104]	; (800d684 <_GetDevFunc+0xa4>)
 800d61a:	4770      	bx	lr
 800d61c:	481a      	ldr	r0, [pc, #104]	; (800d688 <_GetDevFunc+0xa8>)
 800d61e:	4770      	bx	lr
 800d620:	481a      	ldr	r0, [pc, #104]	; (800d68c <_GetDevFunc+0xac>)
 800d622:	4770      	bx	lr
 800d624:	481a      	ldr	r0, [pc, #104]	; (800d690 <_GetDevFunc+0xb0>)
 800d626:	4770      	bx	lr
 800d628:	481a      	ldr	r0, [pc, #104]	; (800d694 <_GetDevFunc+0xb4>)
 800d62a:	4770      	bx	lr
 800d62c:	481a      	ldr	r0, [pc, #104]	; (800d698 <_GetDevFunc+0xb8>)
 800d62e:	4770      	bx	lr
 800d630:	481a      	ldr	r0, [pc, #104]	; (800d69c <_GetDevFunc+0xbc>)
 800d632:	4770      	bx	lr
 800d634:	481a      	ldr	r0, [pc, #104]	; (800d6a0 <_GetDevFunc+0xc0>)
 800d636:	4770      	bx	lr
 800d638:	481a      	ldr	r0, [pc, #104]	; (800d6a4 <_GetDevFunc+0xc4>)
 800d63a:	4770      	bx	lr
 800d63c:	481a      	ldr	r0, [pc, #104]	; (800d6a8 <_GetDevFunc+0xc8>)
 800d63e:	4770      	bx	lr
 800d640:	481a      	ldr	r0, [pc, #104]	; (800d6ac <_GetDevFunc+0xcc>)
 800d642:	4770      	bx	lr
 800d644:	481a      	ldr	r0, [pc, #104]	; (800d6b0 <_GetDevFunc+0xd0>)
 800d646:	4770      	bx	lr
 800d648:	481a      	ldr	r0, [pc, #104]	; (800d6b4 <_GetDevFunc+0xd4>)
 800d64a:	4770      	bx	lr
 800d64c:	481a      	ldr	r0, [pc, #104]	; (800d6b8 <_GetDevFunc+0xd8>)
 800d64e:	4770      	bx	lr
 800d650:	481a      	ldr	r0, [pc, #104]	; (800d6bc <_GetDevFunc+0xdc>)
 800d652:	4770      	bx	lr
 800d654:	6803      	ldr	r3, [r0, #0]
 800d656:	689b      	ldr	r3, [r3, #8]
 800d658:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800d65a:	4770      	bx	lr
 800d65c:	6803      	ldr	r3, [r0, #0]
 800d65e:	689b      	ldr	r3, [r3, #8]
 800d660:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 800d662:	4770      	bx	lr
 800d664:	6803      	ldr	r3, [r0, #0]
 800d666:	689b      	ldr	r3, [r3, #8]
 800d668:	6c18      	ldr	r0, [r3, #64]	; 0x40
 800d66a:	4770      	bx	lr
 800d66c:	6803      	ldr	r3, [r0, #0]
 800d66e:	689b      	ldr	r3, [r3, #8]
 800d670:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800d672:	4770      	bx	lr
 800d674:	4812      	ldr	r0, [pc, #72]	; (800d6c0 <_GetDevFunc+0xe0>)
 800d676:	4770      	bx	lr
 800d678:	2000      	movs	r0, #0
 800d67a:	4770      	bx	lr
 800d67c:	4811      	ldr	r0, [pc, #68]	; (800d6c4 <_GetDevFunc+0xe4>)
 800d67e:	4770      	bx	lr
 800d680:	0800e0a5 	.word	0x0800e0a5
 800d684:	0800e2b3 	.word	0x0800e2b3
 800d688:	0800e271 	.word	0x0800e271
 800d68c:	0800e177 	.word	0x0800e177
 800d690:	0800e089 	.word	0x0800e089
 800d694:	0800e125 	.word	0x0800e125
 800d698:	0800e0fd 	.word	0x0800e0fd
 800d69c:	0800e0e3 	.word	0x0800e0e3
 800d6a0:	0800d715 	.word	0x0800d715
 800d6a4:	0800d70b 	.word	0x0800d70b
 800d6a8:	0800d6f5 	.word	0x0800d6f5
 800d6ac:	0800d6df 	.word	0x0800d6df
 800d6b0:	0800d6c9 	.word	0x0800d6c9
 800d6b4:	0800e025 	.word	0x0800e025
 800d6b8:	0800e0bd 	.word	0x0800e0bd
 800d6bc:	0800dfd7 	.word	0x0800dfd7
 800d6c0:	0800d58d 	.word	0x0800d58d
 800d6c4:	0800e14d 	.word	0x0800e14d

0800d6c8 <_SetChroma>:
 800d6c8:	b507      	push	{r0, r1, r2, lr}
 800d6ca:	e88d 0006 	stmia.w	sp, {r1, r2}
 800d6ce:	466a      	mov	r2, sp
 800d6d0:	210d      	movs	r1, #13
 800d6d2:	6980      	ldr	r0, [r0, #24]
 800d6d4:	f7fb fee6 	bl	80094a4 <LCD_X_DisplayDriver>
 800d6d8:	b003      	add	sp, #12
 800d6da:	f85d fb04 	ldr.w	pc, [sp], #4

0800d6de <_SetChromaMode>:
 800d6de:	b507      	push	{r0, r1, r2, lr}
 800d6e0:	aa02      	add	r2, sp, #8
 800d6e2:	6980      	ldr	r0, [r0, #24]
 800d6e4:	f842 1d04 	str.w	r1, [r2, #-4]!
 800d6e8:	210c      	movs	r1, #12
 800d6ea:	f7fb fedb 	bl	80094a4 <LCD_X_DisplayDriver>
 800d6ee:	b003      	add	sp, #12
 800d6f0:	f85d fb04 	ldr.w	pc, [sp], #4

0800d6f4 <_SetAlphaMode>:
 800d6f4:	b507      	push	{r0, r1, r2, lr}
 800d6f6:	aa02      	add	r2, sp, #8
 800d6f8:	6980      	ldr	r0, [r0, #24]
 800d6fa:	f842 1d04 	str.w	r1, [r2, #-4]!
 800d6fe:	210b      	movs	r1, #11
 800d700:	f7fb fed0 	bl	80094a4 <LCD_X_DisplayDriver>
 800d704:	b003      	add	sp, #12
 800d706:	f85d fb04 	ldr.w	pc, [sp], #4

0800d70a <_Off>:
 800d70a:	2200      	movs	r2, #0
 800d70c:	2106      	movs	r1, #6
 800d70e:	6980      	ldr	r0, [r0, #24]
 800d710:	f7fb bec8 	b.w	80094a4 <LCD_X_DisplayDriver>

0800d714 <_On>:
 800d714:	2200      	movs	r2, #0
 800d716:	2105      	movs	r1, #5
 800d718:	6980      	ldr	r0, [r0, #24]
 800d71a:	f7fb bec3 	b.w	80094a4 <LCD_X_DisplayDriver>

0800d71e <_SetOrg>:
 800d71e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d722:	2300      	movs	r3, #0
 800d724:	4607      	mov	r7, r0
 800d726:	6884      	ldr	r4, [r0, #8]
 800d728:	460d      	mov	r5, r1
 800d72a:	6980      	ldr	r0, [r0, #24]
 800d72c:	4616      	mov	r6, r2
 800d72e:	9300      	str	r3, [sp, #0]
 800d730:	9301      	str	r3, [sp, #4]
 800d732:	f7ff fbe9 	bl	800cf08 <LCD_GetMirrorXEx>
 800d736:	4680      	mov	r8, r0
 800d738:	69b8      	ldr	r0, [r7, #24]
 800d73a:	f7ff fbe8 	bl	800cf0e <LCD_GetMirrorYEx>
 800d73e:	4681      	mov	r9, r0
 800d740:	69b8      	ldr	r0, [r7, #24]
 800d742:	f7ff fbe7 	bl	800cf14 <LCD_GetSwapXYEx>
 800d746:	0080      	lsls	r0, r0, #2
 800d748:	ea40 0049 	orr.w	r0, r0, r9, lsl #1
 800d74c:	ea40 0008 	orr.w	r0, r0, r8
 800d750:	2807      	cmp	r0, #7
 800d752:	d826      	bhi.n	800d7a2 <_SetOrg+0x84>
 800d754:	e8df f000 	tbb	[pc, r0]
 800d758:	0b0f0408 	.word	0x0b0f0408
 800d75c:	1b1f1519 	.word	0x1b1f1519
 800d760:	69a3      	ldr	r3, [r4, #24]
 800d762:	6921      	ldr	r1, [r4, #16]
 800d764:	1a59      	subs	r1, r3, r1
 800d766:	1b4d      	subs	r5, r1, r5
 800d768:	9500      	str	r5, [sp, #0]
 800d76a:	9601      	str	r6, [sp, #4]
 800d76c:	e019      	b.n	800d7a2 <_SetOrg+0x84>
 800d76e:	69a3      	ldr	r3, [r4, #24]
 800d770:	6921      	ldr	r1, [r4, #16]
 800d772:	1a5b      	subs	r3, r3, r1
 800d774:	1b5d      	subs	r5, r3, r5
 800d776:	69e3      	ldr	r3, [r4, #28]
 800d778:	6962      	ldr	r2, [r4, #20]
 800d77a:	9500      	str	r5, [sp, #0]
 800d77c:	1a9a      	subs	r2, r3, r2
 800d77e:	1b96      	subs	r6, r2, r6
 800d780:	e7f3      	b.n	800d76a <_SetOrg+0x4c>
 800d782:	69e3      	ldr	r3, [r4, #28]
 800d784:	6962      	ldr	r2, [r4, #20]
 800d786:	1a9a      	subs	r2, r3, r2
 800d788:	1b96      	subs	r6, r2, r6
 800d78a:	9600      	str	r6, [sp, #0]
 800d78c:	e008      	b.n	800d7a0 <_SetOrg+0x82>
 800d78e:	69e3      	ldr	r3, [r4, #28]
 800d790:	6962      	ldr	r2, [r4, #20]
 800d792:	1a9b      	subs	r3, r3, r2
 800d794:	1b9e      	subs	r6, r3, r6
 800d796:	69a3      	ldr	r3, [r4, #24]
 800d798:	6921      	ldr	r1, [r4, #16]
 800d79a:	9600      	str	r6, [sp, #0]
 800d79c:	1a59      	subs	r1, r3, r1
 800d79e:	1b4d      	subs	r5, r1, r5
 800d7a0:	9501      	str	r5, [sp, #4]
 800d7a2:	466a      	mov	r2, sp
 800d7a4:	2103      	movs	r1, #3
 800d7a6:	69b8      	ldr	r0, [r7, #24]
 800d7a8:	f7fb fe7c 	bl	80094a4 <LCD_X_DisplayDriver>
 800d7ac:	b003      	add	sp, #12
 800d7ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800d7b4 <_FillRect>:
 800d7b4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800d7b8:	6885      	ldr	r5, [r0, #8]
 800d7ba:	469c      	mov	ip, r3
 800d7bc:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 800d7c0:	f8d5 9034 	ldr.w	r9, [r5, #52]	; 0x34
 800d7c4:	4e6c      	ldr	r6, [pc, #432]	; (800d978 <_FillRect+0x1c4>)
 800d7c6:	f1b9 0f00 	cmp.w	r9, #0
 800d7ca:	d008      	beq.n	800d7de <_FillRect+0x2a>
 800d7cc:	6834      	ldr	r4, [r6, #0]
 800d7ce:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800d7d0:	6824      	ldr	r4, [r4, #0]
 800d7d2:	f8cd 8000 	str.w	r8, [sp]
 800d7d6:	9401      	str	r4, [sp, #4]
 800d7d8:	6980      	ldr	r0, [r0, #24]
 800d7da:	47c8      	blx	r9
 800d7dc:	e0c8      	b.n	800d970 <_FillRect+0x1bc>
 800d7de:	f8d6 e000 	ldr.w	lr, [r6]
 800d7e2:	0848      	lsrs	r0, r1, #1
 800d7e4:	6a2e      	ldr	r6, [r5, #32]
 800d7e6:	ebc1 0c0c 	rsb	ip, r1, ip
 800d7ea:	f001 0101 	and.w	r1, r1, #1
 800d7ee:	1076      	asrs	r6, r6, #1
 800d7f0:	fb06 0302 	mla	r3, r6, r2, r0
 800d7f4:	6828      	ldr	r0, [r5, #0]
 800d7f6:	ebc2 0208 	rsb	r2, r2, r8
 800d7fa:	f10c 0501 	add.w	r5, ip, #1
 800d7fe:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800d802:	f89e 3010 	ldrb.w	r3, [lr, #16]
 800d806:	1c57      	adds	r7, r2, #1
 800d808:	f013 0f01 	tst.w	r3, #1
 800d80c:	d03d      	beq.n	800d88a <_FillRect+0xd6>
 800d80e:	b181      	cbz	r1, 800d832 <_FillRect+0x7e>
 800d810:	00b1      	lsls	r1, r6, #2
 800d812:	463d      	mov	r5, r7
 800d814:	4604      	mov	r4, r0
 800d816:	b145      	cbz	r5, 800d82a <_FillRect+0x76>
 800d818:	6823      	ldr	r3, [r4, #0]
 800d81a:	3d01      	subs	r5, #1
 800d81c:	f083 437f 	eor.w	r3, r3, #4278190080	; 0xff000000
 800d820:	f483 037f 	eor.w	r3, r3, #16711680	; 0xff0000
 800d824:	6023      	str	r3, [r4, #0]
 800d826:	440c      	add	r4, r1
 800d828:	e7f5      	b.n	800d816 <_FillRect+0x62>
 800d82a:	fb01 0107 	mla	r1, r1, r7, r0
 800d82e:	4665      	mov	r5, ip
 800d830:	3004      	adds	r0, #4
 800d832:	2d01      	cmp	r5, #1
 800d834:	dd1b      	ble.n	800d86e <_FillRect+0xba>
 800d836:	1eab      	subs	r3, r5, #2
 800d838:	ea4f 0e86 	mov.w	lr, r6, lsl #2
 800d83c:	463c      	mov	r4, r7
 800d83e:	085b      	lsrs	r3, r3, #1
 800d840:	fb0e 0202 	mla	r2, lr, r2, r0
 800d844:	4608      	mov	r0, r1
 800d846:	3301      	adds	r3, #1
 800d848:	009b      	lsls	r3, r3, #2
 800d84a:	b174      	cbz	r4, 800d86a <_FillRect+0xb6>
 800d84c:	3c01      	subs	r4, #1
 800d84e:	4628      	mov	r0, r5
 800d850:	4694      	mov	ip, r2
 800d852:	f8dc 1000 	ldr.w	r1, [ip]
 800d856:	3802      	subs	r0, #2
 800d858:	43c9      	mvns	r1, r1
 800d85a:	2801      	cmp	r0, #1
 800d85c:	f84c 1b04 	str.w	r1, [ip], #4
 800d860:	dcf7      	bgt.n	800d852 <_FillRect+0x9e>
 800d862:	18d0      	adds	r0, r2, r3
 800d864:	ebce 0202 	rsb	r2, lr, r2
 800d868:	e7ef      	b.n	800d84a <_FillRect+0x96>
 800d86a:	f005 0501 	and.w	r5, r5, #1
 800d86e:	2d01      	cmp	r5, #1
 800d870:	d17e      	bne.n	800d970 <_FillRect+0x1bc>
 800d872:	00b6      	lsls	r6, r6, #2
 800d874:	2f00      	cmp	r7, #0
 800d876:	d07b      	beq.n	800d970 <_FillRect+0x1bc>
 800d878:	6803      	ldr	r3, [r0, #0]
 800d87a:	3f01      	subs	r7, #1
 800d87c:	f483 437f 	eor.w	r3, r3, #65280	; 0xff00
 800d880:	f083 03ff 	eor.w	r3, r3, #255	; 0xff
 800d884:	6003      	str	r3, [r0, #0]
 800d886:	4430      	add	r0, r6
 800d888:	e7f4      	b.n	800d874 <_FillRect+0xc0>
 800d88a:	f8de 303c 	ldr.w	r3, [lr, #60]	; 0x3c
 800d88e:	f8d3 e000 	ldr.w	lr, [r3]
 800d892:	ea4f 480e 	mov.w	r8, lr, lsl #16
 800d896:	b171      	cbz	r1, 800d8b6 <_FillRect+0x102>
 800d898:	00b1      	lsls	r1, r6, #2
 800d89a:	463d      	mov	r5, r7
 800d89c:	4604      	mov	r4, r0
 800d89e:	b135      	cbz	r5, 800d8ae <_FillRect+0xfa>
 800d8a0:	8823      	ldrh	r3, [r4, #0]
 800d8a2:	3d01      	subs	r5, #1
 800d8a4:	ea43 0308 	orr.w	r3, r3, r8
 800d8a8:	6023      	str	r3, [r4, #0]
 800d8aa:	440c      	add	r4, r1
 800d8ac:	e7f7      	b.n	800d89e <_FillRect+0xea>
 800d8ae:	fb01 0107 	mla	r1, r1, r7, r0
 800d8b2:	4665      	mov	r5, ip
 800d8b4:	3004      	adds	r0, #4
 800d8b6:	2d0f      	cmp	r5, #15
 800d8b8:	eb08 030e 	add.w	r3, r8, lr
 800d8bc:	dd2f      	ble.n	800d91e <_FillRect+0x16a>
 800d8be:	f1a5 0910 	sub.w	r9, r5, #16
 800d8c2:	ea4f 0a86 	mov.w	sl, r6, lsl #2
 800d8c6:	46b8      	mov	r8, r7
 800d8c8:	ea4f 1419 	mov.w	r4, r9, lsr #4
 800d8cc:	fb0a 0c02 	mla	ip, sl, r2, r0
 800d8d0:	4608      	mov	r0, r1
 800d8d2:	3401      	adds	r4, #1
 800d8d4:	0164      	lsls	r4, r4, #5
 800d8d6:	f1b8 0f00 	cmp.w	r8, #0
 800d8da:	d01d      	beq.n	800d918 <_FillRect+0x164>
 800d8dc:	f108 38ff 	add.w	r8, r8, #4294967295
 800d8e0:	f10c 0120 	add.w	r1, ip, #32
 800d8e4:	4648      	mov	r0, r9
 800d8e6:	3810      	subs	r0, #16
 800d8e8:	f841 3c20 	str.w	r3, [r1, #-32]
 800d8ec:	f841 3c1c 	str.w	r3, [r1, #-28]
 800d8f0:	f101 0120 	add.w	r1, r1, #32
 800d8f4:	f841 3c38 	str.w	r3, [r1, #-56]
 800d8f8:	f841 3c34 	str.w	r3, [r1, #-52]
 800d8fc:	f841 3c30 	str.w	r3, [r1, #-48]
 800d900:	f841 3c2c 	str.w	r3, [r1, #-44]
 800d904:	f841 3c28 	str.w	r3, [r1, #-40]
 800d908:	f841 3c24 	str.w	r3, [r1, #-36]
 800d90c:	d5eb      	bpl.n	800d8e6 <_FillRect+0x132>
 800d90e:	eb0c 0004 	add.w	r0, ip, r4
 800d912:	ebca 0c0c 	rsb	ip, sl, ip
 800d916:	e7de      	b.n	800d8d6 <_FillRect+0x122>
 800d918:	f005 050f 	and.w	r5, r5, #15
 800d91c:	4601      	mov	r1, r0
 800d91e:	2d01      	cmp	r5, #1
 800d920:	dd1b      	ble.n	800d95a <_FillRect+0x1a6>
 800d922:	1eac      	subs	r4, r5, #2
 800d924:	ea4f 0c86 	mov.w	ip, r6, lsl #2
 800d928:	46b8      	mov	r8, r7
 800d92a:	0864      	lsrs	r4, r4, #1
 800d92c:	fb0c 0202 	mla	r2, ip, r2, r0
 800d930:	4608      	mov	r0, r1
 800d932:	3401      	adds	r4, #1
 800d934:	00a4      	lsls	r4, r4, #2
 800d936:	f1b8 0f00 	cmp.w	r8, #0
 800d93a:	d00c      	beq.n	800d956 <_FillRect+0x1a2>
 800d93c:	f108 38ff 	add.w	r8, r8, #4294967295
 800d940:	4629      	mov	r1, r5
 800d942:	4610      	mov	r0, r2
 800d944:	3902      	subs	r1, #2
 800d946:	f840 3b04 	str.w	r3, [r0], #4
 800d94a:	2901      	cmp	r1, #1
 800d94c:	dcfa      	bgt.n	800d944 <_FillRect+0x190>
 800d94e:	1910      	adds	r0, r2, r4
 800d950:	ebcc 0202 	rsb	r2, ip, r2
 800d954:	e7ef      	b.n	800d936 <_FillRect+0x182>
 800d956:	f005 0501 	and.w	r5, r5, #1
 800d95a:	2d01      	cmp	r5, #1
 800d95c:	d108      	bne.n	800d970 <_FillRect+0x1bc>
 800d95e:	00b6      	lsls	r6, r6, #2
 800d960:	b137      	cbz	r7, 800d970 <_FillRect+0x1bc>
 800d962:	8843      	ldrh	r3, [r0, #2]
 800d964:	3f01      	subs	r7, #1
 800d966:	ea4e 4303 	orr.w	r3, lr, r3, lsl #16
 800d96a:	6003      	str	r3, [r0, #0]
 800d96c:	4430      	add	r0, r6
 800d96e:	e7f7      	b.n	800d960 <_FillRect+0x1ac>
 800d970:	b002      	add	sp, #8
 800d972:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d976:	bf00      	nop
 800d978:	2000003c 	.word	0x2000003c

0800d97c <_DrawHLine>:
 800d97c:	b507      	push	{r0, r1, r2, lr}
 800d97e:	9200      	str	r2, [sp, #0]
 800d980:	f7ff ff18 	bl	800d7b4 <_FillRect>
 800d984:	b003      	add	sp, #12
 800d986:	f85d fb04 	ldr.w	pc, [sp], #4

0800d98a <_DrawVLine>:
 800d98a:	b507      	push	{r0, r1, r2, lr}
 800d98c:	9300      	str	r3, [sp, #0]
 800d98e:	460b      	mov	r3, r1
 800d990:	f7ff ff10 	bl	800d7b4 <_FillRect>
 800d994:	b003      	add	sp, #12
 800d996:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800d99c <_DrawBitmap>:
 800d99c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d9a0:	b08b      	sub	sp, #44	; 0x2c
 800d9a2:	4683      	mov	fp, r0
 800d9a4:	4688      	mov	r8, r1
 800d9a6:	6887      	ldr	r7, [r0, #8]
 800d9a8:	9301      	str	r3, [sp, #4]
 800d9aa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800d9ac:	9203      	str	r2, [sp, #12]
 800d9ae:	9304      	str	r3, [sp, #16]
 800d9b0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800d9b2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 800d9b4:	9305      	str	r3, [sp, #20]
 800d9b6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800d9b8:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800d9ba:	9302      	str	r3, [sp, #8]
 800d9bc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d9be:	3b01      	subs	r3, #1
 800d9c0:	2b0f      	cmp	r3, #15
 800d9c2:	f200 82f3 	bhi.w	800dfac <_DrawBitmap+0x610>
 800d9c6:	e8df f013 	tbh	[pc, r3, lsl #1]
 800d9ca:	0023      	.short	0x0023
 800d9cc:	02f10019 	.word	0x02f10019
 800d9d0:	02f10010 	.word	0x02f10010
 800d9d4:	02f102f1 	.word	0x02f102f1
 800d9d8:	02f10210 	.word	0x02f10210
 800d9dc:	02f102f1 	.word	0x02f102f1
 800d9e0:	02f102f1 	.word	0x02f102f1
 800d9e4:	02f102f1 	.word	0x02f102f1
 800d9e8:	02bd      	.short	0x02bd
 800d9ea:	2300      	movs	r3, #0
 800d9ec:	9a01      	ldr	r2, [sp, #4]
 800d9ee:	9306      	str	r3, [sp, #24]
 800d9f0:	9b02      	ldr	r3, [sp, #8]
 800d9f2:	18cb      	adds	r3, r1, r3
 800d9f4:	9308      	str	r3, [sp, #32]
 800d9f6:	4413      	add	r3, r2
 800d9f8:	9309      	str	r3, [sp, #36]	; 0x24
 800d9fa:	e169      	b.n	800dcd0 <_DrawBitmap+0x334>
 800d9fc:	2300      	movs	r3, #0
 800d9fe:	9306      	str	r3, [sp, #24]
 800da00:	9b02      	ldr	r3, [sp, #8]
 800da02:	18cb      	adds	r3, r1, r3
 800da04:	9308      	str	r3, [sp, #32]
 800da06:	9a08      	ldr	r2, [sp, #32]
 800da08:	9b01      	ldr	r3, [sp, #4]
 800da0a:	4413      	add	r3, r2
 800da0c:	9309      	str	r3, [sp, #36]	; 0x24
 800da0e:	e0bc      	b.n	800db8a <_DrawBitmap+0x1ee>
 800da10:	6bfe      	ldr	r6, [r7, #60]	; 0x3c
 800da12:	b126      	cbz	r6, 800da1e <_DrawBitmap+0x82>
 800da14:	4ba3      	ldr	r3, [pc, #652]	; (800dca4 <_DrawBitmap+0x308>)
 800da16:	681b      	ldr	r3, [r3, #0]
 800da18:	7c1b      	ldrb	r3, [r3, #16]
 800da1a:	07d9      	lsls	r1, r3, #31
 800da1c:	d502      	bpl.n	800da24 <_DrawBitmap+0x88>
 800da1e:	f04f 0900 	mov.w	r9, #0
 800da22:	e061      	b.n	800dae8 <_DrawBitmap+0x14c>
 800da24:	9b05      	ldr	r3, [sp, #20]
 800da26:	4641      	mov	r1, r8
 800da28:	9518      	str	r5, [sp, #96]	; 0x60
 800da2a:	46b4      	mov	ip, r6
 800da2c:	9317      	str	r3, [sp, #92]	; 0x5c
 800da2e:	9b04      	ldr	r3, [sp, #16]
 800da30:	9a03      	ldr	r2, [sp, #12]
 800da32:	9316      	str	r3, [sp, #88]	; 0x58
 800da34:	9b01      	ldr	r3, [sp, #4]
 800da36:	9315      	str	r3, [sp, #84]	; 0x54
 800da38:	9b02      	ldr	r3, [sp, #8]
 800da3a:	9314      	str	r3, [sp, #80]	; 0x50
 800da3c:	4623      	mov	r3, r4
 800da3e:	6980      	ldr	r0, [r0, #24]
 800da40:	b00b      	add	sp, #44	; 0x2c
 800da42:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da46:	4760      	bx	ip
 800da48:	686b      	ldr	r3, [r5, #4]
 800da4a:	f8db a008 	ldr.w	sl, [fp, #8]
 800da4e:	9307      	str	r3, [sp, #28]
 800da50:	9902      	ldr	r1, [sp, #8]
 800da52:	9b03      	ldr	r3, [sp, #12]
 800da54:	f8da 2020 	ldr.w	r2, [sl, #32]
 800da58:	4441      	add	r1, r8
 800da5a:	444b      	add	r3, r9
 800da5c:	fb02 1303 	mla	r3, r2, r3, r1
 800da60:	9a02      	ldr	r2, [sp, #8]
 800da62:	4991      	ldr	r1, [pc, #580]	; (800dca8 <_DrawBitmap+0x30c>)
 800da64:	f1c2 0708 	rsb	r7, r2, #8
 800da68:	7822      	ldrb	r2, [r4, #0]
 800da6a:	5c8e      	ldrb	r6, [r1, r2]
 800da6c:	0059      	lsls	r1, r3, #1
 800da6e:	9a02      	ldr	r2, [sp, #8]
 800da70:	4116      	asrs	r6, r2
 800da72:	4a8c      	ldr	r2, [pc, #560]	; (800dca4 <_DrawBitmap+0x308>)
 800da74:	6812      	ldr	r2, [r2, #0]
 800da76:	7c12      	ldrb	r2, [r2, #16]
 800da78:	f002 0203 	and.w	r2, r2, #3
 800da7c:	2a02      	cmp	r2, #2
 800da7e:	d037      	beq.n	800daf0 <_DrawBitmap+0x154>
 800da80:	2a03      	cmp	r2, #3
 800da82:	d04e      	beq.n	800db22 <_DrawBitmap+0x186>
 800da84:	2a01      	cmp	r2, #1
 800da86:	d04c      	beq.n	800db22 <_DrawBitmap+0x186>
 800da88:	682a      	ldr	r2, [r5, #0]
 800da8a:	9901      	ldr	r1, [sp, #4]
 800da8c:	9208      	str	r2, [sp, #32]
 800da8e:	f8da 2000 	ldr.w	r2, [sl]
 800da92:	9406      	str	r4, [sp, #24]
 800da94:	9209      	str	r2, [sp, #36]	; 0x24
 800da96:	42b9      	cmp	r1, r7
 800da98:	460a      	mov	r2, r1
 800da9a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800da9c:	bf28      	it	cs
 800da9e:	463a      	movcs	r2, r7
 800daa0:	eb00 0c43 	add.w	ip, r0, r3, lsl #1
 800daa4:	4696      	mov	lr, r2
 800daa6:	9808      	ldr	r0, [sp, #32]
 800daa8:	f016 0f01 	tst.w	r6, #1
 800daac:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800dab0:	4682      	mov	sl, r0
 800dab2:	9807      	ldr	r0, [sp, #28]
 800dab4:	bf18      	it	ne
 800dab6:	4682      	movne	sl, r0
 800dab8:	f1be 0e01 	subs.w	lr, lr, #1
 800dabc:	f82c ab02 	strh.w	sl, [ip], #2
 800dac0:	d1f1      	bne.n	800daa6 <_DrawBitmap+0x10a>
 800dac2:	1abf      	subs	r7, r7, r2
 800dac4:	4413      	add	r3, r2
 800dac6:	eba1 0102 	sub.w	r1, r1, r2
 800daca:	d107      	bne.n	800dadc <_DrawBitmap+0x140>
 800dacc:	9a06      	ldr	r2, [sp, #24]
 800dace:	2708      	movs	r7, #8
 800dad0:	4875      	ldr	r0, [pc, #468]	; (800dca8 <_DrawBitmap+0x30c>)
 800dad2:	7852      	ldrb	r2, [r2, #1]
 800dad4:	5c86      	ldrb	r6, [r0, r2]
 800dad6:	9a06      	ldr	r2, [sp, #24]
 800dad8:	3201      	adds	r2, #1
 800dada:	9206      	str	r2, [sp, #24]
 800dadc:	2900      	cmp	r1, #0
 800dade:	d1da      	bne.n	800da96 <_DrawBitmap+0xfa>
 800dae0:	9b05      	ldr	r3, [sp, #20]
 800dae2:	f109 0901 	add.w	r9, r9, #1
 800dae6:	441c      	add	r4, r3
 800dae8:	9b04      	ldr	r3, [sp, #16]
 800daea:	4599      	cmp	r9, r3
 800daec:	dbac      	blt.n	800da48 <_DrawBitmap+0xac>
 800daee:	e25d      	b.n	800dfac <_DrawBitmap+0x610>
 800daf0:	460b      	mov	r3, r1
 800daf2:	4620      	mov	r0, r4
 800daf4:	9901      	ldr	r1, [sp, #4]
 800daf6:	07f2      	lsls	r2, r6, #31
 800daf8:	bf42      	ittt	mi
 800dafa:	f8da 2000 	ldrmi.w	r2, [sl]
 800dafe:	f8bd e01c 	ldrhmi.w	lr, [sp, #28]
 800db02:	f822 e003 	strhmi.w	lr, [r2, r3]
 800db06:	3f01      	subs	r7, #1
 800db08:	f103 0302 	add.w	r3, r3, #2
 800db0c:	bf09      	itett	eq
 800db0e:	7842      	ldrbeq	r2, [r0, #1]
 800db10:	0876      	lsrne	r6, r6, #1
 800db12:	4e65      	ldreq	r6, [pc, #404]	; (800dca8 <_DrawBitmap+0x30c>)
 800db14:	3001      	addeq	r0, #1
 800db16:	bf04      	itt	eq
 800db18:	2708      	moveq	r7, #8
 800db1a:	5cb6      	ldrbeq	r6, [r6, r2]
 800db1c:	3901      	subs	r1, #1
 800db1e:	d1ea      	bne.n	800daf6 <_DrawBitmap+0x15a>
 800db20:	e7de      	b.n	800dae0 <_DrawBitmap+0x144>
 800db22:	f8db 3010 	ldr.w	r3, [fp, #16]
 800db26:	9106      	str	r1, [sp, #24]
 800db28:	689b      	ldr	r3, [r3, #8]
 800db2a:	4798      	blx	r3
 800db2c:	9906      	ldr	r1, [sp, #24]
 800db2e:	9a01      	ldr	r2, [sp, #4]
 800db30:	460b      	mov	r3, r1
 800db32:	4621      	mov	r1, r4
 800db34:	f016 0f01 	tst.w	r6, #1
 800db38:	bf1f      	itttt	ne
 800db3a:	f8da c000 	ldrne.w	ip, [sl]
 800db3e:	f833 e00c 	ldrhne.w	lr, [r3, ip]
 800db42:	ea80 0e0e 	eorne.w	lr, r0, lr
 800db46:	f823 e00c 	strhne.w	lr, [r3, ip]
 800db4a:	3f01      	subs	r7, #1
 800db4c:	f103 0302 	add.w	r3, r3, #2
 800db50:	bf09      	itett	eq
 800db52:	784e      	ldrbeq	r6, [r1, #1]
 800db54:	0876      	lsrne	r6, r6, #1
 800db56:	4f54      	ldreq	r7, [pc, #336]	; (800dca8 <_DrawBitmap+0x30c>)
 800db58:	3101      	addeq	r1, #1
 800db5a:	bf04      	itt	eq
 800db5c:	5dbe      	ldrbeq	r6, [r7, r6]
 800db5e:	2708      	moveq	r7, #8
 800db60:	3a01      	subs	r2, #1
 800db62:	d1e7      	bne.n	800db34 <_DrawBitmap+0x198>
 800db64:	e7bc      	b.n	800dae0 <_DrawBitmap+0x144>
 800db66:	9b06      	ldr	r3, [sp, #24]
 800db68:	9a03      	ldr	r2, [sp, #12]
 800db6a:	7826      	ldrb	r6, [r4, #0]
 800db6c:	4413      	add	r3, r2
 800db6e:	9307      	str	r3, [sp, #28]
 800db70:	4b4c      	ldr	r3, [pc, #304]	; (800dca4 <_DrawBitmap+0x308>)
 800db72:	681b      	ldr	r3, [r3, #0]
 800db74:	7c1b      	ldrb	r3, [r3, #16]
 800db76:	f013 0303 	ands.w	r3, r3, #3
 800db7a:	d00b      	beq.n	800db94 <_DrawBitmap+0x1f8>
 800db7c:	2b02      	cmp	r3, #2
 800db7e:	d04c      	beq.n	800dc1a <_DrawBitmap+0x27e>
 800db80:	9b05      	ldr	r3, [sp, #20]
 800db82:	441c      	add	r4, r3
 800db84:	9b06      	ldr	r3, [sp, #24]
 800db86:	3301      	adds	r3, #1
 800db88:	9306      	str	r3, [sp, #24]
 800db8a:	9b06      	ldr	r3, [sp, #24]
 800db8c:	9a04      	ldr	r2, [sp, #16]
 800db8e:	4293      	cmp	r3, r2
 800db90:	dbe9      	blt.n	800db66 <_DrawBitmap+0x1ca>
 800db92:	e20b      	b.n	800dfac <_DrawBitmap+0x610>
 800db94:	9f02      	ldr	r7, [sp, #8]
 800db96:	46a0      	mov	r8, r4
 800db98:	9908      	ldr	r1, [sp, #32]
 800db9a:	b305      	cbz	r5, 800dbde <_DrawBitmap+0x242>
 800db9c:	9a01      	ldr	r2, [sp, #4]
 800db9e:	eb01 0902 	add.w	r9, r1, r2
 800dba2:	f1c7 0303 	rsb	r3, r7, #3
 800dba6:	20c0      	movs	r0, #192	; 0xc0
 800dba8:	3701      	adds	r7, #1
 800dbaa:	f101 0a01 	add.w	sl, r1, #1
 800dbae:	005a      	lsls	r2, r3, #1
 800dbb0:	f1c2 0306 	rsb	r3, r2, #6
 800dbb4:	fa40 f303 	asr.w	r3, r0, r3
 800dbb8:	4658      	mov	r0, fp
 800dbba:	4033      	ands	r3, r6
 800dbbc:	40d3      	lsrs	r3, r2
 800dbbe:	9a07      	ldr	r2, [sp, #28]
 800dbc0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800dbc4:	f7ff fc97 	bl	800d4f6 <_SetPixelIndex>
 800dbc8:	2f04      	cmp	r7, #4
 800dbca:	4651      	mov	r1, sl
 800dbcc:	bf02      	ittt	eq
 800dbce:	f898 6001 	ldrbeq.w	r6, [r8, #1]
 800dbd2:	2700      	moveq	r7, #0
 800dbd4:	f108 0801 	addeq.w	r8, r8, #1
 800dbd8:	45ca      	cmp	sl, r9
 800dbda:	d1e2      	bne.n	800dba2 <_DrawBitmap+0x206>
 800dbdc:	e7d0      	b.n	800db80 <_DrawBitmap+0x1e4>
 800dbde:	f04f 0ac0 	mov.w	sl, #192	; 0xc0
 800dbe2:	f1c7 0203 	rsb	r2, r7, #3
 800dbe6:	3701      	adds	r7, #1
 800dbe8:	4658      	mov	r0, fp
 800dbea:	f101 0901 	add.w	r9, r1, #1
 800dbee:	0052      	lsls	r2, r2, #1
 800dbf0:	f1c2 0306 	rsb	r3, r2, #6
 800dbf4:	fa4a f303 	asr.w	r3, sl, r3
 800dbf8:	4033      	ands	r3, r6
 800dbfa:	40d3      	lsrs	r3, r2
 800dbfc:	9a07      	ldr	r2, [sp, #28]
 800dbfe:	f7ff fc7a 	bl	800d4f6 <_SetPixelIndex>
 800dc02:	2f04      	cmp	r7, #4
 800dc04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dc06:	4649      	mov	r1, r9
 800dc08:	bf02      	ittt	eq
 800dc0a:	f898 6001 	ldrbeq.w	r6, [r8, #1]
 800dc0e:	2700      	moveq	r7, #0
 800dc10:	f108 0801 	addeq.w	r8, r8, #1
 800dc14:	4599      	cmp	r9, r3
 800dc16:	d1e4      	bne.n	800dbe2 <_DrawBitmap+0x246>
 800dc18:	e7b2      	b.n	800db80 <_DrawBitmap+0x1e4>
 800dc1a:	9f02      	ldr	r7, [sp, #8]
 800dc1c:	46a1      	mov	r9, r4
 800dc1e:	f8dd 8004 	ldr.w	r8, [sp, #4]
 800dc22:	f04f 0ac0 	mov.w	sl, #192	; 0xc0
 800dc26:	b355      	cbz	r5, 800dc7e <_DrawBitmap+0x2e2>
 800dc28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dc2a:	ebc8 0103 	rsb	r1, r8, r3
 800dc2e:	f1c7 0303 	rsb	r3, r7, #3
 800dc32:	0058      	lsls	r0, r3, #1
 800dc34:	f1c0 0206 	rsb	r2, r0, #6
 800dc38:	fa4a f202 	asr.w	r2, sl, r2
 800dc3c:	ea02 0306 	and.w	r3, r2, r6
 800dc40:	40c3      	lsrs	r3, r0
 800dc42:	d005      	beq.n	800dc50 <_DrawBitmap+0x2b4>
 800dc44:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800dc48:	4658      	mov	r0, fp
 800dc4a:	9a07      	ldr	r2, [sp, #28]
 800dc4c:	f7ff fc53 	bl	800d4f6 <_SetPixelIndex>
 800dc50:	3701      	adds	r7, #1
 800dc52:	2f04      	cmp	r7, #4
 800dc54:	bf02      	ittt	eq
 800dc56:	f899 6001 	ldrbeq.w	r6, [r9, #1]
 800dc5a:	2700      	moveq	r7, #0
 800dc5c:	f109 0901 	addeq.w	r9, r9, #1
 800dc60:	f1b8 0801 	subs.w	r8, r8, #1
 800dc64:	d1e0      	bne.n	800dc28 <_DrawBitmap+0x28c>
 800dc66:	e78b      	b.n	800db80 <_DrawBitmap+0x1e4>
 800dc68:	3701      	adds	r7, #1
 800dc6a:	2f04      	cmp	r7, #4
 800dc6c:	bf02      	ittt	eq
 800dc6e:	f899 6001 	ldrbeq.w	r6, [r9, #1]
 800dc72:	2700      	moveq	r7, #0
 800dc74:	f109 0901 	addeq.w	r9, r9, #1
 800dc78:	f1b8 0801 	subs.w	r8, r8, #1
 800dc7c:	d080      	beq.n	800db80 <_DrawBitmap+0x1e4>
 800dc7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dc80:	ebc8 0103 	rsb	r1, r8, r3
 800dc84:	f1c7 0303 	rsb	r3, r7, #3
 800dc88:	0058      	lsls	r0, r3, #1
 800dc8a:	f1c0 0206 	rsb	r2, r0, #6
 800dc8e:	fa4a f202 	asr.w	r2, sl, r2
 800dc92:	ea02 0306 	and.w	r3, r2, r6
 800dc96:	40c3      	lsrs	r3, r0
 800dc98:	d0e6      	beq.n	800dc68 <_DrawBitmap+0x2cc>
 800dc9a:	9a07      	ldr	r2, [sp, #28]
 800dc9c:	4658      	mov	r0, fp
 800dc9e:	f7ff fc2a 	bl	800d4f6 <_SetPixelIndex>
 800dca2:	e7e1      	b.n	800dc68 <_DrawBitmap+0x2cc>
 800dca4:	2000003c 	.word	0x2000003c
 800dca8:	0801dd68 	.word	0x0801dd68
 800dcac:	9b03      	ldr	r3, [sp, #12]
 800dcae:	9a06      	ldr	r2, [sp, #24]
 800dcb0:	7826      	ldrb	r6, [r4, #0]
 800dcb2:	4413      	add	r3, r2
 800dcb4:	9307      	str	r3, [sp, #28]
 800dcb6:	4bbb      	ldr	r3, [pc, #748]	; (800dfa4 <_DrawBitmap+0x608>)
 800dcb8:	681b      	ldr	r3, [r3, #0]
 800dcba:	7c1b      	ldrb	r3, [r3, #16]
 800dcbc:	f013 0303 	ands.w	r3, r3, #3
 800dcc0:	d00b      	beq.n	800dcda <_DrawBitmap+0x33e>
 800dcc2:	2b02      	cmp	r3, #2
 800dcc4:	d049      	beq.n	800dd5a <_DrawBitmap+0x3be>
 800dcc6:	9b05      	ldr	r3, [sp, #20]
 800dcc8:	441c      	add	r4, r3
 800dcca:	9b06      	ldr	r3, [sp, #24]
 800dccc:	3301      	adds	r3, #1
 800dcce:	9306      	str	r3, [sp, #24]
 800dcd0:	9b06      	ldr	r3, [sp, #24]
 800dcd2:	9a04      	ldr	r2, [sp, #16]
 800dcd4:	4293      	cmp	r3, r2
 800dcd6:	dbe9      	blt.n	800dcac <_DrawBitmap+0x310>
 800dcd8:	e168      	b.n	800dfac <_DrawBitmap+0x610>
 800dcda:	9f02      	ldr	r7, [sp, #8]
 800dcdc:	46a0      	mov	r8, r4
 800dcde:	9908      	ldr	r1, [sp, #32]
 800dce0:	f04f 0af0 	mov.w	sl, #240	; 0xf0
 800dce4:	b1ed      	cbz	r5, 800dd22 <_DrawBitmap+0x386>
 800dce6:	f1c7 0301 	rsb	r3, r7, #1
 800dcea:	3701      	adds	r7, #1
 800dcec:	4658      	mov	r0, fp
 800dcee:	f101 0901 	add.w	r9, r1, #1
 800dcf2:	009a      	lsls	r2, r3, #2
 800dcf4:	f1c2 0304 	rsb	r3, r2, #4
 800dcf8:	fa4a f303 	asr.w	r3, sl, r3
 800dcfc:	4033      	ands	r3, r6
 800dcfe:	40d3      	lsrs	r3, r2
 800dd00:	9a07      	ldr	r2, [sp, #28]
 800dd02:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800dd06:	f7ff fbf6 	bl	800d4f6 <_SetPixelIndex>
 800dd0a:	2f02      	cmp	r7, #2
 800dd0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dd0e:	4649      	mov	r1, r9
 800dd10:	bf02      	ittt	eq
 800dd12:	f898 6001 	ldrbeq.w	r6, [r8, #1]
 800dd16:	2700      	moveq	r7, #0
 800dd18:	f108 0801 	addeq.w	r8, r8, #1
 800dd1c:	4599      	cmp	r9, r3
 800dd1e:	d1e2      	bne.n	800dce6 <_DrawBitmap+0x34a>
 800dd20:	e7d1      	b.n	800dcc6 <_DrawBitmap+0x32a>
 800dd22:	f1c7 0201 	rsb	r2, r7, #1
 800dd26:	3701      	adds	r7, #1
 800dd28:	4658      	mov	r0, fp
 800dd2a:	f101 0901 	add.w	r9, r1, #1
 800dd2e:	0092      	lsls	r2, r2, #2
 800dd30:	f1c2 0304 	rsb	r3, r2, #4
 800dd34:	fa4a f303 	asr.w	r3, sl, r3
 800dd38:	4033      	ands	r3, r6
 800dd3a:	40d3      	lsrs	r3, r2
 800dd3c:	9a07      	ldr	r2, [sp, #28]
 800dd3e:	f7ff fbda 	bl	800d4f6 <_SetPixelIndex>
 800dd42:	2f02      	cmp	r7, #2
 800dd44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dd46:	4649      	mov	r1, r9
 800dd48:	bf02      	ittt	eq
 800dd4a:	f898 6001 	ldrbeq.w	r6, [r8, #1]
 800dd4e:	2700      	moveq	r7, #0
 800dd50:	f108 0801 	addeq.w	r8, r8, #1
 800dd54:	4599      	cmp	r9, r3
 800dd56:	d1e4      	bne.n	800dd22 <_DrawBitmap+0x386>
 800dd58:	e7b5      	b.n	800dcc6 <_DrawBitmap+0x32a>
 800dd5a:	9f02      	ldr	r7, [sp, #8]
 800dd5c:	46a1      	mov	r9, r4
 800dd5e:	f8dd 8004 	ldr.w	r8, [sp, #4]
 800dd62:	b315      	cbz	r5, 800ddaa <_DrawBitmap+0x40e>
 800dd64:	9a08      	ldr	r2, [sp, #32]
 800dd66:	eb08 0a02 	add.w	sl, r8, r2
 800dd6a:	f1c7 0301 	rsb	r3, r7, #1
 800dd6e:	ebc8 010a 	rsb	r1, r8, sl
 800dd72:	0098      	lsls	r0, r3, #2
 800dd74:	23f0      	movs	r3, #240	; 0xf0
 800dd76:	f1c0 0204 	rsb	r2, r0, #4
 800dd7a:	fa43 f202 	asr.w	r2, r3, r2
 800dd7e:	ea02 0306 	and.w	r3, r2, r6
 800dd82:	40c3      	lsrs	r3, r0
 800dd84:	d005      	beq.n	800dd92 <_DrawBitmap+0x3f6>
 800dd86:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800dd8a:	4658      	mov	r0, fp
 800dd8c:	9a07      	ldr	r2, [sp, #28]
 800dd8e:	f7ff fbb2 	bl	800d4f6 <_SetPixelIndex>
 800dd92:	3701      	adds	r7, #1
 800dd94:	2f02      	cmp	r7, #2
 800dd96:	bf02      	ittt	eq
 800dd98:	f899 6001 	ldrbeq.w	r6, [r9, #1]
 800dd9c:	2700      	moveq	r7, #0
 800dd9e:	f109 0901 	addeq.w	r9, r9, #1
 800dda2:	f1b8 0801 	subs.w	r8, r8, #1
 800dda6:	d1e0      	bne.n	800dd6a <_DrawBitmap+0x3ce>
 800dda8:	e78d      	b.n	800dcc6 <_DrawBitmap+0x32a>
 800ddaa:	f04f 0af0 	mov.w	sl, #240	; 0xf0
 800ddae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ddb0:	ebc8 0103 	rsb	r1, r8, r3
 800ddb4:	f1c7 0301 	rsb	r3, r7, #1
 800ddb8:	0098      	lsls	r0, r3, #2
 800ddba:	f1c0 0204 	rsb	r2, r0, #4
 800ddbe:	fa4a f202 	asr.w	r2, sl, r2
 800ddc2:	ea02 0306 	and.w	r3, r2, r6
 800ddc6:	40c3      	lsrs	r3, r0
 800ddc8:	d003      	beq.n	800ddd2 <_DrawBitmap+0x436>
 800ddca:	9a07      	ldr	r2, [sp, #28]
 800ddcc:	4658      	mov	r0, fp
 800ddce:	f7ff fb92 	bl	800d4f6 <_SetPixelIndex>
 800ddd2:	3701      	adds	r7, #1
 800ddd4:	2f02      	cmp	r7, #2
 800ddd6:	bf02      	ittt	eq
 800ddd8:	f899 6001 	ldrbeq.w	r6, [r9, #1]
 800dddc:	2700      	moveq	r7, #0
 800ddde:	f109 0901 	addeq.w	r9, r9, #1
 800dde2:	f1b8 0801 	subs.w	r8, r8, #1
 800dde6:	d1e2      	bne.n	800ddae <_DrawBitmap+0x412>
 800dde8:	e76d      	b.n	800dcc6 <_DrawBitmap+0x32a>
 800ddea:	6c3e      	ldr	r6, [r7, #64]	; 0x40
 800ddec:	4b6d      	ldr	r3, [pc, #436]	; (800dfa4 <_DrawBitmap+0x608>)
 800ddee:	b926      	cbnz	r6, 800ddfa <_DrawBitmap+0x45e>
 800ddf0:	f8d3 c000 	ldr.w	ip, [r3]
 800ddf4:	f04f 0e00 	mov.w	lr, #0
 800ddf8:	e019      	b.n	800de2e <_DrawBitmap+0x492>
 800ddfa:	681a      	ldr	r2, [r3, #0]
 800ddfc:	7c12      	ldrb	r2, [r2, #16]
 800ddfe:	0792      	lsls	r2, r2, #30
 800de00:	d4f6      	bmi.n	800ddf0 <_DrawBitmap+0x454>
 800de02:	2d00      	cmp	r5, #0
 800de04:	d0f4      	beq.n	800ddf0 <_DrawBitmap+0x454>
 800de06:	9b05      	ldr	r3, [sp, #20]
 800de08:	46b4      	mov	ip, r6
 800de0a:	9517      	str	r5, [sp, #92]	; 0x5c
 800de0c:	9316      	str	r3, [sp, #88]	; 0x58
 800de0e:	9b04      	ldr	r3, [sp, #16]
 800de10:	9a03      	ldr	r2, [sp, #12]
 800de12:	9315      	str	r3, [sp, #84]	; 0x54
 800de14:	9b01      	ldr	r3, [sp, #4]
 800de16:	9314      	str	r3, [sp, #80]	; 0x50
 800de18:	4623      	mov	r3, r4
 800de1a:	6980      	ldr	r0, [r0, #24]
 800de1c:	b00b      	add	sp, #44	; 0x2c
 800de1e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de22:	4760      	bx	ip
 800de24:	b93d      	cbnz	r5, 800de36 <_DrawBitmap+0x49a>
 800de26:	9b05      	ldr	r3, [sp, #20]
 800de28:	f10e 0e01 	add.w	lr, lr, #1
 800de2c:	441c      	add	r4, r3
 800de2e:	9b04      	ldr	r3, [sp, #16]
 800de30:	459e      	cmp	lr, r3
 800de32:	dbf7      	blt.n	800de24 <_DrawBitmap+0x488>
 800de34:	e0ba      	b.n	800dfac <_DrawBitmap+0x610>
 800de36:	9b03      	ldr	r3, [sp, #12]
 800de38:	6a3a      	ldr	r2, [r7, #32]
 800de3a:	4473      	add	r3, lr
 800de3c:	fb02 8303 	mla	r3, r2, r3, r8
 800de40:	683a      	ldr	r2, [r7, #0]
 800de42:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800de46:	f89c 2010 	ldrb.w	r2, [ip, #16]
 800de4a:	f012 0203 	ands.w	r2, r2, #3
 800de4e:	d003      	beq.n	800de58 <_DrawBitmap+0x4bc>
 800de50:	2a02      	cmp	r2, #2
 800de52:	d1e8      	bne.n	800de26 <_DrawBitmap+0x48a>
 800de54:	2200      	movs	r2, #0
 800de56:	e070      	b.n	800df3a <_DrawBitmap+0x59e>
 800de58:	4621      	mov	r1, r4
 800de5a:	9a01      	ldr	r2, [sp, #4]
 800de5c:	2a07      	cmp	r2, #7
 800de5e:	f101 0608 	add.w	r6, r1, #8
 800de62:	f103 0010 	add.w	r0, r3, #16
 800de66:	dd33      	ble.n	800ded0 <_DrawBitmap+0x534>
 800de68:	f816 3c08 	ldrb.w	r3, [r6, #-8]
 800de6c:	3a08      	subs	r2, #8
 800de6e:	4631      	mov	r1, r6
 800de70:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800de74:	f820 3c10 	strh.w	r3, [r0, #-16]
 800de78:	f816 3c07 	ldrb.w	r3, [r6, #-7]
 800de7c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800de80:	f820 3c0e 	strh.w	r3, [r0, #-14]
 800de84:	f816 3c06 	ldrb.w	r3, [r6, #-6]
 800de88:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800de8c:	f820 3c0c 	strh.w	r3, [r0, #-12]
 800de90:	f816 3c05 	ldrb.w	r3, [r6, #-5]
 800de94:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800de98:	f820 3c0a 	strh.w	r3, [r0, #-10]
 800de9c:	f816 3c04 	ldrb.w	r3, [r6, #-4]
 800dea0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800dea4:	f820 3c08 	strh.w	r3, [r0, #-8]
 800dea8:	f816 3c03 	ldrb.w	r3, [r6, #-3]
 800deac:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800deb0:	f820 3c06 	strh.w	r3, [r0, #-6]
 800deb4:	f816 3c02 	ldrb.w	r3, [r6, #-2]
 800deb8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800debc:	f820 3c04 	strh.w	r3, [r0, #-4]
 800dec0:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800dec4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800dec8:	f820 3c02 	strh.w	r3, [r0, #-2]
 800decc:	4603      	mov	r3, r0
 800dece:	e7c5      	b.n	800de5c <_DrawBitmap+0x4c0>
 800ded0:	2a03      	cmp	r2, #3
 800ded2:	4618      	mov	r0, r3
 800ded4:	460e      	mov	r6, r1
 800ded6:	f103 0308 	add.w	r3, r3, #8
 800deda:	f101 0104 	add.w	r1, r1, #4
 800dede:	dd19      	ble.n	800df14 <_DrawBitmap+0x578>
 800dee0:	f811 0c04 	ldrb.w	r0, [r1, #-4]
 800dee4:	3a04      	subs	r2, #4
 800dee6:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800deea:	f823 0c08 	strh.w	r0, [r3, #-8]
 800deee:	f811 0c03 	ldrb.w	r0, [r1, #-3]
 800def2:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800def6:	f823 0c06 	strh.w	r0, [r3, #-6]
 800defa:	f811 0c02 	ldrb.w	r0, [r1, #-2]
 800defe:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800df02:	f823 0c04 	strh.w	r0, [r3, #-4]
 800df06:	f811 0c01 	ldrb.w	r0, [r1, #-1]
 800df0a:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800df0e:	f823 0c02 	strh.w	r0, [r3, #-2]
 800df12:	e7dd      	b.n	800ded0 <_DrawBitmap+0x534>
 800df14:	3e01      	subs	r6, #1
 800df16:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800df1a:	4282      	cmp	r2, r0
 800df1c:	d083      	beq.n	800de26 <_DrawBitmap+0x48a>
 800df1e:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 800df22:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 800df26:	f820 3b02 	strh.w	r3, [r0], #2
 800df2a:	e7f6      	b.n	800df1a <_DrawBitmap+0x57e>
 800df2c:	5ca1      	ldrb	r1, [r4, r2]
 800df2e:	b119      	cbz	r1, 800df38 <_DrawBitmap+0x59c>
 800df30:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 800df34:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800df38:	3201      	adds	r2, #1
 800df3a:	9901      	ldr	r1, [sp, #4]
 800df3c:	1a89      	subs	r1, r1, r2
 800df3e:	2900      	cmp	r1, #0
 800df40:	dcf4      	bgt.n	800df2c <_DrawBitmap+0x590>
 800df42:	e770      	b.n	800de26 <_DrawBitmap+0x48a>
 800df44:	6cfd      	ldr	r5, [r7, #76]	; 0x4c
 800df46:	b925      	cbnz	r5, 800df52 <_DrawBitmap+0x5b6>
 800df48:	9b01      	ldr	r3, [sp, #4]
 800df4a:	2600      	movs	r6, #0
 800df4c:	4f16      	ldr	r7, [pc, #88]	; (800dfa8 <_DrawBitmap+0x60c>)
 800df4e:	005d      	lsls	r5, r3, #1
 800df50:	e012      	b.n	800df78 <_DrawBitmap+0x5dc>
 800df52:	4b14      	ldr	r3, [pc, #80]	; (800dfa4 <_DrawBitmap+0x608>)
 800df54:	681b      	ldr	r3, [r3, #0]
 800df56:	7c1b      	ldrb	r3, [r3, #16]
 800df58:	07db      	lsls	r3, r3, #31
 800df5a:	d4f5      	bmi.n	800df48 <_DrawBitmap+0x5ac>
 800df5c:	9b05      	ldr	r3, [sp, #20]
 800df5e:	46ac      	mov	ip, r5
 800df60:	9a03      	ldr	r2, [sp, #12]
 800df62:	9316      	str	r3, [sp, #88]	; 0x58
 800df64:	9b04      	ldr	r3, [sp, #16]
 800df66:	9315      	str	r3, [sp, #84]	; 0x54
 800df68:	9b01      	ldr	r3, [sp, #4]
 800df6a:	9314      	str	r3, [sp, #80]	; 0x50
 800df6c:	4623      	mov	r3, r4
 800df6e:	6980      	ldr	r0, [r0, #24]
 800df70:	b00b      	add	sp, #44	; 0x2c
 800df72:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df76:	4760      	bx	ip
 800df78:	9b04      	ldr	r3, [sp, #16]
 800df7a:	429e      	cmp	r6, r3
 800df7c:	da16      	bge.n	800dfac <_DrawBitmap+0x610>
 800df7e:	f8db 2008 	ldr.w	r2, [fp, #8]
 800df82:	4621      	mov	r1, r4
 800df84:	9b03      	ldr	r3, [sp, #12]
 800df86:	18f0      	adds	r0, r6, r3
 800df88:	6a13      	ldr	r3, [r2, #32]
 800df8a:	3601      	adds	r6, #1
 800df8c:	fb03 8300 	mla	r3, r3, r0, r8
 800df90:	6810      	ldr	r0, [r2, #0]
 800df92:	462a      	mov	r2, r5
 800df94:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800df98:	683b      	ldr	r3, [r7, #0]
 800df9a:	4798      	blx	r3
 800df9c:	9b05      	ldr	r3, [sp, #20]
 800df9e:	441c      	add	r4, r3
 800dfa0:	e7ea      	b.n	800df78 <_DrawBitmap+0x5dc>
 800dfa2:	bf00      	nop
 800dfa4:	2000003c 	.word	0x2000003c
 800dfa8:	20000050 	.word	0x20000050
 800dfac:	b00b      	add	sp, #44	; 0x2c
 800dfae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dfb2:	bf00      	nop

0800dfb4 <_InitOnce.isra.3>:
 800dfb4:	b538      	push	{r3, r4, r5, lr}
 800dfb6:	6805      	ldr	r5, [r0, #0]
 800dfb8:	4604      	mov	r4, r0
 800dfba:	b93d      	cbnz	r5, 800dfcc <_InitOnce.isra.3+0x18>
 800dfbc:	2050      	movs	r0, #80	; 0x50
 800dfbe:	f7fc fd97 	bl	800aaf0 <GUI_ALLOC_GetFixedBlock>
 800dfc2:	2250      	movs	r2, #80	; 0x50
 800dfc4:	6020      	str	r0, [r4, #0]
 800dfc6:	4629      	mov	r1, r5
 800dfc8:	f7fe f8a8 	bl	800c11c <GUI__memset>
 800dfcc:	6820      	ldr	r0, [r4, #0]
 800dfce:	fab0 f080 	clz	r0, r0
 800dfd2:	0940      	lsrs	r0, r0, #5
 800dfd4:	bd38      	pop	{r3, r4, r5, pc}

0800dfd6 <_SetDevFunc>:
 800dfd6:	b570      	push	{r4, r5, r6, lr}
 800dfd8:	4606      	mov	r6, r0
 800dfda:	3008      	adds	r0, #8
 800dfdc:	460d      	mov	r5, r1
 800dfde:	4614      	mov	r4, r2
 800dfe0:	f7ff ffe8 	bl	800dfb4 <_InitOnce.isra.3>
 800dfe4:	68b3      	ldr	r3, [r6, #8]
 800dfe6:	b1db      	cbz	r3, 800e020 <_SetDevFunc+0x4a>
 800dfe8:	2d21      	cmp	r5, #33	; 0x21
 800dfea:	d012      	beq.n	800e012 <_SetDevFunc+0x3c>
 800dfec:	dc07      	bgt.n	800dffe <_SetDevFunc+0x28>
 800dfee:	2d19      	cmp	r5, #25
 800dff0:	d00d      	beq.n	800e00e <_SetDevFunc+0x38>
 800dff2:	2d20      	cmp	r5, #32
 800dff4:	d00f      	beq.n	800e016 <_SetDevFunc+0x40>
 800dff6:	2d03      	cmp	r5, #3
 800dff8:	d112      	bne.n	800e020 <_SetDevFunc+0x4a>
 800dffa:	649c      	str	r4, [r3, #72]	; 0x48
 800dffc:	bd70      	pop	{r4, r5, r6, pc}
 800dffe:	2d24      	cmp	r5, #36	; 0x24
 800e000:	d00d      	beq.n	800e01e <_SetDevFunc+0x48>
 800e002:	2d25      	cmp	r5, #37	; 0x25
 800e004:	d009      	beq.n	800e01a <_SetDevFunc+0x44>
 800e006:	2d23      	cmp	r5, #35	; 0x23
 800e008:	d10a      	bne.n	800e020 <_SetDevFunc+0x4a>
 800e00a:	645c      	str	r4, [r3, #68]	; 0x44
 800e00c:	bd70      	pop	{r4, r5, r6, pc}
 800e00e:	635c      	str	r4, [r3, #52]	; 0x34
 800e010:	bd70      	pop	{r4, r5, r6, pc}
 800e012:	639c      	str	r4, [r3, #56]	; 0x38
 800e014:	bd70      	pop	{r4, r5, r6, pc}
 800e016:	63dc      	str	r4, [r3, #60]	; 0x3c
 800e018:	bd70      	pop	{r4, r5, r6, pc}
 800e01a:	641c      	str	r4, [r3, #64]	; 0x40
 800e01c:	bd70      	pop	{r4, r5, r6, pc}
 800e01e:	64dc      	str	r4, [r3, #76]	; 0x4c
 800e020:	bd70      	pop	{r4, r5, r6, pc}
	...

0800e024 <_CopyBuffer>:
 800e024:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e028:	4606      	mov	r6, r0
 800e02a:	3008      	adds	r0, #8
 800e02c:	460f      	mov	r7, r1
 800e02e:	4690      	mov	r8, r2
 800e030:	f7ff ffc0 	bl	800dfb4 <_InitOnce.isra.3>
 800e034:	68b4      	ldr	r4, [r6, #8]
 800e036:	b31c      	cbz	r4, 800e080 <_CopyBuffer+0x5c>
 800e038:	4547      	cmp	r7, r8
 800e03a:	d021      	beq.n	800e080 <_CopyBuffer+0x5c>
 800e03c:	68f3      	ldr	r3, [r6, #12]
 800e03e:	2108      	movs	r1, #8
 800e040:	4630      	mov	r0, r6
 800e042:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e044:	4798      	blx	r3
 800e046:	69a2      	ldr	r2, [r4, #24]
 800e048:	6963      	ldr	r3, [r4, #20]
 800e04a:	4353      	muls	r3, r2
 800e04c:	4358      	muls	r0, r3
 800e04e:	68a3      	ldr	r3, [r4, #8]
 800e050:	08c2      	lsrs	r2, r0, #3
 800e052:	b123      	cbz	r3, 800e05e <_CopyBuffer+0x3a>
 800e054:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 800e058:	f853 5028 	ldr.w	r5, [r3, r8, lsl #2]
 800e05c:	e004      	b.n	800e068 <_CopyBuffer+0x44>
 800e05e:	6865      	ldr	r5, [r4, #4]
 800e060:	fb02 5107 	mla	r1, r2, r7, r5
 800e064:	fb02 5508 	mla	r5, r2, r8, r5
 800e068:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e06a:	b123      	cbz	r3, 800e076 <_CopyBuffer+0x52>
 800e06c:	4642      	mov	r2, r8
 800e06e:	4639      	mov	r1, r7
 800e070:	69b0      	ldr	r0, [r6, #24]
 800e072:	4798      	blx	r3
 800e074:	e003      	b.n	800e07e <_CopyBuffer+0x5a>
 800e076:	4b03      	ldr	r3, [pc, #12]	; (800e084 <_CopyBuffer+0x60>)
 800e078:	4628      	mov	r0, r5
 800e07a:	681b      	ldr	r3, [r3, #0]
 800e07c:	4798      	blx	r3
 800e07e:	6025      	str	r5, [r4, #0]
 800e080:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e084:	20000050 	.word	0x20000050

0800e088 <_GetPos>:
 800e088:	b570      	push	{r4, r5, r6, lr}
 800e08a:	4604      	mov	r4, r0
 800e08c:	3008      	adds	r0, #8
 800e08e:	460e      	mov	r6, r1
 800e090:	4615      	mov	r5, r2
 800e092:	f7ff ff8f 	bl	800dfb4 <_InitOnce.isra.3>
 800e096:	68a3      	ldr	r3, [r4, #8]
 800e098:	b11b      	cbz	r3, 800e0a2 <_GetPos+0x1a>
 800e09a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e09c:	6032      	str	r2, [r6, #0]
 800e09e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e0a0:	602b      	str	r3, [r5, #0]
 800e0a2:	bd70      	pop	{r4, r5, r6, pc}

0800e0a4 <_SetVRAM_BufferPTR>:
 800e0a4:	b538      	push	{r3, r4, r5, lr}
 800e0a6:	4605      	mov	r5, r0
 800e0a8:	3008      	adds	r0, #8
 800e0aa:	460c      	mov	r4, r1
 800e0ac:	f7ff ff82 	bl	800dfb4 <_InitOnce.isra.3>
 800e0b0:	68ab      	ldr	r3, [r5, #8]
 800e0b2:	b113      	cbz	r3, 800e0ba <_SetVRAM_BufferPTR+0x16>
 800e0b4:	6822      	ldr	r2, [r4, #0]
 800e0b6:	609c      	str	r4, [r3, #8]
 800e0b8:	601a      	str	r2, [r3, #0]
 800e0ba:	bd38      	pop	{r3, r4, r5, pc}

0800e0bc <_ShowBuffer>:
 800e0bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e0be:	2300      	movs	r3, #0
 800e0c0:	4604      	mov	r4, r0
 800e0c2:	3008      	adds	r0, #8
 800e0c4:	460d      	mov	r5, r1
 800e0c6:	9301      	str	r3, [sp, #4]
 800e0c8:	f7ff ff74 	bl	800dfb4 <_InitOnce.isra.3>
 800e0cc:	68a3      	ldr	r3, [r4, #8]
 800e0ce:	b133      	cbz	r3, 800e0de <_ShowBuffer+0x22>
 800e0d0:	aa02      	add	r2, sp, #8
 800e0d2:	210e      	movs	r1, #14
 800e0d4:	69a0      	ldr	r0, [r4, #24]
 800e0d6:	f842 5d04 	str.w	r5, [r2, #-4]!
 800e0da:	f7fb f9e3 	bl	80094a4 <LCD_X_DisplayDriver>
 800e0de:	b003      	add	sp, #12
 800e0e0:	bd30      	pop	{r4, r5, pc}

0800e0e2 <_Init>:
 800e0e2:	b538      	push	{r3, r4, r5, lr}
 800e0e4:	4604      	mov	r4, r0
 800e0e6:	3008      	adds	r0, #8
 800e0e8:	f7ff ff64 	bl	800dfb4 <_InitOnce.isra.3>
 800e0ec:	4605      	mov	r5, r0
 800e0ee:	2200      	movs	r2, #0
 800e0f0:	2101      	movs	r1, #1
 800e0f2:	69a0      	ldr	r0, [r4, #24]
 800e0f4:	f7fb f9d6 	bl	80094a4 <LCD_X_DisplayDriver>
 800e0f8:	4328      	orrs	r0, r5
 800e0fa:	bd38      	pop	{r3, r4, r5, pc}

0800e0fc <_SetVis>:
 800e0fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e0fe:	2300      	movs	r3, #0
 800e100:	4604      	mov	r4, r0
 800e102:	3008      	adds	r0, #8
 800e104:	460d      	mov	r5, r1
 800e106:	9301      	str	r3, [sp, #4]
 800e108:	f7ff ff54 	bl	800dfb4 <_InitOnce.isra.3>
 800e10c:	68a3      	ldr	r3, [r4, #8]
 800e10e:	b13b      	cbz	r3, 800e120 <_SetVis+0x24>
 800e110:	aa02      	add	r2, sp, #8
 800e112:	631d      	str	r5, [r3, #48]	; 0x30
 800e114:	2109      	movs	r1, #9
 800e116:	69a0      	ldr	r0, [r4, #24]
 800e118:	f842 5d04 	str.w	r5, [r2, #-4]!
 800e11c:	f7fb f9c2 	bl	80094a4 <LCD_X_DisplayDriver>
 800e120:	b003      	add	sp, #12
 800e122:	bd30      	pop	{r4, r5, pc}

0800e124 <_SetAlpha>:
 800e124:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e126:	2300      	movs	r3, #0
 800e128:	4604      	mov	r4, r0
 800e12a:	3008      	adds	r0, #8
 800e12c:	460d      	mov	r5, r1
 800e12e:	9301      	str	r3, [sp, #4]
 800e130:	f7ff ff40 	bl	800dfb4 <_InitOnce.isra.3>
 800e134:	68a3      	ldr	r3, [r4, #8]
 800e136:	b13b      	cbz	r3, 800e148 <_SetAlpha+0x24>
 800e138:	aa02      	add	r2, sp, #8
 800e13a:	62dd      	str	r5, [r3, #44]	; 0x2c
 800e13c:	210a      	movs	r1, #10
 800e13e:	69a0      	ldr	r0, [r4, #24]
 800e140:	f842 5d04 	str.w	r5, [r2, #-4]!
 800e144:	f7fb f9ae 	bl	80094a4 <LCD_X_DisplayDriver>
 800e148:	b003      	add	sp, #12
 800e14a:	bd30      	pop	{r4, r5, pc}

0800e14c <_SetVRAMAddr>:
 800e14c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e14e:	2300      	movs	r3, #0
 800e150:	4604      	mov	r4, r0
 800e152:	3008      	adds	r0, #8
 800e154:	460d      	mov	r5, r1
 800e156:	9301      	str	r3, [sp, #4]
 800e158:	f7ff ff2c 	bl	800dfb4 <_InitOnce.isra.3>
 800e15c:	68a3      	ldr	r3, [r4, #8]
 800e15e:	b143      	cbz	r3, 800e172 <_SetVRAMAddr+0x26>
 800e160:	aa02      	add	r2, sp, #8
 800e162:	601d      	str	r5, [r3, #0]
 800e164:	605d      	str	r5, [r3, #4]
 800e166:	2102      	movs	r1, #2
 800e168:	f842 5d04 	str.w	r5, [r2, #-4]!
 800e16c:	69a0      	ldr	r0, [r4, #24]
 800e16e:	f7fb f999 	bl	80094a4 <LCD_X_DisplayDriver>
 800e172:	b003      	add	sp, #12
 800e174:	bd30      	pop	{r4, r5, pc}

0800e176 <_SetPos>:
 800e176:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e17a:	b089      	sub	sp, #36	; 0x24
 800e17c:	4606      	mov	r6, r0
 800e17e:	460d      	mov	r5, r1
 800e180:	4614      	mov	r4, r2
 800e182:	2100      	movs	r1, #0
 800e184:	2218      	movs	r2, #24
 800e186:	a802      	add	r0, sp, #8
 800e188:	f007 fbb4 	bl	80158f4 <memset>
 800e18c:	f106 0008 	add.w	r0, r6, #8
 800e190:	f7ff ff10 	bl	800dfb4 <_InitOnce.isra.3>
 800e194:	68b7      	ldr	r7, [r6, #8]
 800e196:	2f00      	cmp	r7, #0
 800e198:	d067      	beq.n	800e26a <_SetPos+0xf4>
 800e19a:	f8d7 b048 	ldr.w	fp, [r7, #72]	; 0x48
 800e19e:	f1bb 0f00 	cmp.w	fp, #0
 800e1a2:	d004      	beq.n	800e1ae <_SetPos+0x38>
 800e1a4:	4622      	mov	r2, r4
 800e1a6:	4629      	mov	r1, r5
 800e1a8:	69b0      	ldr	r0, [r6, #24]
 800e1aa:	47d8      	blx	fp
 800e1ac:	e05d      	b.n	800e26a <_SetPos+0xf4>
 800e1ae:	627d      	str	r5, [r7, #36]	; 0x24
 800e1b0:	62bc      	str	r4, [r7, #40]	; 0x28
 800e1b2:	f7fe ff13 	bl	800cfdc <LCD_GetXSizeDisplay>
 800e1b6:	4681      	mov	r9, r0
 800e1b8:	f7fe ff16 	bl	800cfe8 <LCD_GetYSizeDisplay>
 800e1bc:	68f2      	ldr	r2, [r6, #12]
 800e1be:	697b      	ldr	r3, [r7, #20]
 800e1c0:	2108      	movs	r1, #8
 800e1c2:	6a92      	ldr	r2, [r2, #40]	; 0x28
 800e1c4:	4680      	mov	r8, r0
 800e1c6:	4630      	mov	r0, r6
 800e1c8:	f8d7 a010 	ldr.w	sl, [r7, #16]
 800e1cc:	9301      	str	r3, [sp, #4]
 800e1ce:	4790      	blx	r2
 800e1d0:	2208      	movs	r2, #8
 800e1d2:	3007      	adds	r0, #7
 800e1d4:	2d00      	cmp	r5, #0
 800e1d6:	eb05 010a 	add.w	r1, r5, sl
 800e1da:	9b01      	ldr	r3, [sp, #4]
 800e1dc:	fb90 f0f2 	sdiv	r0, r0, r2
 800e1e0:	9006      	str	r0, [sp, #24]
 800e1e2:	da07      	bge.n	800e1f4 <_SetPos+0x7e>
 800e1e4:	9a07      	ldr	r2, [sp, #28]
 800e1e6:	f8cd b008 	str.w	fp, [sp, #8]
 800e1ea:	fb00 2015 	mls	r0, r0, r5, r2
 800e1ee:	9104      	str	r1, [sp, #16]
 800e1f0:	9007      	str	r0, [sp, #28]
 800e1f2:	e007      	b.n	800e204 <_SetPos+0x8e>
 800e1f4:	4589      	cmp	r9, r1
 800e1f6:	9502      	str	r5, [sp, #8]
 800e1f8:	bfb6      	itet	lt
 800e1fa:	ebc5 0509 	rsblt	r5, r5, r9
 800e1fe:	f8cd a010 	strge.w	sl, [sp, #16]
 800e202:	9504      	strlt	r5, [sp, #16]
 800e204:	2c00      	cmp	r4, #0
 800e206:	eb04 0203 	add.w	r2, r4, r3
 800e20a:	da09      	bge.n	800e220 <_SetPos+0xaa>
 800e20c:	9b06      	ldr	r3, [sp, #24]
 800e20e:	9205      	str	r2, [sp, #20]
 800e210:	435c      	muls	r4, r3
 800e212:	9b07      	ldr	r3, [sp, #28]
 800e214:	fb0a 3414 	mls	r4, sl, r4, r3
 800e218:	2300      	movs	r3, #0
 800e21a:	9407      	str	r4, [sp, #28]
 800e21c:	9303      	str	r3, [sp, #12]
 800e21e:	e006      	b.n	800e22e <_SetPos+0xb8>
 800e220:	4590      	cmp	r8, r2
 800e222:	9403      	str	r4, [sp, #12]
 800e224:	bfb6      	itet	lt
 800e226:	ebc4 0408 	rsblt	r4, r4, r8
 800e22a:	9305      	strge	r3, [sp, #20]
 800e22c:	9405      	strlt	r4, [sp, #20]
 800e22e:	9b04      	ldr	r3, [sp, #16]
 800e230:	2b00      	cmp	r3, #0
 800e232:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e234:	dd08      	ble.n	800e248 <_SetPos+0xd2>
 800e236:	9a05      	ldr	r2, [sp, #20]
 800e238:	2a00      	cmp	r2, #0
 800e23a:	dd05      	ble.n	800e248 <_SetPos+0xd2>
 800e23c:	9a02      	ldr	r2, [sp, #8]
 800e23e:	4591      	cmp	r9, r2
 800e240:	dd02      	ble.n	800e248 <_SetPos+0xd2>
 800e242:	9a03      	ldr	r2, [sp, #12]
 800e244:	4590      	cmp	r8, r2
 800e246:	dc06      	bgt.n	800e256 <_SetPos+0xe0>
 800e248:	2b01      	cmp	r3, #1
 800e24a:	d10e      	bne.n	800e26a <_SetPos+0xf4>
 800e24c:	2100      	movs	r1, #0
 800e24e:	4630      	mov	r0, r6
 800e250:	f7ff ff54 	bl	800e0fc <_SetVis>
 800e254:	e009      	b.n	800e26a <_SetPos+0xf4>
 800e256:	b91b      	cbnz	r3, 800e260 <_SetPos+0xea>
 800e258:	2101      	movs	r1, #1
 800e25a:	4630      	mov	r0, r6
 800e25c:	f7ff ff4e 	bl	800e0fc <_SetVis>
 800e260:	aa02      	add	r2, sp, #8
 800e262:	2108      	movs	r1, #8
 800e264:	69b0      	ldr	r0, [r6, #24]
 800e266:	f7fb f91d 	bl	80094a4 <LCD_X_DisplayDriver>
 800e26a:	b009      	add	sp, #36	; 0x24
 800e26c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e270 <_SetSize>:
 800e270:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e272:	2300      	movs	r3, #0
 800e274:	4605      	mov	r5, r0
 800e276:	3008      	adds	r0, #8
 800e278:	460f      	mov	r7, r1
 800e27a:	4616      	mov	r6, r2
 800e27c:	9300      	str	r3, [sp, #0]
 800e27e:	9301      	str	r3, [sp, #4]
 800e280:	f7ff fe98 	bl	800dfb4 <_InitOnce.isra.3>
 800e284:	68ac      	ldr	r4, [r5, #8]
 800e286:	b194      	cbz	r4, 800e2ae <_SetSize+0x3e>
 800e288:	6a23      	ldr	r3, [r4, #32]
 800e28a:	b93b      	cbnz	r3, 800e29c <_SetSize+0x2c>
 800e28c:	69a8      	ldr	r0, [r5, #24]
 800e28e:	f7fe fe41 	bl	800cf14 <LCD_GetSwapXYEx>
 800e292:	2800      	cmp	r0, #0
 800e294:	bf0c      	ite	eq
 800e296:	4638      	moveq	r0, r7
 800e298:	4630      	movne	r0, r6
 800e29a:	6220      	str	r0, [r4, #32]
 800e29c:	6127      	str	r7, [r4, #16]
 800e29e:	466a      	mov	r2, sp
 800e2a0:	6166      	str	r6, [r4, #20]
 800e2a2:	2107      	movs	r1, #7
 800e2a4:	69a8      	ldr	r0, [r5, #24]
 800e2a6:	9700      	str	r7, [sp, #0]
 800e2a8:	9601      	str	r6, [sp, #4]
 800e2aa:	f7fb f8fb 	bl	80094a4 <LCD_X_DisplayDriver>
 800e2ae:	b003      	add	sp, #12
 800e2b0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e2b2 <_SetVSize>:
 800e2b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e2b4:	4607      	mov	r7, r0
 800e2b6:	3008      	adds	r0, #8
 800e2b8:	460d      	mov	r5, r1
 800e2ba:	4616      	mov	r6, r2
 800e2bc:	f7ff fe7a 	bl	800dfb4 <_InitOnce.isra.3>
 800e2c0:	68bc      	ldr	r4, [r7, #8]
 800e2c2:	b144      	cbz	r4, 800e2d6 <_SetVSize+0x24>
 800e2c4:	69b8      	ldr	r0, [r7, #24]
 800e2c6:	f7fe fe25 	bl	800cf14 <LCD_GetSwapXYEx>
 800e2ca:	61a5      	str	r5, [r4, #24]
 800e2cc:	61e6      	str	r6, [r4, #28]
 800e2ce:	b108      	cbz	r0, 800e2d4 <_SetVSize+0x22>
 800e2d0:	6226      	str	r6, [r4, #32]
 800e2d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e2d4:	6225      	str	r5, [r4, #32]
 800e2d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e2d8 <_OnExit>:
 800e2d8:	4b03      	ldr	r3, [pc, #12]	; (800e2e8 <_OnExit+0x10>)
 800e2da:	4a04      	ldr	r2, [pc, #16]	; (800e2ec <_OnExit+0x14>)
 800e2dc:	601a      	str	r2, [r3, #0]
 800e2de:	605a      	str	r2, [r3, #4]
 800e2e0:	4a03      	ldr	r2, [pc, #12]	; (800e2f0 <_OnExit+0x18>)
 800e2e2:	609a      	str	r2, [r3, #8]
 800e2e4:	4770      	bx	lr
 800e2e6:	bf00      	nop
 800e2e8:	20000080 	.word	0x20000080
 800e2ec:	200004f4 	.word	0x200004f4
 800e2f0:	0800e2f5 	.word	0x0800e2f5

0800e2f4 <_StorePID>:
 800e2f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e2f6:	680b      	ldr	r3, [r1, #0]
 800e2f8:	9301      	str	r3, [sp, #4]
 800e2fa:	684b      	ldr	r3, [r1, #4]
 800e2fc:	9302      	str	r3, [sp, #8]
 800e2fe:	6803      	ldr	r3, [r0, #0]
 800e300:	a801      	add	r0, sp, #4
 800e302:	f88d 300d 	strb.w	r3, [sp, #13]
 800e306:	898b      	ldrh	r3, [r1, #12]
 800e308:	3b04      	subs	r3, #4
 800e30a:	bf18      	it	ne
 800e30c:	2301      	movne	r3, #1
 800e30e:	f88d 300c 	strb.w	r3, [sp, #12]
 800e312:	f004 ffc5 	bl	80132a0 <GUI_PID_StoreState>
 800e316:	b005      	add	sp, #20
 800e318:	f85d fb04 	ldr.w	pc, [sp], #4

0800e31c <GUI_MTOUCH_StoreEvent>:
 800e31c:	4b9a      	ldr	r3, [pc, #616]	; (800e588 <GUI_MTOUCH_StoreEvent+0x26c>)
 800e31e:	681b      	ldr	r3, [r3, #0]
 800e320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e324:	4606      	mov	r6, r0
 800e326:	b08b      	sub	sp, #44	; 0x2c
 800e328:	468e      	mov	lr, r1
 800e32a:	2b00      	cmp	r3, #0
 800e32c:	f000 8119 	beq.w	800e562 <GUI_MTOUCH_StoreEvent+0x246>
 800e330:	4d96      	ldr	r5, [pc, #600]	; (800e58c <GUI_MTOUCH_StoreEvent+0x270>)
 800e332:	f8d5 c000 	ldr.w	ip, [r5]
 800e336:	686a      	ldr	r2, [r5, #4]
 800e338:	4594      	cmp	ip, r2
 800e33a:	d029      	beq.n	800e390 <GUI_MTOUCH_StoreEvent+0x74>
 800e33c:	4994      	ldr	r1, [pc, #592]	; (800e590 <GUI_MTOUCH_StoreEvent+0x274>)
 800e33e:	6840      	ldr	r0, [r0, #4]
 800e340:	428a      	cmp	r2, r1
 800e342:	bf14      	ite	ne
 800e344:	f1a2 03b0 	subne.w	r3, r2, #176	; 0xb0
 800e348:	f502 63dc 	addeq.w	r3, r2, #1760	; 0x6e0
 800e34c:	685c      	ldr	r4, [r3, #4]
 800e34e:	42a0      	cmp	r0, r4
 800e350:	d11e      	bne.n	800e390 <GUI_MTOUCH_StoreEvent+0x74>
 800e352:	2400      	movs	r4, #0
 800e354:	42a0      	cmp	r0, r4
 800e356:	d008      	beq.n	800e36a <GUI_MTOUCH_StoreEvent+0x4e>
 800e358:	eb03 1704 	add.w	r7, r3, r4, lsl #4
 800e35c:	f8be 800c 	ldrh.w	r8, [lr, #12]
 800e360:	8bbf      	ldrh	r7, [r7, #28]
 800e362:	45b8      	cmp	r8, r7
 800e364:	d114      	bne.n	800e390 <GUI_MTOUCH_StoreEvent+0x74>
 800e366:	3401      	adds	r4, #1
 800e368:	e7f4      	b.n	800e354 <GUI_MTOUCH_StoreEvent+0x38>
 800e36a:	459c      	cmp	ip, r3
 800e36c:	d010      	beq.n	800e390 <GUI_MTOUCH_StoreEvent+0x74>
 800e36e:	428b      	cmp	r3, r1
 800e370:	bf14      	ite	ne
 800e372:	3bb0      	subne	r3, #176	; 0xb0
 800e374:	f501 63dc 	addeq.w	r3, r1, #1760	; 0x6e0
 800e378:	685c      	ldr	r4, [r3, #4]
 800e37a:	42a0      	cmp	r0, r4
 800e37c:	d108      	bne.n	800e390 <GUI_MTOUCH_StoreEvent+0x74>
 800e37e:	2400      	movs	r4, #0
 800e380:	42a0      	cmp	r0, r4
 800e382:	f040 80f3 	bne.w	800e56c <GUI_MTOUCH_StoreEvent+0x250>
 800e386:	428a      	cmp	r2, r1
 800e388:	f000 80fa 	beq.w	800e580 <GUI_MTOUCH_StoreEvent+0x264>
 800e38c:	3ab0      	subs	r2, #176	; 0xb0
 800e38e:	606a      	str	r2, [r5, #4]
 800e390:	686c      	ldr	r4, [r5, #4]
 800e392:	f04f 0c00 	mov.w	ip, #0
 800e396:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800e39a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800e39e:	290a      	cmp	r1, #10
 800e3a0:	f104 0310 	add.w	r3, r4, #16
 800e3a4:	60e3      	str	r3, [r4, #12]
 800e3a6:	bf84      	itt	hi
 800e3a8:	230a      	movhi	r3, #10
 800e3aa:	6063      	strhi	r3, [r4, #4]
 800e3ac:	6863      	ldr	r3, [r4, #4]
 800e3ae:	459c      	cmp	ip, r3
 800e3b0:	d20a      	bcs.n	800e3c8 <GUI_MTOUCH_StoreEvent+0xac>
 800e3b2:	ea4f 130c 	mov.w	r3, ip, lsl #4
 800e3b6:	f10c 0c01 	add.w	ip, ip, #1
 800e3ba:	18e7      	adds	r7, r4, r3
 800e3bc:	4473      	add	r3, lr
 800e3be:	3710      	adds	r7, #16
 800e3c0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800e3c2:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
 800e3c6:	e7f1      	b.n	800e3ac <GUI_MTOUCH_StoreEvent+0x90>
 800e3c8:	4f71      	ldr	r7, [pc, #452]	; (800e590 <GUI_MTOUCH_StoreEvent+0x274>)
 800e3ca:	6833      	ldr	r3, [r6, #0]
 800e3cc:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 800e3d0:	f8d3 3790 	ldr.w	r3, [r3, #1936]	; 0x790
 800e3d4:	b193      	cbz	r3, 800e3fc <GUI_MTOUCH_StoreEvent+0xe0>
 800e3d6:	f04f 0800 	mov.w	r8, #0
 800e3da:	e00b      	b.n	800e3f4 <GUI_MTOUCH_StoreEvent+0xd8>
 800e3dc:	eb04 1408 	add.w	r4, r4, r8, lsl #4
 800e3e0:	eb07 0309 	add.w	r3, r7, r9
 800e3e4:	6922      	ldr	r2, [r4, #16]
 800e3e6:	f8d3 3798 	ldr.w	r3, [r3, #1944]	; 0x798
 800e3ea:	1a9b      	subs	r3, r3, r2
 800e3ec:	3b01      	subs	r3, #1
 800e3ee:	6123      	str	r3, [r4, #16]
 800e3f0:	f108 0801 	add.w	r8, r8, #1
 800e3f4:	686c      	ldr	r4, [r5, #4]
 800e3f6:	6863      	ldr	r3, [r4, #4]
 800e3f8:	4598      	cmp	r8, r3
 800e3fa:	d31a      	bcc.n	800e432 <GUI_MTOUCH_StoreEvent+0x116>
 800e3fc:	686c      	ldr	r4, [r5, #4]
 800e3fe:	f005 fb59 	bl	8013ab4 <GUI_GetTime>
 800e402:	4b64      	ldr	r3, [pc, #400]	; (800e594 <GUI_MTOUCH_StoreEvent+0x278>)
 800e404:	60a0      	str	r0, [r4, #8]
 800e406:	681c      	ldr	r4, [r3, #0]
 800e408:	2c00      	cmp	r4, #0
 800e40a:	f000 8094 	beq.w	800e536 <GUI_MTOUCH_StoreEvent+0x21a>
 800e40e:	4b5f      	ldr	r3, [pc, #380]	; (800e58c <GUI_MTOUCH_StoreEvent+0x270>)
 800e410:	f10d 0102 	add.w	r1, sp, #2
 800e414:	685b      	ldr	r3, [r3, #4]
 800e416:	685f      	ldr	r7, [r3, #4]
 800e418:	681a      	ldr	r2, [r3, #0]
 800e41a:	2f05      	cmp	r7, #5
 800e41c:	46be      	mov	lr, r7
 800e41e:	f88d 2000 	strb.w	r2, [sp]
 800e422:	f04f 0200 	mov.w	r2, #0
 800e426:	bf28      	it	cs
 800e428:	f04f 0e05 	movcs.w	lr, #5
 800e42c:	f88d e001 	strb.w	lr, [sp, #1]
 800e430:	e07d      	b.n	800e52e <GUI_MTOUCH_StoreEvent+0x212>
 800e432:	f8d6 b000 	ldr.w	fp, [r6]
 800e436:	ea4f 098b 	mov.w	r9, fp, lsl #2
 800e43a:	eb07 0a09 	add.w	sl, r7, r9
 800e43e:	f8da 3798 	ldr.w	r3, [sl, #1944]	; 0x798
 800e442:	b94b      	cbnz	r3, 800e458 <GUI_MTOUCH_StoreEvent+0x13c>
 800e444:	4658      	mov	r0, fp
 800e446:	f7fe fd4d 	bl	800cee4 <LCD_GetXSizeEx>
 800e44a:	f8ca 0798 	str.w	r0, [sl, #1944]	; 0x798
 800e44e:	4658      	mov	r0, fp
 800e450:	f7fe fd4b 	bl	800ceea <LCD_GetYSizeEx>
 800e454:	f8ca 07a0 	str.w	r0, [sl, #1952]	; 0x7a0
 800e458:	eb07 0309 	add.w	r3, r7, r9
 800e45c:	f8d3 3790 	ldr.w	r3, [r3, #1936]	; 0x790
 800e460:	3b01      	subs	r3, #1
 800e462:	2b06      	cmp	r3, #6
 800e464:	d8c4      	bhi.n	800e3f0 <GUI_MTOUCH_StoreEvent+0xd4>
 800e466:	a201      	add	r2, pc, #4	; (adr r2, 800e46c <GUI_MTOUCH_StoreEvent+0x150>)
 800e468:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e46c:	0800e3dd 	.word	0x0800e3dd
 800e470:	0800e489 	.word	0x0800e489
 800e474:	0800e493 	.word	0x0800e493
 800e478:	0800e4af 	.word	0x0800e4af
 800e47c:	0800e4bb 	.word	0x0800e4bb
 800e480:	0800e4d1 	.word	0x0800e4d1
 800e484:	0800e4eb 	.word	0x0800e4eb
 800e488:	eb04 1408 	add.w	r4, r4, r8, lsl #4
 800e48c:	eb07 0309 	add.w	r3, r7, r9
 800e490:	e009      	b.n	800e4a6 <GUI_MTOUCH_StoreEvent+0x18a>
 800e492:	eb04 1408 	add.w	r4, r4, r8, lsl #4
 800e496:	eb07 0309 	add.w	r3, r7, r9
 800e49a:	6921      	ldr	r1, [r4, #16]
 800e49c:	f8d3 2798 	ldr.w	r2, [r3, #1944]	; 0x798
 800e4a0:	1a52      	subs	r2, r2, r1
 800e4a2:	3a01      	subs	r2, #1
 800e4a4:	6122      	str	r2, [r4, #16]
 800e4a6:	f8d3 37a0 	ldr.w	r3, [r3, #1952]	; 0x7a0
 800e4aa:	6962      	ldr	r2, [r4, #20]
 800e4ac:	e00e      	b.n	800e4cc <GUI_MTOUCH_StoreEvent+0x1b0>
 800e4ae:	eb04 1408 	add.w	r4, r4, r8, lsl #4
 800e4b2:	6962      	ldr	r2, [r4, #20]
 800e4b4:	6923      	ldr	r3, [r4, #16]
 800e4b6:	6122      	str	r2, [r4, #16]
 800e4b8:	e026      	b.n	800e508 <GUI_MTOUCH_StoreEvent+0x1ec>
 800e4ba:	eb04 1408 	add.w	r4, r4, r8, lsl #4
 800e4be:	6963      	ldr	r3, [r4, #20]
 800e4c0:	6922      	ldr	r2, [r4, #16]
 800e4c2:	6123      	str	r3, [r4, #16]
 800e4c4:	eb07 0309 	add.w	r3, r7, r9
 800e4c8:	f8d3 37a0 	ldr.w	r3, [r3, #1952]	; 0x7a0
 800e4cc:	1a9b      	subs	r3, r3, r2
 800e4ce:	e01a      	b.n	800e506 <GUI_MTOUCH_StoreEvent+0x1ea>
 800e4d0:	eb04 1408 	add.w	r4, r4, r8, lsl #4
 800e4d4:	eb07 0309 	add.w	r3, r7, r9
 800e4d8:	6961      	ldr	r1, [r4, #20]
 800e4da:	f8d3 3798 	ldr.w	r3, [r3, #1944]	; 0x798
 800e4de:	6922      	ldr	r2, [r4, #16]
 800e4e0:	1a5b      	subs	r3, r3, r1
 800e4e2:	6162      	str	r2, [r4, #20]
 800e4e4:	3b01      	subs	r3, #1
 800e4e6:	6123      	str	r3, [r4, #16]
 800e4e8:	e782      	b.n	800e3f0 <GUI_MTOUCH_StoreEvent+0xd4>
 800e4ea:	eb04 1408 	add.w	r4, r4, r8, lsl #4
 800e4ee:	eb07 0309 	add.w	r3, r7, r9
 800e4f2:	6961      	ldr	r1, [r4, #20]
 800e4f4:	f8d3 2798 	ldr.w	r2, [r3, #1944]	; 0x798
 800e4f8:	6920      	ldr	r0, [r4, #16]
 800e4fa:	1a52      	subs	r2, r2, r1
 800e4fc:	f8d3 37a0 	ldr.w	r3, [r3, #1952]	; 0x7a0
 800e500:	3a01      	subs	r2, #1
 800e502:	1a1b      	subs	r3, r3, r0
 800e504:	6122      	str	r2, [r4, #16]
 800e506:	3b01      	subs	r3, #1
 800e508:	6163      	str	r3, [r4, #20]
 800e50a:	e771      	b.n	800e3f0 <GUI_MTOUCH_StoreEvent+0xd4>
 800e50c:	4596      	cmp	lr, r2
 800e50e:	d90b      	bls.n	800e528 <GUI_MTOUCH_StoreEvent+0x20c>
 800e510:	6918      	ldr	r0, [r3, #16]
 800e512:	8008      	strh	r0, [r1, #0]
 800e514:	6958      	ldr	r0, [r3, #20]
 800e516:	8148      	strh	r0, [r1, #10]
 800e518:	6998      	ldr	r0, [r3, #24]
 800e51a:	8288      	strh	r0, [r1, #20]
 800e51c:	eb0d 0002 	add.w	r0, sp, r2
 800e520:	f8b3 c01c 	ldrh.w	ip, [r3, #28]
 800e524:	f880 c020 	strb.w	ip, [r0, #32]
 800e528:	3201      	adds	r2, #1
 800e52a:	3310      	adds	r3, #16
 800e52c:	3102      	adds	r1, #2
 800e52e:	4297      	cmp	r7, r2
 800e530:	d1ec      	bne.n	800e50c <GUI_MTOUCH_StoreEvent+0x1f0>
 800e532:	4668      	mov	r0, sp
 800e534:	47a0      	blx	r4
 800e536:	686b      	ldr	r3, [r5, #4]
 800e538:	4a17      	ldr	r2, [pc, #92]	; (800e598 <GUI_MTOUCH_StoreEvent+0x27c>)
 800e53a:	f103 0110 	add.w	r1, r3, #16
 800e53e:	6828      	ldr	r0, [r5, #0]
 800e540:	4293      	cmp	r3, r2
 800e542:	bf14      	ite	ne
 800e544:	33b0      	addne	r3, #176	; 0xb0
 800e546:	f5a2 63dc 	subeq.w	r3, r2, #1760	; 0x6e0
 800e54a:	4283      	cmp	r3, r0
 800e54c:	606b      	str	r3, [r5, #4]
 800e54e:	d104      	bne.n	800e55a <GUI_MTOUCH_StoreEvent+0x23e>
 800e550:	4293      	cmp	r3, r2
 800e552:	bf14      	ite	ne
 800e554:	33b0      	addne	r3, #176	; 0xb0
 800e556:	4b0e      	ldreq	r3, [pc, #56]	; (800e590 <GUI_MTOUCH_StoreEvent+0x274>)
 800e558:	602b      	str	r3, [r5, #0]
 800e55a:	68ab      	ldr	r3, [r5, #8]
 800e55c:	b10b      	cbz	r3, 800e562 <GUI_MTOUCH_StoreEvent+0x246>
 800e55e:	4630      	mov	r0, r6
 800e560:	4798      	blx	r3
 800e562:	f7fd fae3 	bl	800bb2c <GUI_SignalEvent>
 800e566:	b00b      	add	sp, #44	; 0x2c
 800e568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e56c:	eb03 1704 	add.w	r7, r3, r4, lsl #4
 800e570:	f8be c00c 	ldrh.w	ip, [lr, #12]
 800e574:	8bbf      	ldrh	r7, [r7, #28]
 800e576:	45bc      	cmp	ip, r7
 800e578:	f47f af0a 	bne.w	800e390 <GUI_MTOUCH_StoreEvent+0x74>
 800e57c:	3401      	adds	r4, #1
 800e57e:	e6ff      	b.n	800e380 <GUI_MTOUCH_StoreEvent+0x64>
 800e580:	f502 62dc 	add.w	r2, r2, #1760	; 0x6e0
 800e584:	e703      	b.n	800e38e <GUI_MTOUCH_StoreEvent+0x72>
 800e586:	bf00      	nop
 800e588:	2002daf8 	.word	0x2002daf8
 800e58c:	20000080 	.word	0x20000080
 800e590:	200004f4 	.word	0x200004f4
 800e594:	2002dad4 	.word	0x2002dad4
 800e598:	20000bd4 	.word	0x20000bd4

0800e59c <GUI_MTOUCH__ManagePID>:
 800e59c:	4b03      	ldr	r3, [pc, #12]	; (800e5ac <GUI_MTOUCH__ManagePID+0x10>)
 800e59e:	b110      	cbz	r0, 800e5a6 <GUI_MTOUCH__ManagePID+0xa>
 800e5a0:	4a03      	ldr	r2, [pc, #12]	; (800e5b0 <GUI_MTOUCH__ManagePID+0x14>)
 800e5a2:	609a      	str	r2, [r3, #8]
 800e5a4:	4770      	bx	lr
 800e5a6:	6098      	str	r0, [r3, #8]
 800e5a8:	4770      	bx	lr
 800e5aa:	bf00      	nop
 800e5ac:	20000080 	.word	0x20000080
 800e5b0:	0800e2f5 	.word	0x0800e2f5

0800e5b4 <GUI_MTOUCH_Enable>:
 800e5b4:	b510      	push	{r4, lr}
 800e5b6:	4604      	mov	r4, r0
 800e5b8:	4808      	ldr	r0, [pc, #32]	; (800e5dc <GUI_MTOUCH_Enable+0x28>)
 800e5ba:	f8d0 37a8 	ldr.w	r3, [r0, #1960]	; 0x7a8
 800e5be:	b92b      	cbnz	r3, 800e5cc <GUI_MTOUCH_Enable+0x18>
 800e5c0:	4b07      	ldr	r3, [pc, #28]	; (800e5e0 <GUI_MTOUCH_Enable+0x2c>)
 800e5c2:	f500 60f5 	add.w	r0, r0, #1960	; 0x7a8
 800e5c6:	6003      	str	r3, [r0, #0]
 800e5c8:	f7fc ffd6 	bl	800b578 <GUI__RegisterExit>
 800e5cc:	4b05      	ldr	r3, [pc, #20]	; (800e5e4 <GUI_MTOUCH_Enable+0x30>)
 800e5ce:	b114      	cbz	r4, 800e5d6 <GUI_MTOUCH_Enable+0x22>
 800e5d0:	4a05      	ldr	r2, [pc, #20]	; (800e5e8 <GUI_MTOUCH_Enable+0x34>)
 800e5d2:	601a      	str	r2, [r3, #0]
 800e5d4:	bd10      	pop	{r4, pc}
 800e5d6:	601c      	str	r4, [r3, #0]
 800e5d8:	bd10      	pop	{r4, pc}
 800e5da:	bf00      	nop
 800e5dc:	200004f4 	.word	0x200004f4
 800e5e0:	0800e2d9 	.word	0x0800e2d9
 800e5e4:	2002daf8 	.word	0x2002daf8
 800e5e8:	0800e31d 	.word	0x0800e31d

0800e5ec <GUI_MTOUCH_GetTouchInput>:
 800e5ec:	6843      	ldr	r3, [r0, #4]
 800e5ee:	4293      	cmp	r3, r2
 800e5f0:	bf84      	itt	hi
 800e5f2:	68c3      	ldrhi	r3, [r0, #12]
 800e5f4:	eb03 1202 	addhi.w	r2, r3, r2, lsl #4
 800e5f8:	b510      	push	{r4, lr}
 800e5fa:	460c      	mov	r4, r1
 800e5fc:	bf83      	ittte	hi
 800e5fe:	ca0f      	ldmiahi	r2, {r0, r1, r2, r3}
 800e600:	e884 000f 	stmiahi.w	r4, {r0, r1, r2, r3}
 800e604:	2000      	movhi	r0, #0
 800e606:	2001      	movls	r0, #1
 800e608:	bd10      	pop	{r4, pc}
	...

0800e60c <GUI_MTOUCH_GetEvent>:
 800e60c:	4b0b      	ldr	r3, [pc, #44]	; (800e63c <GUI_MTOUCH_GetEvent+0x30>)
 800e60e:	b570      	push	{r4, r5, r6, lr}
 800e610:	685a      	ldr	r2, [r3, #4]
 800e612:	4606      	mov	r6, r0
 800e614:	681c      	ldr	r4, [r3, #0]
 800e616:	461d      	mov	r5, r3
 800e618:	4294      	cmp	r4, r2
 800e61a:	d00c      	beq.n	800e636 <GUI_MTOUCH_GetEvent+0x2a>
 800e61c:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800e620:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 800e624:	4b06      	ldr	r3, [pc, #24]	; (800e640 <GUI_MTOUCH_GetEvent+0x34>)
 800e626:	2000      	movs	r0, #0
 800e628:	429c      	cmp	r4, r3
 800e62a:	bf14      	ite	ne
 800e62c:	34b0      	addne	r4, #176	; 0xb0
 800e62e:	f5a4 64dc 	subeq.w	r4, r4, #1760	; 0x6e0
 800e632:	602c      	str	r4, [r5, #0]
 800e634:	bd70      	pop	{r4, r5, r6, pc}
 800e636:	2001      	movs	r0, #1
 800e638:	bd70      	pop	{r4, r5, r6, pc}
 800e63a:	bf00      	nop
 800e63c:	20000080 	.word	0x20000080
 800e640:	20000bd4 	.word	0x20000bd4

0800e644 <GUI_MTOUCH_IsEmpty>:
 800e644:	4b02      	ldr	r3, [pc, #8]	; (800e650 <GUI_MTOUCH_IsEmpty+0xc>)
 800e646:	cb09      	ldmia	r3, {r0, r3}
 800e648:	1ac3      	subs	r3, r0, r3
 800e64a:	4258      	negs	r0, r3
 800e64c:	4158      	adcs	r0, r3
 800e64e:	4770      	bx	lr
 800e650:	20000080 	.word	0x20000080

0800e654 <_OnExit>:
 800e654:	2200      	movs	r2, #0
 800e656:	4b01      	ldr	r3, [pc, #4]	; (800e65c <_OnExit+0x8>)
 800e658:	701a      	strb	r2, [r3, #0]
 800e65a:	4770      	bx	lr
 800e65c:	20000ca4 	.word	0x20000ca4

0800e660 <_StoreStatePID.isra.1.constprop.3>:
 800e660:	4b0a      	ldr	r3, [pc, #40]	; (800e68c <_StoreStatePID.isra.1.constprop.3+0x2c>)
 800e662:	7358      	strb	r0, [r3, #13]
 800e664:	680a      	ldr	r2, [r1, #0]
 800e666:	605a      	str	r2, [r3, #4]
 800e668:	684a      	ldr	r2, [r1, #4]
 800e66a:	609a      	str	r2, [r3, #8]
 800e66c:	898a      	ldrh	r2, [r1, #12]
 800e66e:	f012 0207 	ands.w	r2, r2, #7
 800e672:	d007      	beq.n	800e684 <_StoreStatePID.isra.1.constprop.3+0x24>
 800e674:	2a02      	cmp	r2, #2
 800e676:	d903      	bls.n	800e680 <_StoreStatePID.isra.1.constprop.3+0x20>
 800e678:	2a04      	cmp	r2, #4
 800e67a:	d103      	bne.n	800e684 <_StoreStatePID.isra.1.constprop.3+0x24>
 800e67c:	2200      	movs	r2, #0
 800e67e:	e000      	b.n	800e682 <_StoreStatePID.isra.1.constprop.3+0x22>
 800e680:	2201      	movs	r2, #1
 800e682:	731a      	strb	r2, [r3, #12]
 800e684:	4802      	ldr	r0, [pc, #8]	; (800e690 <_StoreStatePID.isra.1.constprop.3+0x30>)
 800e686:	f004 be0b 	b.w	80132a0 <GUI_PID_StoreState>
 800e68a:	bf00      	nop
 800e68c:	20000ca4 	.word	0x20000ca4
 800e690:	20000ca8 	.word	0x20000ca8

0800e694 <_ClearStateAndSendEndMessage.constprop.4>:
 800e694:	b530      	push	{r4, r5, lr}
 800e696:	b08b      	sub	sp, #44	; 0x2c
 800e698:	2218      	movs	r2, #24
 800e69a:	2100      	movs	r1, #0
 800e69c:	4c17      	ldr	r4, [pc, #92]	; (800e6fc <_ClearStateAndSendEndMessage.constprop.4+0x68>)
 800e69e:	ad04      	add	r5, sp, #16
 800e6a0:	4628      	mov	r0, r5
 800e6a2:	f007 f927 	bl	80158f4 <memset>
 800e6a6:	2210      	movs	r2, #16
 800e6a8:	2100      	movs	r1, #0
 800e6aa:	4668      	mov	r0, sp
 800e6ac:	f007 f922 	bl	80158f4 <memset>
 800e6b0:	6923      	ldr	r3, [r4, #16]
 800e6b2:	b1f3      	cbz	r3, 800e6f2 <_ClearStateAndSendEndMessage.constprop.4+0x5e>
 800e6b4:	f003 031e 	and.w	r3, r3, #30
 800e6b8:	2b06      	cmp	r3, #6
 800e6ba:	d00c      	beq.n	800e6d6 <_ClearStateAndSendEndMessage.constprop.4+0x42>
 800e6bc:	dc04      	bgt.n	800e6c8 <_ClearStateAndSendEndMessage.constprop.4+0x34>
 800e6be:	2b02      	cmp	r3, #2
 800e6c0:	d009      	beq.n	800e6d6 <_ClearStateAndSendEndMessage.constprop.4+0x42>
 800e6c2:	2b04      	cmp	r3, #4
 800e6c4:	d109      	bne.n	800e6da <_ClearStateAndSendEndMessage.constprop.4+0x46>
 800e6c6:	e006      	b.n	800e6d6 <_ClearStateAndSendEndMessage.constprop.4+0x42>
 800e6c8:	2b10      	cmp	r3, #16
 800e6ca:	d005      	beq.n	800e6d8 <_ClearStateAndSendEndMessage.constprop.4+0x44>
 800e6cc:	2b18      	cmp	r3, #24
 800e6ce:	d003      	beq.n	800e6d8 <_ClearStateAndSendEndMessage.constprop.4+0x44>
 800e6d0:	2b08      	cmp	r3, #8
 800e6d2:	d102      	bne.n	800e6da <_ClearStateAndSendEndMessage.constprop.4+0x46>
 800e6d4:	e000      	b.n	800e6d8 <_ClearStateAndSendEndMessage.constprop.4+0x44>
 800e6d6:	2304      	movs	r3, #4
 800e6d8:	9304      	str	r3, [sp, #16]
 800e6da:	9b04      	ldr	r3, [sp, #16]
 800e6dc:	4669      	mov	r1, sp
 800e6de:	69a0      	ldr	r0, [r4, #24]
 800e6e0:	f043 0302 	orr.w	r3, r3, #2
 800e6e4:	9503      	str	r5, [sp, #12]
 800e6e6:	9304      	str	r3, [sp, #16]
 800e6e8:	f240 1319 	movw	r3, #281	; 0x119
 800e6ec:	9300      	str	r3, [sp, #0]
 800e6ee:	f002 f8d6 	bl	801089e <WM_SendMessage>
 800e6f2:	2300      	movs	r3, #0
 800e6f4:	6123      	str	r3, [r4, #16]
 800e6f6:	b00b      	add	sp, #44	; 0x2c
 800e6f8:	bd30      	pop	{r4, r5, pc}
 800e6fa:	bf00      	nop
 800e6fc:	20000ca4 	.word	0x20000ca4

0800e700 <_Screen2hWin.constprop.5>:
 800e700:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e702:	f003 fb41 	bl	8011d88 <WM_Screen2hWin>
 800e706:	4604      	mov	r4, r0
 800e708:	b908      	cbnz	r0, 800e70e <_Screen2hWin.constprop.5+0xe>
 800e70a:	2000      	movs	r0, #0
 800e70c:	e026      	b.n	800e75c <_Screen2hWin.constprop.5+0x5c>
 800e70e:	4f14      	ldr	r7, [pc, #80]	; (800e760 <_Screen2hWin.constprop.5+0x60>)
 800e710:	4620      	mov	r0, r4
 800e712:	f7fc f91d 	bl	800a950 <GUI_ALLOC_LockH>
 800e716:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800e718:	9001      	str	r0, [sp, #4]
 800e71a:	6986      	ldr	r6, [r0, #24]
 800e71c:	a801      	add	r0, sp, #4
 800e71e:	61fd      	str	r5, [r7, #28]
 800e720:	f7fc f924 	bl	800a96c <GUI_ALLOC_UnlockH>
 800e724:	0329      	lsls	r1, r5, #12
 800e726:	d514      	bpl.n	800e752 <_Screen2hWin.constprop.5+0x52>
 800e728:	4b0d      	ldr	r3, [pc, #52]	; (800e760 <_Screen2hWin.constprop.5+0x60>)
 800e72a:	69db      	ldr	r3, [r3, #28]
 800e72c:	02da      	lsls	r2, r3, #11
 800e72e:	d514      	bpl.n	800e75a <_Screen2hWin.constprop.5+0x5a>
 800e730:	f403 23c0 	and.w	r3, r3, #393216	; 0x60000
 800e734:	f5b3 2fc0 	cmp.w	r3, #393216	; 0x60000
 800e738:	d00f      	beq.n	800e75a <_Screen2hWin.constprop.5+0x5a>
 800e73a:	4620      	mov	r0, r4
 800e73c:	f7fc f908 	bl	800a950 <GUI_ALLOC_LockH>
 800e740:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800e742:	9001      	str	r0, [sp, #4]
 800e744:	f443 23c0 	orr.w	r3, r3, #393216	; 0x60000
 800e748:	6283      	str	r3, [r0, #40]	; 0x28
 800e74a:	a801      	add	r0, sp, #4
 800e74c:	f7fc f90e 	bl	800a96c <GUI_ALLOC_UnlockH>
 800e750:	e003      	b.n	800e75a <_Screen2hWin.constprop.5+0x5a>
 800e752:	4634      	mov	r4, r6
 800e754:	2e00      	cmp	r6, #0
 800e756:	d1db      	bne.n	800e710 <_Screen2hWin.constprop.5+0x10>
 800e758:	e7d7      	b.n	800e70a <_Screen2hWin.constprop.5+0xa>
 800e75a:	4620      	mov	r0, r4
 800e75c:	b003      	add	sp, #12
 800e75e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e760:	20000ca4 	.word	0x20000ca4

0800e764 <WM_GESTURE_Exec>:
 800e764:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e768:	4cb4      	ldr	r4, [pc, #720]	; (800ea3c <WM_GESTURE_Exec+0x2d8>)
 800e76a:	b0a1      	sub	sp, #132	; 0x84
 800e76c:	f7ff ff6a 	bl	800e644 <GUI_MTOUCH_IsEmpty>
 800e770:	4601      	mov	r1, r0
 800e772:	2800      	cmp	r0, #0
 800e774:	f040 83ad 	bne.w	800eed2 <WM_GESTURE_Exec+0x76e>
 800e778:	af18      	add	r7, sp, #96	; 0x60
 800e77a:	2220      	movs	r2, #32
 800e77c:	4eaf      	ldr	r6, [pc, #700]	; (800ea3c <WM_GESTURE_Exec+0x2d8>)
 800e77e:	4638      	mov	r0, r7
 800e780:	f007 f8b8 	bl	80158f4 <memset>
 800e784:	7823      	ldrb	r3, [r4, #0]
 800e786:	b92b      	cbnz	r3, 800e794 <WM_GESTURE_Exec+0x30>
 800e788:	2301      	movs	r3, #1
 800e78a:	f106 0014 	add.w	r0, r6, #20
 800e78e:	7023      	strb	r3, [r4, #0]
 800e790:	f003 fea6 	bl	80124e0 <WM__AddCriticalHandle>
 800e794:	a806      	add	r0, sp, #24
 800e796:	f7ff ff39 	bl	800e60c <GUI_MTOUCH_GetEvent>
 800e79a:	4605      	mov	r5, r0
 800e79c:	2800      	cmp	r0, #0
 800e79e:	d1e5      	bne.n	800e76c <WM_GESTURE_Exec+0x8>
 800e7a0:	f240 1319 	movw	r3, #281	; 0x119
 800e7a4:	930e      	str	r3, [sp, #56]	; 0x38
 800e7a6:	ab12      	add	r3, sp, #72	; 0x48
 800e7a8:	9311      	str	r3, [sp, #68]	; 0x44
 800e7aa:	9b07      	ldr	r3, [sp, #28]
 800e7ac:	2b00      	cmp	r3, #0
 800e7ae:	d0dd      	beq.n	800e76c <WM_GESTURE_Exec+0x8>
 800e7b0:	2b02      	cmp	r3, #2
 800e7b2:	d906      	bls.n	800e7c2 <WM_GESTURE_Exec+0x5e>
 800e7b4:	f7ff ff6e 	bl	800e694 <_ClearStateAndSendEndMessage.constprop.4>
 800e7b8:	2301      	movs	r3, #1
 800e7ba:	61b5      	str	r5, [r6, #24]
 800e7bc:	f886 3020 	strb.w	r3, [r6, #32]
 800e7c0:	e7d4      	b.n	800e76c <WM_GESTURE_Exec+0x8>
 800e7c2:	f8dd 801c 	ldr.w	r8, [sp, #28]
 800e7c6:	4545      	cmp	r5, r8
 800e7c8:	d207      	bcs.n	800e7da <WM_GESTURE_Exec+0x76>
 800e7ca:	462a      	mov	r2, r5
 800e7cc:	eb07 1105 	add.w	r1, r7, r5, lsl #4
 800e7d0:	a806      	add	r0, sp, #24
 800e7d2:	3501      	adds	r5, #1
 800e7d4:	f7ff ff0a 	bl	800e5ec <GUI_MTOUCH_GetTouchInput>
 800e7d8:	e7f3      	b.n	800e7c2 <WM_GESTURE_Exec+0x5e>
 800e7da:	f896 3020 	ldrb.w	r3, [r6, #32]
 800e7de:	b153      	cbz	r3, 800e7f6 <WM_GESTURE_Exec+0x92>
 800e7e0:	f1b8 0f01 	cmp.w	r8, #1
 800e7e4:	d1c2      	bne.n	800e76c <WM_GESTURE_Exec+0x8>
 800e7e6:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 800e7ea:	2b04      	cmp	r3, #4
 800e7ec:	d1be      	bne.n	800e76c <WM_GESTURE_Exec+0x8>
 800e7ee:	2300      	movs	r3, #0
 800e7f0:	f884 3020 	strb.w	r3, [r4, #32]
 800e7f4:	e7ba      	b.n	800e76c <WM_GESTURE_Exec+0x8>
 800e7f6:	f1b8 0f02 	cmp.w	r8, #2
 800e7fa:	d112      	bne.n	800e822 <WM_GESTURE_Exec+0xbe>
 800e7fc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e7fe:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800e800:	429a      	cmp	r2, r3
 800e802:	d10e      	bne.n	800e822 <WM_GESTURE_Exec+0xbe>
 800e804:	f10d 0e28 	add.w	lr, sp, #40	; 0x28
 800e808:	ad1c      	add	r5, sp, #112	; 0x70
 800e80a:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800e80e:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
 800e812:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800e816:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
 800e81a:	e89e 000f 	ldmia.w	lr, {r0, r1, r2, r3}
 800e81e:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800e822:	f04f 0e00 	mov.w	lr, #0
 800e826:	f10d 0c6c 	add.w	ip, sp, #108	; 0x6c
 800e82a:	46f1      	mov	r9, lr
 800e82c:	4675      	mov	r5, lr
 800e82e:	f8cd e00c 	str.w	lr, [sp, #12]
 800e832:	9b03      	ldr	r3, [sp, #12]
 800e834:	4598      	cmp	r8, r3
 800e836:	d051      	beq.n	800e8dc <WM_GESTURE_Exec+0x178>
 800e838:	f8bc 3000 	ldrh.w	r3, [ip]
 800e83c:	f003 0305 	and.w	r3, r3, #5
 800e840:	2b01      	cmp	r3, #1
 800e842:	d002      	beq.n	800e84a <WM_GESTURE_Exec+0xe6>
 800e844:	2b04      	cmp	r3, #4
 800e846:	d018      	beq.n	800e87a <WM_GESTURE_Exec+0x116>
 800e848:	e040      	b.n	800e8cc <WM_GESTURE_Exec+0x168>
 800e84a:	4b7d      	ldr	r3, [pc, #500]	; (800ea40 <WM_GESTURE_Exec+0x2dc>)
 800e84c:	f109 0901 	add.w	r9, r9, #1
 800e850:	eb03 0a8e 	add.w	sl, r3, lr, lsl #2
 800e854:	f1ac 030c 	sub.w	r3, ip, #12
 800e858:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800e85a:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
 800e85e:	4a79      	ldr	r2, [pc, #484]	; (800ea44 <WM_GESTURE_Exec+0x2e0>)
 800e860:	9903      	ldr	r1, [sp, #12]
 800e862:	4613      	mov	r3, r2
 800e864:	f822 0021 	strh.w	r0, [r2, r1, lsl #2]
 800e868:	4473      	add	r3, lr
 800e86a:	f85c 2c08 	ldr.w	r2, [ip, #-8]
 800e86e:	805a      	strh	r2, [r3, #2]
 800e870:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e872:	bb5b      	cbnz	r3, 800e8cc <WM_GESTURE_Exec+0x168>
 800e874:	f85c 3c04 	ldr.w	r3, [ip, #-4]
 800e878:	e027      	b.n	800e8ca <WM_GESTURE_Exec+0x166>
 800e87a:	f1b8 0f01 	cmp.w	r8, #1
 800e87e:	f105 0501 	add.w	r5, r5, #1
 800e882:	d003      	beq.n	800e88c <WM_GESTURE_Exec+0x128>
 800e884:	f1b8 0f02 	cmp.w	r8, #2
 800e888:	d002      	beq.n	800e890 <WM_GESTURE_Exec+0x12c>
 800e88a:	e01f      	b.n	800e8cc <WM_GESTURE_Exec+0x168>
 800e88c:	2300      	movs	r3, #0
 800e88e:	e01c      	b.n	800e8ca <WM_GESTURE_Exec+0x166>
 800e890:	f85c 2c04 	ldr.w	r2, [ip, #-4]
 800e894:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e896:	429a      	cmp	r2, r3
 800e898:	d118      	bne.n	800e8cc <WM_GESTURE_Exec+0x168>
 800e89a:	9b03      	ldr	r3, [sp, #12]
 800e89c:	4a68      	ldr	r2, [pc, #416]	; (800ea40 <WM_GESTURE_Exec+0x2dc>)
 800e89e:	f083 0b01 	eor.w	fp, r3, #1
 800e8a2:	ab20      	add	r3, sp, #128	; 0x80
 800e8a4:	eb02 0a8e 	add.w	sl, r2, lr, lsl #2
 800e8a8:	eb03 1b0b 	add.w	fp, r3, fp, lsl #4
 800e8ac:	f1ab 0320 	sub.w	r3, fp, #32
 800e8b0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800e8b2:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
 800e8b6:	4b63      	ldr	r3, [pc, #396]	; (800ea44 <WM_GESTURE_Exec+0x2e0>)
 800e8b8:	9a03      	ldr	r2, [sp, #12]
 800e8ba:	f823 0022 	strh.w	r0, [r3, r2, lsl #2]
 800e8be:	4473      	add	r3, lr
 800e8c0:	f85b 2c1c 	ldr.w	r2, [fp, #-28]
 800e8c4:	805a      	strh	r2, [r3, #2]
 800e8c6:	f85b 3c18 	ldr.w	r3, [fp, #-24]
 800e8ca:	6263      	str	r3, [r4, #36]	; 0x24
 800e8cc:	9b03      	ldr	r3, [sp, #12]
 800e8ce:	f10c 0c10 	add.w	ip, ip, #16
 800e8d2:	f10e 0e04 	add.w	lr, lr, #4
 800e8d6:	3301      	adds	r3, #1
 800e8d8:	9303      	str	r3, [sp, #12]
 800e8da:	e7aa      	b.n	800e832 <WM_GESTURE_Exec+0xce>
 800e8dc:	f1b9 0f00 	cmp.w	r9, #0
 800e8e0:	d026      	beq.n	800e930 <WM_GESTURE_Exec+0x1cc>
 800e8e2:	f1b8 0f02 	cmp.w	r8, #2
 800e8e6:	f040 8285 	bne.w	800edf4 <WM_GESTURE_Exec+0x690>
 800e8ea:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e8ec:	991d      	ldr	r1, [sp, #116]	; 0x74
 800e8ee:	9818      	ldr	r0, [sp, #96]	; 0x60
 800e8f0:	1a59      	subs	r1, r3, r1
 800e8f2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800e8f4:	4a54      	ldr	r2, [pc, #336]	; (800ea48 <WM_GESTURE_Exec+0x2e4>)
 800e8f6:	1a18      	subs	r0, r3, r0
 800e8f8:	0189      	lsls	r1, r1, #6
 800e8fa:	0180      	lsls	r0, r0, #6
 800e8fc:	f7fd fd2e 	bl	800c35c <GUI__ATan2>
 800e900:	6d33      	ldr	r3, [r6, #80]	; 0x50
 800e902:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800e904:	119b      	asrs	r3, r3, #6
 800e906:	6570      	str	r0, [r6, #84]	; 0x54
 800e908:	65b0      	str	r0, [r6, #88]	; 0x58
 800e90a:	6533      	str	r3, [r6, #80]	; 0x50
 800e90c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800e90e:	4413      	add	r3, r2
 800e910:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800e912:	fb93 f3f8 	sdiv	r3, r3, r8
 800e916:	f8a6 305c 	strh.w	r3, [r6, #92]	; 0x5c
 800e91a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e91c:	4413      	add	r3, r2
 800e91e:	fb93 f8f8 	sdiv	r8, r3, r8
 800e922:	4b4a      	ldr	r3, [pc, #296]	; (800ea4c <WM_GESTURE_Exec+0x2e8>)
 800e924:	f8a6 805e 	strh.w	r8, [r6, #94]	; 0x5e
 800e928:	f853 2c04 	ldr.w	r2, [r3, #-4]
 800e92c:	601a      	str	r2, [r3, #0]
 800e92e:	e261      	b.n	800edf4 <WM_GESTURE_Exec+0x690>
 800e930:	2d00      	cmp	r5, #0
 800e932:	f040 825f 	bne.w	800edf4 <WM_GESTURE_Exec+0x690>
 800e936:	6923      	ldr	r3, [r4, #16]
 800e938:	2b00      	cmp	r3, #0
 800e93a:	f040 808b 	bne.w	800ea54 <WM_GESTURE_Exec+0x2f0>
 800e93e:	9919      	ldr	r1, [sp, #100]	; 0x64
 800e940:	9818      	ldr	r0, [sp, #96]	; 0x60
 800e942:	f7ff fedd 	bl	800e700 <_Screen2hWin.constprop.5>
 800e946:	61a0      	str	r0, [r4, #24]
 800e948:	69a3      	ldr	r3, [r4, #24]
 800e94a:	2b00      	cmp	r3, #0
 800e94c:	f000 824d 	beq.w	800edea <WM_GESTURE_Exec+0x686>
 800e950:	f8dd 801c 	ldr.w	r8, [sp, #28]
 800e954:	f1b8 0f01 	cmp.w	r8, #1
 800e958:	d003      	beq.n	800e962 <WM_GESTURE_Exec+0x1fe>
 800e95a:	f1b8 0f02 	cmp.w	r8, #2
 800e95e:	d023      	beq.n	800e9a8 <WM_GESTURE_Exec+0x244>
 800e960:	e09a      	b.n	800ea98 <WM_GESTURE_Exec+0x334>
 800e962:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800e964:	2004      	movs	r0, #4
 800e966:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800e968:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e96a:	1a9a      	subs	r2, r3, r2
 800e96c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e96e:	1a5b      	subs	r3, r3, r1
 800e970:	4937      	ldr	r1, [pc, #220]	; (800ea50 <WM_GESTURE_Exec+0x2ec>)
 800e972:	2a00      	cmp	r2, #0
 800e974:	6809      	ldr	r1, [r1, #0]
 800e976:	bfb8      	it	lt
 800e978:	4252      	neglt	r2, r2
 800e97a:	2b00      	cmp	r3, #0
 800e97c:	fb91 f0f0 	sdiv	r0, r1, r0
 800e980:	bfb8      	it	lt
 800e982:	425b      	neglt	r3, r3
 800e984:	4282      	cmp	r2, r0
 800e986:	dd04      	ble.n	800e992 <WM_GESTURE_Exec+0x22e>
 800e988:	4283      	cmp	r3, r0
 800e98a:	dd02      	ble.n	800e992 <WM_GESTURE_Exec+0x22e>
 800e98c:	2306      	movs	r3, #6
 800e98e:	6123      	str	r3, [r4, #16]
 800e990:	e082      	b.n	800ea98 <WM_GESTURE_Exec+0x334>
 800e992:	428a      	cmp	r2, r1
 800e994:	dd03      	ble.n	800e99e <WM_GESTURE_Exec+0x23a>
 800e996:	428b      	cmp	r3, r1
 800e998:	dc7d      	bgt.n	800ea96 <WM_GESTURE_Exec+0x332>
 800e99a:	2302      	movs	r3, #2
 800e99c:	e002      	b.n	800e9a4 <WM_GESTURE_Exec+0x240>
 800e99e:	428b      	cmp	r3, r1
 800e9a0:	dd79      	ble.n	800ea96 <WM_GESTURE_Exec+0x332>
 800e9a2:	2304      	movs	r3, #4
 800e9a4:	6123      	str	r3, [r4, #16]
 800e9a6:	e076      	b.n	800ea96 <WM_GESTURE_Exec+0x332>
 800e9a8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800e9aa:	aa05      	add	r2, sp, #20
 800e9ac:	991d      	ldr	r1, [sp, #116]	; 0x74
 800e9ae:	2504      	movs	r5, #4
 800e9b0:	9818      	ldr	r0, [sp, #96]	; 0x60
 800e9b2:	1a59      	subs	r1, r3, r1
 800e9b4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800e9b6:	1a18      	subs	r0, r3, r0
 800e9b8:	0189      	lsls	r1, r1, #6
 800e9ba:	0180      	lsls	r0, r0, #6
 800e9bc:	f7fd fcce 	bl	800c35c <GUI__ATan2>
 800e9c0:	9b05      	ldr	r3, [sp, #20]
 800e9c2:	6d61      	ldr	r1, [r4, #84]	; 0x54
 800e9c4:	4682      	mov	sl, r0
 800e9c6:	119b      	asrs	r3, r3, #6
 800e9c8:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800e9ca:	1a41      	subs	r1, r0, r1
 800e9cc:	4820      	ldr	r0, [pc, #128]	; (800ea50 <WM_GESTURE_Exec+0x2ec>)
 800e9ce:	9305      	str	r3, [sp, #20]
 800e9d0:	1a9b      	subs	r3, r3, r2
 800e9d2:	2900      	cmp	r1, #0
 800e9d4:	6802      	ldr	r2, [r0, #0]
 800e9d6:	bfb8      	it	lt
 800e9d8:	4249      	neglt	r1, r1
 800e9da:	2b00      	cmp	r3, #0
 800e9dc:	fb92 f2f5 	sdiv	r2, r2, r5
 800e9e0:	bfb8      	it	lt
 800e9e2:	425b      	neglt	r3, r3
 800e9e4:	4293      	cmp	r3, r2
 800e9e6:	6843      	ldr	r3, [r0, #4]
 800e9e8:	db09      	blt.n	800e9fe <WM_GESTURE_Exec+0x29a>
 800e9ea:	fb93 f8f8 	sdiv	r8, r3, r8
 800e9ee:	4541      	cmp	r1, r8
 800e9f0:	db0b      	blt.n	800ea0a <WM_GESTURE_Exec+0x2a6>
 800e9f2:	69e3      	ldr	r3, [r4, #28]
 800e9f4:	f413 2fc0 	tst.w	r3, #393216	; 0x60000
 800e9f8:	d107      	bne.n	800ea0a <WM_GESTURE_Exec+0x2a6>
 800e9fa:	2319      	movs	r3, #25
 800e9fc:	e006      	b.n	800ea0c <WM_GESTURE_Exec+0x2a8>
 800e9fe:	4299      	cmp	r1, r3
 800ea00:	da06      	bge.n	800ea10 <WM_GESTURE_Exec+0x2ac>
 800ea02:	69e3      	ldr	r3, [r4, #28]
 800ea04:	f413 2fc0 	tst.w	r3, #393216	; 0x60000
 800ea08:	d008      	beq.n	800ea1c <WM_GESTURE_Exec+0x2b8>
 800ea0a:	2309      	movs	r3, #9
 800ea0c:	6123      	str	r3, [r4, #16]
 800ea0e:	e005      	b.n	800ea1c <WM_GESTURE_Exec+0x2b8>
 800ea10:	69e3      	ldr	r3, [r4, #28]
 800ea12:	f413 2fc0 	tst.w	r3, #393216	; 0x60000
 800ea16:	d1f4      	bne.n	800ea02 <WM_GESTURE_Exec+0x29e>
 800ea18:	2310      	movs	r3, #16
 800ea1a:	e7f7      	b.n	800ea0c <WM_GESTURE_Exec+0x2a8>
 800ea1c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800ea1e:	2502      	movs	r5, #2
 800ea20:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800ea22:	eb02 0903 	add.w	r9, r2, r3
 800ea26:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800ea28:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800ea2a:	fb99 f9f5 	sdiv	r9, r9, r5
 800ea2e:	4413      	add	r3, r2
 800ea30:	fa0f f989 	sxth.w	r9, r9
 800ea34:	fb93 f5f5 	sdiv	r5, r3, r5
 800ea38:	e02b      	b.n	800ea92 <WM_GESTURE_Exec+0x32e>
 800ea3a:	bf00      	nop
 800ea3c:	20000ca4 	.word	0x20000ca4
 800ea40:	20000ccc 	.word	0x20000ccc
 800ea44:	20000cec 	.word	0x20000cec
 800ea48:	20000cf4 	.word	0x20000cf4
 800ea4c:	20000d04 	.word	0x20000d04
 800ea50:	2000008c 	.word	0x2000008c
 800ea54:	f1b8 0f02 	cmp.w	r8, #2
 800ea58:	d125      	bne.n	800eaa6 <WM_GESTURE_Exec+0x342>
 800ea5a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800ea5c:	aa05      	add	r2, sp, #20
 800ea5e:	991d      	ldr	r1, [sp, #116]	; 0x74
 800ea60:	9818      	ldr	r0, [sp, #96]	; 0x60
 800ea62:	1a59      	subs	r1, r3, r1
 800ea64:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800ea66:	1a18      	subs	r0, r3, r0
 800ea68:	0189      	lsls	r1, r1, #6
 800ea6a:	0180      	lsls	r0, r0, #6
 800ea6c:	f7fd fc76 	bl	800c35c <GUI__ATan2>
 800ea70:	9b05      	ldr	r3, [sp, #20]
 800ea72:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800ea74:	4682      	mov	sl, r0
 800ea76:	119b      	asrs	r3, r3, #6
 800ea78:	9d19      	ldr	r5, [sp, #100]	; 0x64
 800ea7a:	9305      	str	r3, [sp, #20]
 800ea7c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800ea7e:	eb02 0903 	add.w	r9, r2, r3
 800ea82:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800ea84:	fb99 f9f8 	sdiv	r9, r9, r8
 800ea88:	441d      	add	r5, r3
 800ea8a:	fa0f f989 	sxth.w	r9, r9
 800ea8e:	fb95 f5f8 	sdiv	r5, r5, r8
 800ea92:	b22d      	sxth	r5, r5
 800ea94:	e002      	b.n	800ea9c <WM_GESTURE_Exec+0x338>
 800ea96:	2500      	movs	r5, #0
 800ea98:	46a9      	mov	r9, r5
 800ea9a:	46aa      	mov	sl, r5
 800ea9c:	6923      	ldr	r3, [r4, #16]
 800ea9e:	2b00      	cmp	r3, #0
 800eaa0:	f000 819e 	beq.w	800ede0 <WM_GESTURE_Exec+0x67c>
 800eaa4:	e001      	b.n	800eaaa <WM_GESTURE_Exec+0x346>
 800eaa6:	46a9      	mov	r9, r5
 800eaa8:	46aa      	mov	sl, r5
 800eaaa:	7b23      	ldrb	r3, [r4, #12]
 800eaac:	b153      	cbz	r3, 800eac4 <WM_GESTURE_Exec+0x360>
 800eaae:	9b06      	ldr	r3, [sp, #24]
 800eab0:	48b0      	ldr	r0, [pc, #704]	; (800ed74 <WM_GESTURE_Exec+0x610>)
 800eab2:	7363      	strb	r3, [r4, #13]
 800eab4:	2300      	movs	r3, #0
 800eab6:	7323      	strb	r3, [r4, #12]
 800eab8:	f04f 33ff 	mov.w	r3, #4294967295
 800eabc:	6063      	str	r3, [r4, #4]
 800eabe:	60a3      	str	r3, [r4, #8]
 800eac0:	f004 fbee 	bl	80132a0 <GUI_PID_StoreState>
 800eac4:	6922      	ldr	r2, [r4, #16]
 800eac6:	0693      	lsls	r3, r2, #26
 800eac8:	d51e      	bpl.n	800eb08 <WM_GESTURE_Exec+0x3a4>
 800eaca:	2300      	movs	r3, #0
 800eacc:	f8b4 104a 	ldrh.w	r1, [r4, #74]	; 0x4a
 800ead0:	07d7      	lsls	r7, r2, #31
 800ead2:	69b0      	ldr	r0, [r6, #24]
 800ead4:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 800ead8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800eada:	eba3 0301 	sub.w	r3, r3, r1
 800eade:	a90e      	add	r1, sp, #56	; 0x38
 800eae0:	f8ad 304e 	strh.w	r3, [sp, #78]	; 0x4e
 800eae4:	bf54      	ite	pl
 800eae6:	2320      	movpl	r3, #32
 800eae8:	2321      	movmi	r3, #33	; 0x21
 800eaea:	9312      	str	r3, [sp, #72]	; 0x48
 800eaec:	f001 fed7 	bl	801089e <WM_SendMessage>
 800eaf0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800eaf2:	f8a6 3048 	strh.w	r3, [r6, #72]	; 0x48
 800eaf6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800eaf8:	f8a6 304a 	strh.w	r3, [r6, #74]	; 0x4a
 800eafc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800eafe:	f023 0302 	bic.w	r3, r3, #2
 800eb02:	9312      	str	r3, [sp, #72]	; 0x48
 800eb04:	2300      	movs	r3, #0
 800eb06:	6133      	str	r3, [r6, #16]
 800eb08:	6923      	ldr	r3, [r4, #16]
 800eb0a:	06d8      	lsls	r0, r3, #27
 800eb0c:	d52a      	bpl.n	800eb64 <WM_GESTURE_Exec+0x400>
 800eb0e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800eb10:	a90e      	add	r1, sp, #56	; 0x38
 800eb12:	69a0      	ldr	r0, [r4, #24]
 800eb14:	ebc3 030a 	rsb	r3, r3, sl
 800eb18:	f8ad 9050 	strh.w	r9, [sp, #80]	; 0x50
 800eb1c:	f8ad 5052 	strh.w	r5, [sp, #82]	; 0x52
 800eb20:	9315      	str	r3, [sp, #84]	; 0x54
 800eb22:	f8b4 3060 	ldrh.w	r3, [r4, #96]	; 0x60
 800eb26:	ebc3 0309 	rsb	r3, r3, r9
 800eb2a:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 800eb2e:	f8b4 3062 	ldrh.w	r3, [r4, #98]	; 0x62
 800eb32:	1aeb      	subs	r3, r5, r3
 800eb34:	f8ad 304e 	strh.w	r3, [sp, #78]	; 0x4e
 800eb38:	2310      	movs	r3, #16
 800eb3a:	9312      	str	r3, [sp, #72]	; 0x48
 800eb3c:	f001 feaf 	bl	801089e <WM_SendMessage>
 800eb40:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800eb42:	f8a4 9060 	strh.w	r9, [r4, #96]	; 0x60
 800eb46:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 800eb4a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800eb4c:	f8a4 5062 	strh.w	r5, [r4, #98]	; 0x62
 800eb50:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
 800eb54:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800eb56:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
 800eb5a:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 800eb5e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800eb60:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800eb64:	6923      	ldr	r3, [r4, #16]
 800eb66:	0719      	lsls	r1, r3, #28
 800eb68:	f140 80e9 	bpl.w	800ed3e <WM_GESTURE_Exec+0x5da>
 800eb6c:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
 800eb6e:	9a05      	ldr	r2, [sp, #20]
 800eb70:	f8ad 9050 	strh.w	r9, [sp, #80]	; 0x50
 800eb74:	434a      	muls	r2, r1
 800eb76:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800eb78:	f8ad 5052 	strh.w	r5, [sp, #82]	; 0x52
 800eb7c:	fb92 f2f1 	sdiv	r2, r2, r1
 800eb80:	9216      	str	r2, [sp, #88]	; 0x58
 800eb82:	f8b4 2060 	ldrh.w	r2, [r4, #96]	; 0x60
 800eb86:	ebc2 0209 	rsb	r2, r2, r9
 800eb8a:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
 800eb8e:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
 800eb92:	1aaa      	subs	r2, r5, r2
 800eb94:	f8ad 204e 	strh.w	r2, [sp, #78]	; 0x4e
 800eb98:	07da      	lsls	r2, r3, #31
 800eb9a:	d54e      	bpl.n	800ec3a <WM_GESTURE_Exec+0x4d6>
 800eb9c:	f023 0301 	bic.w	r3, r3, #1
 800eba0:	69a0      	ldr	r0, [r4, #24]
 800eba2:	a90e      	add	r1, sp, #56	; 0x38
 800eba4:	6123      	str	r3, [r4, #16]
 800eba6:	2309      	movs	r3, #9
 800eba8:	9312      	str	r3, [sp, #72]	; 0x48
 800ebaa:	2300      	movs	r3, #0
 800ebac:	9317      	str	r3, [sp, #92]	; 0x5c
 800ebae:	f001 fe76 	bl	801089e <WM_SendMessage>
 800ebb2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800ebb4:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800ebb6:	67e3      	str	r3, [r4, #124]	; 0x7c
 800ebb8:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
 800ebbc:	2f00      	cmp	r7, #0
 800ebbe:	d03c      	beq.n	800ec3a <WM_GESTURE_Exec+0x4d6>
 800ebc0:	61bb      	str	r3, [r7, #24]
 800ebc2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800ebc4:	627b      	str	r3, [r7, #36]	; 0x24
 800ebc6:	68bb      	ldr	r3, [r7, #8]
 800ebc8:	b91b      	cbnz	r3, 800ebd2 <WM_GESTURE_Exec+0x46e>
 800ebca:	69a0      	ldr	r0, [r4, #24]
 800ebcc:	f002 fcc4 	bl	8011558 <WM_GetWindowSizeX>
 800ebd0:	60b8      	str	r0, [r7, #8]
 800ebd2:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
 800ebd6:	68fb      	ldr	r3, [r7, #12]
 800ebd8:	b91b      	cbnz	r3, 800ebe2 <WM_GESTURE_Exec+0x47e>
 800ebda:	69a0      	ldr	r0, [r4, #24]
 800ebdc:	f002 fcd1 	bl	8011582 <WM_GetWindowSizeY>
 800ebe0:	60f8      	str	r0, [r7, #12]
 800ebe2:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 800ebe6:	691b      	ldr	r3, [r3, #16]
 800ebe8:	b953      	cbnz	r3, 800ec00 <WM_GESTURE_Exec+0x49c>
 800ebea:	69a0      	ldr	r0, [r4, #24]
 800ebec:	f002 fd88 	bl	8011700 <WM_GetParent>
 800ebf0:	f8d4 8080 	ldr.w	r8, [r4, #128]	; 0x80
 800ebf4:	4607      	mov	r7, r0
 800ebf6:	f002 fcaf 	bl	8011558 <WM_GetWindowSizeX>
 800ebfa:	f8c8 0010 	str.w	r0, [r8, #16]
 800ebfe:	e000      	b.n	800ec02 <WM_GESTURE_Exec+0x49e>
 800ec00:	2700      	movs	r7, #0
 800ec02:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 800ec06:	695b      	ldr	r3, [r3, #20]
 800ec08:	b95b      	cbnz	r3, 800ec22 <WM_GESTURE_Exec+0x4be>
 800ec0a:	b91f      	cbnz	r7, 800ec14 <WM_GESTURE_Exec+0x4b0>
 800ec0c:	69a0      	ldr	r0, [r4, #24]
 800ec0e:	f002 fd77 	bl	8011700 <WM_GetParent>
 800ec12:	4607      	mov	r7, r0
 800ec14:	f8d4 8080 	ldr.w	r8, [r4, #128]	; 0x80
 800ec18:	4638      	mov	r0, r7
 800ec1a:	f002 fcb2 	bl	8011582 <WM_GetWindowSizeY>
 800ec1e:	f8c8 0014 	str.w	r0, [r8, #20]
 800ec22:	f8d6 7080 	ldr.w	r7, [r6, #128]	; 0x80
 800ec26:	69b0      	ldr	r0, [r6, #24]
 800ec28:	f002 fd5a 	bl	80116e0 <WM_GetWindowOrgX>
 800ec2c:	61f8      	str	r0, [r7, #28]
 800ec2e:	f8d6 7080 	ldr.w	r7, [r6, #128]	; 0x80
 800ec32:	69b0      	ldr	r0, [r6, #24]
 800ec34:	f002 fd5c 	bl	80116f0 <WM_GetWindowOrgY>
 800ec38:	6238      	str	r0, [r7, #32]
 800ec3a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 800ec3c:	9b05      	ldr	r3, [sp, #20]
 800ec3e:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 800ec42:	4353      	muls	r3, r2
 800ec44:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ec46:	fb93 f3f2 	sdiv	r3, r3, r2
 800ec4a:	9316      	str	r3, [sp, #88]	; 0x58
 800ec4c:	b141      	cbz	r1, 800ec60 <WM_GESTURE_Exec+0x4fc>
 800ec4e:	680a      	ldr	r2, [r1, #0]
 800ec50:	4293      	cmp	r3, r2
 800ec52:	bfb8      	it	lt
 800ec54:	4613      	movlt	r3, r2
 800ec56:	684a      	ldr	r2, [r1, #4]
 800ec58:	4293      	cmp	r3, r2
 800ec5a:	bfd4      	ite	le
 800ec5c:	9316      	strle	r3, [sp, #88]	; 0x58
 800ec5e:	9216      	strgt	r2, [sp, #88]	; 0x58
 800ec60:	2308      	movs	r3, #8
 800ec62:	69a0      	ldr	r0, [r4, #24]
 800ec64:	a90e      	add	r1, sp, #56	; 0x38
 800ec66:	9312      	str	r3, [sp, #72]	; 0x48
 800ec68:	f001 fe19 	bl	801089e <WM_SendMessage>
 800ec6c:	69e3      	ldr	r3, [r4, #28]
 800ec6e:	02db      	lsls	r3, r3, #11
 800ec70:	d555      	bpl.n	800ed1e <WM_GESTURE_Exec+0x5ba>
 800ec72:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
 800ec76:	f9bd 104c 	ldrsh.w	r1, [sp, #76]	; 0x4c
 800ec7a:	69fb      	ldr	r3, [r7, #28]
 800ec7c:	f9bd 004e 	ldrsh.w	r0, [sp, #78]	; 0x4e
 800ec80:	4419      	add	r1, r3
 800ec82:	6a3b      	ldr	r3, [r7, #32]
 800ec84:	f8d7 c018 	ldr.w	ip, [r7, #24]
 800ec88:	18c2      	adds	r2, r0, r3
 800ec8a:	9816      	ldr	r0, [sp, #88]	; 0x58
 800ec8c:	f9bd 8050 	ldrsh.w	r8, [sp, #80]	; 0x50
 800ec90:	ebc0 0e0c 	rsb	lr, r0, ip
 800ec94:	61f9      	str	r1, [r7, #28]
 800ec96:	4341      	muls	r1, r0
 800ec98:	68bb      	ldr	r3, [r7, #8]
 800ec9a:	fb0e f808 	mul.w	r8, lr, r8
 800ec9e:	68fe      	ldr	r6, [r7, #12]
 800eca0:	4343      	muls	r3, r0
 800eca2:	4346      	muls	r6, r0
 800eca4:	4350      	muls	r0, r2
 800eca6:	141b      	asrs	r3, r3, #16
 800eca8:	623a      	str	r2, [r7, #32]
 800ecaa:	1436      	asrs	r6, r6, #16
 800ecac:	fb98 f8fc 	sdiv	r8, r8, ip
 800ecb0:	fb91 f1fc 	sdiv	r1, r1, ip
 800ecb4:	4441      	add	r1, r8
 800ecb6:	f9bd 8052 	ldrsh.w	r8, [sp, #82]	; 0x52
 800ecba:	fb0e fe08 	mul.w	lr, lr, r8
 800ecbe:	fb90 f0fc 	sdiv	r0, r0, ip
 800ecc2:	fb9e fefc 	sdiv	lr, lr, ip
 800ecc6:	eb0e 0200 	add.w	r2, lr, r0
 800ecca:	6938      	ldr	r0, [r7, #16]
 800eccc:	4283      	cmp	r3, r0
 800ecce:	dd06      	ble.n	800ecde <WM_GESTURE_Exec+0x57a>
 800ecd0:	2900      	cmp	r1, #0
 800ecd2:	dc0d      	bgt.n	800ecf0 <WM_GESTURE_Exec+0x58c>
 800ecd4:	eb03 0e01 	add.w	lr, r3, r1
 800ecd8:	4570      	cmp	r0, lr
 800ecda:	dd0a      	ble.n	800ecf2 <WM_GESTURE_Exec+0x58e>
 800ecdc:	e005      	b.n	800ecea <WM_GESTURE_Exec+0x586>
 800ecde:	2900      	cmp	r1, #0
 800ece0:	db06      	blt.n	800ecf0 <WM_GESTURE_Exec+0x58c>
 800ece2:	eb03 0e01 	add.w	lr, r3, r1
 800ece6:	4570      	cmp	r0, lr
 800ece8:	da03      	bge.n	800ecf2 <WM_GESTURE_Exec+0x58e>
 800ecea:	1e41      	subs	r1, r0, #1
 800ecec:	1ac9      	subs	r1, r1, r3
 800ecee:	e000      	b.n	800ecf2 <WM_GESTURE_Exec+0x58e>
 800ecf0:	2100      	movs	r1, #0
 800ecf2:	6978      	ldr	r0, [r7, #20]
 800ecf4:	4286      	cmp	r6, r0
 800ecf6:	dd05      	ble.n	800ed04 <WM_GESTURE_Exec+0x5a0>
 800ecf8:	2a00      	cmp	r2, #0
 800ecfa:	dc0b      	bgt.n	800ed14 <WM_GESTURE_Exec+0x5b0>
 800ecfc:	18b7      	adds	r7, r6, r2
 800ecfe:	42b8      	cmp	r0, r7
 800ed00:	dd09      	ble.n	800ed16 <WM_GESTURE_Exec+0x5b2>
 800ed02:	e004      	b.n	800ed0e <WM_GESTURE_Exec+0x5aa>
 800ed04:	2a00      	cmp	r2, #0
 800ed06:	db05      	blt.n	800ed14 <WM_GESTURE_Exec+0x5b0>
 800ed08:	18b7      	adds	r7, r6, r2
 800ed0a:	42b8      	cmp	r0, r7
 800ed0c:	da03      	bge.n	800ed16 <WM_GESTURE_Exec+0x5b2>
 800ed0e:	1e42      	subs	r2, r0, #1
 800ed10:	1b92      	subs	r2, r2, r6
 800ed12:	e000      	b.n	800ed16 <WM_GESTURE_Exec+0x5b2>
 800ed14:	2200      	movs	r2, #0
 800ed16:	69a0      	ldr	r0, [r4, #24]
 800ed18:	9600      	str	r6, [sp, #0]
 800ed1a:	f002 febb 	bl	8011a94 <WM_SetWindowPos>
 800ed1e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800ed20:	f8a4 9060 	strh.w	r9, [r4, #96]	; 0x60
 800ed24:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 800ed28:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800ed2a:	f8a4 5062 	strh.w	r5, [r4, #98]	; 0x62
 800ed2e:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
 800ed32:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800ed34:	f8a4 304c 	strh.w	r3, [r4, #76]	; 0x4c
 800ed38:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800ed3a:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 800ed3e:	6923      	ldr	r3, [r4, #16]
 800ed40:	f013 0f06 	tst.w	r3, #6
 800ed44:	f43f ad12 	beq.w	800e76c <WM_GESTURE_Exec+0x8>
 800ed48:	69e2      	ldr	r2, [r4, #28]
 800ed4a:	f412 22c0 	ands.w	r2, r2, #393216	; 0x60000
 800ed4e:	d12c      	bne.n	800edaa <WM_GESTURE_Exec+0x646>
 800ed50:	2b04      	cmp	r3, #4
 800ed52:	d00c      	beq.n	800ed6e <WM_GESTURE_Exec+0x60a>
 800ed54:	2b06      	cmp	r3, #6
 800ed56:	d00f      	beq.n	800ed78 <WM_GESTURE_Exec+0x614>
 800ed58:	2b02      	cmp	r3, #2
 800ed5a:	d119      	bne.n	800ed90 <WM_GESTURE_Exec+0x62c>
 800ed5c:	f8b4 1048 	ldrh.w	r1, [r4, #72]	; 0x48
 800ed60:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800ed62:	f8ad 204e 	strh.w	r2, [sp, #78]	; 0x4e
 800ed66:	1a5b      	subs	r3, r3, r1
 800ed68:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 800ed6c:	e010      	b.n	800ed90 <WM_GESTURE_Exec+0x62c>
 800ed6e:	f8ad 204c 	strh.w	r2, [sp, #76]	; 0x4c
 800ed72:	e007      	b.n	800ed84 <WM_GESTURE_Exec+0x620>
 800ed74:	20000ca8 	.word	0x20000ca8
 800ed78:	f8b4 2048 	ldrh.w	r2, [r4, #72]	; 0x48
 800ed7c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800ed7e:	1a9b      	subs	r3, r3, r2
 800ed80:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 800ed84:	f8b4 204a 	ldrh.w	r2, [r4, #74]	; 0x4a
 800ed88:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800ed8a:	1a9b      	subs	r3, r3, r2
 800ed8c:	f8ad 304e 	strh.w	r3, [sp, #78]	; 0x4e
 800ed90:	2304      	movs	r3, #4
 800ed92:	69a0      	ldr	r0, [r4, #24]
 800ed94:	a90e      	add	r1, sp, #56	; 0x38
 800ed96:	9312      	str	r3, [sp, #72]	; 0x48
 800ed98:	f001 fd81 	bl	801089e <WM_SendMessage>
 800ed9c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800ed9e:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
 800eda2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800eda4:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
 800eda8:	e4e0      	b.n	800e76c <WM_GESTURE_Exec+0x8>
 800edaa:	9a06      	ldr	r2, [sp, #24]
 800edac:	2b04      	cmp	r3, #4
 800edae:	f884 206d 	strb.w	r2, [r4, #109]	; 0x6d
 800edb2:	f04f 0201 	mov.w	r2, #1
 800edb6:	f884 206c 	strb.w	r2, [r4, #108]	; 0x6c
 800edba:	d007      	beq.n	800edcc <WM_GESTURE_Exec+0x668>
 800edbc:	2b06      	cmp	r3, #6
 800edbe:	d007      	beq.n	800edd0 <WM_GESTURE_Exec+0x66c>
 800edc0:	2b02      	cmp	r3, #2
 800edc2:	d109      	bne.n	800edd8 <WM_GESTURE_Exec+0x674>
 800edc4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800edc6:	6663      	str	r3, [r4, #100]	; 0x64
 800edc8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800edca:	e004      	b.n	800edd6 <WM_GESTURE_Exec+0x672>
 800edcc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800edce:	e000      	b.n	800edd2 <WM_GESTURE_Exec+0x66e>
 800edd0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800edd2:	6663      	str	r3, [r4, #100]	; 0x64
 800edd4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800edd6:	66a3      	str	r3, [r4, #104]	; 0x68
 800edd8:	483f      	ldr	r0, [pc, #252]	; (800eed8 <WM_GESTURE_Exec+0x774>)
 800edda:	f004 fa61 	bl	80132a0 <GUI_PID_StoreState>
 800edde:	e4c5      	b.n	800e76c <WM_GESTURE_Exec+0x8>
 800ede0:	69e3      	ldr	r3, [r4, #28]
 800ede2:	f413 2fc0 	tst.w	r3, #393216	; 0x60000
 800ede6:	f47f acc1 	bne.w	800e76c <WM_GESTURE_Exec+0x8>
 800edea:	4639      	mov	r1, r7
 800edec:	9806      	ldr	r0, [sp, #24]
 800edee:	f7ff fc37 	bl	800e660 <_StoreStatePID.isra.1.constprop.3>
 800edf2:	e4bb      	b.n	800e76c <WM_GESTURE_Exec+0x8>
 800edf4:	f7ff fc4e 	bl	800e694 <_ClearStateAndSendEndMessage.constprop.4>
 800edf8:	6923      	ldr	r3, [r4, #16]
 800edfa:	2b00      	cmp	r3, #0
 800edfc:	f47f acb6 	bne.w	800e76c <WM_GESTURE_Exec+0x8>
 800ee00:	9919      	ldr	r1, [sp, #100]	; 0x64
 800ee02:	9818      	ldr	r0, [sp, #96]	; 0x60
 800ee04:	f7ff fc7c 	bl	800e700 <_Screen2hWin.constprop.5>
 800ee08:	69e3      	ldr	r3, [r4, #28]
 800ee0a:	61a0      	str	r0, [r4, #24]
 800ee0c:	f413 2fc0 	tst.w	r3, #393216	; 0x60000
 800ee10:	d104      	bne.n	800ee1c <WM_GESTURE_Exec+0x6b8>
 800ee12:	4639      	mov	r1, r7
 800ee14:	9806      	ldr	r0, [sp, #24]
 800ee16:	f7ff fc23 	bl	800e660 <_StoreStatePID.isra.1.constprop.3>
 800ee1a:	e015      	b.n	800ee48 <WM_GESTURE_Exec+0x6e4>
 800ee1c:	2d01      	cmp	r5, #1
 800ee1e:	d10f      	bne.n	800ee40 <WM_GESTURE_Exec+0x6dc>
 800ee20:	f1b9 0f00 	cmp.w	r9, #0
 800ee24:	d110      	bne.n	800ee48 <WM_GESTURE_Exec+0x6e4>
 800ee26:	9b06      	ldr	r3, [sp, #24]
 800ee28:	482b      	ldr	r0, [pc, #172]	; (800eed8 <WM_GESTURE_Exec+0x774>)
 800ee2a:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 800ee2e:	f04f 33ff 	mov.w	r3, #4294967295
 800ee32:	f884 906c 	strb.w	r9, [r4, #108]	; 0x6c
 800ee36:	6663      	str	r3, [r4, #100]	; 0x64
 800ee38:	66a3      	str	r3, [r4, #104]	; 0x68
 800ee3a:	f004 fa31 	bl	80132a0 <GUI_PID_StoreState>
 800ee3e:	e003      	b.n	800ee48 <WM_GESTURE_Exec+0x6e4>
 800ee40:	b915      	cbnz	r5, 800ee48 <WM_GESTURE_Exec+0x6e4>
 800ee42:	f1b9 0f01 	cmp.w	r9, #1
 800ee46:	d0e4      	beq.n	800ee12 <WM_GESTURE_Exec+0x6ae>
 800ee48:	9b07      	ldr	r3, [sp, #28]
 800ee4a:	2b01      	cmp	r3, #1
 800ee4c:	f47f ac8e 	bne.w	800e76c <WM_GESTURE_Exec+0x8>
 800ee50:	f004 fe30 	bl	8013ab4 <GUI_GetTime>
 800ee54:	2d01      	cmp	r5, #1
 800ee56:	d105      	bne.n	800ee64 <WM_GESTURE_Exec+0x700>
 800ee58:	f1b9 0f00 	cmp.w	r9, #0
 800ee5c:	f47f ac86 	bne.w	800e76c <WM_GESTURE_Exec+0x8>
 800ee60:	6720      	str	r0, [r4, #112]	; 0x70
 800ee62:	e483      	b.n	800e76c <WM_GESTURE_Exec+0x8>
 800ee64:	2d00      	cmp	r5, #0
 800ee66:	f47f ac81 	bne.w	800e76c <WM_GESTURE_Exec+0x8>
 800ee6a:	f1b9 0f01 	cmp.w	r9, #1
 800ee6e:	f47f ac7d 	bne.w	800e76c <WM_GESTURE_Exec+0x8>
 800ee72:	4b1a      	ldr	r3, [pc, #104]	; (800eedc <WM_GESTURE_Exec+0x778>)
 800ee74:	f853 1c04 	ldr.w	r1, [r3, #-4]
 800ee78:	461a      	mov	r2, r3
 800ee7a:	f842 1930 	str.w	r1, [r2], #-48
 800ee7e:	6812      	ldr	r2, [r2, #0]
 800ee80:	f843 2c04 	str.w	r2, [r3, #-4]
 800ee84:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800ee86:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800ee8a:	4298      	cmp	r0, r3
 800ee8c:	da18      	bge.n	800eec0 <WM_GESTURE_Exec+0x75c>
 800ee8e:	f9b4 3074 	ldrsh.w	r3, [r4, #116]	; 0x74
 800ee92:	f9b4 2078 	ldrsh.w	r2, [r4, #120]	; 0x78
 800ee96:	1a9b      	subs	r3, r3, r2
 800ee98:	2b00      	cmp	r3, #0
 800ee9a:	bfb8      	it	lt
 800ee9c:	425b      	neglt	r3, r3
 800ee9e:	2b13      	cmp	r3, #19
 800eea0:	f73f ac64 	bgt.w	800e76c <WM_GESTURE_Exec+0x8>
 800eea4:	f9b4 3076 	ldrsh.w	r3, [r4, #118]	; 0x76
 800eea8:	f9b4 207a 	ldrsh.w	r2, [r4, #122]	; 0x7a
 800eeac:	1a9b      	subs	r3, r3, r2
 800eeae:	2b00      	cmp	r3, #0
 800eeb0:	bfb8      	it	lt
 800eeb2:	425b      	neglt	r3, r3
 800eeb4:	2b13      	cmp	r3, #19
 800eeb6:	f73f ac59 	bgt.w	800e76c <WM_GESTURE_Exec+0x8>
 800eeba:	2321      	movs	r3, #33	; 0x21
 800eebc:	6123      	str	r3, [r4, #16]
 800eebe:	e455      	b.n	800e76c <WM_GESTURE_Exec+0x8>
 800eec0:	f8a4 507a 	strh.w	r5, [r4, #122]	; 0x7a
 800eec4:	f8a4 5076 	strh.w	r5, [r4, #118]	; 0x76
 800eec8:	f8a4 5078 	strh.w	r5, [r4, #120]	; 0x78
 800eecc:	f8a4 5074 	strh.w	r5, [r4, #116]	; 0x74
 800eed0:	e44c      	b.n	800e76c <WM_GESTURE_Exec+0x8>
 800eed2:	b021      	add	sp, #132	; 0x84
 800eed4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eed8:	20000d08 	.word	0x20000d08
 800eedc:	20000d1c 	.word	0x20000d1c

0800eee0 <WM_GESTURE_Enable>:
 800eee0:	b510      	push	{r4, lr}
 800eee2:	4604      	mov	r4, r0
 800eee4:	480b      	ldr	r0, [pc, #44]	; (800ef14 <WM_GESTURE_Enable+0x34>)
 800eee6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800eeea:	b923      	cbnz	r3, 800eef6 <WM_GESTURE_Enable+0x16>
 800eeec:	4b0a      	ldr	r3, [pc, #40]	; (800ef18 <WM_GESTURE_Enable+0x38>)
 800eeee:	f840 3f84 	str.w	r3, [r0, #132]!
 800eef2:	f7fc fb41 	bl	800b578 <GUI__RegisterExit>
 800eef6:	4620      	mov	r0, r4
 800eef8:	f7ff fb5c 	bl	800e5b4 <GUI_MTOUCH_Enable>
 800eefc:	4b07      	ldr	r3, [pc, #28]	; (800ef1c <WM_GESTURE_Enable+0x3c>)
 800eefe:	b11c      	cbz	r4, 800ef08 <WM_GESTURE_Enable+0x28>
 800ef00:	4a07      	ldr	r2, [pc, #28]	; (800ef20 <WM_GESTURE_Enable+0x40>)
 800ef02:	2000      	movs	r0, #0
 800ef04:	601a      	str	r2, [r3, #0]
 800ef06:	e001      	b.n	800ef0c <WM_GESTURE_Enable+0x2c>
 800ef08:	2001      	movs	r0, #1
 800ef0a:	601c      	str	r4, [r3, #0]
 800ef0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ef10:	f7ff bb44 	b.w	800e59c <GUI_MTOUCH__ManagePID>
 800ef14:	20000ca4 	.word	0x20000ca4
 800ef18:	0800e655 	.word	0x0800e655
 800ef1c:	2002db38 	.word	0x2002db38
 800ef20:	0800e765 	.word	0x0800e765

0800ef24 <_GetDevData>:
 800ef24:	2901      	cmp	r1, #1
 800ef26:	4802      	ldr	r0, [pc, #8]	; (800ef30 <_GetDevData+0xc>)
 800ef28:	bf18      	it	ne
 800ef2a:	2000      	movne	r0, #0
 800ef2c:	4770      	bx	lr
 800ef2e:	bf00      	nop
 800ef30:	0801dca0 	.word	0x0801dca0

0800ef34 <_GetDevFunc>:
 800ef34:	2916      	cmp	r1, #22
 800ef36:	4802      	ldr	r0, [pc, #8]	; (800ef40 <_GetDevFunc+0xc>)
 800ef38:	bf18      	it	ne
 800ef3a:	2000      	movne	r0, #0
 800ef3c:	4770      	bx	lr
 800ef3e:	bf00      	nop
 800ef40:	0800fa45 	.word	0x0800fa45

0800ef44 <_SetOrg>:
 800ef44:	6800      	ldr	r0, [r0, #0]
 800ef46:	b110      	cbz	r0, 800ef4e <_SetOrg+0xa>
 800ef48:	68c3      	ldr	r3, [r0, #12]
 800ef4a:	6a1b      	ldr	r3, [r3, #32]
 800ef4c:	4718      	bx	r3
 800ef4e:	4770      	bx	lr

0800ef50 <_GetRect>:
 800ef50:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ef52:	6880      	ldr	r0, [r0, #8]
 800ef54:	460d      	mov	r5, r1
 800ef56:	f7fb fcfb 	bl	800a950 <GUI_ALLOC_LockH>
 800ef5a:	4602      	mov	r2, r0
 800ef5c:	a802      	add	r0, sp, #8
 800ef5e:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800ef62:	8914      	ldrh	r4, [r2, #8]
 800ef64:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 800ef68:	802b      	strh	r3, [r5, #0]
 800ef6a:	441c      	add	r4, r3
 800ef6c:	8953      	ldrh	r3, [r2, #10]
 800ef6e:	3c01      	subs	r4, #1
 800ef70:	f840 2d04 	str.w	r2, [r0, #-4]!
 800ef74:	440b      	add	r3, r1
 800ef76:	8069      	strh	r1, [r5, #2]
 800ef78:	80ac      	strh	r4, [r5, #4]
 800ef7a:	3b01      	subs	r3, #1
 800ef7c:	80eb      	strh	r3, [r5, #6]
 800ef7e:	f7fb fcf5 	bl	800a96c <GUI_ALLOC_UnlockH>
 800ef82:	b003      	add	sp, #12
 800ef84:	bd30      	pop	{r4, r5, pc}
	...

0800ef88 <_XY2PTR>:
 800ef88:	4b0e      	ldr	r3, [pc, #56]	; (800efc4 <_XY2PTR+0x3c>)
 800ef8a:	681b      	ldr	r3, [r3, #0]
 800ef8c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ef8e:	4606      	mov	r6, r0
 800ef90:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800ef92:	460d      	mov	r5, r1
 800ef94:	f7fb fcdc 	bl	800a950 <GUI_ALLOC_LockH>
 800ef98:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800ef9c:	ab02      	add	r3, sp, #8
 800ef9e:	68c4      	ldr	r4, [r0, #12]
 800efa0:	1a69      	subs	r1, r5, r1
 800efa2:	f9b0 5004 	ldrsh.w	r5, [r0, #4]
 800efa6:	f843 0d04 	str.w	r0, [r3, #-4]!
 800efaa:	1b76      	subs	r6, r6, r5
 800efac:	0076      	lsls	r6, r6, #1
 800efae:	3618      	adds	r6, #24
 800efb0:	fb04 6501 	mla	r5, r4, r1, r6
 800efb4:	1944      	adds	r4, r0, r5
 800efb6:	4618      	mov	r0, r3
 800efb8:	f7fb fcd8 	bl	800a96c <GUI_ALLOC_UnlockH>
 800efbc:	4620      	mov	r0, r4
 800efbe:	b002      	add	sp, #8
 800efc0:	bd70      	pop	{r4, r5, r6, pc}
 800efc2:	bf00      	nop
 800efc4:	2000003c 	.word	0x2000003c

0800efc8 <_GetPixelIndex>:
 800efc8:	b508      	push	{r3, lr}
 800efca:	4608      	mov	r0, r1
 800efcc:	4611      	mov	r1, r2
 800efce:	f7ff ffdb 	bl	800ef88 <_XY2PTR>
 800efd2:	8800      	ldrh	r0, [r0, #0]
 800efd4:	bd08      	pop	{r3, pc}
	...

0800efd8 <_XorPixel>:
 800efd8:	4b14      	ldr	r3, [pc, #80]	; (800f02c <_XorPixel+0x54>)
 800efda:	681b      	ldr	r3, [r3, #0]
 800efdc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800efde:	4616      	mov	r6, r2
 800efe0:	460d      	mov	r5, r1
 800efe2:	4607      	mov	r7, r0
 800efe4:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800efe6:	f7fb fcb3 	bl	800a950 <GUI_ALLOC_LockH>
 800efea:	4631      	mov	r1, r6
 800efec:	9000      	str	r0, [sp, #0]
 800efee:	4628      	mov	r0, r5
 800eff0:	f7ff ffca 	bl	800ef88 <_XY2PTR>
 800eff4:	693b      	ldr	r3, [r7, #16]
 800eff6:	4604      	mov	r4, r0
 800eff8:	689b      	ldr	r3, [r3, #8]
 800effa:	4798      	blx	r3
 800effc:	8823      	ldrh	r3, [r4, #0]
 800effe:	4058      	eors	r0, r3
 800f000:	9b00      	ldr	r3, [sp, #0]
 800f002:	8020      	strh	r0, [r4, #0]
 800f004:	6958      	ldr	r0, [r3, #20]
 800f006:	b160      	cbz	r0, 800f022 <_XorPixel+0x4a>
 800f008:	f7fb fca2 	bl	800a950 <GUI_ALLOC_LockH>
 800f00c:	ac02      	add	r4, sp, #8
 800f00e:	6883      	ldr	r3, [r0, #8]
 800f010:	4632      	mov	r2, r6
 800f012:	f844 0d04 	str.w	r0, [r4, #-4]!
 800f016:	4629      	mov	r1, r5
 800f018:	681b      	ldr	r3, [r3, #0]
 800f01a:	4798      	blx	r3
 800f01c:	4620      	mov	r0, r4
 800f01e:	f7fb fca5 	bl	800a96c <GUI_ALLOC_UnlockH>
 800f022:	4668      	mov	r0, sp
 800f024:	f7fb fca2 	bl	800a96c <GUI_ALLOC_UnlockH>
 800f028:	b003      	add	sp, #12
 800f02a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f02c:	2000003c 	.word	0x2000003c

0800f030 <_SetPixelIndex>:
 800f030:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f032:	461c      	mov	r4, r3
 800f034:	4b10      	ldr	r3, [pc, #64]	; (800f078 <_SetPixelIndex+0x48>)
 800f036:	460d      	mov	r5, r1
 800f038:	4616      	mov	r6, r2
 800f03a:	681b      	ldr	r3, [r3, #0]
 800f03c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800f03e:	f7fb fc87 	bl	800a950 <GUI_ALLOC_LockH>
 800f042:	4631      	mov	r1, r6
 800f044:	9000      	str	r0, [sp, #0]
 800f046:	4628      	mov	r0, r5
 800f048:	f7ff ff9e 	bl	800ef88 <_XY2PTR>
 800f04c:	9b00      	ldr	r3, [sp, #0]
 800f04e:	8004      	strh	r4, [r0, #0]
 800f050:	6958      	ldr	r0, [r3, #20]
 800f052:	b160      	cbz	r0, 800f06e <_SetPixelIndex+0x3e>
 800f054:	f7fb fc7c 	bl	800a950 <GUI_ALLOC_LockH>
 800f058:	ac02      	add	r4, sp, #8
 800f05a:	6883      	ldr	r3, [r0, #8]
 800f05c:	4632      	mov	r2, r6
 800f05e:	f844 0d04 	str.w	r0, [r4, #-4]!
 800f062:	4629      	mov	r1, r5
 800f064:	681b      	ldr	r3, [r3, #0]
 800f066:	4798      	blx	r3
 800f068:	4620      	mov	r0, r4
 800f06a:	f7fb fc7f 	bl	800a96c <GUI_ALLOC_UnlockH>
 800f06e:	4668      	mov	r0, sp
 800f070:	f7fb fc7c 	bl	800a96c <GUI_ALLOC_UnlockH>
 800f074:	b002      	add	sp, #8
 800f076:	bd70      	pop	{r4, r5, r6, pc}
 800f078:	2000003c 	.word	0x2000003c

0800f07c <_DrawVLine>:
 800f07c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800f080:	4c2c      	ldr	r4, [pc, #176]	; (800f134 <_DrawVLine+0xb8>)
 800f082:	461e      	mov	r6, r3
 800f084:	4680      	mov	r8, r0
 800f086:	460f      	mov	r7, r1
 800f088:	6823      	ldr	r3, [r4, #0]
 800f08a:	4615      	mov	r5, r2
 800f08c:	46a1      	mov	r9, r4
 800f08e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800f090:	f7fb fc5e 	bl	800a950 <GUI_ALLOC_LockH>
 800f094:	9000      	str	r0, [sp, #0]
 800f096:	6940      	ldr	r0, [r0, #20]
 800f098:	b108      	cbz	r0, 800f09e <_DrawVLine+0x22>
 800f09a:	f7fb fc59 	bl	800a950 <GUI_ALLOC_LockH>
 800f09e:	9001      	str	r0, [sp, #4]
 800f0a0:	4629      	mov	r1, r5
 800f0a2:	4638      	mov	r0, r7
 800f0a4:	f7ff ff70 	bl	800ef88 <_XY2PTR>
 800f0a8:	f8d9 3000 	ldr.w	r3, [r9]
 800f0ac:	4604      	mov	r4, r0
 800f0ae:	7c1a      	ldrb	r2, [r3, #16]
 800f0b0:	07d2      	lsls	r2, r2, #31
 800f0b2:	d51f      	bpl.n	800f0f4 <_DrawVLine+0x78>
 800f0b4:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800f0b8:	689b      	ldr	r3, [r3, #8]
 800f0ba:	4798      	blx	r3
 800f0bc:	fa1f f880 	uxth.w	r8, r0
 800f0c0:	9801      	ldr	r0, [sp, #4]
 800f0c2:	b120      	cbz	r0, 800f0ce <_DrawVLine+0x52>
 800f0c4:	6883      	ldr	r3, [r0, #8]
 800f0c6:	462a      	mov	r2, r5
 800f0c8:	4639      	mov	r1, r7
 800f0ca:	681b      	ldr	r3, [r3, #0]
 800f0cc:	4798      	blx	r3
 800f0ce:	8823      	ldrh	r3, [r4, #0]
 800f0d0:	3501      	adds	r5, #1
 800f0d2:	ea88 0303 	eor.w	r3, r8, r3
 800f0d6:	42b5      	cmp	r5, r6
 800f0d8:	8023      	strh	r3, [r4, #0]
 800f0da:	9b00      	ldr	r3, [sp, #0]
 800f0dc:	68db      	ldr	r3, [r3, #12]
 800f0de:	441c      	add	r4, r3
 800f0e0:	ddee      	ble.n	800f0c0 <_DrawVLine+0x44>
 800f0e2:	4668      	mov	r0, sp
 800f0e4:	f7fb fc42 	bl	800a96c <GUI_ALLOC_UnlockH>
 800f0e8:	9b01      	ldr	r3, [sp, #4]
 800f0ea:	b303      	cbz	r3, 800f12e <_DrawVLine+0xb2>
 800f0ec:	a801      	add	r0, sp, #4
 800f0ee:	f7fb fc3d 	bl	800a96c <GUI_ALLOC_UnlockH>
 800f0f2:	e01c      	b.n	800f12e <_DrawVLine+0xb2>
 800f0f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f0f6:	9a00      	ldr	r2, [sp, #0]
 800f0f8:	f8d3 9000 	ldr.w	r9, [r3]
 800f0fc:	9b01      	ldr	r3, [sp, #4]
 800f0fe:	f8d2 800c 	ldr.w	r8, [r2, #12]
 800f102:	b163      	cbz	r3, 800f11e <_DrawVLine+0xa2>
 800f104:	9801      	ldr	r0, [sp, #4]
 800f106:	462a      	mov	r2, r5
 800f108:	3501      	adds	r5, #1
 800f10a:	4639      	mov	r1, r7
 800f10c:	6883      	ldr	r3, [r0, #8]
 800f10e:	681b      	ldr	r3, [r3, #0]
 800f110:	4798      	blx	r3
 800f112:	42ae      	cmp	r6, r5
 800f114:	f8a4 9000 	strh.w	r9, [r4]
 800f118:	4444      	add	r4, r8
 800f11a:	daf3      	bge.n	800f104 <_DrawVLine+0x88>
 800f11c:	e7e1      	b.n	800f0e2 <_DrawVLine+0x66>
 800f11e:	1b75      	subs	r5, r6, r5
 800f120:	3501      	adds	r5, #1
 800f122:	3d01      	subs	r5, #1
 800f124:	f8a4 9000 	strh.w	r9, [r4]
 800f128:	4444      	add	r4, r8
 800f12a:	d1fa      	bne.n	800f122 <_DrawVLine+0xa6>
 800f12c:	e7d9      	b.n	800f0e2 <_DrawVLine+0x66>
 800f12e:	b003      	add	sp, #12
 800f130:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f134:	2000003c 	.word	0x2000003c

0800f138 <_FillRect>:
 800f138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f13c:	4f2a      	ldr	r7, [pc, #168]	; (800f1e8 <_FillRect+0xb0>)
 800f13e:	461d      	mov	r5, r3
 800f140:	4614      	mov	r4, r2
 800f142:	b087      	sub	sp, #28
 800f144:	683b      	ldr	r3, [r7, #0]
 800f146:	4689      	mov	r9, r1
 800f148:	4683      	mov	fp, r0
 800f14a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800f14c:	ebc9 0505 	rsb	r5, r9, r5
 800f150:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800f152:	6812      	ldr	r2, [r2, #0]
 800f154:	f105 0a01 	add.w	sl, r5, #1
 800f158:	9202      	str	r2, [sp, #8]
 800f15a:	f7fb fbf9 	bl	800a950 <GUI_ALLOC_LockH>
 800f15e:	4621      	mov	r1, r4
 800f160:	9004      	str	r0, [sp, #16]
 800f162:	4648      	mov	r0, r9
 800f164:	f7ff ff10 	bl	800ef88 <_XY2PTR>
 800f168:	9a04      	ldr	r2, [sp, #16]
 800f16a:	4606      	mov	r6, r0
 800f16c:	68d3      	ldr	r3, [r2, #12]
 800f16e:	6950      	ldr	r0, [r2, #20]
 800f170:	9303      	str	r3, [sp, #12]
 800f172:	b188      	cbz	r0, 800f198 <_FillRect+0x60>
 800f174:	f7fb fbec 	bl	800a950 <GUI_ALLOC_LockH>
 800f178:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f17a:	f10d 0818 	add.w	r8, sp, #24
 800f17e:	4622      	mov	r2, r4
 800f180:	1b1b      	subs	r3, r3, r4
 800f182:	4649      	mov	r1, r9
 800f184:	f848 0d04 	str.w	r0, [r8, #-4]!
 800f188:	3301      	adds	r3, #1
 800f18a:	9300      	str	r3, [sp, #0]
 800f18c:	4653      	mov	r3, sl
 800f18e:	f000 fc05 	bl	800f99c <GUI_USAGE_AddRect>
 800f192:	4640      	mov	r0, r8
 800f194:	f7fb fbea 	bl	800a96c <GUI_ALLOC_UnlockH>
 800f198:	006d      	lsls	r5, r5, #1
 800f19a:	f8bd 8008 	ldrh.w	r8, [sp, #8]
 800f19e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f1a0:	429c      	cmp	r4, r3
 800f1a2:	dc1a      	bgt.n	800f1da <_FillRect+0xa2>
 800f1a4:	683b      	ldr	r3, [r7, #0]
 800f1a6:	7c1b      	ldrb	r3, [r3, #16]
 800f1a8:	07db      	lsls	r3, r3, #31
 800f1aa:	d50d      	bpl.n	800f1c8 <_FillRect+0x90>
 800f1ac:	f8db 3010 	ldr.w	r3, [fp, #16]
 800f1b0:	689b      	ldr	r3, [r3, #8]
 800f1b2:	4798      	blx	r3
 800f1b4:	1eb3      	subs	r3, r6, #2
 800f1b6:	b280      	uxth	r0, r0
 800f1b8:	1971      	adds	r1, r6, r5
 800f1ba:	f833 2f02 	ldrh.w	r2, [r3, #2]!
 800f1be:	4042      	eors	r2, r0
 800f1c0:	428b      	cmp	r3, r1
 800f1c2:	801a      	strh	r2, [r3, #0]
 800f1c4:	d1f9      	bne.n	800f1ba <_FillRect+0x82>
 800f1c6:	e004      	b.n	800f1d2 <_FillRect+0x9a>
 800f1c8:	4652      	mov	r2, sl
 800f1ca:	4641      	mov	r1, r8
 800f1cc:	4630      	mov	r0, r6
 800f1ce:	f7fc ffd4 	bl	800c17a <GUI__memset16>
 800f1d2:	9b03      	ldr	r3, [sp, #12]
 800f1d4:	3401      	adds	r4, #1
 800f1d6:	441e      	add	r6, r3
 800f1d8:	e7e1      	b.n	800f19e <_FillRect+0x66>
 800f1da:	a804      	add	r0, sp, #16
 800f1dc:	f7fb fbc6 	bl	800a96c <GUI_ALLOC_UnlockH>
 800f1e0:	b007      	add	sp, #28
 800f1e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f1e6:	bf00      	nop
 800f1e8:	2000003c 	.word	0x2000003c

0800f1ec <_DrawHLine>:
 800f1ec:	b507      	push	{r0, r1, r2, lr}
 800f1ee:	9200      	str	r2, [sp, #0]
 800f1f0:	f7ff ffa2 	bl	800f138 <_FillRect>
 800f1f4:	b003      	add	sp, #12
 800f1f6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800f1fc <_DrawBitmap>:
 800f1fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f200:	4d99      	ldr	r5, [pc, #612]	; (800f468 <_DrawBitmap+0x26c>)
 800f202:	b091      	sub	sp, #68	; 0x44
 800f204:	460e      	mov	r6, r1
 800f206:	9302      	str	r3, [sp, #8]
 800f208:	682b      	ldr	r3, [r5, #0]
 800f20a:	900a      	str	r0, [sp, #40]	; 0x28
 800f20c:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800f20e:	9205      	str	r2, [sp, #20]
 800f210:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800f212:	f7fb fb9d 	bl	800a950 <GUI_ALLOC_LockH>
 800f216:	900e      	str	r0, [sp, #56]	; 0x38
 800f218:	6940      	ldr	r0, [r0, #20]
 800f21a:	b108      	cbz	r0, 800f220 <_DrawBitmap+0x24>
 800f21c:	f7fb fb98 	bl	800a950 <GUI_ALLOC_LockH>
 800f220:	900f      	str	r0, [sp, #60]	; 0x3c
 800f222:	a810      	add	r0, sp, #64	; 0x40
 800f224:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 800f228:	68db      	ldr	r3, [r3, #12]
 800f22a:	9306      	str	r3, [sp, #24]
 800f22c:	f7fb fb9e 	bl	800a96c <GUI_ALLOC_UnlockH>
 800f230:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800f232:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800f234:	eb06 0b03 	add.w	fp, r6, r3
 800f238:	b150      	cbz	r0, 800f250 <_DrawBitmap+0x54>
 800f23a:	682b      	ldr	r3, [r5, #0]
 800f23c:	7c1b      	ldrb	r3, [r3, #16]
 800f23e:	0799      	lsls	r1, r3, #30
 800f240:	d106      	bne.n	800f250 <_DrawBitmap+0x54>
 800f242:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800f244:	4659      	mov	r1, fp
 800f246:	9a05      	ldr	r2, [sp, #20]
 800f248:	9300      	str	r3, [sp, #0]
 800f24a:	9b02      	ldr	r3, [sp, #8]
 800f24c:	f000 fba6 	bl	800f99c <GUI_USAGE_AddRect>
 800f250:	9905      	ldr	r1, [sp, #20]
 800f252:	4658      	mov	r0, fp
 800f254:	f7ff fe98 	bl	800ef88 <_XY2PTR>
 800f258:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800f25a:	4605      	mov	r5, r0
 800f25c:	2b10      	cmp	r3, #16
 800f25e:	d134      	bne.n	800f2ca <_DrawBitmap+0xce>
 800f260:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f262:	b133      	cbz	r3, 800f272 <_DrawBitmap+0x76>
 800f264:	9b02      	ldr	r3, [sp, #8]
 800f266:	2600      	movs	r6, #0
 800f268:	f8df 9204 	ldr.w	r9, [pc, #516]	; 800f470 <_DrawBitmap+0x274>
 800f26c:	ea4f 0843 	mov.w	r8, r3, lsl #1
 800f270:	e012      	b.n	800f298 <_DrawBitmap+0x9c>
 800f272:	4b7e      	ldr	r3, [pc, #504]	; (800f46c <_DrawBitmap+0x270>)
 800f274:	681e      	ldr	r6, [r3, #0]
 800f276:	2e00      	cmp	r6, #0
 800f278:	d0f4      	beq.n	800f264 <_DrawBitmap+0x68>
 800f27a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800f27c:	4621      	mov	r1, r4
 800f27e:	9a02      	ldr	r2, [sp, #8]
 800f280:	9301      	str	r3, [sp, #4]
 800f282:	9b06      	ldr	r3, [sp, #24]
 800f284:	9300      	str	r3, [sp, #0]
 800f286:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800f288:	47b0      	blx	r6
 800f28a:	e35b      	b.n	800f944 <_DrawBitmap+0x748>
 800f28c:	b944      	cbnz	r4, 800f2a0 <_DrawBitmap+0xa4>
 800f28e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800f290:	3601      	adds	r6, #1
 800f292:	441c      	add	r4, r3
 800f294:	9b06      	ldr	r3, [sp, #24]
 800f296:	441d      	add	r5, r3
 800f298:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800f29a:	429e      	cmp	r6, r3
 800f29c:	dbf6      	blt.n	800f28c <_DrawBitmap+0x90>
 800f29e:	e34c      	b.n	800f93a <_DrawBitmap+0x73e>
 800f2a0:	2d00      	cmp	r5, #0
 800f2a2:	d0f4      	beq.n	800f28e <_DrawBitmap+0x92>
 800f2a4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f2a6:	4642      	mov	r2, r8
 800f2a8:	4621      	mov	r1, r4
 800f2aa:	4628      	mov	r0, r5
 800f2ac:	f8d9 3000 	ldr.w	r3, [r9]
 800f2b0:	4798      	blx	r3
 800f2b2:	2f00      	cmp	r7, #0
 800f2b4:	d0eb      	beq.n	800f28e <_DrawBitmap+0x92>
 800f2b6:	68bb      	ldr	r3, [r7, #8]
 800f2b8:	4659      	mov	r1, fp
 800f2ba:	9a05      	ldr	r2, [sp, #20]
 800f2bc:	4638      	mov	r0, r7
 800f2be:	f8d3 a004 	ldr.w	sl, [r3, #4]
 800f2c2:	4432      	add	r2, r6
 800f2c4:	9b02      	ldr	r3, [sp, #8]
 800f2c6:	47d0      	blx	sl
 800f2c8:	e7e1      	b.n	800f28e <_DrawBitmap+0x92>
 800f2ca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800f2cc:	2b17      	cmp	r3, #23
 800f2ce:	dd44      	ble.n	800f35a <_DrawBitmap+0x15e>
 800f2d0:	f06f 0303 	mvn.w	r3, #3
 800f2d4:	f04f 0800 	mov.w	r8, #0
 800f2d8:	fb03 f30b 	mul.w	r3, r3, fp
 800f2dc:	9307      	str	r3, [sp, #28]
 800f2de:	f06f 0301 	mvn.w	r3, #1
 800f2e2:	fb03 f30b 	mul.w	r3, r3, fp
 800f2e6:	9304      	str	r3, [sp, #16]
 800f2e8:	9b02      	ldr	r3, [sp, #8]
 800f2ea:	445b      	add	r3, fp
 800f2ec:	9308      	str	r3, [sp, #32]
 800f2ee:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800f2f0:	4598      	cmp	r8, r3
 800f2f2:	f280 8322 	bge.w	800f93a <_DrawBitmap+0x73e>
 800f2f6:	9b05      	ldr	r3, [sp, #20]
 800f2f8:	eb03 0908 	add.w	r9, r3, r8
 800f2fc:	b934      	cbnz	r4, 800f30c <_DrawBitmap+0x110>
 800f2fe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800f300:	f108 0801 	add.w	r8, r8, #1
 800f304:	441c      	add	r4, r3
 800f306:	9b06      	ldr	r3, [sp, #24]
 800f308:	441d      	add	r5, r3
 800f30a:	e7f0      	b.n	800f2ee <_DrawBitmap+0xf2>
 800f30c:	2d00      	cmp	r5, #0
 800f30e:	d0f6      	beq.n	800f2fe <_DrawBitmap+0x102>
 800f310:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f312:	b137      	cbz	r7, 800f322 <_DrawBitmap+0x126>
 800f314:	68bb      	ldr	r3, [r7, #8]
 800f316:	464a      	mov	r2, r9
 800f318:	4659      	mov	r1, fp
 800f31a:	4638      	mov	r0, r7
 800f31c:	685e      	ldr	r6, [r3, #4]
 800f31e:	9b02      	ldr	r3, [sp, #8]
 800f320:	47b0      	blx	r6
 800f322:	9b07      	ldr	r3, [sp, #28]
 800f324:	465e      	mov	r6, fp
 800f326:	eb04 0a03 	add.w	sl, r4, r3
 800f32a:	9b04      	ldr	r3, [sp, #16]
 800f32c:	18eb      	adds	r3, r5, r3
 800f32e:	9303      	str	r3, [sp, #12]
 800f330:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f332:	f85a 0026 	ldr.w	r0, [sl, r6, lsl #2]
 800f336:	691b      	ldr	r3, [r3, #16]
 800f338:	681b      	ldr	r3, [r3, #0]
 800f33a:	4798      	blx	r3
 800f33c:	9b03      	ldr	r3, [sp, #12]
 800f33e:	f823 0016 	strh.w	r0, [r3, r6, lsl #1]
 800f342:	b12f      	cbz	r7, 800f350 <_DrawBitmap+0x154>
 800f344:	68bb      	ldr	r3, [r7, #8]
 800f346:	464a      	mov	r2, r9
 800f348:	4631      	mov	r1, r6
 800f34a:	4638      	mov	r0, r7
 800f34c:	681b      	ldr	r3, [r3, #0]
 800f34e:	4798      	blx	r3
 800f350:	3601      	adds	r6, #1
 800f352:	9b08      	ldr	r3, [sp, #32]
 800f354:	429e      	cmp	r6, r3
 800f356:	d1eb      	bne.n	800f330 <_DrawBitmap+0x134>
 800f358:	e7d1      	b.n	800f2fe <_DrawBitmap+0x102>
 800f35a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800f35c:	2b08      	cmp	r3, #8
 800f35e:	f040 8089 	bne.w	800f474 <_DrawBitmap+0x278>
 800f362:	9b02      	ldr	r3, [sp, #8]
 800f364:	3c01      	subs	r4, #1
 800f366:	9e05      	ldr	r6, [sp, #20]
 800f368:	005b      	lsls	r3, r3, #1
 800f36a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800f468 <_DrawBitmap+0x26c>
 800f36e:	9307      	str	r3, [sp, #28]
 800f370:	f06f 0301 	mvn.w	r3, #1
 800f374:	fb03 f30b 	mul.w	r3, r3, fp
 800f378:	9303      	str	r3, [sp, #12]
 800f37a:	9b02      	ldr	r3, [sp, #8]
 800f37c:	445b      	add	r3, fp
 800f37e:	9304      	str	r3, [sp, #16]
 800f380:	9b05      	ldr	r3, [sp, #20]
 800f382:	1c61      	adds	r1, r4, #1
 800f384:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800f386:	1af3      	subs	r3, r6, r3
 800f388:	429a      	cmp	r2, r3
 800f38a:	f340 82d6 	ble.w	800f93a <_DrawBitmap+0x73e>
 800f38e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800f390:	2b00      	cmp	r3, #0
 800f392:	d036      	beq.n	800f402 <_DrawBitmap+0x206>
 800f394:	f8d9 3000 	ldr.w	r3, [r9]
 800f398:	7c1b      	ldrb	r3, [r3, #16]
 800f39a:	f013 0303 	ands.w	r3, r3, #3
 800f39e:	d009      	beq.n	800f3b4 <_DrawBitmap+0x1b8>
 800f3a0:	2b02      	cmp	r3, #2
 800f3a2:	d15a      	bne.n	800f45a <_DrawBitmap+0x25e>
 800f3a4:	9b03      	ldr	r3, [sp, #12]
 800f3a6:	46a2      	mov	sl, r4
 800f3a8:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
 800f3ac:	465f      	mov	r7, fp
 800f3ae:	18eb      	adds	r3, r5, r3
 800f3b0:	9308      	str	r3, [sp, #32]
 800f3b2:	e021      	b.n	800f3f8 <_DrawBitmap+0x1fc>
 800f3b4:	9b07      	ldr	r3, [sp, #28]
 800f3b6:	4622      	mov	r2, r4
 800f3b8:	18e9      	adds	r1, r5, r3
 800f3ba:	462b      	mov	r3, r5
 800f3bc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800f3c0:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 800f3c2:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 800f3c6:	f823 0b02 	strh.w	r0, [r3], #2
 800f3ca:	428b      	cmp	r3, r1
 800f3cc:	d1f6      	bne.n	800f3bc <_DrawBitmap+0x1c0>
 800f3ce:	e044      	b.n	800f45a <_DrawBitmap+0x25e>
 800f3d0:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 800f3d2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800f3d6:	9a08      	ldr	r2, [sp, #32]
 800f3d8:	f822 3017 	strh.w	r3, [r2, r7, lsl #1]
 800f3dc:	f1b8 0f00 	cmp.w	r8, #0
 800f3e0:	d006      	beq.n	800f3f0 <_DrawBitmap+0x1f4>
 800f3e2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800f3e6:	4632      	mov	r2, r6
 800f3e8:	4639      	mov	r1, r7
 800f3ea:	4640      	mov	r0, r8
 800f3ec:	681b      	ldr	r3, [r3, #0]
 800f3ee:	4798      	blx	r3
 800f3f0:	3701      	adds	r7, #1
 800f3f2:	9b04      	ldr	r3, [sp, #16]
 800f3f4:	42bb      	cmp	r3, r7
 800f3f6:	d030      	beq.n	800f45a <_DrawBitmap+0x25e>
 800f3f8:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 800f3fc:	2b00      	cmp	r3, #0
 800f3fe:	d0f7      	beq.n	800f3f0 <_DrawBitmap+0x1f4>
 800f400:	e7e6      	b.n	800f3d0 <_DrawBitmap+0x1d4>
 800f402:	f8d9 3000 	ldr.w	r3, [r9]
 800f406:	7c1b      	ldrb	r3, [r3, #16]
 800f408:	f013 0303 	ands.w	r3, r3, #3
 800f40c:	d009      	beq.n	800f422 <_DrawBitmap+0x226>
 800f40e:	2b02      	cmp	r3, #2
 800f410:	d123      	bne.n	800f45a <_DrawBitmap+0x25e>
 800f412:	9b03      	ldr	r3, [sp, #12]
 800f414:	46a2      	mov	sl, r4
 800f416:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
 800f41a:	465f      	mov	r7, fp
 800f41c:	18eb      	adds	r3, r5, r3
 800f41e:	9308      	str	r3, [sp, #32]
 800f420:	e016      	b.n	800f450 <_DrawBitmap+0x254>
 800f422:	4b13      	ldr	r3, [pc, #76]	; (800f470 <_DrawBitmap+0x274>)
 800f424:	4628      	mov	r0, r5
 800f426:	9a02      	ldr	r2, [sp, #8]
 800f428:	681b      	ldr	r3, [r3, #0]
 800f42a:	4798      	blx	r3
 800f42c:	e015      	b.n	800f45a <_DrawBitmap+0x25e>
 800f42e:	9a08      	ldr	r2, [sp, #32]
 800f430:	f822 3017 	strh.w	r3, [r2, r7, lsl #1]
 800f434:	f1b8 0f00 	cmp.w	r8, #0
 800f438:	d006      	beq.n	800f448 <_DrawBitmap+0x24c>
 800f43a:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800f43e:	4632      	mov	r2, r6
 800f440:	4639      	mov	r1, r7
 800f442:	4640      	mov	r0, r8
 800f444:	681b      	ldr	r3, [r3, #0]
 800f446:	4798      	blx	r3
 800f448:	3701      	adds	r7, #1
 800f44a:	9b04      	ldr	r3, [sp, #16]
 800f44c:	429f      	cmp	r7, r3
 800f44e:	d004      	beq.n	800f45a <_DrawBitmap+0x25e>
 800f450:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 800f454:	2b00      	cmp	r3, #0
 800f456:	d0f7      	beq.n	800f448 <_DrawBitmap+0x24c>
 800f458:	e7e9      	b.n	800f42e <_DrawBitmap+0x232>
 800f45a:	9b06      	ldr	r3, [sp, #24]
 800f45c:	3601      	adds	r6, #1
 800f45e:	441d      	add	r5, r3
 800f460:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800f462:	441c      	add	r4, r3
 800f464:	e78c      	b.n	800f380 <_DrawBitmap+0x184>
 800f466:	bf00      	nop
 800f468:	2000003c 	.word	0x2000003c
 800f46c:	20000d30 	.word	0x20000d30
 800f470:	20000050 	.word	0x20000050
 800f474:	4baf      	ldr	r3, [pc, #700]	; (800f734 <_DrawBitmap+0x538>)
 800f476:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 800f478:	2a00      	cmp	r2, #0
 800f47a:	bf08      	it	eq
 800f47c:	461a      	moveq	r2, r3
 800f47e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800f480:	005b      	lsls	r3, r3, #1
 800f482:	921f      	str	r2, [sp, #124]	; 0x7c
 800f484:	930b      	str	r3, [sp, #44]	; 0x2c
 800f486:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800f488:	009b      	lsls	r3, r3, #2
 800f48a:	930c      	str	r3, [sp, #48]	; 0x30
 800f48c:	1c63      	adds	r3, r4, #1
 800f48e:	9303      	str	r3, [sp, #12]
 800f490:	1c83      	adds	r3, r0, #2
 800f492:	9307      	str	r3, [sp, #28]
 800f494:	9b05      	ldr	r3, [sp, #20]
 800f496:	9304      	str	r3, [sp, #16]
 800f498:	9b07      	ldr	r3, [sp, #28]
 800f49a:	9a05      	ldr	r2, [sp, #20]
 800f49c:	1e9c      	subs	r4, r3, #2
 800f49e:	9b03      	ldr	r3, [sp, #12]
 800f4a0:	f103 3aff 	add.w	sl, r3, #4294967295
 800f4a4:	9b04      	ldr	r3, [sp, #16]
 800f4a6:	1a9b      	subs	r3, r3, r2
 800f4a8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800f4aa:	429a      	cmp	r2, r3
 800f4ac:	f340 8245 	ble.w	800f93a <_DrawBitmap+0x73e>
 800f4b0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800f4b2:	2b02      	cmp	r3, #2
 800f4b4:	f000 80c7 	beq.w	800f646 <_DrawBitmap+0x44a>
 800f4b8:	2b04      	cmp	r3, #4
 800f4ba:	f000 8167 	beq.w	800f78c <_DrawBitmap+0x590>
 800f4be:	2b01      	cmp	r3, #1
 800f4c0:	f040 822f 	bne.w	800f922 <_DrawBitmap+0x726>
 800f4c4:	4b9c      	ldr	r3, [pc, #624]	; (800f738 <_DrawBitmap+0x53c>)
 800f4c6:	681b      	ldr	r3, [r3, #0]
 800f4c8:	6e18      	ldr	r0, [r3, #96]	; 0x60
 800f4ca:	f7fb fa41 	bl	800a950 <GUI_ALLOC_LockH>
 800f4ce:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800f4d0:	4a9a      	ldr	r2, [pc, #616]	; (800f73c <_DrawBitmap+0x540>)
 800f4d2:	f1c3 0508 	rsb	r5, r3, #8
 800f4d6:	9b03      	ldr	r3, [sp, #12]
 800f4d8:	900e      	str	r0, [sp, #56]	; 0x38
 800f4da:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800f4de:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
 800f4e2:	5cd6      	ldrb	r6, [r2, r3]
 800f4e4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800f4e6:	9f02      	ldr	r7, [sp, #8]
 800f4e8:	411e      	asrs	r6, r3
 800f4ea:	4b93      	ldr	r3, [pc, #588]	; (800f738 <_DrawBitmap+0x53c>)
 800f4ec:	681b      	ldr	r3, [r3, #0]
 800f4ee:	7c1b      	ldrb	r3, [r3, #16]
 800f4f0:	f003 0303 	and.w	r3, r3, #3
 800f4f4:	2b02      	cmp	r3, #2
 800f4f6:	d01f      	beq.n	800f538 <_DrawBitmap+0x33c>
 800f4f8:	2b03      	cmp	r3, #3
 800f4fa:	d058      	beq.n	800f5ae <_DrawBitmap+0x3b2>
 800f4fc:	2b01      	cmp	r3, #1
 800f4fe:	d056      	beq.n	800f5ae <_DrawBitmap+0x3b2>
 800f500:	42bd      	cmp	r5, r7
 800f502:	4622      	mov	r2, r4
 800f504:	bf28      	it	cs
 800f506:	463d      	movcs	r5, r7
 800f508:	1b7f      	subs	r7, r7, r5
 800f50a:	462b      	mov	r3, r5
 800f50c:	f006 0101 	and.w	r1, r6, #1
 800f510:	981f      	ldr	r0, [sp, #124]	; 0x7c
 800f512:	3b01      	subs	r3, #1
 800f514:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800f518:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
 800f51c:	f822 1b02 	strh.w	r1, [r2], #2
 800f520:	d1f4      	bne.n	800f50c <_DrawBitmap+0x310>
 800f522:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800f526:	2f00      	cmp	r7, #0
 800f528:	f000 8089 	beq.w	800f63e <_DrawBitmap+0x442>
 800f52c:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 800f530:	2508      	movs	r5, #8
 800f532:	4a82      	ldr	r2, [pc, #520]	; (800f73c <_DrawBitmap+0x540>)
 800f534:	5cd6      	ldrb	r6, [r2, r3]
 800f536:	e7e3      	b.n	800f500 <_DrawBitmap+0x304>
 800f538:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800f53a:	46d8      	mov	r8, fp
 800f53c:	889b      	ldrh	r3, [r3, #4]
 800f53e:	9308      	str	r3, [sp, #32]
 800f540:	42bd      	cmp	r5, r7
 800f542:	bf28      	it	cs
 800f544:	463d      	movcs	r5, r7
 800f546:	1b7f      	subs	r7, r7, r5
 800f548:	f1b9 0f00 	cmp.w	r9, #0
 800f54c:	d023      	beq.n	800f596 <_DrawBitmap+0x39a>
 800f54e:	b91e      	cbnz	r6, 800f558 <_DrawBitmap+0x35c>
 800f550:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800f554:	44a8      	add	r8, r5
 800f556:	e022      	b.n	800f59e <_DrawBitmap+0x3a2>
 800f558:	07f2      	lsls	r2, r6, #31
 800f55a:	d509      	bpl.n	800f570 <_DrawBitmap+0x374>
 800f55c:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800f560:	4641      	mov	r1, r8
 800f562:	9a04      	ldr	r2, [sp, #16]
 800f564:	4648      	mov	r0, r9
 800f566:	681b      	ldr	r3, [r3, #0]
 800f568:	4798      	blx	r3
 800f56a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800f56e:	8023      	strh	r3, [r4, #0]
 800f570:	3d01      	subs	r5, #1
 800f572:	f108 0801 	add.w	r8, r8, #1
 800f576:	f104 0402 	add.w	r4, r4, #2
 800f57a:	d010      	beq.n	800f59e <_DrawBitmap+0x3a2>
 800f57c:	0876      	lsrs	r6, r6, #1
 800f57e:	e7e6      	b.n	800f54e <_DrawBitmap+0x352>
 800f580:	07f3      	lsls	r3, r6, #31
 800f582:	f104 0402 	add.w	r4, r4, #2
 800f586:	bf44      	itt	mi
 800f588:	f8bd 3020 	ldrhmi.w	r3, [sp, #32]
 800f58c:	f824 3c02 	strhmi.w	r3, [r4, #-2]
 800f590:	3d01      	subs	r5, #1
 800f592:	d004      	beq.n	800f59e <_DrawBitmap+0x3a2>
 800f594:	0876      	lsrs	r6, r6, #1
 800f596:	2e00      	cmp	r6, #0
 800f598:	d1f2      	bne.n	800f580 <_DrawBitmap+0x384>
 800f59a:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800f59e:	2f00      	cmp	r7, #0
 800f5a0:	d04d      	beq.n	800f63e <_DrawBitmap+0x442>
 800f5a2:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 800f5a6:	2508      	movs	r5, #8
 800f5a8:	4a64      	ldr	r2, [pc, #400]	; (800f73c <_DrawBitmap+0x540>)
 800f5aa:	5cd6      	ldrb	r6, [r2, r3]
 800f5ac:	e7c8      	b.n	800f540 <_DrawBitmap+0x344>
 800f5ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f5b0:	46d8      	mov	r8, fp
 800f5b2:	691b      	ldr	r3, [r3, #16]
 800f5b4:	689b      	ldr	r3, [r3, #8]
 800f5b6:	4798      	blx	r3
 800f5b8:	b283      	uxth	r3, r0
 800f5ba:	9309      	str	r3, [sp, #36]	; 0x24
 800f5bc:	9b03      	ldr	r3, [sp, #12]
 800f5be:	9308      	str	r3, [sp, #32]
 800f5c0:	42bd      	cmp	r5, r7
 800f5c2:	bf28      	it	cs
 800f5c4:	463d      	movcs	r5, r7
 800f5c6:	1b7f      	subs	r7, r7, r5
 800f5c8:	f1b9 0f00 	cmp.w	r9, #0
 800f5cc:	d01b      	beq.n	800f606 <_DrawBitmap+0x40a>
 800f5ce:	eb08 0305 	add.w	r3, r8, r5
 800f5d2:	46a2      	mov	sl, r4
 800f5d4:	930d      	str	r3, [sp, #52]	; 0x34
 800f5d6:	07f0      	lsls	r0, r6, #31
 800f5d8:	d50c      	bpl.n	800f5f4 <_DrawBitmap+0x3f8>
 800f5da:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800f5de:	4641      	mov	r1, r8
 800f5e0:	9a04      	ldr	r2, [sp, #16]
 800f5e2:	4648      	mov	r0, r9
 800f5e4:	681b      	ldr	r3, [r3, #0]
 800f5e6:	4798      	blx	r3
 800f5e8:	f8ba 3000 	ldrh.w	r3, [sl]
 800f5ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f5ee:	4053      	eors	r3, r2
 800f5f0:	f8aa 3000 	strh.w	r3, [sl]
 800f5f4:	f108 0801 	add.w	r8, r8, #1
 800f5f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f5fa:	f10a 0a02 	add.w	sl, sl, #2
 800f5fe:	0876      	lsrs	r6, r6, #1
 800f600:	4598      	cmp	r8, r3
 800f602:	d1e8      	bne.n	800f5d6 <_DrawBitmap+0x3da>
 800f604:	e00f      	b.n	800f626 <_DrawBitmap+0x42a>
 800f606:	462a      	mov	r2, r5
 800f608:	4623      	mov	r3, r4
 800f60a:	07f1      	lsls	r1, r6, #31
 800f60c:	f103 0302 	add.w	r3, r3, #2
 800f610:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800f614:	bf41      	itttt	mi
 800f616:	f833 1c02 	ldrhmi.w	r1, [r3, #-2]
 800f61a:	9809      	ldrmi	r0, [sp, #36]	; 0x24
 800f61c:	4041      	eormi	r1, r0
 800f61e:	f823 1c02 	strhmi.w	r1, [r3, #-2]
 800f622:	3a01      	subs	r2, #1
 800f624:	d1f1      	bne.n	800f60a <_DrawBitmap+0x40e>
 800f626:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800f62a:	b147      	cbz	r7, 800f63e <_DrawBitmap+0x442>
 800f62c:	9b08      	ldr	r3, [sp, #32]
 800f62e:	2508      	movs	r5, #8
 800f630:	4a42      	ldr	r2, [pc, #264]	; (800f73c <_DrawBitmap+0x540>)
 800f632:	781b      	ldrb	r3, [r3, #0]
 800f634:	5cd6      	ldrb	r6, [r2, r3]
 800f636:	9b08      	ldr	r3, [sp, #32]
 800f638:	3301      	adds	r3, #1
 800f63a:	9308      	str	r3, [sp, #32]
 800f63c:	e7c0      	b.n	800f5c0 <_DrawBitmap+0x3c4>
 800f63e:	a80e      	add	r0, sp, #56	; 0x38
 800f640:	f7fb f994 	bl	800a96c <GUI_ALLOC_UnlockH>
 800f644:	e16d      	b.n	800f922 <_DrawBitmap+0x726>
 800f646:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800f648:	f1c3 0504 	rsb	r5, r3, #4
 800f64c:	9b03      	ldr	r3, [sp, #12]
 800f64e:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 800f652:	b2ed      	uxtb	r5, r5
 800f654:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f656:	409e      	lsls	r6, r3
 800f658:	4b37      	ldr	r3, [pc, #220]	; (800f738 <_DrawBitmap+0x53c>)
 800f65a:	681b      	ldr	r3, [r3, #0]
 800f65c:	b2f6      	uxtb	r6, r6
 800f65e:	7c1b      	ldrb	r3, [r3, #16]
 800f660:	f003 0303 	and.w	r3, r3, #3
 800f664:	2b01      	cmp	r3, #1
 800f666:	d009      	beq.n	800f67c <_DrawBitmap+0x480>
 800f668:	d30a      	bcc.n	800f680 <_DrawBitmap+0x484>
 800f66a:	2b02      	cmp	r3, #2
 800f66c:	f040 8159 	bne.w	800f922 <_DrawBitmap+0x726>
 800f670:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f672:	465f      	mov	r7, fp
 800f674:	f8dd 8008 	ldr.w	r8, [sp, #8]
 800f678:	9308      	str	r3, [sp, #32]
 800f67a:	e036      	b.n	800f6ea <_DrawBitmap+0x4ee>
 800f67c:	9b02      	ldr	r3, [sp, #8]
 800f67e:	e07e      	b.n	800f77e <_DrawBitmap+0x582>
 800f680:	9b02      	ldr	r3, [sp, #8]
 800f682:	429d      	cmp	r5, r3
 800f684:	4621      	mov	r1, r4
 800f686:	bfc8      	it	gt
 800f688:	b2dd      	uxtbgt	r5, r3
 800f68a:	1b5b      	subs	r3, r3, r5
 800f68c:	462a      	mov	r2, r5
 800f68e:	09b0      	lsrs	r0, r6, #6
 800f690:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 800f692:	3a01      	subs	r2, #1
 800f694:	00b6      	lsls	r6, r6, #2
 800f696:	f857 0020 	ldr.w	r0, [r7, r0, lsl #2]
 800f69a:	f012 02ff 	ands.w	r2, r2, #255	; 0xff
 800f69e:	b2f6      	uxtb	r6, r6
 800f6a0:	f821 0b02 	strh.w	r0, [r1], #2
 800f6a4:	d1f3      	bne.n	800f68e <_DrawBitmap+0x492>
 800f6a6:	3d01      	subs	r5, #1
 800f6a8:	b2ed      	uxtb	r5, r5
 800f6aa:	3501      	adds	r5, #1
 800f6ac:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800f6b0:	2b00      	cmp	r3, #0
 800f6b2:	f000 8136 	beq.w	800f922 <_DrawBitmap+0x726>
 800f6b6:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
 800f6ba:	2504      	movs	r5, #4
 800f6bc:	e7e1      	b.n	800f682 <_DrawBitmap+0x486>
 800f6be:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800f6c2:	d125      	bne.n	800f710 <_DrawBitmap+0x514>
 800f6c4:	f109 0901 	add.w	r9, r9, #1
 800f6c8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f6ca:	00b6      	lsls	r6, r6, #2
 800f6cc:	4599      	cmp	r9, r3
 800f6ce:	b2f6      	uxtb	r6, r6
 800f6d0:	d1f5      	bne.n	800f6be <_DrawBitmap+0x4c2>
 800f6d2:	1c6b      	adds	r3, r5, #1
 800f6d4:	3701      	adds	r7, #1
 800f6d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f6da:	442f      	add	r7, r5
 800f6dc:	f1b8 0f00 	cmp.w	r8, #0
 800f6e0:	f000 811f 	beq.w	800f922 <_DrawBitmap+0x726>
 800f6e4:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
 800f6e8:	2504      	movs	r5, #4
 800f6ea:	4545      	cmp	r5, r8
 800f6ec:	f107 0301 	add.w	r3, r7, #1
 800f6f0:	46b9      	mov	r9, r7
 800f6f2:	bfc8      	it	gt
 800f6f4:	fa5f f588 	uxtbgt.w	r5, r8
 800f6f8:	ebc5 0808 	rsb	r8, r5, r8
 800f6fc:	3d01      	subs	r5, #1
 800f6fe:	b2ed      	uxtb	r5, r5
 800f700:	442b      	add	r3, r5
 800f702:	930d      	str	r3, [sp, #52]	; 0x34
 800f704:	f06f 0301 	mvn.w	r3, #1
 800f708:	fb03 4307 	mla	r3, r3, r7, r4
 800f70c:	9309      	str	r3, [sp, #36]	; 0x24
 800f70e:	e7d6      	b.n	800f6be <_DrawBitmap+0x4c2>
 800f710:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 800f712:	09b3      	lsrs	r3, r6, #6
 800f714:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800f718:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f71a:	f822 3019 	strh.w	r3, [r2, r9, lsl #1]
 800f71e:	9b08      	ldr	r3, [sp, #32]
 800f720:	2b00      	cmp	r3, #0
 800f722:	d0cf      	beq.n	800f6c4 <_DrawBitmap+0x4c8>
 800f724:	689b      	ldr	r3, [r3, #8]
 800f726:	4649      	mov	r1, r9
 800f728:	9a04      	ldr	r2, [sp, #16]
 800f72a:	681b      	ldr	r3, [r3, #0]
 800f72c:	9808      	ldr	r0, [sp, #32]
 800f72e:	4798      	blx	r3
 800f730:	e7c8      	b.n	800f6c4 <_DrawBitmap+0x4c8>
 800f732:	bf00      	nop
 800f734:	0801dcd4 	.word	0x0801dcd4
 800f738:	2000003c 	.word	0x2000003c
 800f73c:	0801dd68 	.word	0x0801dd68
 800f740:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 800f744:	f102 32ff 	add.w	r2, r2, #4294967295
 800f748:	ea4f 0686 	mov.w	r6, r6, lsl #2
 800f74c:	f101 0102 	add.w	r1, r1, #2
 800f750:	bf18      	it	ne
 800f752:	f831 0c02 	ldrhne.w	r0, [r1, #-2]
 800f756:	b2f6      	uxtb	r6, r6
 800f758:	bf1c      	itt	ne
 800f75a:	f080 00ff 	eorne.w	r0, r0, #255	; 0xff
 800f75e:	f821 0c02 	strhne.w	r0, [r1, #-2]
 800f762:	f012 02ff 	ands.w	r2, r2, #255	; 0xff
 800f766:	d1eb      	bne.n	800f740 <_DrawBitmap+0x544>
 800f768:	3d01      	subs	r5, #1
 800f76a:	b2ed      	uxtb	r5, r5
 800f76c:	3501      	adds	r5, #1
 800f76e:	eb04 0445 	add.w	r4, r4, r5, lsl #1
 800f772:	2b00      	cmp	r3, #0
 800f774:	f000 80d5 	beq.w	800f922 <_DrawBitmap+0x726>
 800f778:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
 800f77c:	2504      	movs	r5, #4
 800f77e:	429d      	cmp	r5, r3
 800f780:	4621      	mov	r1, r4
 800f782:	bfc8      	it	gt
 800f784:	b2dd      	uxtbgt	r5, r3
 800f786:	1b5b      	subs	r3, r3, r5
 800f788:	462a      	mov	r2, r5
 800f78a:	e7d9      	b.n	800f740 <_DrawBitmap+0x544>
 800f78c:	9b03      	ldr	r3, [sp, #12]
 800f78e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800f790:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800f794:	4093      	lsls	r3, r2
 800f796:	4a6d      	ldr	r2, [pc, #436]	; (800f94c <_DrawBitmap+0x750>)
 800f798:	6812      	ldr	r2, [r2, #0]
 800f79a:	b2dd      	uxtb	r5, r3
 800f79c:	7c12      	ldrb	r2, [r2, #16]
 800f79e:	f002 0203 	and.w	r2, r2, #3
 800f7a2:	2a01      	cmp	r2, #1
 800f7a4:	d003      	beq.n	800f7ae <_DrawBitmap+0x5b2>
 800f7a6:	d308      	bcc.n	800f7ba <_DrawBitmap+0x5be>
 800f7a8:	2a02      	cmp	r2, #2
 800f7aa:	d03a      	beq.n	800f822 <_DrawBitmap+0x626>
 800f7ac:	e0b9      	b.n	800f922 <_DrawBitmap+0x726>
 800f7ae:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800f7b0:	9a02      	ldr	r2, [sp, #8]
 800f7b2:	f1c3 0302 	rsb	r3, r3, #2
 800f7b6:	b2db      	uxtb	r3, r3
 800f7b8:	e0ac      	b.n	800f914 <_DrawBitmap+0x718>
 800f7ba:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800f7bc:	b15b      	cbz	r3, 800f7d6 <_DrawBitmap+0x5da>
 800f7be:	092d      	lsrs	r5, r5, #4
 800f7c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800f7c2:	9a03      	ldr	r2, [sp, #12]
 800f7c4:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800f7c8:	4692      	mov	sl, r2
 800f7ca:	8023      	strh	r3, [r4, #0]
 800f7cc:	9b02      	ldr	r3, [sp, #8]
 800f7ce:	9c07      	ldr	r4, [sp, #28]
 800f7d0:	3b01      	subs	r3, #1
 800f7d2:	7815      	ldrb	r5, [r2, #0]
 800f7d4:	e000      	b.n	800f7d8 <_DrawBitmap+0x5dc>
 800f7d6:	9b02      	ldr	r3, [sp, #8]
 800f7d8:	2b01      	cmp	r3, #1
 800f7da:	dd19      	ble.n	800f810 <_DrawBitmap+0x614>
 800f7dc:	1059      	asrs	r1, r3, #1
 800f7de:	1d22      	adds	r2, r4, #4
 800f7e0:	f003 0301 	and.w	r3, r3, #1
 800f7e4:	eb0a 0001 	add.w	r0, sl, r1
 800f7e8:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
 800f7ea:	092e      	lsrs	r6, r5, #4
 800f7ec:	f005 050f 	and.w	r5, r5, #15
 800f7f0:	3204      	adds	r2, #4
 800f7f2:	f857 6026 	ldr.w	r6, [r7, r6, lsl #2]
 800f7f6:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 800f7fa:	f822 6c08 	strh.w	r6, [r2, #-8]
 800f7fe:	463e      	mov	r6, r7
 800f800:	f822 5c06 	strh.w	r5, [r2, #-6]
 800f804:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
 800f808:	4582      	cmp	sl, r0
 800f80a:	d1ed      	bne.n	800f7e8 <_DrawBitmap+0x5ec>
 800f80c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 800f810:	2b00      	cmp	r3, #0
 800f812:	f000 8086 	beq.w	800f922 <_DrawBitmap+0x726>
 800f816:	092d      	lsrs	r5, r5, #4
 800f818:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800f81a:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800f81e:	8023      	strh	r3, [r4, #0]
 800f820:	e07f      	b.n	800f922 <_DrawBitmap+0x726>
 800f822:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800f824:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800f826:	b1c2      	cbz	r2, 800f85a <_DrawBitmap+0x65e>
 800f828:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 800f82c:	d00b      	beq.n	800f846 <_DrawBitmap+0x64a>
 800f82e:	092d      	lsrs	r5, r5, #4
 800f830:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800f832:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800f836:	8023      	strh	r3, [r4, #0]
 800f838:	b12e      	cbz	r6, 800f846 <_DrawBitmap+0x64a>
 800f83a:	68b3      	ldr	r3, [r6, #8]
 800f83c:	4659      	mov	r1, fp
 800f83e:	9a04      	ldr	r2, [sp, #16]
 800f840:	4630      	mov	r0, r6
 800f842:	681b      	ldr	r3, [r3, #0]
 800f844:	4798      	blx	r3
 800f846:	9b02      	ldr	r3, [sp, #8]
 800f848:	f10b 0701 	add.w	r7, fp, #1
 800f84c:	9c07      	ldr	r4, [sp, #28]
 800f84e:	f103 38ff 	add.w	r8, r3, #4294967295
 800f852:	9b03      	ldr	r3, [sp, #12]
 800f854:	781d      	ldrb	r5, [r3, #0]
 800f856:	469a      	mov	sl, r3
 800f858:	e00f      	b.n	800f87a <_DrawBitmap+0x67e>
 800f85a:	f8dd 8008 	ldr.w	r8, [sp, #8]
 800f85e:	465f      	mov	r7, fp
 800f860:	e00b      	b.n	800f87a <_DrawBitmap+0x67e>
 800f862:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 800f866:	d10c      	bne.n	800f882 <_DrawBitmap+0x686>
 800f868:	f015 050f 	ands.w	r5, r5, #15
 800f86c:	d117      	bne.n	800f89e <_DrawBitmap+0x6a2>
 800f86e:	3404      	adds	r4, #4
 800f870:	3702      	adds	r7, #2
 800f872:	f1a8 0802 	sub.w	r8, r8, #2
 800f876:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
 800f87a:	f1b8 0f01 	cmp.w	r8, #1
 800f87e:	dcf0      	bgt.n	800f862 <_DrawBitmap+0x666>
 800f880:	e01a      	b.n	800f8b8 <_DrawBitmap+0x6bc>
 800f882:	092b      	lsrs	r3, r5, #4
 800f884:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 800f886:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800f88a:	8023      	strh	r3, [r4, #0]
 800f88c:	2e00      	cmp	r6, #0
 800f88e:	d0eb      	beq.n	800f868 <_DrawBitmap+0x66c>
 800f890:	68b3      	ldr	r3, [r6, #8]
 800f892:	4639      	mov	r1, r7
 800f894:	9a04      	ldr	r2, [sp, #16]
 800f896:	4630      	mov	r0, r6
 800f898:	681b      	ldr	r3, [r3, #0]
 800f89a:	4798      	blx	r3
 800f89c:	e7e4      	b.n	800f868 <_DrawBitmap+0x66c>
 800f89e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800f8a0:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800f8a4:	8063      	strh	r3, [r4, #2]
 800f8a6:	2e00      	cmp	r6, #0
 800f8a8:	d0e1      	beq.n	800f86e <_DrawBitmap+0x672>
 800f8aa:	68b3      	ldr	r3, [r6, #8]
 800f8ac:	1c79      	adds	r1, r7, #1
 800f8ae:	9a04      	ldr	r2, [sp, #16]
 800f8b0:	4630      	mov	r0, r6
 800f8b2:	681b      	ldr	r3, [r3, #0]
 800f8b4:	4798      	blx	r3
 800f8b6:	e7da      	b.n	800f86e <_DrawBitmap+0x672>
 800f8b8:	f1b8 0f00 	cmp.w	r8, #0
 800f8bc:	d031      	beq.n	800f922 <_DrawBitmap+0x726>
 800f8be:	092d      	lsrs	r5, r5, #4
 800f8c0:	d02f      	beq.n	800f922 <_DrawBitmap+0x726>
 800f8c2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800f8c4:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800f8c8:	8023      	strh	r3, [r4, #0]
 800f8ca:	b356      	cbz	r6, 800f922 <_DrawBitmap+0x726>
 800f8cc:	68b3      	ldr	r3, [r6, #8]
 800f8ce:	4639      	mov	r1, r7
 800f8d0:	9a04      	ldr	r2, [sp, #16]
 800f8d2:	4630      	mov	r0, r6
 800f8d4:	681b      	ldr	r3, [r3, #0]
 800f8d6:	4798      	blx	r3
 800f8d8:	e023      	b.n	800f922 <_DrawBitmap+0x726>
 800f8da:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 800f8de:	f101 31ff 	add.w	r1, r1, #4294967295
 800f8e2:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800f8e6:	f100 0002 	add.w	r0, r0, #2
 800f8ea:	bf18      	it	ne
 800f8ec:	f830 6c02 	ldrhne.w	r6, [r0, #-2]
 800f8f0:	b2ed      	uxtb	r5, r5
 800f8f2:	bf1c      	itt	ne
 800f8f4:	f086 06ff 	eorne.w	r6, r6, #255	; 0xff
 800f8f8:	f820 6c02 	strhne.w	r6, [r0, #-2]
 800f8fc:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800f900:	d1eb      	bne.n	800f8da <_DrawBitmap+0x6de>
 800f902:	3b01      	subs	r3, #1
 800f904:	b2db      	uxtb	r3, r3
 800f906:	3301      	adds	r3, #1
 800f908:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f90c:	b14a      	cbz	r2, 800f922 <_DrawBitmap+0x726>
 800f90e:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
 800f912:	2302      	movs	r3, #2
 800f914:	4293      	cmp	r3, r2
 800f916:	4620      	mov	r0, r4
 800f918:	bfc8      	it	gt
 800f91a:	b2d3      	uxtbgt	r3, r2
 800f91c:	1ad2      	subs	r2, r2, r3
 800f91e:	4619      	mov	r1, r3
 800f920:	e7db      	b.n	800f8da <_DrawBitmap+0x6de>
 800f922:	9b04      	ldr	r3, [sp, #16]
 800f924:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800f926:	3301      	adds	r3, #1
 800f928:	9304      	str	r3, [sp, #16]
 800f92a:	9b03      	ldr	r3, [sp, #12]
 800f92c:	4413      	add	r3, r2
 800f92e:	9a06      	ldr	r2, [sp, #24]
 800f930:	9303      	str	r3, [sp, #12]
 800f932:	9b07      	ldr	r3, [sp, #28]
 800f934:	4413      	add	r3, r2
 800f936:	9307      	str	r3, [sp, #28]
 800f938:	e5ae      	b.n	800f498 <_DrawBitmap+0x29c>
 800f93a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f93c:	b113      	cbz	r3, 800f944 <_DrawBitmap+0x748>
 800f93e:	a80f      	add	r0, sp, #60	; 0x3c
 800f940:	f7fb f814 	bl	800a96c <GUI_ALLOC_UnlockH>
 800f944:	b011      	add	sp, #68	; 0x44
 800f946:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f94a:	bf00      	nop
 800f94c:	2000003c 	.word	0x2000003c

0800f950 <_GetDevProp>:
 800f950:	2908      	cmp	r1, #8
 800f952:	d004      	beq.n	800f95e <_GetDevProp+0xe>
 800f954:	6800      	ldr	r0, [r0, #0]
 800f956:	b120      	cbz	r0, 800f962 <_GetDevProp+0x12>
 800f958:	68c3      	ldr	r3, [r0, #12]
 800f95a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f95c:	4718      	bx	r3
 800f95e:	2010      	movs	r0, #16
 800f960:	4770      	bx	lr
 800f962:	f04f 30ff 	mov.w	r0, #4294967295
 800f966:	4770      	bx	lr

0800f968 <GUI_MEMDEV_SetDrawMemdev16bppFunc>:
 800f968:	4b01      	ldr	r3, [pc, #4]	; (800f970 <GUI_MEMDEV_SetDrawMemdev16bppFunc+0x8>)
 800f96a:	6018      	str	r0, [r3, #0]
 800f96c:	4770      	bx	lr
 800f96e:	bf00      	nop
 800f970:	20000d30 	.word	0x20000d30

0800f974 <GUI_USAGE_DecUseCnt>:
 800f974:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f976:	4605      	mov	r5, r0
 800f978:	f7fa ffea 	bl	800a950 <GUI_ALLOC_LockH>
 800f97c:	8984      	ldrh	r4, [r0, #12]
 800f97e:	ab02      	add	r3, sp, #8
 800f980:	3c01      	subs	r4, #1
 800f982:	f843 0d04 	str.w	r0, [r3, #-4]!
 800f986:	b224      	sxth	r4, r4
 800f988:	8184      	strh	r4, [r0, #12]
 800f98a:	4618      	mov	r0, r3
 800f98c:	f7fa ffee 	bl	800a96c <GUI_ALLOC_UnlockH>
 800f990:	b914      	cbnz	r4, 800f998 <GUI_USAGE_DecUseCnt+0x24>
 800f992:	4628      	mov	r0, r5
 800f994:	f7fb f816 	bl	800a9c4 <GUI_ALLOC_Free>
 800f998:	b003      	add	sp, #12
 800f99a:	bd30      	pop	{r4, r5, pc}

0800f99c <GUI_USAGE_AddRect>:
 800f99c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f9a0:	9c08      	ldr	r4, [sp, #32]
 800f9a2:	4605      	mov	r5, r0
 800f9a4:	4688      	mov	r8, r1
 800f9a6:	4699      	mov	r9, r3
 800f9a8:	4414      	add	r4, r2
 800f9aa:	68ab      	ldr	r3, [r5, #8]
 800f9ac:	1c56      	adds	r6, r2, #1
 800f9ae:	4641      	mov	r1, r8
 800f9b0:	4628      	mov	r0, r5
 800f9b2:	685f      	ldr	r7, [r3, #4]
 800f9b4:	464b      	mov	r3, r9
 800f9b6:	47b8      	blx	r7
 800f9b8:	42b4      	cmp	r4, r6
 800f9ba:	4632      	mov	r2, r6
 800f9bc:	d1f5      	bne.n	800f9aa <GUI_USAGE_AddRect+0xe>
 800f9be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800f9c2 <_Convert16>:
 800f9c2:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9c6:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800f9ca:	4681      	mov	r9, r0
 800f9cc:	460d      	mov	r5, r1
 800f9ce:	4616      	mov	r6, r2
 800f9d0:	461f      	mov	r7, r3
 800f9d2:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800f9d6:	4614      	mov	r4, r2
 800f9d8:	4688      	mov	r8, r1
 800f9da:	f839 0b02 	ldrh.w	r0, [r9], #2
 800f9de:	47d8      	blx	fp
 800f9e0:	47d0      	blx	sl
 800f9e2:	3c01      	subs	r4, #1
 800f9e4:	f848 0b04 	str.w	r0, [r8], #4
 800f9e8:	d1f7      	bne.n	800f9da <_Convert16+0x18>
 800f9ea:	2f1f      	cmp	r7, #31
 800f9ec:	d806      	bhi.n	800f9fc <_Convert16+0x3a>
 800f9ee:	463a      	mov	r2, r7
 800f9f0:	4631      	mov	r1, r6
 800f9f2:	4628      	mov	r0, r5
 800f9f4:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9f8:	f004 b8ff 	b.w	8013bfa <GUI__CompactPixelIndices>
 800f9fc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fa00 <_Convert8>:
 800fa00:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa04:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 800fa08:	4680      	mov	r8, r0
 800fa0a:	460d      	mov	r5, r1
 800fa0c:	4616      	mov	r6, r2
 800fa0e:	461f      	mov	r7, r3
 800fa10:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800fa14:	4689      	mov	r9, r1
 800fa16:	4604      	mov	r4, r0
 800fa18:	f814 0b01 	ldrb.w	r0, [r4], #1
 800fa1c:	47d8      	blx	fp
 800fa1e:	47d0      	blx	sl
 800fa20:	1b33      	subs	r3, r6, r4
 800fa22:	f849 0b04 	str.w	r0, [r9], #4
 800fa26:	eb18 0f03 	cmn.w	r8, r3
 800fa2a:	d1f5      	bne.n	800fa18 <_Convert8+0x18>
 800fa2c:	2f1f      	cmp	r7, #31
 800fa2e:	d806      	bhi.n	800fa3e <_Convert8+0x3e>
 800fa30:	463a      	mov	r2, r7
 800fa32:	4631      	mov	r1, r6
 800fa34:	4628      	mov	r0, r5
 800fa36:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa3a:	f004 b8de 	b.w	8013bfa <GUI__CompactPixelIndices>
 800fa3e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800fa44 <GUI_MEMDEV__WriteToActiveOpaque>:
 800fa44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa48:	b09b      	sub	sp, #108	; 0x6c
 800fa4a:	4605      	mov	r5, r0
 800fa4c:	9108      	str	r1, [sp, #32]
 800fa4e:	9209      	str	r2, [sp, #36]	; 0x24
 800fa50:	2800      	cmp	r0, #0
 800fa52:	f000 8399 	beq.w	8010188 <GUI_MEMDEV__WriteToActiveOpaque+0x744>
 800fa56:	f7fa ff7b 	bl	800a950 <GUI_ALLOC_LockH>
 800fa5a:	ab1a      	add	r3, sp, #104	; 0x68
 800fa5c:	6944      	ldr	r4, [r0, #20]
 800fa5e:	f843 0d1c 	str.w	r0, [r3, #-28]!
 800fa62:	4618      	mov	r0, r3
 800fa64:	f7fa ff82 	bl	800a96c <GUI_ALLOC_UnlockH>
 800fa68:	4628      	mov	r0, r5
 800fa6a:	f004 fb8b 	bl	8014184 <GUI_MEMDEV_GetBitsPerPixel>
 800fa6e:	2808      	cmp	r0, #8
 800fa70:	4607      	mov	r7, r0
 800fa72:	4ea5      	ldr	r6, [pc, #660]	; (800fd08 <GUI_MEMDEV__WriteToActiveOpaque+0x2c4>)
 800fa74:	dd02      	ble.n	800fa7c <GUI_MEMDEV__WriteToActiveOpaque+0x38>
 800fa76:	2c00      	cmp	r4, #0
 800fa78:	f000 81c9 	beq.w	800fe0e <GUI_MEMDEV__WriteToActiveOpaque+0x3ca>
 800fa7c:	2301      	movs	r3, #1
 800fa7e:	2700      	movs	r7, #0
 800fa80:	4628      	mov	r0, r5
 800fa82:	f10d 0968 	add.w	r9, sp, #104	; 0x68
 800fa86:	9319      	str	r3, [sp, #100]	; 0x64
 800fa88:	930d      	str	r3, [sp, #52]	; 0x34
 800fa8a:	9718      	str	r7, [sp, #96]	; 0x60
 800fa8c:	f7fa ff60 	bl	800a950 <GUI_ALLOC_LockH>
 800fa90:	6802      	ldr	r2, [r0, #0]
 800fa92:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800fa96:	6912      	ldr	r2, [r2, #16]
 800fa98:	930e      	str	r3, [sp, #56]	; 0x38
 800fa9a:	6853      	ldr	r3, [r2, #4]
 800fa9c:	6832      	ldr	r2, [r6, #0]
 800fa9e:	f849 0d14 	str.w	r0, [r9, #-20]!
 800faa2:	6904      	ldr	r4, [r0, #16]
 800faa4:	f8d0 8014 	ldr.w	r8, [r0, #20]
 800faa8:	f8d0 a00c 	ldr.w	sl, [r0, #12]
 800faac:	f9b0 b008 	ldrsh.w	fp, [r0, #8]
 800fab0:	7c50      	ldrb	r0, [r2, #17]
 800fab2:	930c      	str	r3, [sp, #48]	; 0x30
 800fab4:	f7fd fa4a 	bl	800cf4c <GUI_GetBitsPerPixelEx>
 800fab8:	6832      	ldr	r2, [r6, #0]
 800faba:	900b      	str	r0, [sp, #44]	; 0x2c
 800fabc:	7c50      	ldrb	r0, [r2, #17]
 800fabe:	f7fd fa6d 	bl	800cf9c <GUI_GetpfIndex2ColorEx>
 800fac2:	900a      	str	r0, [sp, #40]	; 0x28
 800fac4:	4648      	mov	r0, r9
 800fac6:	f7fa ff51 	bl	800a96c <GUI_ALLOC_UnlockH>
 800faca:	2c08      	cmp	r4, #8
 800facc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800face:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fad0:	d904      	bls.n	800fadc <GUI_MEMDEV__WriteToActiveOpaque+0x98>
 800fad2:	2c10      	cmp	r4, #16
 800fad4:	bf8c      	ite	hi
 800fad6:	2304      	movhi	r3, #4
 800fad8:	2302      	movls	r3, #2
 800fada:	e005      	b.n	800fae8 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 800fadc:	2c01      	cmp	r4, #1
 800fade:	d103      	bne.n	800fae8 <GUI_MEMDEV__WriteToActiveOpaque+0xa4>
 800fae0:	ab18      	add	r3, sp, #96	; 0x60
 800fae2:	940d      	str	r4, [sp, #52]	; 0x34
 800fae4:	930a      	str	r3, [sp, #40]	; 0x28
 800fae6:	e001      	b.n	800faec <GUI_MEMDEV__WriteToActiveOpaque+0xa8>
 800fae8:	930d      	str	r3, [sp, #52]	; 0x34
 800faea:	970a      	str	r7, [sp, #40]	; 0x28
 800faec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800faee:	4293      	cmp	r3, r2
 800faf0:	f000 80df 	beq.w	800fcb2 <GUI_MEMDEV__WriteToActiveOpaque+0x26e>
 800faf4:	6833      	ldr	r3, [r6, #0]
 800faf6:	7c58      	ldrb	r0, [r3, #17]
 800faf8:	f7fd fa58 	bl	800cfac <GUI_GetpfColor2IndexEx>
 800fafc:	900f      	str	r0, [sp, #60]	; 0x3c
 800fafe:	ea4f 008b 	mov.w	r0, fp, lsl #2
 800fb02:	f7fb f8f1 	bl	800ace8 <GUI_ALLOC_AllocNoInit>
 800fb06:	9010      	str	r0, [sp, #64]	; 0x40
 800fb08:	2800      	cmp	r0, #0
 800fb0a:	f000 833d 	beq.w	8010188 <GUI_MEMDEV__WriteToActiveOpaque+0x744>
 800fb0e:	4628      	mov	r0, r5
 800fb10:	f004 fcfa 	bl	8014508 <GUI_MEMDEV_GetDataPtr>
 800fb14:	4605      	mov	r5, r0
 800fb16:	f1b8 0f00 	cmp.w	r8, #0
 800fb1a:	f000 80b9 	beq.w	800fc90 <GUI_MEMDEV__WriteToActiveOpaque+0x24c>
 800fb1e:	4640      	mov	r0, r8
 800fb20:	f7fa ff16 	bl	800a950 <GUI_ALLOC_LockH>
 800fb24:	eb05 030a 	add.w	r3, r5, sl
 800fb28:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800fb2c:	9311      	str	r3, [sp, #68]	; 0x44
 800fb2e:	2300      	movs	r3, #0
 800fb30:	9016      	str	r0, [sp, #88]	; 0x58
 800fb32:	9309      	str	r3, [sp, #36]	; 0x24
 800fb34:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800fb36:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fb38:	ebca 0703 	rsb	r7, sl, r3
 800fb3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fb3e:	4293      	cmp	r3, r2
 800fb40:	f340 80a2 	ble.w	800fc88 <GUI_MEMDEV__WriteToActiveOpaque+0x244>
 800fb44:	2300      	movs	r3, #0
 800fb46:	9816      	ldr	r0, [sp, #88]	; 0x58
 800fb48:	f10d 085c 	add.w	r8, sp, #92	; 0x5c
 800fb4c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fb4e:	9317      	str	r3, [sp, #92]	; 0x5c
 800fb50:	6883      	ldr	r3, [r0, #8]
 800fb52:	4641      	mov	r1, r8
 800fb54:	695b      	ldr	r3, [r3, #20]
 800fb56:	4798      	blx	r3
 800fb58:	4583      	cmp	fp, r0
 800fb5a:	4605      	mov	r5, r0
 800fb5c:	d128      	bne.n	800fbb0 <GUI_MEMDEV__WriteToActiveOpaque+0x16c>
 800fb5e:	9810      	ldr	r0, [sp, #64]	; 0x40
 800fb60:	f7fa fef6 	bl	800a950 <GUI_ALLOC_LockH>
 800fb64:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fb66:	2c08      	cmp	r4, #8
 800fb68:	4601      	mov	r1, r0
 800fb6a:	9301      	str	r3, [sp, #4]
 800fb6c:	465a      	mov	r2, fp
 800fb6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fb70:	9014      	str	r0, [sp, #80]	; 0x50
 800fb72:	4638      	mov	r0, r7
 800fb74:	9300      	str	r3, [sp, #0]
 800fb76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fb78:	d902      	bls.n	800fb80 <GUI_MEMDEV__WriteToActiveOpaque+0x13c>
 800fb7a:	f7ff ff22 	bl	800f9c2 <_Convert16>
 800fb7e:	e001      	b.n	800fb84 <GUI_MEMDEV__WriteToActiveOpaque+0x140>
 800fb80:	f7ff ff3e 	bl	800fa00 <_Convert8>
 800fb84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fb86:	ad1a      	add	r5, sp, #104	; 0x68
 800fb88:	9808      	ldr	r0, [sp, #32]
 800fb8a:	465a      	mov	r2, fp
 800fb8c:	9305      	str	r3, [sp, #20]
 800fb8e:	4649      	mov	r1, r9
 800fb90:	f855 3d18 	ldr.w	r3, [r5, #-24]!
 800fb94:	9304      	str	r3, [sp, #16]
 800fb96:	2300      	movs	r3, #0
 800fb98:	9303      	str	r3, [sp, #12]
 800fb9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fb9c:	9302      	str	r3, [sp, #8]
 800fb9e:	2301      	movs	r3, #1
 800fba0:	9301      	str	r3, [sp, #4]
 800fba2:	9300      	str	r3, [sp, #0]
 800fba4:	f7fc fe78 	bl	800c898 <LCD_DrawBitmap>
 800fba8:	4628      	mov	r0, r5
 800fbaa:	f7fa fedf 	bl	800a96c <GUI_ALLOC_UnlockH>
 800fbae:	e062      	b.n	800fc76 <GUI_MEMDEV__WriteToActiveOpaque+0x232>
 800fbb0:	2c01      	cmp	r4, #1
 800fbb2:	d002      	beq.n	800fbba <GUI_MEMDEV__WriteToActiveOpaque+0x176>
 800fbb4:	f04f 0801 	mov.w	r8, #1
 800fbb8:	e057      	b.n	800fc6a <GUI_MEMDEV__WriteToActiveOpaque+0x226>
 800fbba:	2d00      	cmp	r5, #0
 800fbbc:	d05b      	beq.n	800fc76 <GUI_MEMDEV__WriteToActiveOpaque+0x232>
 800fbbe:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800fbc0:	462a      	mov	r2, r5
 800fbc2:	9e08      	ldr	r6, [sp, #32]
 800fbc4:	4649      	mov	r1, r9
 800fbc6:	f000 0307 	and.w	r3, r0, #7
 800fbca:	f8cd a00c 	str.w	sl, [sp, #12]
 800fbce:	9306      	str	r3, [sp, #24]
 800fbd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fbd2:	9305      	str	r3, [sp, #20]
 800fbd4:	2308      	movs	r3, #8
 800fbd6:	fb90 f3f3 	sdiv	r3, r0, r3
 800fbda:	443b      	add	r3, r7
 800fbdc:	4430      	add	r0, r6
 800fbde:	9304      	str	r3, [sp, #16]
 800fbe0:	2301      	movs	r3, #1
 800fbe2:	9302      	str	r3, [sp, #8]
 800fbe4:	9301      	str	r3, [sp, #4]
 800fbe6:	9300      	str	r3, [sp, #0]
 800fbe8:	f7fc fd6a 	bl	800c6c0 <LCD__DrawBitmap_1bpp>
 800fbec:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800fbee:	9816      	ldr	r0, [sp, #88]	; 0x58
 800fbf0:	4641      	mov	r1, r8
 800fbf2:	441d      	add	r5, r3
 800fbf4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fbf6:	6883      	ldr	r3, [r0, #8]
 800fbf8:	9517      	str	r5, [sp, #92]	; 0x5c
 800fbfa:	695b      	ldr	r3, [r3, #20]
 800fbfc:	4798      	blx	r3
 800fbfe:	4605      	mov	r5, r0
 800fc00:	e7db      	b.n	800fbba <GUI_MEMDEV__WriteToActiveOpaque+0x176>
 800fc02:	9810      	ldr	r0, [sp, #64]	; 0x40
 800fc04:	f7fa fea4 	bl	800a950 <GUI_ALLOC_LockH>
 800fc08:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fc0a:	4601      	mov	r1, r0
 800fc0c:	9014      	str	r0, [sp, #80]	; 0x50
 800fc0e:	9301      	str	r3, [sp, #4]
 800fc10:	2c08      	cmp	r4, #8
 800fc12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fc14:	462a      	mov	r2, r5
 800fc16:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800fc18:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 800fc1a:	9300      	str	r3, [sp, #0]
 800fc1c:	fb00 7006 	mla	r0, r0, r6, r7
 800fc20:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fc22:	d925      	bls.n	800fc70 <GUI_MEMDEV__WriteToActiveOpaque+0x22c>
 800fc24:	f7ff fecd 	bl	800f9c2 <_Convert16>
 800fc28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fc2a:	462a      	mov	r2, r5
 800fc2c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800fc2e:	4649      	mov	r1, r9
 800fc30:	9305      	str	r3, [sp, #20]
 800fc32:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800fc34:	9e08      	ldr	r6, [sp, #32]
 800fc36:	9304      	str	r3, [sp, #16]
 800fc38:	2300      	movs	r3, #0
 800fc3a:	4430      	add	r0, r6
 800fc3c:	f8cd 8004 	str.w	r8, [sp, #4]
 800fc40:	9303      	str	r3, [sp, #12]
 800fc42:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fc44:	f8cd 8000 	str.w	r8, [sp]
 800fc48:	9302      	str	r3, [sp, #8]
 800fc4a:	2301      	movs	r3, #1
 800fc4c:	f7fc fe24 	bl	800c898 <LCD_DrawBitmap>
 800fc50:	a814      	add	r0, sp, #80	; 0x50
 800fc52:	f7fa fe8b 	bl	800a96c <GUI_ALLOC_UnlockH>
 800fc56:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800fc58:	9816      	ldr	r0, [sp, #88]	; 0x58
 800fc5a:	a917      	add	r1, sp, #92	; 0x5c
 800fc5c:	441d      	add	r5, r3
 800fc5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fc60:	6883      	ldr	r3, [r0, #8]
 800fc62:	9517      	str	r5, [sp, #92]	; 0x5c
 800fc64:	695b      	ldr	r3, [r3, #20]
 800fc66:	4798      	blx	r3
 800fc68:	4605      	mov	r5, r0
 800fc6a:	2d00      	cmp	r5, #0
 800fc6c:	d1c9      	bne.n	800fc02 <GUI_MEMDEV__WriteToActiveOpaque+0x1be>
 800fc6e:	e002      	b.n	800fc76 <GUI_MEMDEV__WriteToActiveOpaque+0x232>
 800fc70:	f7ff fec6 	bl	800fa00 <_Convert8>
 800fc74:	e7d8      	b.n	800fc28 <GUI_MEMDEV__WriteToActiveOpaque+0x1e4>
 800fc76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fc78:	f109 0901 	add.w	r9, r9, #1
 800fc7c:	3301      	adds	r3, #1
 800fc7e:	9309      	str	r3, [sp, #36]	; 0x24
 800fc80:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800fc82:	4453      	add	r3, sl
 800fc84:	9311      	str	r3, [sp, #68]	; 0x44
 800fc86:	e755      	b.n	800fb34 <GUI_MEMDEV__WriteToActiveOpaque+0xf0>
 800fc88:	a816      	add	r0, sp, #88	; 0x58
 800fc8a:	f7fa fe6f 	bl	800a96c <GUI_ALLOC_UnlockH>
 800fc8e:	e00e      	b.n	800fcae <GUI_MEMDEV__WriteToActiveOpaque+0x26a>
 800fc90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fc92:	465a      	mov	r2, fp
 800fc94:	9004      	str	r0, [sp, #16]
 800fc96:	9305      	str	r3, [sp, #20]
 800fc98:	2301      	movs	r3, #1
 800fc9a:	f8cd a00c 	str.w	sl, [sp, #12]
 800fc9e:	9301      	str	r3, [sp, #4]
 800fca0:	9300      	str	r3, [sp, #0]
 800fca2:	9402      	str	r4, [sp, #8]
 800fca4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fca6:	9909      	ldr	r1, [sp, #36]	; 0x24
 800fca8:	9808      	ldr	r0, [sp, #32]
 800fcaa:	f7fc fdf5 	bl	800c898 <LCD_DrawBitmap>
 800fcae:	9810      	ldr	r0, [sp, #64]	; 0x40
 800fcb0:	e268      	b.n	8010184 <GUI_MEMDEV__WriteToActiveOpaque+0x740>
 800fcb2:	4628      	mov	r0, r5
 800fcb4:	f004 fc28 	bl	8014508 <GUI_MEMDEV_GetDataPtr>
 800fcb8:	4607      	mov	r7, r0
 800fcba:	f1b8 0f00 	cmp.w	r8, #0
 800fcbe:	f000 809a 	beq.w	800fdf6 <GUI_MEMDEV__WriteToActiveOpaque+0x3b2>
 800fcc2:	2500      	movs	r5, #0
 800fcc4:	4640      	mov	r0, r8
 800fcc6:	f7fa fe43 	bl	800a950 <GUI_ALLOC_LockH>
 800fcca:	9016      	str	r0, [sp, #88]	; 0x58
 800fccc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fcce:	42ab      	cmp	r3, r5
 800fcd0:	f340 808d 	ble.w	800fdee <GUI_MEMDEV__WriteToActiveOpaque+0x3aa>
 800fcd4:	2300      	movs	r3, #0
 800fcd6:	9816      	ldr	r0, [sp, #88]	; 0x58
 800fcd8:	f10d 085c 	add.w	r8, sp, #92	; 0x5c
 800fcdc:	462a      	mov	r2, r5
 800fcde:	9317      	str	r3, [sp, #92]	; 0x5c
 800fce0:	6883      	ldr	r3, [r0, #8]
 800fce2:	4641      	mov	r1, r8
 800fce4:	695b      	ldr	r3, [r3, #20]
 800fce6:	4798      	blx	r3
 800fce8:	4583      	cmp	fp, r0
 800fcea:	4606      	mov	r6, r0
 800fcec:	d126      	bne.n	800fd3c <GUI_MEMDEV__WriteToActiveOpaque+0x2f8>
 800fcee:	462e      	mov	r6, r5
 800fcf0:	9816      	ldr	r0, [sp, #88]	; 0x58
 800fcf2:	f106 0901 	add.w	r9, r6, #1
 800fcf6:	4641      	mov	r1, r8
 800fcf8:	6883      	ldr	r3, [r0, #8]
 800fcfa:	464a      	mov	r2, r9
 800fcfc:	695b      	ldr	r3, [r3, #20]
 800fcfe:	4798      	blx	r3
 800fd00:	4583      	cmp	fp, r0
 800fd02:	d103      	bne.n	800fd0c <GUI_MEMDEV__WriteToActiveOpaque+0x2c8>
 800fd04:	464e      	mov	r6, r9
 800fd06:	e7f3      	b.n	800fcf0 <GUI_MEMDEV__WriteToActiveOpaque+0x2ac>
 800fd08:	2000003c 	.word	0x2000003c
 800fd0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fd0e:	ebc5 0806 	rsb	r8, r5, r6
 800fd12:	9909      	ldr	r1, [sp, #36]	; 0x24
 800fd14:	465a      	mov	r2, fp
 800fd16:	f108 0801 	add.w	r8, r8, #1
 800fd1a:	9305      	str	r3, [sp, #20]
 800fd1c:	2301      	movs	r3, #1
 800fd1e:	9704      	str	r7, [sp, #16]
 800fd20:	4429      	add	r1, r5
 800fd22:	f8cd a00c 	str.w	sl, [sp, #12]
 800fd26:	9301      	str	r3, [sp, #4]
 800fd28:	4635      	mov	r5, r6
 800fd2a:	9300      	str	r3, [sp, #0]
 800fd2c:	4643      	mov	r3, r8
 800fd2e:	9402      	str	r4, [sp, #8]
 800fd30:	9808      	ldr	r0, [sp, #32]
 800fd32:	fb0a 7708 	mla	r7, sl, r8, r7
 800fd36:	f7fc fdaf 	bl	800c898 <LCD_DrawBitmap>
 800fd3a:	e056      	b.n	800fdea <GUI_MEMDEV__WriteToActiveOpaque+0x3a6>
 800fd3c:	2c01      	cmp	r4, #1
 800fd3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fd40:	d004      	beq.n	800fd4c <GUI_MEMDEV__WriteToActiveOpaque+0x308>
 800fd42:	442b      	add	r3, r5
 800fd44:	f04f 0901 	mov.w	r9, #1
 800fd48:	930b      	str	r3, [sp, #44]	; 0x2c
 800fd4a:	e02b      	b.n	800fda4 <GUI_MEMDEV__WriteToActiveOpaque+0x360>
 800fd4c:	eb03 0905 	add.w	r9, r3, r5
 800fd50:	46a0      	mov	r8, r4
 800fd52:	b32e      	cbz	r6, 800fda0 <GUI_MEMDEV__WriteToActiveOpaque+0x35c>
 800fd54:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
 800fd58:	4632      	mov	r2, r6
 800fd5a:	9808      	ldr	r0, [sp, #32]
 800fd5c:	4649      	mov	r1, r9
 800fd5e:	f00e 0307 	and.w	r3, lr, #7
 800fd62:	f8cd a00c 	str.w	sl, [sp, #12]
 800fd66:	4470      	add	r0, lr
 800fd68:	f8cd 8008 	str.w	r8, [sp, #8]
 800fd6c:	9306      	str	r3, [sp, #24]
 800fd6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fd70:	f8cd 8004 	str.w	r8, [sp, #4]
 800fd74:	9305      	str	r3, [sp, #20]
 800fd76:	2308      	movs	r3, #8
 800fd78:	f8cd 8000 	str.w	r8, [sp]
 800fd7c:	fb9e f3f3 	sdiv	r3, lr, r3
 800fd80:	443b      	add	r3, r7
 800fd82:	9304      	str	r3, [sp, #16]
 800fd84:	2301      	movs	r3, #1
 800fd86:	f7fc fc9b 	bl	800c6c0 <LCD__DrawBitmap_1bpp>
 800fd8a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800fd8c:	9816      	ldr	r0, [sp, #88]	; 0x58
 800fd8e:	462a      	mov	r2, r5
 800fd90:	441e      	add	r6, r3
 800fd92:	a917      	add	r1, sp, #92	; 0x5c
 800fd94:	6883      	ldr	r3, [r0, #8]
 800fd96:	9617      	str	r6, [sp, #92]	; 0x5c
 800fd98:	695b      	ldr	r3, [r3, #20]
 800fd9a:	4798      	blx	r3
 800fd9c:	4606      	mov	r6, r0
 800fd9e:	e7d8      	b.n	800fd52 <GUI_MEMDEV__WriteToActiveOpaque+0x30e>
 800fda0:	4457      	add	r7, sl
 800fda2:	e022      	b.n	800fdea <GUI_MEMDEV__WriteToActiveOpaque+0x3a6>
 800fda4:	2e00      	cmp	r6, #0
 800fda6:	d0fb      	beq.n	800fda0 <GUI_MEMDEV__WriteToActiveOpaque+0x35c>
 800fda8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fdaa:	4632      	mov	r2, r6
 800fdac:	f8dd e05c 	ldr.w	lr, [sp, #92]	; 0x5c
 800fdb0:	9305      	str	r3, [sp, #20]
 800fdb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fdb4:	9808      	ldr	r0, [sp, #32]
 800fdb6:	fb03 730e 	mla	r3, r3, lr, r7
 800fdba:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800fdbc:	4470      	add	r0, lr
 800fdbe:	f8cd a00c 	str.w	sl, [sp, #12]
 800fdc2:	9304      	str	r3, [sp, #16]
 800fdc4:	2301      	movs	r3, #1
 800fdc6:	9402      	str	r4, [sp, #8]
 800fdc8:	f8cd 9004 	str.w	r9, [sp, #4]
 800fdcc:	f8cd 9000 	str.w	r9, [sp]
 800fdd0:	f7fc fd62 	bl	800c898 <LCD_DrawBitmap>
 800fdd4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800fdd6:	9816      	ldr	r0, [sp, #88]	; 0x58
 800fdd8:	462a      	mov	r2, r5
 800fdda:	441e      	add	r6, r3
 800fddc:	4641      	mov	r1, r8
 800fdde:	6883      	ldr	r3, [r0, #8]
 800fde0:	9617      	str	r6, [sp, #92]	; 0x5c
 800fde2:	695b      	ldr	r3, [r3, #20]
 800fde4:	4798      	blx	r3
 800fde6:	4606      	mov	r6, r0
 800fde8:	e7dc      	b.n	800fda4 <GUI_MEMDEV__WriteToActiveOpaque+0x360>
 800fdea:	3501      	adds	r5, #1
 800fdec:	e76e      	b.n	800fccc <GUI_MEMDEV__WriteToActiveOpaque+0x288>
 800fdee:	a816      	add	r0, sp, #88	; 0x58
 800fdf0:	f7fa fdbc 	bl	800a96c <GUI_ALLOC_UnlockH>
 800fdf4:	e1c8      	b.n	8010188 <GUI_MEMDEV__WriteToActiveOpaque+0x744>
 800fdf6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fdf8:	465a      	mov	r2, fp
 800fdfa:	9004      	str	r0, [sp, #16]
 800fdfc:	9305      	str	r3, [sp, #20]
 800fdfe:	2301      	movs	r3, #1
 800fe00:	f8cd a00c 	str.w	sl, [sp, #12]
 800fe04:	9301      	str	r3, [sp, #4]
 800fe06:	9300      	str	r3, [sp, #0]
 800fe08:	9402      	str	r4, [sp, #8]
 800fe0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fe0c:	e03a      	b.n	800fe84 <GUI_MEMDEV__WriteToActiveOpaque+0x440>
 800fe0e:	4628      	mov	r0, r5
 800fe10:	f7fa fd9e 	bl	800a950 <GUI_ALLOC_LockH>
 800fe14:	4683      	mov	fp, r0
 800fe16:	a81a      	add	r0, sp, #104	; 0x68
 800fe18:	f9bb 300a 	ldrsh.w	r3, [fp, #10]
 800fe1c:	f840 bd10 	str.w	fp, [r0, #-16]!
 800fe20:	930b      	str	r3, [sp, #44]	; 0x2c
 800fe22:	f8db 2000 	ldr.w	r2, [fp]
 800fe26:	f8db 300c 	ldr.w	r3, [fp, #12]
 800fe2a:	f8d2 8010 	ldr.w	r8, [r2, #16]
 800fe2e:	930c      	str	r3, [sp, #48]	; 0x30
 800fe30:	f9bb 4008 	ldrsh.w	r4, [fp, #8]
 800fe34:	f7fa fd9a 	bl	800a96c <GUI_ALLOC_UnlockH>
 800fe38:	6832      	ldr	r2, [r6, #0]
 800fe3a:	f8d8 9004 	ldr.w	r9, [r8, #4]
 800fe3e:	7c50      	ldrb	r0, [r2, #17]
 800fe40:	4aa1      	ldr	r2, [pc, #644]	; (80100c8 <GUI_MEMDEV__WriteToActiveOpaque+0x684>)
 800fe42:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
 800fe46:	6916      	ldr	r6, [r2, #16]
 800fe48:	6833      	ldr	r3, [r6, #0]
 800fe4a:	930a      	str	r3, [sp, #40]	; 0x28
 800fe4c:	f7fd f87e 	bl	800cf4c <GUI_GetBitsPerPixelEx>
 800fe50:	2808      	cmp	r0, #8
 800fe52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fe54:	d906      	bls.n	800fe64 <GUI_MEMDEV__WriteToActiveOpaque+0x420>
 800fe56:	2810      	cmp	r0, #16
 800fe58:	bf8c      	ite	hi
 800fe5a:	f04f 0a04 	movhi.w	sl, #4
 800fe5e:	f04f 0a02 	movls.w	sl, #2
 800fe62:	e001      	b.n	800fe68 <GUI_MEMDEV__WriteToActiveOpaque+0x424>
 800fe64:	f04f 0a01 	mov.w	sl, #1
 800fe68:	45b0      	cmp	r8, r6
 800fe6a:	d110      	bne.n	800fe8e <GUI_MEMDEV__WriteToActiveOpaque+0x44a>
 800fe6c:	2200      	movs	r2, #0
 800fe6e:	9303      	str	r3, [sp, #12]
 800fe70:	2301      	movs	r3, #1
 800fe72:	f10b 0018 	add.w	r0, fp, #24
 800fe76:	9205      	str	r2, [sp, #20]
 800fe78:	4622      	mov	r2, r4
 800fe7a:	9301      	str	r3, [sp, #4]
 800fe7c:	9300      	str	r3, [sp, #0]
 800fe7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fe80:	9004      	str	r0, [sp, #16]
 800fe82:	9702      	str	r7, [sp, #8]
 800fe84:	9909      	ldr	r1, [sp, #36]	; 0x24
 800fe86:	9808      	ldr	r0, [sp, #32]
 800fe88:	f7fc fd06 	bl	800c898 <LCD_DrawBitmap>
 800fe8c:	e17c      	b.n	8010188 <GUI_MEMDEV__WriteToActiveOpaque+0x744>
 800fe8e:	2f20      	cmp	r7, #32
 800fe90:	f040 80a2 	bne.w	800ffd8 <GUI_MEMDEV__WriteToActiveOpaque+0x594>
 800fe94:	fb0a f004 	mul.w	r0, sl, r4
 800fe98:	f7fa ff26 	bl	800ace8 <GUI_ALLOC_AllocNoInit>
 800fe9c:	900d      	str	r0, [sp, #52]	; 0x34
 800fe9e:	2800      	cmp	r0, #0
 800fea0:	f000 8172 	beq.w	8010188 <GUI_MEMDEV__WriteToActiveOpaque+0x744>
 800fea4:	f7fa fd54 	bl	800a950 <GUI_ALLOC_LockH>
 800fea8:	9018      	str	r0, [sp, #96]	; 0x60
 800feaa:	4628      	mov	r0, r5
 800feac:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800feb0:	f7fa fd4e 	bl	800a950 <GUI_ALLOC_LockH>
 800feb4:	9016      	str	r0, [sp, #88]	; 0x58
 800feb6:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800feba:	6933      	ldr	r3, [r6, #16]
 800febc:	f100 0518 	add.w	r5, r0, #24
 800fec0:	920c      	str	r2, [sp, #48]	; 0x30
 800fec2:	b373      	cbz	r3, 800ff22 <GUI_MEMDEV__WriteToActiveOpaque+0x4de>
 800fec4:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
 800fec8:	f04f 0901 	mov.w	r9, #1
 800fecc:	f1ba 0f02 	cmp.w	sl, #2
 800fed0:	d005      	beq.n	800fede <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 800fed2:	f1ba 0f04 	cmp.w	sl, #4
 800fed6:	d002      	beq.n	800fede <GUI_MEMDEV__WriteToActiveOpaque+0x49a>
 800fed8:	f1ba 0f01 	cmp.w	sl, #1
 800fedc:	d106      	bne.n	800feec <GUI_MEMDEV__WriteToActiveOpaque+0x4a8>
 800fede:	4628      	mov	r0, r5
 800fee0:	445d      	add	r5, fp
 800fee2:	6937      	ldr	r7, [r6, #16]
 800fee4:	4653      	mov	r3, sl
 800fee6:	4622      	mov	r2, r4
 800fee8:	9918      	ldr	r1, [sp, #96]	; 0x60
 800feea:	47b8      	blx	r7
 800feec:	2300      	movs	r3, #0
 800feee:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800fef0:	f8cd 9004 	str.w	r9, [sp, #4]
 800fef4:	4641      	mov	r1, r8
 800fef6:	9305      	str	r3, [sp, #20]
 800fef8:	f108 0701 	add.w	r7, r8, #1
 800fefc:	9303      	str	r3, [sp, #12]
 800fefe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ff00:	9204      	str	r2, [sp, #16]
 800ff02:	4622      	mov	r2, r4
 800ff04:	9302      	str	r3, [sp, #8]
 800ff06:	2301      	movs	r3, #1
 800ff08:	f8cd 9000 	str.w	r9, [sp]
 800ff0c:	9808      	ldr	r0, [sp, #32]
 800ff0e:	f7fc fcc3 	bl	800c898 <LCD_DrawBitmap>
 800ff12:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ff14:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ff16:	4413      	add	r3, r2
 800ff18:	429f      	cmp	r7, r3
 800ff1a:	f000 812c 	beq.w	8010176 <GUI_MEMDEV__WriteToActiveOpaque+0x732>
 800ff1e:	46b8      	mov	r8, r7
 800ff20:	e7d4      	b.n	800fecc <GUI_MEMDEV__WriteToActiveOpaque+0x488>
 800ff22:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800ff24:	461e      	mov	r6, r3
 800ff26:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ff28:	f04f 0901 	mov.w	r9, #1
 800ff2c:	443b      	add	r3, r7
 800ff2e:	9309      	str	r3, [sp, #36]	; 0x24
 800ff30:	f1ba 0f02 	cmp.w	sl, #2
 800ff34:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800ff38:	d016      	beq.n	800ff68 <GUI_MEMDEV__WriteToActiveOpaque+0x524>
 800ff3a:	f1ba 0f04 	cmp.w	sl, #4
 800ff3e:	d024      	beq.n	800ff8a <GUI_MEMDEV__WriteToActiveOpaque+0x546>
 800ff40:	f1ba 0f01 	cmp.w	sl, #1
 800ff44:	d130      	bne.n	800ffa8 <GUI_MEMDEV__WriteToActiveOpaque+0x564>
 800ff46:	4643      	mov	r3, r8
 800ff48:	462a      	mov	r2, r5
 800ff4a:	f852 0b04 	ldr.w	r0, [r2], #4
 800ff4e:	930e      	str	r3, [sp, #56]	; 0x38
 800ff50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ff52:	920b      	str	r2, [sp, #44]	; 0x2c
 800ff54:	4798      	blx	r3
 800ff56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ff58:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ff5a:	f803 0b01 	strb.w	r0, [r3], #1
 800ff5e:	1ae1      	subs	r1, r4, r3
 800ff60:	eb18 0f01 	cmn.w	r8, r1
 800ff64:	d1f1      	bne.n	800ff4a <GUI_MEMDEV__WriteToActiveOpaque+0x506>
 800ff66:	e01e      	b.n	800ffa6 <GUI_MEMDEV__WriteToActiveOpaque+0x562>
 800ff68:	4643      	mov	r3, r8
 800ff6a:	462a      	mov	r2, r5
 800ff6c:	46a0      	mov	r8, r4
 800ff6e:	f852 0b04 	ldr.w	r0, [r2], #4
 800ff72:	930e      	str	r3, [sp, #56]	; 0x38
 800ff74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ff76:	920b      	str	r2, [sp, #44]	; 0x2c
 800ff78:	4798      	blx	r3
 800ff7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ff7c:	f1b8 0801 	subs.w	r8, r8, #1
 800ff80:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ff82:	f823 0b02 	strh.w	r0, [r3], #2
 800ff86:	d1f2      	bne.n	800ff6e <GUI_MEMDEV__WriteToActiveOpaque+0x52a>
 800ff88:	e00d      	b.n	800ffa6 <GUI_MEMDEV__WriteToActiveOpaque+0x562>
 800ff8a:	462a      	mov	r2, r5
 800ff8c:	4623      	mov	r3, r4
 800ff8e:	f852 0b04 	ldr.w	r0, [r2], #4
 800ff92:	930e      	str	r3, [sp, #56]	; 0x38
 800ff94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ff96:	920b      	str	r2, [sp, #44]	; 0x2c
 800ff98:	4798      	blx	r3
 800ff9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ff9c:	f848 0b04 	str.w	r0, [r8], #4
 800ffa0:	3b01      	subs	r3, #1
 800ffa2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ffa4:	d1f3      	bne.n	800ff8e <GUI_MEMDEV__WriteToActiveOpaque+0x54a>
 800ffa6:	445d      	add	r5, fp
 800ffa8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800ffaa:	4622      	mov	r2, r4
 800ffac:	9605      	str	r6, [sp, #20]
 800ffae:	4639      	mov	r1, r7
 800ffb0:	9304      	str	r3, [sp, #16]
 800ffb2:	f107 0801 	add.w	r8, r7, #1
 800ffb6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ffb8:	9603      	str	r6, [sp, #12]
 800ffba:	9302      	str	r3, [sp, #8]
 800ffbc:	2301      	movs	r3, #1
 800ffbe:	f8cd 9004 	str.w	r9, [sp, #4]
 800ffc2:	f8cd 9000 	str.w	r9, [sp]
 800ffc6:	9808      	ldr	r0, [sp, #32]
 800ffc8:	f7fc fc66 	bl	800c898 <LCD_DrawBitmap>
 800ffcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ffce:	4543      	cmp	r3, r8
 800ffd0:	f000 80d1 	beq.w	8010176 <GUI_MEMDEV__WriteToActiveOpaque+0x732>
 800ffd4:	4647      	mov	r7, r8
 800ffd6:	e7ab      	b.n	800ff30 <GUI_MEMDEV__WriteToActiveOpaque+0x4ec>
 800ffd8:	2f10      	cmp	r7, #16
 800ffda:	f040 80d5 	bne.w	8010188 <GUI_MEMDEV__WriteToActiveOpaque+0x744>
 800ffde:	fb04 f00a 	mul.w	r0, r4, sl
 800ffe2:	f7fa fe81 	bl	800ace8 <GUI_ALLOC_AllocNoInit>
 800ffe6:	900d      	str	r0, [sp, #52]	; 0x34
 800ffe8:	2800      	cmp	r0, #0
 800ffea:	f000 80cd 	beq.w	8010188 <GUI_MEMDEV__WriteToActiveOpaque+0x744>
 800ffee:	f7fa fcaf 	bl	800a950 <GUI_ALLOC_LockH>
 800fff2:	9018      	str	r0, [sp, #96]	; 0x60
 800fff4:	4628      	mov	r0, r5
 800fff6:	f7fa fcab 	bl	800a950 <GUI_ALLOC_LockH>
 800fffa:	9016      	str	r0, [sp, #88]	; 0x58
 800fffc:	6933      	ldr	r3, [r6, #16]
 800fffe:	f100 0718 	add.w	r7, r0, #24
 8010002:	b113      	cbz	r3, 801000a <GUI_MEMDEV__WriteToActiveOpaque+0x5c6>
 8010004:	f8d8 3014 	ldr.w	r3, [r8, #20]
 8010008:	b953      	cbnz	r3, 8010020 <GUI_MEMDEV__WriteToActiveOpaque+0x5dc>
 801000a:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801000e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8010010:	0066      	lsls	r6, r4, #1
 8010012:	f04f 0b00 	mov.w	fp, #0
 8010016:	930c      	str	r3, [sp, #48]	; 0x30
 8010018:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801001a:	442b      	add	r3, r5
 801001c:	9309      	str	r3, [sp, #36]	; 0x24
 801001e:	e083      	b.n	8010128 <GUI_MEMDEV__WriteToActiveOpaque+0x6e4>
 8010020:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 8010024:	0080      	lsls	r0, r0, #2
 8010026:	f7fa fe5f 	bl	800ace8 <GUI_ALLOC_AllocNoInit>
 801002a:	900c      	str	r0, [sp, #48]	; 0x30
 801002c:	b118      	cbz	r0, 8010036 <GUI_MEMDEV__WriteToActiveOpaque+0x5f2>
 801002e:	f7fa fc8f 	bl	800a950 <GUI_ALLOC_LockH>
 8010032:	9017      	str	r0, [sp, #92]	; 0x5c
 8010034:	e001      	b.n	801003a <GUI_MEMDEV__WriteToActiveOpaque+0x5f6>
 8010036:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010038:	9317      	str	r3, [sp, #92]	; 0x5c
 801003a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801003c:	2b00      	cmp	r3, #0
 801003e:	f000 809a 	beq.w	8010176 <GUI_MEMDEV__WriteToActiveOpaque+0x732>
 8010042:	0063      	lsls	r3, r4, #1
 8010044:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8010048:	930a      	str	r3, [sp, #40]	; 0x28
 801004a:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801004e:	930e      	str	r3, [sp, #56]	; 0x38
 8010050:	f1ba 0f02 	cmp.w	sl, #2
 8010054:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8010058:	d006      	beq.n	8010068 <GUI_MEMDEV__WriteToActiveOpaque+0x624>
 801005a:	f1ba 0f04 	cmp.w	sl, #4
 801005e:	d005      	beq.n	801006c <GUI_MEMDEV__WriteToActiveOpaque+0x628>
 8010060:	f1ba 0f01 	cmp.w	sl, #1
 8010064:	d111      	bne.n	801008a <GUI_MEMDEV__WriteToActiveOpaque+0x646>
 8010066:	e001      	b.n	801006c <GUI_MEMDEV__WriteToActiveOpaque+0x628>
 8010068:	4653      	mov	r3, sl
 801006a:	e000      	b.n	801006e <GUI_MEMDEV__WriteToActiveOpaque+0x62a>
 801006c:	2302      	movs	r3, #2
 801006e:	4638      	mov	r0, r7
 8010070:	4622      	mov	r2, r4
 8010072:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8010074:	f8d8 5014 	ldr.w	r5, [r8, #20]
 8010078:	47a8      	blx	r5
 801007a:	4653      	mov	r3, sl
 801007c:	4622      	mov	r2, r4
 801007e:	4649      	mov	r1, r9
 8010080:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8010082:	6935      	ldr	r5, [r6, #16]
 8010084:	47a8      	blx	r5
 8010086:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010088:	441f      	add	r7, r3
 801008a:	2300      	movs	r3, #0
 801008c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801008e:	4659      	mov	r1, fp
 8010090:	9808      	ldr	r0, [sp, #32]
 8010092:	9305      	str	r3, [sp, #20]
 8010094:	f10b 0901 	add.w	r9, fp, #1
 8010098:	9303      	str	r3, [sp, #12]
 801009a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801009c:	9204      	str	r2, [sp, #16]
 801009e:	4622      	mov	r2, r4
 80100a0:	9302      	str	r3, [sp, #8]
 80100a2:	2301      	movs	r3, #1
 80100a4:	9301      	str	r3, [sp, #4]
 80100a6:	9300      	str	r3, [sp, #0]
 80100a8:	f7fc fbf6 	bl	800c898 <LCD_DrawBitmap>
 80100ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80100ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80100b0:	4413      	add	r3, r2
 80100b2:	4599      	cmp	r9, r3
 80100b4:	d001      	beq.n	80100ba <GUI_MEMDEV__WriteToActiveOpaque+0x676>
 80100b6:	46cb      	mov	fp, r9
 80100b8:	e7ca      	b.n	8010050 <GUI_MEMDEV__WriteToActiveOpaque+0x60c>
 80100ba:	a817      	add	r0, sp, #92	; 0x5c
 80100bc:	f7fa fc56 	bl	800a96c <GUI_ALLOC_UnlockH>
 80100c0:	980c      	ldr	r0, [sp, #48]	; 0x30
 80100c2:	f7fa fc7f 	bl	800a9c4 <GUI_ALLOC_Free>
 80100c6:	e056      	b.n	8010176 <GUI_MEMDEV__WriteToActiveOpaque+0x732>
 80100c8:	2002db08 	.word	0x2002db08
 80100cc:	f1ba 0f04 	cmp.w	sl, #4
 80100d0:	d041      	beq.n	8010156 <GUI_MEMDEV__WriteToActiveOpaque+0x712>
 80100d2:	f1ba 0f01 	cmp.w	sl, #1
 80100d6:	d111      	bne.n	80100fc <GUI_MEMDEV__WriteToActiveOpaque+0x6b8>
 80100d8:	4643      	mov	r3, r8
 80100da:	463a      	mov	r2, r7
 80100dc:	f832 0b02 	ldrh.w	r0, [r2], #2
 80100e0:	930e      	str	r3, [sp, #56]	; 0x38
 80100e2:	920b      	str	r2, [sp, #44]	; 0x2c
 80100e4:	47c8      	blx	r9
 80100e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80100e8:	4798      	blx	r3
 80100ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80100ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80100ee:	f803 0b01 	strb.w	r0, [r3], #1
 80100f2:	1ae1      	subs	r1, r4, r3
 80100f4:	eb18 0f01 	cmn.w	r8, r1
 80100f8:	d1f0      	bne.n	80100dc <GUI_MEMDEV__WriteToActiveOpaque+0x698>
 80100fa:	4437      	add	r7, r6
 80100fc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80100fe:	4622      	mov	r2, r4
 8010100:	f8cd b014 	str.w	fp, [sp, #20]
 8010104:	4629      	mov	r1, r5
 8010106:	9304      	str	r3, [sp, #16]
 8010108:	f105 0801 	add.w	r8, r5, #1
 801010c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801010e:	f8cd b00c 	str.w	fp, [sp, #12]
 8010112:	9302      	str	r3, [sp, #8]
 8010114:	2301      	movs	r3, #1
 8010116:	9808      	ldr	r0, [sp, #32]
 8010118:	9301      	str	r3, [sp, #4]
 801011a:	9300      	str	r3, [sp, #0]
 801011c:	f7fc fbbc 	bl	800c898 <LCD_DrawBitmap>
 8010120:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010122:	4543      	cmp	r3, r8
 8010124:	d027      	beq.n	8010176 <GUI_MEMDEV__WriteToActiveOpaque+0x732>
 8010126:	4645      	mov	r5, r8
 8010128:	f1ba 0f02 	cmp.w	sl, #2
 801012c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8010130:	d1cc      	bne.n	80100cc <GUI_MEMDEV__WriteToActiveOpaque+0x688>
 8010132:	4643      	mov	r3, r8
 8010134:	463a      	mov	r2, r7
 8010136:	46a0      	mov	r8, r4
 8010138:	f832 0b02 	ldrh.w	r0, [r2], #2
 801013c:	930e      	str	r3, [sp, #56]	; 0x38
 801013e:	920b      	str	r2, [sp, #44]	; 0x2c
 8010140:	47c8      	blx	r9
 8010142:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010144:	4798      	blx	r3
 8010146:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010148:	f1b8 0801 	subs.w	r8, r8, #1
 801014c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801014e:	f823 0b02 	strh.w	r0, [r3], #2
 8010152:	d1f1      	bne.n	8010138 <GUI_MEMDEV__WriteToActiveOpaque+0x6f4>
 8010154:	e7d1      	b.n	80100fa <GUI_MEMDEV__WriteToActiveOpaque+0x6b6>
 8010156:	463a      	mov	r2, r7
 8010158:	4623      	mov	r3, r4
 801015a:	f832 0b02 	ldrh.w	r0, [r2], #2
 801015e:	930e      	str	r3, [sp, #56]	; 0x38
 8010160:	920b      	str	r2, [sp, #44]	; 0x2c
 8010162:	47c8      	blx	r9
 8010164:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010166:	4798      	blx	r3
 8010168:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801016a:	f848 0b04 	str.w	r0, [r8], #4
 801016e:	3b01      	subs	r3, #1
 8010170:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010172:	d1f2      	bne.n	801015a <GUI_MEMDEV__WriteToActiveOpaque+0x716>
 8010174:	e7c1      	b.n	80100fa <GUI_MEMDEV__WriteToActiveOpaque+0x6b6>
 8010176:	a816      	add	r0, sp, #88	; 0x58
 8010178:	f7fa fbf8 	bl	800a96c <GUI_ALLOC_UnlockH>
 801017c:	a818      	add	r0, sp, #96	; 0x60
 801017e:	f7fa fbf5 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010182:	980d      	ldr	r0, [sp, #52]	; 0x34
 8010184:	f7fa fc1e 	bl	800a9c4 <GUI_ALLOC_Free>
 8010188:	b01b      	add	sp, #108	; 0x6c
 801018a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801018e:	bf00      	nop

08010190 <_OnExit>:
 8010190:	b570      	push	{r4, r5, r6, lr}
 8010192:	4b1a      	ldr	r3, [pc, #104]	; (80101fc <_OnExit+0x6c>)
 8010194:	2400      	movs	r4, #0
 8010196:	4d1a      	ldr	r5, [pc, #104]	; (8010200 <_OnExit+0x70>)
 8010198:	601c      	str	r4, [r3, #0]
 801019a:	4621      	mov	r1, r4
 801019c:	4b19      	ldr	r3, [pc, #100]	; (8010204 <_OnExit+0x74>)
 801019e:	481a      	ldr	r0, [pc, #104]	; (8010208 <_OnExit+0x78>)
 80101a0:	601c      	str	r4, [r3, #0]
 80101a2:	605c      	str	r4, [r3, #4]
 80101a4:	300c      	adds	r0, #12
 80101a6:	4b19      	ldr	r3, [pc, #100]	; (801020c <_OnExit+0x7c>)
 80101a8:	4a19      	ldr	r2, [pc, #100]	; (8010210 <_OnExit+0x80>)
 80101aa:	601c      	str	r4, [r3, #0]
 80101ac:	4b19      	ldr	r3, [pc, #100]	; (8010214 <_OnExit+0x84>)
 80101ae:	f800 4c0c 	strb.w	r4, [r0, #-12]
 80101b2:	601c      	str	r4, [r3, #0]
 80101b4:	4b18      	ldr	r3, [pc, #96]	; (8010218 <_OnExit+0x88>)
 80101b6:	f840 4c08 	str.w	r4, [r0, #-8]
 80101ba:	601c      	str	r4, [r3, #0]
 80101bc:	4b17      	ldr	r3, [pc, #92]	; (801021c <_OnExit+0x8c>)
 80101be:	6014      	str	r4, [r2, #0]
 80101c0:	6054      	str	r4, [r2, #4]
 80101c2:	2218      	movs	r2, #24
 80101c4:	601c      	str	r4, [r3, #0]
 80101c6:	f840 4c04 	str.w	r4, [r0, #-4]
 80101ca:	682b      	ldr	r3, [r5, #0]
 80101cc:	4798      	blx	r3
 80101ce:	4b14      	ldr	r3, [pc, #80]	; (8010220 <_OnExit+0x90>)
 80101d0:	4621      	mov	r1, r4
 80101d2:	2210      	movs	r2, #16
 80101d4:	601c      	str	r4, [r3, #0]
 80101d6:	4b13      	ldr	r3, [pc, #76]	; (8010224 <_OnExit+0x94>)
 80101d8:	4813      	ldr	r0, [pc, #76]	; (8010228 <_OnExit+0x98>)
 80101da:	601c      	str	r4, [r3, #0]
 80101dc:	605c      	str	r4, [r3, #4]
 80101de:	682b      	ldr	r3, [r5, #0]
 80101e0:	4798      	blx	r3
 80101e2:	682b      	ldr	r3, [r5, #0]
 80101e4:	4621      	mov	r1, r4
 80101e6:	2210      	movs	r2, #16
 80101e8:	4810      	ldr	r0, [pc, #64]	; (801022c <_OnExit+0x9c>)
 80101ea:	4798      	blx	r3
 80101ec:	682b      	ldr	r3, [r5, #0]
 80101ee:	4621      	mov	r1, r4
 80101f0:	2210      	movs	r2, #16
 80101f2:	480f      	ldr	r0, [pc, #60]	; (8010230 <_OnExit+0xa0>)
 80101f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80101f8:	4718      	bx	r3
 80101fa:	bf00      	nop
 80101fc:	2002db68 	.word	0x2002db68
 8010200:	20000054 	.word	0x20000054
 8010204:	2002db70 	.word	0x2002db70
 8010208:	20000d34 	.word	0x20000d34
 801020c:	2002db7c 	.word	0x2002db7c
 8010210:	2002db3c 	.word	0x2002db3c
 8010214:	2002db28 	.word	0x2002db28
 8010218:	2002db5c 	.word	0x2002db5c
 801021c:	2002db6c 	.word	0x2002db6c
 8010220:	2002db38 	.word	0x2002db38
 8010224:	2002db2c 	.word	0x2002db2c
 8010228:	2002dba0 	.word	0x2002dba0
 801022c:	2002db90 	.word	0x2002db90
 8010230:	2002db80 	.word	0x2002db80

08010234 <_Paint1>:
 8010234:	b510      	push	{r4, lr}
 8010236:	4604      	mov	r4, r0
 8010238:	f7fa fb80 	bl	800a93c <GUI_ALLOC_h2p>
 801023c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801023e:	4a05      	ldr	r2, [pc, #20]	; (8010254 <_Paint1+0x20>)
 8010240:	4620      	mov	r0, r4
 8010242:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8010246:	4b04      	ldr	r3, [pc, #16]	; (8010258 <_Paint1+0x24>)
 8010248:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801024c:	bf08      	it	eq
 801024e:	4613      	moveq	r3, r2
 8010250:	4718      	bx	r3
 8010252:	bf00      	nop
 8010254:	08011149 	.word	0x08011149
 8010258:	08014741 	.word	0x08014741

0801025c <_Findy1>:
 801025c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801025e:	b085      	sub	sp, #20
 8010260:	4607      	mov	r7, r0
 8010262:	460c      	mov	r4, r1
 8010264:	4616      	mov	r6, r2
 8010266:	ad02      	add	r5, sp, #8
 8010268:	2f00      	cmp	r7, #0
 801026a:	d048      	beq.n	80102fe <_Findy1+0xa2>
 801026c:	4638      	mov	r0, r7
 801026e:	f7fa fb6f 	bl	800a950 <GUI_ALLOC_LockH>
 8010272:	6a87      	ldr	r7, [r0, #40]	; 0x28
 8010274:	4601      	mov	r1, r0
 8010276:	9001      	str	r0, [sp, #4]
 8010278:	07bb      	lsls	r3, r7, #30
 801027a:	d53a      	bpl.n	80102f2 <_Findy1+0x96>
 801027c:	b126      	cbz	r6, 8010288 <_Findy1+0x2c>
 801027e:	4632      	mov	r2, r6
 8010280:	4628      	mov	r0, r5
 8010282:	f7fb ff20 	bl	800c0c6 <GUI__IntersectRects>
 8010286:	e002      	b.n	801028e <_Findy1+0x32>
 8010288:	c803      	ldmia	r0, {r0, r1}
 801028a:	e885 0003 	stmia.w	r5, {r0, r1}
 801028e:	4629      	mov	r1, r5
 8010290:	4620      	mov	r0, r4
 8010292:	f7fa ff11 	bl	800b0b8 <GUI_RectsIntersect>
 8010296:	b360      	cbz	r0, 80102f2 <_Findy1+0x96>
 8010298:	f017 0f01 	tst.w	r7, #1
 801029c:	9b01      	ldr	r3, [sp, #4]
 801029e:	d11c      	bne.n	80102da <_Findy1+0x7e>
 80102a0:	b13e      	cbz	r6, 80102b2 <_Findy1+0x56>
 80102a2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80102a6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80102aa:	4293      	cmp	r3, r2
 80102ac:	bfb8      	it	lt
 80102ae:	4613      	movlt	r3, r2
 80102b0:	e001      	b.n	80102b6 <_Findy1+0x5a>
 80102b2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80102b6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80102ba:	4293      	cmp	r3, r2
 80102bc:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80102c0:	dd05      	ble.n	80102ce <_Findy1+0x72>
 80102c2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80102c6:	429a      	cmp	r2, r3
 80102c8:	db13      	blt.n	80102f2 <_Findy1+0x96>
 80102ca:	3b01      	subs	r3, #1
 80102cc:	e003      	b.n	80102d6 <_Findy1+0x7a>
 80102ce:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80102d2:	429a      	cmp	r2, r3
 80102d4:	dd0d      	ble.n	80102f2 <_Findy1+0x96>
 80102d6:	80e3      	strh	r3, [r4, #6]
 80102d8:	e00b      	b.n	80102f2 <_Findy1+0x96>
 80102da:	69df      	ldr	r7, [r3, #28]
 80102dc:	b14f      	cbz	r7, 80102f2 <_Findy1+0x96>
 80102de:	4638      	mov	r0, r7
 80102e0:	462a      	mov	r2, r5
 80102e2:	4621      	mov	r1, r4
 80102e4:	f7ff ffba 	bl	801025c <_Findy1>
 80102e8:	4638      	mov	r0, r7
 80102ea:	f7fa fb27 	bl	800a93c <GUI_ALLOC_h2p>
 80102ee:	6a07      	ldr	r7, [r0, #32]
 80102f0:	e7f4      	b.n	80102dc <_Findy1+0x80>
 80102f2:	9b01      	ldr	r3, [sp, #4]
 80102f4:	a801      	add	r0, sp, #4
 80102f6:	6a1f      	ldr	r7, [r3, #32]
 80102f8:	f7fa fb38 	bl	800a96c <GUI_ALLOC_UnlockH>
 80102fc:	e7b4      	b.n	8010268 <_Findy1+0xc>
 80102fe:	b005      	add	sp, #20
 8010300:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010302 <_Findx0>:
 8010302:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010306:	4606      	mov	r6, r0
 8010308:	460f      	mov	r7, r1
 801030a:	4690      	mov	r8, r2
 801030c:	2500      	movs	r5, #0
 801030e:	ac02      	add	r4, sp, #8
 8010310:	2e00      	cmp	r6, #0
 8010312:	d035      	beq.n	8010380 <_Findx0+0x7e>
 8010314:	4630      	mov	r0, r6
 8010316:	f7fa fb1b 	bl	800a950 <GUI_ALLOC_LockH>
 801031a:	6a86      	ldr	r6, [r0, #40]	; 0x28
 801031c:	4601      	mov	r1, r0
 801031e:	9001      	str	r0, [sp, #4]
 8010320:	07b2      	lsls	r2, r6, #30
 8010322:	d527      	bpl.n	8010374 <_Findx0+0x72>
 8010324:	f1b8 0f00 	cmp.w	r8, #0
 8010328:	d004      	beq.n	8010334 <_Findx0+0x32>
 801032a:	4642      	mov	r2, r8
 801032c:	4620      	mov	r0, r4
 801032e:	f7fb feca 	bl	800c0c6 <GUI__IntersectRects>
 8010332:	e002      	b.n	801033a <_Findx0+0x38>
 8010334:	c803      	ldmia	r0, {r0, r1}
 8010336:	e884 0003 	stmia.w	r4, {r0, r1}
 801033a:	4621      	mov	r1, r4
 801033c:	4638      	mov	r0, r7
 801033e:	f7fa febb 	bl	800b0b8 <GUI_RectsIntersect>
 8010342:	b1b8      	cbz	r0, 8010374 <_Findx0+0x72>
 8010344:	07f3      	lsls	r3, r6, #31
 8010346:	d405      	bmi.n	8010354 <_Findx0+0x52>
 8010348:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801034c:	2501      	movs	r5, #1
 801034e:	3301      	adds	r3, #1
 8010350:	803b      	strh	r3, [r7, #0]
 8010352:	e00f      	b.n	8010374 <_Findx0+0x72>
 8010354:	9b01      	ldr	r3, [sp, #4]
 8010356:	69de      	ldr	r6, [r3, #28]
 8010358:	b166      	cbz	r6, 8010374 <_Findx0+0x72>
 801035a:	4622      	mov	r2, r4
 801035c:	4639      	mov	r1, r7
 801035e:	4630      	mov	r0, r6
 8010360:	f7ff ffcf 	bl	8010302 <_Findx0>
 8010364:	2800      	cmp	r0, #0
 8010366:	4630      	mov	r0, r6
 8010368:	bf18      	it	ne
 801036a:	2501      	movne	r5, #1
 801036c:	f7fa fae6 	bl	800a93c <GUI_ALLOC_h2p>
 8010370:	6a06      	ldr	r6, [r0, #32]
 8010372:	e7f1      	b.n	8010358 <_Findx0+0x56>
 8010374:	9b01      	ldr	r3, [sp, #4]
 8010376:	a801      	add	r0, sp, #4
 8010378:	6a1e      	ldr	r6, [r3, #32]
 801037a:	f7fa faf7 	bl	800a96c <GUI_ALLOC_UnlockH>
 801037e:	e7c7      	b.n	8010310 <_Findx0+0xe>
 8010380:	4628      	mov	r0, r5
 8010382:	b004      	add	sp, #16
 8010384:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010388 <_Findx1>:
 8010388:	b5f0      	push	{r4, r5, r6, r7, lr}
 801038a:	b085      	sub	sp, #20
 801038c:	4605      	mov	r5, r0
 801038e:	460e      	mov	r6, r1
 8010390:	4617      	mov	r7, r2
 8010392:	ac02      	add	r4, sp, #8
 8010394:	b37d      	cbz	r5, 80103f6 <_Findx1+0x6e>
 8010396:	4628      	mov	r0, r5
 8010398:	f7fa fada 	bl	800a950 <GUI_ALLOC_LockH>
 801039c:	6a85      	ldr	r5, [r0, #40]	; 0x28
 801039e:	4601      	mov	r1, r0
 80103a0:	9001      	str	r0, [sp, #4]
 80103a2:	07aa      	lsls	r2, r5, #30
 80103a4:	d521      	bpl.n	80103ea <_Findx1+0x62>
 80103a6:	b127      	cbz	r7, 80103b2 <_Findx1+0x2a>
 80103a8:	463a      	mov	r2, r7
 80103aa:	4620      	mov	r0, r4
 80103ac:	f7fb fe8b 	bl	800c0c6 <GUI__IntersectRects>
 80103b0:	e002      	b.n	80103b8 <_Findx1+0x30>
 80103b2:	c803      	ldmia	r0, {r0, r1}
 80103b4:	e884 0003 	stmia.w	r4, {r0, r1}
 80103b8:	4621      	mov	r1, r4
 80103ba:	4630      	mov	r0, r6
 80103bc:	f7fa fe7c 	bl	800b0b8 <GUI_RectsIntersect>
 80103c0:	b198      	cbz	r0, 80103ea <_Findx1+0x62>
 80103c2:	07eb      	lsls	r3, r5, #31
 80103c4:	d404      	bmi.n	80103d0 <_Findx1+0x48>
 80103c6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80103ca:	3b01      	subs	r3, #1
 80103cc:	80b3      	strh	r3, [r6, #4]
 80103ce:	e00c      	b.n	80103ea <_Findx1+0x62>
 80103d0:	9b01      	ldr	r3, [sp, #4]
 80103d2:	69dd      	ldr	r5, [r3, #28]
 80103d4:	b14d      	cbz	r5, 80103ea <_Findx1+0x62>
 80103d6:	4628      	mov	r0, r5
 80103d8:	4622      	mov	r2, r4
 80103da:	4631      	mov	r1, r6
 80103dc:	f7ff ffd4 	bl	8010388 <_Findx1>
 80103e0:	4628      	mov	r0, r5
 80103e2:	f7fa faab 	bl	800a93c <GUI_ALLOC_h2p>
 80103e6:	6a05      	ldr	r5, [r0, #32]
 80103e8:	e7f4      	b.n	80103d4 <_Findx1+0x4c>
 80103ea:	9b01      	ldr	r3, [sp, #4]
 80103ec:	a801      	add	r0, sp, #4
 80103ee:	6a1d      	ldr	r5, [r3, #32]
 80103f0:	f7fa fabc 	bl	800a96c <GUI_ALLOC_UnlockH>
 80103f4:	e7ce      	b.n	8010394 <_Findx1+0xc>
 80103f6:	b005      	add	sp, #20
 80103f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080103fc <_Paint1Trans>:
 80103fc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010400:	4d21      	ldr	r5, [pc, #132]	; (8010488 <_Paint1Trans+0x8c>)
 8010402:	4607      	mov	r7, r0
 8010404:	ac02      	add	r4, sp, #8
 8010406:	682b      	ldr	r3, [r5, #0]
 8010408:	6c98      	ldr	r0, [r3, #72]	; 0x48
 801040a:	f7fa faa1 	bl	800a950 <GUI_ALLOC_LockH>
 801040e:	9000      	str	r0, [sp, #0]
 8010410:	4638      	mov	r0, r7
 8010412:	f7fa fa9d 	bl	800a950 <GUI_ALLOC_LockH>
 8010416:	4601      	mov	r1, r0
 8010418:	9001      	str	r0, [sp, #4]
 801041a:	f854 0d08 	ldr.w	r0, [r4, #-8]!
 801041e:	3008      	adds	r0, #8
 8010420:	f7fa fe4a 	bl	800b0b8 <GUI_RectsIntersect>
 8010424:	4606      	mov	r6, r0
 8010426:	b328      	cbz	r0, 8010474 <_Paint1Trans+0x78>
 8010428:	9901      	ldr	r1, [sp, #4]
 801042a:	9a00      	ldr	r2, [sp, #0]
 801042c:	682b      	ldr	r3, [r5, #0]
 801042e:	f101 0008 	add.w	r0, r1, #8
 8010432:	3208      	adds	r2, #8
 8010434:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8010436:	f8d3 8050 	ldr.w	r8, [r3, #80]	; 0x50
 801043a:	f7fb fe44 	bl	800c0c6 <GUI__IntersectRects>
 801043e:	4620      	mov	r0, r4
 8010440:	4c12      	ldr	r4, [pc, #72]	; (801048c <_Paint1Trans+0x90>)
 8010442:	f7fa fa93 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010446:	9a01      	ldr	r2, [sp, #4]
 8010448:	682b      	ldr	r3, [r5, #0]
 801044a:	a801      	add	r0, sp, #4
 801044c:	f9b2 1000 	ldrsh.w	r1, [r2]
 8010450:	f9b2 2002 	ldrsh.w	r2, [r2, #2]
 8010454:	64d9      	str	r1, [r3, #76]	; 0x4c
 8010456:	651a      	str	r2, [r3, #80]	; 0x50
 8010458:	6027      	str	r7, [r4, #0]
 801045a:	f7fa fa87 	bl	800a96c <GUI_ALLOC_UnlockH>
 801045e:	4638      	mov	r0, r7
 8010460:	f7ff fee8 	bl	8010234 <_Paint1>
 8010464:	2300      	movs	r3, #0
 8010466:	6023      	str	r3, [r4, #0]
 8010468:	682b      	ldr	r3, [r5, #0]
 801046a:	64de      	str	r6, [r3, #76]	; 0x4c
 801046c:	2601      	movs	r6, #1
 801046e:	f8c3 8050 	str.w	r8, [r3, #80]	; 0x50
 8010472:	e005      	b.n	8010480 <_Paint1Trans+0x84>
 8010474:	4620      	mov	r0, r4
 8010476:	f7fa fa79 	bl	800a96c <GUI_ALLOC_UnlockH>
 801047a:	a801      	add	r0, sp, #4
 801047c:	f7fa fa76 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010480:	4630      	mov	r0, r6
 8010482:	b002      	add	sp, #8
 8010484:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010488:	2000003c 	.word	0x2000003c
 801048c:	2002db28 	.word	0x2002db28

08010490 <_PaintTransChildren>:
 8010490:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010494:	4605      	mov	r5, r0
 8010496:	f7fa fa5b 	bl	800a950 <GUI_ALLOC_LockH>
 801049a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801049c:	9001      	str	r0, [sp, #4]
 801049e:	079b      	lsls	r3, r3, #30
 80104a0:	d405      	bmi.n	80104ae <_PaintTransChildren+0x1e>
 80104a2:	a801      	add	r0, sp, #4
 80104a4:	f7fa fa62 	bl	800a96c <GUI_ALLOC_UnlockH>
 80104a8:	b003      	add	sp, #12
 80104aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80104ae:	69c4      	ldr	r4, [r0, #28]
 80104b0:	2c00      	cmp	r4, #0
 80104b2:	d0f6      	beq.n	80104a2 <_PaintTransChildren+0x12>
 80104b4:	4620      	mov	r0, r4
 80104b6:	f7fa fa4b 	bl	800a950 <GUI_ALLOC_LockH>
 80104ba:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80104bc:	9000      	str	r0, [sp, #0]
 80104be:	f003 0303 	and.w	r3, r3, #3
 80104c2:	2b03      	cmp	r3, #3
 80104c4:	d135      	bne.n	8010532 <_PaintTransChildren+0xa2>
 80104c6:	9901      	ldr	r1, [sp, #4]
 80104c8:	3108      	adds	r1, #8
 80104ca:	f7fa fdf5 	bl	800b0b8 <GUI_RectsIntersect>
 80104ce:	b380      	cbz	r0, 8010532 <_PaintTransChildren+0xa2>
 80104d0:	9b01      	ldr	r3, [sp, #4]
 80104d2:	a801      	add	r0, sp, #4
 80104d4:	f9b3 9008 	ldrsh.w	r9, [r3, #8]
 80104d8:	f9b3 800a 	ldrsh.w	r8, [r3, #10]
 80104dc:	f9b3 700c 	ldrsh.w	r7, [r3, #12]
 80104e0:	f9b3 600e 	ldrsh.w	r6, [r3, #14]
 80104e4:	f7fa fa42 	bl	800a96c <GUI_ALLOC_UnlockH>
 80104e8:	4668      	mov	r0, sp
 80104ea:	f7fa fa3f 	bl	800a96c <GUI_ALLOC_UnlockH>
 80104ee:	4620      	mov	r0, r4
 80104f0:	f7ff ff84 	bl	80103fc <_Paint1Trans>
 80104f4:	b170      	cbz	r0, 8010514 <_PaintTransChildren+0x84>
 80104f6:	4620      	mov	r0, r4
 80104f8:	f7fa fa20 	bl	800a93c <GUI_ALLOC_h2p>
 80104fc:	9000      	str	r0, [sp, #0]
 80104fe:	4620      	mov	r0, r4
 8010500:	f7ff ffc6 	bl	8010490 <_PaintTransChildren>
 8010504:	4620      	mov	r0, r4
 8010506:	f7fa fa19 	bl	800a93c <GUI_ALLOC_h2p>
 801050a:	9000      	str	r0, [sp, #0]
 801050c:	4628      	mov	r0, r5
 801050e:	f7fa fa15 	bl	800a93c <GUI_ALLOC_h2p>
 8010512:	9001      	str	r0, [sp, #4]
 8010514:	4628      	mov	r0, r5
 8010516:	f7fa fa1b 	bl	800a950 <GUI_ALLOC_LockH>
 801051a:	9001      	str	r0, [sp, #4]
 801051c:	4620      	mov	r0, r4
 801051e:	f7fa fa17 	bl	800a950 <GUI_ALLOC_LockH>
 8010522:	9b01      	ldr	r3, [sp, #4]
 8010524:	9000      	str	r0, [sp, #0]
 8010526:	f8a3 9008 	strh.w	r9, [r3, #8]
 801052a:	f8a3 800a 	strh.w	r8, [r3, #10]
 801052e:	819f      	strh	r7, [r3, #12]
 8010530:	81de      	strh	r6, [r3, #14]
 8010532:	9b00      	ldr	r3, [sp, #0]
 8010534:	4668      	mov	r0, sp
 8010536:	6a1c      	ldr	r4, [r3, #32]
 8010538:	f7fa fa18 	bl	800a96c <GUI_ALLOC_UnlockH>
 801053c:	e7b8      	b.n	80104b0 <_PaintTransChildren+0x20>
	...

08010540 <WM__PaintWinAndOverlays>:
 8010540:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010542:	4604      	mov	r4, r0
 8010544:	f7fa fa04 	bl	800a950 <GUI_ALLOC_LockH>
 8010548:	f640 0301 	movw	r3, #2049	; 0x801
 801054c:	6a82      	ldr	r2, [r0, #40]	; 0x28
 801054e:	9001      	str	r0, [sp, #4]
 8010550:	4013      	ands	r3, r2
 8010552:	2b01      	cmp	r3, #1
 8010554:	d005      	beq.n	8010562 <WM__PaintWinAndOverlays+0x22>
 8010556:	a801      	add	r0, sp, #4
 8010558:	f7fa fa08 	bl	800a96c <GUI_ALLOC_UnlockH>
 801055c:	4620      	mov	r0, r4
 801055e:	f7ff fe69 	bl	8010234 <_Paint1>
 8010562:	4b14      	ldr	r3, [pc, #80]	; (80105b4 <WM__PaintWinAndOverlays+0x74>)
 8010564:	681b      	ldr	r3, [r3, #0]
 8010566:	b313      	cbz	r3, 80105ae <WM__PaintWinAndOverlays+0x6e>
 8010568:	4620      	mov	r0, r4
 801056a:	f7ff ff91 	bl	8010490 <_PaintTransChildren>
 801056e:	4620      	mov	r0, r4
 8010570:	f7fa f9e4 	bl	800a93c <GUI_ALLOC_h2p>
 8010574:	6985      	ldr	r5, [r0, #24]
 8010576:	6a04      	ldr	r4, [r0, #32]
 8010578:	b1cd      	cbz	r5, 80105ae <WM__PaintWinAndOverlays+0x6e>
 801057a:	b194      	cbz	r4, 80105a2 <WM__PaintWinAndOverlays+0x62>
 801057c:	4620      	mov	r0, r4
 801057e:	f7fa f9dd 	bl	800a93c <GUI_ALLOC_h2p>
 8010582:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010584:	f003 0303 	and.w	r3, r3, #3
 8010588:	2b03      	cmp	r3, #3
 801058a:	d102      	bne.n	8010592 <WM__PaintWinAndOverlays+0x52>
 801058c:	4620      	mov	r0, r4
 801058e:	f7ff ff35 	bl	80103fc <_Paint1Trans>
 8010592:	4620      	mov	r0, r4
 8010594:	f7ff ff7c 	bl	8010490 <_PaintTransChildren>
 8010598:	4620      	mov	r0, r4
 801059a:	f7fa f9cf 	bl	800a93c <GUI_ALLOC_h2p>
 801059e:	6a04      	ldr	r4, [r0, #32]
 80105a0:	e7eb      	b.n	801057a <WM__PaintWinAndOverlays+0x3a>
 80105a2:	4628      	mov	r0, r5
 80105a4:	f7fa f9ca 	bl	800a93c <GUI_ALLOC_h2p>
 80105a8:	6a04      	ldr	r4, [r0, #32]
 80105aa:	6985      	ldr	r5, [r0, #24]
 80105ac:	e7e4      	b.n	8010578 <WM__PaintWinAndOverlays+0x38>
 80105ae:	b003      	add	sp, #12
 80105b0:	bd30      	pop	{r4, r5, pc}
 80105b2:	bf00      	nop
 80105b4:	2002db7c 	.word	0x2002db7c

080105b8 <_cbPaintMemDev>:
 80105b8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80105bc:	4d18      	ldr	r5, [pc, #96]	; (8010620 <_cbPaintMemDev+0x68>)
 80105be:	4682      	mov	sl, r0
 80105c0:	ac02      	add	r4, sp, #8
 80105c2:	682b      	ldr	r3, [r5, #0]
 80105c4:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80105c6:	f7fa f9c3 	bl	800a950 <GUI_ALLOC_LockH>
 80105ca:	682a      	ldr	r2, [r5, #0]
 80105cc:	f844 0d04 	str.w	r0, [r4, #-4]!
 80105d0:	f100 0308 	add.w	r3, r0, #8
 80105d4:	3208      	adds	r2, #8
 80105d6:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 80105da:	f9b0 800a 	ldrsh.w	r8, [r0, #10]
 80105de:	f9b0 700c 	ldrsh.w	r7, [r0, #12]
 80105e2:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 80105e6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80105ea:	e883 0003 	stmia.w	r3, {r0, r1}
 80105ee:	4620      	mov	r0, r4
 80105f0:	f7fa f9bc 	bl	800a96c <GUI_ALLOC_UnlockH>
 80105f4:	f8da 0000 	ldr.w	r0, [sl]
 80105f8:	f7ff ffa2 	bl	8010540 <WM__PaintWinAndOverlays>
 80105fc:	682b      	ldr	r3, [r5, #0]
 80105fe:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8010600:	f7fa f9a6 	bl	800a950 <GUI_ALLOC_LockH>
 8010604:	9001      	str	r0, [sp, #4]
 8010606:	f8a0 9008 	strh.w	r9, [r0, #8]
 801060a:	f8a0 800a 	strh.w	r8, [r0, #10]
 801060e:	8187      	strh	r7, [r0, #12]
 8010610:	81c6      	strh	r6, [r0, #14]
 8010612:	4620      	mov	r0, r4
 8010614:	f7fa f9aa 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010618:	b002      	add	sp, #8
 801061a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801061e:	bf00      	nop
 8010620:	2000003c 	.word	0x2000003c

08010624 <WM__ClipAtParentBorders>:
 8010624:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010626:	4606      	mov	r6, r0
 8010628:	460d      	mov	r5, r1
 801062a:	4628      	mov	r0, r5
 801062c:	f7fa f990 	bl	800a950 <GUI_ALLOC_LockH>
 8010630:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010632:	4601      	mov	r1, r0
 8010634:	9001      	str	r0, [sp, #4]
 8010636:	f013 0402 	ands.w	r4, r3, #2
 801063a:	d104      	bne.n	8010646 <WM__ClipAtParentBorders+0x22>
 801063c:	a801      	add	r0, sp, #4
 801063e:	f7fa f995 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010642:	4620      	mov	r0, r4
 8010644:	e016      	b.n	8010674 <WM__ClipAtParentBorders+0x50>
 8010646:	4630      	mov	r0, r6
 8010648:	f7fb fd20 	bl	800c08c <GUI__IntersectRect>
 801064c:	9b01      	ldr	r3, [sp, #4]
 801064e:	a801      	add	r0, sp, #4
 8010650:	699c      	ldr	r4, [r3, #24]
 8010652:	b954      	cbnz	r4, 801066a <WM__ClipAtParentBorders+0x46>
 8010654:	f7fa f98a 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010658:	4b07      	ldr	r3, [pc, #28]	; (8010678 <WM__ClipAtParentBorders+0x54>)
 801065a:	681a      	ldr	r2, [r3, #0]
 801065c:	4295      	cmp	r5, r2
 801065e:	d008      	beq.n	8010672 <WM__ClipAtParentBorders+0x4e>
 8010660:	6858      	ldr	r0, [r3, #4]
 8010662:	1b43      	subs	r3, r0, r5
 8010664:	4258      	negs	r0, r3
 8010666:	4158      	adcs	r0, r3
 8010668:	e004      	b.n	8010674 <WM__ClipAtParentBorders+0x50>
 801066a:	f7fa f97f 	bl	800a96c <GUI_ALLOC_UnlockH>
 801066e:	4625      	mov	r5, r4
 8010670:	e7db      	b.n	801062a <WM__ClipAtParentBorders+0x6>
 8010672:	2001      	movs	r0, #1
 8010674:	b002      	add	sp, #8
 8010676:	bd70      	pop	{r4, r5, r6, pc}
 8010678:	2002db2c 	.word	0x2002db2c

0801067c <WM__InsertWindowIntoList>:
 801067c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010680:	4606      	mov	r6, r0
 8010682:	460c      	mov	r4, r1
 8010684:	2900      	cmp	r1, #0
 8010686:	d04c      	beq.n	8010722 <WM__InsertWindowIntoList+0xa6>
 8010688:	f7fa f962 	bl	800a950 <GUI_ALLOC_LockH>
 801068c:	2300      	movs	r3, #0
 801068e:	6184      	str	r4, [r0, #24]
 8010690:	9001      	str	r0, [sp, #4]
 8010692:	6203      	str	r3, [r0, #32]
 8010694:	4620      	mov	r0, r4
 8010696:	f7fa f95b 	bl	800a950 <GUI_ALLOC_LockH>
 801069a:	ac04      	add	r4, sp, #16
 801069c:	69c7      	ldr	r7, [r0, #28]
 801069e:	f844 0d08 	str.w	r0, [r4, #-8]!
 80106a2:	b92f      	cbnz	r7, 80106b0 <WM__InsertWindowIntoList+0x34>
 80106a4:	61c6      	str	r6, [r0, #28]
 80106a6:	a801      	add	r0, sp, #4
 80106a8:	f7fa f960 	bl	800a96c <GUI_ALLOC_UnlockH>
 80106ac:	4620      	mov	r0, r4
 80106ae:	e036      	b.n	801071e <WM__InsertWindowIntoList+0xa2>
 80106b0:	9b01      	ldr	r3, [sp, #4]
 80106b2:	f10d 0810 	add.w	r8, sp, #16
 80106b6:	4638      	mov	r0, r7
 80106b8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 80106ba:	f7fa f949 	bl	800a950 <GUI_ALLOC_LockH>
 80106be:	f848 0d04 	str.w	r0, [r8, #-4]!
 80106c2:	f005 0508 	and.w	r5, r5, #8
 80106c6:	b975      	cbnz	r5, 80106e6 <WM__InsertWindowIntoList+0x6a>
 80106c8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80106ca:	071a      	lsls	r2, r3, #28
 80106cc:	d50b      	bpl.n	80106e6 <WM__InsertWindowIntoList+0x6a>
 80106ce:	9b01      	ldr	r3, [sp, #4]
 80106d0:	a801      	add	r0, sp, #4
 80106d2:	621f      	str	r7, [r3, #32]
 80106d4:	9b02      	ldr	r3, [sp, #8]
 80106d6:	61de      	str	r6, [r3, #28]
 80106d8:	f7fa f948 	bl	800a96c <GUI_ALLOC_UnlockH>
 80106dc:	4620      	mov	r0, r4
 80106de:	f7fa f945 	bl	800a96c <GUI_ALLOC_UnlockH>
 80106e2:	4640      	mov	r0, r8
 80106e4:	e01b      	b.n	801071e <WM__InsertWindowIntoList+0xa2>
 80106e6:	4620      	mov	r0, r4
 80106e8:	f7fa f940 	bl	800a96c <GUI_ALLOC_UnlockH>
 80106ec:	4640      	mov	r0, r8
 80106ee:	f7fa f93d 	bl	800a96c <GUI_ALLOC_UnlockH>
 80106f2:	4638      	mov	r0, r7
 80106f4:	f7fa f922 	bl	800a93c <GUI_ALLOC_h2p>
 80106f8:	9003      	str	r0, [sp, #12]
 80106fa:	9b03      	ldr	r3, [sp, #12]
 80106fc:	6a1c      	ldr	r4, [r3, #32]
 80106fe:	b90c      	cbnz	r4, 8010704 <WM__InsertWindowIntoList+0x88>
 8010700:	621e      	str	r6, [r3, #32]
 8010702:	e00b      	b.n	801071c <WM__InsertWindowIntoList+0xa0>
 8010704:	4620      	mov	r0, r4
 8010706:	f7fa f919 	bl	800a93c <GUI_ALLOC_h2p>
 801070a:	2d00      	cmp	r5, #0
 801070c:	d1f4      	bne.n	80106f8 <WM__InsertWindowIntoList+0x7c>
 801070e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010710:	071b      	lsls	r3, r3, #28
 8010712:	d5f1      	bpl.n	80106f8 <WM__InsertWindowIntoList+0x7c>
 8010714:	9b03      	ldr	r3, [sp, #12]
 8010716:	621e      	str	r6, [r3, #32]
 8010718:	9b01      	ldr	r3, [sp, #4]
 801071a:	621c      	str	r4, [r3, #32]
 801071c:	a801      	add	r0, sp, #4
 801071e:	f7fa f925 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010722:	b004      	add	sp, #16
 8010724:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010728 <WM__RemoveWindowFromList>:
 8010728:	b570      	push	{r4, r5, r6, lr}
 801072a:	4604      	mov	r4, r0
 801072c:	f7fa f906 	bl	800a93c <GUI_ALLOC_h2p>
 8010730:	4605      	mov	r5, r0
 8010732:	6980      	ldr	r0, [r0, #24]
 8010734:	b1a8      	cbz	r0, 8010762 <WM__RemoveWindowFromList+0x3a>
 8010736:	f7fa f901 	bl	800a93c <GUI_ALLOC_h2p>
 801073a:	69c3      	ldr	r3, [r0, #28]
 801073c:	4606      	mov	r6, r0
 801073e:	429c      	cmp	r4, r3
 8010740:	d105      	bne.n	801074e <WM__RemoveWindowFromList+0x26>
 8010742:	4620      	mov	r0, r4
 8010744:	f7fa f8fa 	bl	800a93c <GUI_ALLOC_h2p>
 8010748:	6a03      	ldr	r3, [r0, #32]
 801074a:	61f3      	str	r3, [r6, #28]
 801074c:	bd70      	pop	{r4, r5, r6, pc}
 801074e:	b143      	cbz	r3, 8010762 <WM__RemoveWindowFromList+0x3a>
 8010750:	4618      	mov	r0, r3
 8010752:	f7fa f8f3 	bl	800a93c <GUI_ALLOC_h2p>
 8010756:	6a03      	ldr	r3, [r0, #32]
 8010758:	429c      	cmp	r4, r3
 801075a:	d1f8      	bne.n	801074e <WM__RemoveWindowFromList+0x26>
 801075c:	6a2b      	ldr	r3, [r5, #32]
 801075e:	6203      	str	r3, [r0, #32]
 8010760:	bd70      	pop	{r4, r5, r6, pc}
 8010762:	bd70      	pop	{r4, r5, r6, pc}

08010764 <WM__Client2Screen>:
 8010764:	4603      	mov	r3, r0
 8010766:	4608      	mov	r0, r1
 8010768:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801076c:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010770:	f7fa bc07 	b.w	800af82 <GUI_MoveRect>

08010774 <_SetClipRectUserIntersect>:
 8010774:	4b11      	ldr	r3, [pc, #68]	; (80107bc <_SetClipRectUserIntersect+0x48>)
 8010776:	b530      	push	{r4, r5, lr}
 8010778:	681c      	ldr	r4, [r3, #0]
 801077a:	b085      	sub	sp, #20
 801077c:	4605      	mov	r5, r0
 801077e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8010780:	b1ba      	cbz	r2, 80107b2 <_SetClipRectUserIntersect+0x3e>
 8010782:	6810      	ldr	r0, [r2, #0]
 8010784:	ab02      	add	r3, sp, #8
 8010786:	6851      	ldr	r1, [r2, #4]
 8010788:	c303      	stmia	r3!, {r0, r1}
 801078a:	4b0d      	ldr	r3, [pc, #52]	; (80107c0 <_SetClipRectUserIntersect+0x4c>)
 801078c:	6818      	ldr	r0, [r3, #0]
 801078e:	b900      	cbnz	r0, 8010792 <_SetClipRectUserIntersect+0x1e>
 8010790:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8010792:	ac04      	add	r4, sp, #16
 8010794:	f7fa f8dc 	bl	800a950 <GUI_ALLOC_LockH>
 8010798:	a902      	add	r1, sp, #8
 801079a:	f844 0d0c 	str.w	r0, [r4, #-12]!
 801079e:	f7ff ffe1 	bl	8010764 <WM__Client2Screen>
 80107a2:	4620      	mov	r0, r4
 80107a4:	f7fa f8e2 	bl	800a96c <GUI_ALLOC_UnlockH>
 80107a8:	a802      	add	r0, sp, #8
 80107aa:	4629      	mov	r1, r5
 80107ac:	f7fb fc6e 	bl	800c08c <GUI__IntersectRect>
 80107b0:	a802      	add	r0, sp, #8
 80107b2:	f003 fc21 	bl	8013ff8 <LCD_SetClipRectEx>
 80107b6:	b005      	add	sp, #20
 80107b8:	bd30      	pop	{r4, r5, pc}
 80107ba:	bf00      	nop
 80107bc:	2000003c 	.word	0x2000003c
 80107c0:	2002db28 	.word	0x2002db28

080107c4 <WM__ActivateClipRect>:
 80107c4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80107c6:	4b0e      	ldr	r3, [pc, #56]	; (8010800 <WM__ActivateClipRect+0x3c>)
 80107c8:	681b      	ldr	r3, [r3, #0]
 80107ca:	f893 2054 	ldrb.w	r2, [r3, #84]	; 0x54
 80107ce:	b10a      	cbz	r2, 80107d4 <WM__ActivateClipRect+0x10>
 80107d0:	480c      	ldr	r0, [pc, #48]	; (8010804 <WM__ActivateClipRect+0x40>)
 80107d2:	e011      	b.n	80107f8 <WM__ActivateClipRect+0x34>
 80107d4:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80107d6:	ac02      	add	r4, sp, #8
 80107d8:	f7fa f8ba 	bl	800a950 <GUI_ALLOC_LockH>
 80107dc:	9001      	str	r0, [sp, #4]
 80107de:	c803      	ldmia	r0, {r0, r1}
 80107e0:	e884 0003 	stmia.w	r4, {r0, r1}
 80107e4:	a801      	add	r0, sp, #4
 80107e6:	f7fa f8c1 	bl	800a96c <GUI_ALLOC_UnlockH>
 80107ea:	4b07      	ldr	r3, [pc, #28]	; (8010808 <WM__ActivateClipRect+0x44>)
 80107ec:	6819      	ldr	r1, [r3, #0]
 80107ee:	b111      	cbz	r1, 80107f6 <WM__ActivateClipRect+0x32>
 80107f0:	4620      	mov	r0, r4
 80107f2:	f7ff ff17 	bl	8010624 <WM__ClipAtParentBorders>
 80107f6:	4620      	mov	r0, r4
 80107f8:	f7ff ffbc 	bl	8010774 <_SetClipRectUserIntersect>
 80107fc:	b004      	add	sp, #16
 80107fe:	bd10      	pop	{r4, pc}
 8010800:	2000003c 	.word	0x2000003c
 8010804:	20000d48 	.word	0x20000d48
 8010808:	2002db28 	.word	0x2002db28

0801080c <WM__IsWindow>:
 801080c:	4b06      	ldr	r3, [pc, #24]	; (8010828 <WM__IsWindow+0x1c>)
 801080e:	b510      	push	{r4, lr}
 8010810:	4604      	mov	r4, r0
 8010812:	6818      	ldr	r0, [r3, #0]
 8010814:	b128      	cbz	r0, 8010822 <WM__IsWindow+0x16>
 8010816:	42a0      	cmp	r0, r4
 8010818:	d004      	beq.n	8010824 <WM__IsWindow+0x18>
 801081a:	f7fa f88f 	bl	800a93c <GUI_ALLOC_h2p>
 801081e:	6940      	ldr	r0, [r0, #20]
 8010820:	e7f8      	b.n	8010814 <WM__IsWindow+0x8>
 8010822:	bd10      	pop	{r4, pc}
 8010824:	2001      	movs	r0, #1
 8010826:	bd10      	pop	{r4, pc}
 8010828:	2002db48 	.word	0x2002db48

0801082c <WM__InvalidateDrawAndDescs>:
 801082c:	b513      	push	{r0, r1, r4, lr}
 801082e:	4604      	mov	r4, r0
 8010830:	b300      	cbz	r0, 8010874 <WM__InvalidateDrawAndDescs+0x48>
 8010832:	f7fa f88d 	bl	800a950 <GUI_ALLOC_LockH>
 8010836:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010838:	9001      	str	r0, [sp, #4]
 801083a:	079b      	lsls	r3, r3, #30
 801083c:	d517      	bpl.n	801086e <WM__InvalidateDrawAndDescs+0x42>
 801083e:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8010840:	b140      	cbz	r0, 8010854 <WM__InvalidateDrawAndDescs+0x28>
 8010842:	4b0d      	ldr	r3, [pc, #52]	; (8010878 <WM__InvalidateDrawAndDescs+0x4c>)
 8010844:	681b      	ldr	r3, [r3, #0]
 8010846:	429c      	cmp	r4, r3
 8010848:	d004      	beq.n	8010854 <WM__InvalidateDrawAndDescs+0x28>
 801084a:	f003 fcb1 	bl	80141b0 <GUI_MEMDEV_Delete>
 801084e:	2200      	movs	r2, #0
 8010850:	9b01      	ldr	r3, [sp, #4]
 8010852:	625a      	str	r2, [r3, #36]	; 0x24
 8010854:	4620      	mov	r0, r4
 8010856:	f000 fedd 	bl	8011614 <WM_GetFirstChild>
 801085a:	4604      	mov	r4, r0
 801085c:	b13c      	cbz	r4, 801086e <WM__InvalidateDrawAndDescs+0x42>
 801085e:	4620      	mov	r0, r4
 8010860:	f7ff ffe4 	bl	801082c <WM__InvalidateDrawAndDescs>
 8010864:	4620      	mov	r0, r4
 8010866:	f7fa f869 	bl	800a93c <GUI_ALLOC_h2p>
 801086a:	6a04      	ldr	r4, [r0, #32]
 801086c:	e7f6      	b.n	801085c <WM__InvalidateDrawAndDescs+0x30>
 801086e:	a801      	add	r0, sp, #4
 8010870:	f7fa f87c 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010874:	b002      	add	sp, #8
 8010876:	bd10      	pop	{r4, pc}
 8010878:	2002db78 	.word	0x2002db78

0801087c <WM__RectIsNZ>:
 801087c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010880:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010884:	429a      	cmp	r2, r3
 8010886:	dc08      	bgt.n	801089a <WM__RectIsNZ+0x1e>
 8010888:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801088c:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010890:	4283      	cmp	r3, r0
 8010892:	bfcc      	ite	gt
 8010894:	2000      	movgt	r0, #0
 8010896:	2001      	movle	r0, #1
 8010898:	4770      	bx	lr
 801089a:	2000      	movs	r0, #0
 801089c:	4770      	bx	lr

0801089e <WM_SendMessage>:
 801089e:	b108      	cbz	r0, 80108a4 <WM_SendMessage+0x6>
 80108a0:	f001 bd68 	b.w	8012374 <WM__SendMessage>
 80108a4:	4770      	bx	lr

080108a6 <WM__SendMsgNoData>:
 80108a6:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80108a8:	ab04      	add	r3, sp, #16
 80108aa:	9001      	str	r0, [sp, #4]
 80108ac:	f843 1d10 	str.w	r1, [r3, #-16]!
 80108b0:	4619      	mov	r1, r3
 80108b2:	f001 fd5f 	bl	8012374 <WM__SendMessage>
 80108b6:	b005      	add	sp, #20
 80108b8:	f85d fb04 	ldr.w	pc, [sp], #4

080108bc <WM__GetClientRectWin>:
 80108bc:	2300      	movs	r3, #0
 80108be:	804b      	strh	r3, [r1, #2]
 80108c0:	800b      	strh	r3, [r1, #0]
 80108c2:	8883      	ldrh	r3, [r0, #4]
 80108c4:	8802      	ldrh	r2, [r0, #0]
 80108c6:	1a9b      	subs	r3, r3, r2
 80108c8:	8842      	ldrh	r2, [r0, #2]
 80108ca:	808b      	strh	r3, [r1, #4]
 80108cc:	88c3      	ldrh	r3, [r0, #6]
 80108ce:	1a9b      	subs	r3, r3, r2
 80108d0:	80cb      	strh	r3, [r1, #6]
 80108d2:	4770      	bx	lr

080108d4 <WM__GetTopLevelLayer>:
 80108d4:	b510      	push	{r4, lr}
 80108d6:	4604      	mov	r4, r0
 80108d8:	f7fa f830 	bl	800a93c <GUI_ALLOC_h2p>
 80108dc:	6980      	ldr	r0, [r0, #24]
 80108de:	2800      	cmp	r0, #0
 80108e0:	d1f9      	bne.n	80108d6 <WM__GetTopLevelLayer+0x2>
 80108e2:	4b05      	ldr	r3, [pc, #20]	; (80108f8 <WM__GetTopLevelLayer+0x24>)
 80108e4:	681a      	ldr	r2, [r3, #0]
 80108e6:	4294      	cmp	r4, r2
 80108e8:	d005      	beq.n	80108f6 <WM__GetTopLevelLayer+0x22>
 80108ea:	6858      	ldr	r0, [r3, #4]
 80108ec:	4284      	cmp	r4, r0
 80108ee:	bf0c      	ite	eq
 80108f0:	2001      	moveq	r0, #1
 80108f2:	f04f 30ff 	movne.w	r0, #4294967295
 80108f6:	bd10      	pop	{r4, pc}
 80108f8:	2002db2c 	.word	0x2002db2c

080108fc <_Invalidate1Abs>:
 80108fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80108fe:	b085      	sub	sp, #20
 8010900:	460d      	mov	r5, r1
 8010902:	4606      	mov	r6, r0
 8010904:	4617      	mov	r7, r2
 8010906:	f7fa f819 	bl	800a93c <GUI_ALLOC_h2p>
 801090a:	6a81      	ldr	r1, [r0, #40]	; 0x28
 801090c:	9001      	str	r0, [sp, #4]
 801090e:	078b      	lsls	r3, r1, #30
 8010910:	d53e      	bpl.n	8010990 <_Invalidate1Abs+0x94>
 8010912:	4628      	mov	r0, r5
 8010914:	f7ff ffb2 	bl	801087c <WM__RectIsNZ>
 8010918:	2800      	cmp	r0, #0
 801091a:	d039      	beq.n	8010990 <_Invalidate1Abs+0x94>
 801091c:	f640 0301 	movw	r3, #2049	; 0x801
 8010920:	400b      	ands	r3, r1
 8010922:	2b01      	cmp	r3, #1
 8010924:	d034      	beq.n	8010990 <_Invalidate1Abs+0x94>
 8010926:	ac02      	add	r4, sp, #8
 8010928:	4630      	mov	r0, r6
 801092a:	f7fa f811 	bl	800a950 <GUI_ALLOC_LockH>
 801092e:	4629      	mov	r1, r5
 8010930:	4602      	mov	r2, r0
 8010932:	9001      	str	r0, [sp, #4]
 8010934:	4620      	mov	r0, r4
 8010936:	f7fb fbc6 	bl	800c0c6 <GUI__IntersectRects>
 801093a:	4620      	mov	r0, r4
 801093c:	f7ff ff9e 	bl	801087c <WM__RectIsNZ>
 8010940:	b318      	cbz	r0, 801098a <_Invalidate1Abs+0x8e>
 8010942:	9b01      	ldr	r3, [sp, #4]
 8010944:	f244 0120 	movw	r1, #16416	; 0x4020
 8010948:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 801094a:	f103 0508 	add.w	r5, r3, #8
 801094e:	4011      	ands	r1, r2
 8010950:	b129      	cbz	r1, 801095e <_Invalidate1Abs+0x62>
 8010952:	4622      	mov	r2, r4
 8010954:	4629      	mov	r1, r5
 8010956:	4628      	mov	r0, r5
 8010958:	f7fa fae8 	bl	800af2c <GUI_MergeRect>
 801095c:	e015      	b.n	801098a <_Invalidate1Abs+0x8e>
 801095e:	e894 0003 	ldmia.w	r4, {r0, r1}
 8010962:	433a      	orrs	r2, r7
 8010964:	e885 0003 	stmia.w	r5, {r0, r1}
 8010968:	629a      	str	r2, [r3, #40]	; 0x28
 801096a:	4630      	mov	r0, r6
 801096c:	4a09      	ldr	r2, [pc, #36]	; (8010994 <_Invalidate1Abs+0x98>)
 801096e:	8813      	ldrh	r3, [r2, #0]
 8010970:	3301      	adds	r3, #1
 8010972:	8013      	strh	r3, [r2, #0]
 8010974:	f7ff ffae 	bl	80108d4 <WM__GetTopLevelLayer>
 8010978:	4a07      	ldr	r2, [pc, #28]	; (8010998 <_Invalidate1Abs+0x9c>)
 801097a:	2301      	movs	r3, #1
 801097c:	fa03 f000 	lsl.w	r0, r3, r0
 8010980:	6813      	ldr	r3, [r2, #0]
 8010982:	4303      	orrs	r3, r0
 8010984:	6013      	str	r3, [r2, #0]
 8010986:	f7fb f8d1 	bl	800bb2c <GUI_SignalEvent>
 801098a:	a801      	add	r0, sp, #4
 801098c:	f7f9 ffee 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010990:	b005      	add	sp, #20
 8010992:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010994:	2002db44 	.word	0x2002db44
 8010998:	2002db54 	.word	0x2002db54

0801099c <WM__Invalidate1Abs>:
 801099c:	2220      	movs	r2, #32
 801099e:	f7ff bfad 	b.w	80108fc <_Invalidate1Abs>

080109a2 <WM_InvalidateWindowAndDescsEx>:
 80109a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80109a4:	460f      	mov	r7, r1
 80109a6:	b085      	sub	sp, #20
 80109a8:	4615      	mov	r5, r2
 80109aa:	4606      	mov	r6, r0
 80109ac:	b348      	cbz	r0, 8010a02 <WM_InvalidateWindowAndDescsEx+0x60>
 80109ae:	f7f9 ffcf 	bl	800a950 <GUI_ALLOC_LockH>
 80109b2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80109b4:	ac04      	add	r4, sp, #16
 80109b6:	4602      	mov	r2, r0
 80109b8:	079b      	lsls	r3, r3, #30
 80109ba:	f844 0d0c 	str.w	r0, [r4, #-12]!
 80109be:	d403      	bmi.n	80109c8 <WM_InvalidateWindowAndDescsEx+0x26>
 80109c0:	4620      	mov	r0, r4
 80109c2:	f7f9 ffd3 	bl	800a96c <GUI_ALLOC_UnlockH>
 80109c6:	e01c      	b.n	8010a02 <WM_InvalidateWindowAndDescsEx+0x60>
 80109c8:	4639      	mov	r1, r7
 80109ca:	a802      	add	r0, sp, #8
 80109cc:	f7fb fb7b 	bl	800c0c6 <GUI__IntersectRects>
 80109d0:	2800      	cmp	r0, #0
 80109d2:	d0f5      	beq.n	80109c0 <WM_InvalidateWindowAndDescsEx+0x1e>
 80109d4:	4620      	mov	r0, r4
 80109d6:	f7f9 ffc9 	bl	800a96c <GUI_ALLOC_UnlockH>
 80109da:	462a      	mov	r2, r5
 80109dc:	a902      	add	r1, sp, #8
 80109de:	4630      	mov	r0, r6
 80109e0:	f7ff ff8c 	bl	80108fc <_Invalidate1Abs>
 80109e4:	4630      	mov	r0, r6
 80109e6:	f000 fe15 	bl	8011614 <WM_GetFirstChild>
 80109ea:	4604      	mov	r4, r0
 80109ec:	b14c      	cbz	r4, 8010a02 <WM_InvalidateWindowAndDescsEx+0x60>
 80109ee:	4620      	mov	r0, r4
 80109f0:	462a      	mov	r2, r5
 80109f2:	a902      	add	r1, sp, #8
 80109f4:	f7ff ffd5 	bl	80109a2 <WM_InvalidateWindowAndDescsEx>
 80109f8:	4620      	mov	r0, r4
 80109fa:	f7f9 ff9f 	bl	800a93c <GUI_ALLOC_h2p>
 80109fe:	6a04      	ldr	r4, [r0, #32]
 8010a00:	e7f4      	b.n	80109ec <WM_InvalidateWindowAndDescsEx+0x4a>
 8010a02:	b005      	add	sp, #20
 8010a04:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010a06 <WM__InvalidateRect>:
 8010a06:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010a0a:	4680      	mov	r8, r0
 8010a0c:	4617      	mov	r7, r2
 8010a0e:	461d      	mov	r5, r3
 8010a10:	460c      	mov	r4, r1
 8010a12:	b381      	cbz	r1, 8010a76 <WM__InvalidateRect+0x70>
 8010a14:	4608      	mov	r0, r1
 8010a16:	f7f9 ff9b 	bl	800a950 <GUI_ALLOC_LockH>
 8010a1a:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8010a1c:	4602      	mov	r2, r0
 8010a1e:	9001      	str	r0, [sp, #4]
 8010a20:	07b3      	lsls	r3, r6, #30
 8010a22:	d525      	bpl.n	8010a70 <WM__InvalidateRect+0x6a>
 8010a24:	4641      	mov	r1, r8
 8010a26:	a802      	add	r0, sp, #8
 8010a28:	f7fb fb4d 	bl	800c0c6 <GUI__IntersectRects>
 8010a2c:	b300      	cbz	r0, 8010a70 <WM__InvalidateRect+0x6a>
 8010a2e:	f640 0301 	movw	r3, #2049	; 0x801
 8010a32:	4033      	ands	r3, r6
 8010a34:	2b01      	cmp	r3, #1
 8010a36:	d107      	bne.n	8010a48 <WM__InvalidateRect+0x42>
 8010a38:	9901      	ldr	r1, [sp, #4]
 8010a3a:	462b      	mov	r3, r5
 8010a3c:	a802      	add	r0, sp, #8
 8010a3e:	6a0a      	ldr	r2, [r1, #32]
 8010a40:	6989      	ldr	r1, [r1, #24]
 8010a42:	f7ff ffe0 	bl	8010a06 <WM__InvalidateRect>
 8010a46:	e004      	b.n	8010a52 <WM__InvalidateRect+0x4c>
 8010a48:	462a      	mov	r2, r5
 8010a4a:	a902      	add	r1, sp, #8
 8010a4c:	4620      	mov	r0, r4
 8010a4e:	f7ff ff55 	bl	80108fc <_Invalidate1Abs>
 8010a52:	9b01      	ldr	r3, [sp, #4]
 8010a54:	69dc      	ldr	r4, [r3, #28]
 8010a56:	b15c      	cbz	r4, 8010a70 <WM__InvalidateRect+0x6a>
 8010a58:	42bc      	cmp	r4, r7
 8010a5a:	d009      	beq.n	8010a70 <WM__InvalidateRect+0x6a>
 8010a5c:	4620      	mov	r0, r4
 8010a5e:	462a      	mov	r2, r5
 8010a60:	a902      	add	r1, sp, #8
 8010a62:	f7ff ff9e 	bl	80109a2 <WM_InvalidateWindowAndDescsEx>
 8010a66:	4620      	mov	r0, r4
 8010a68:	f7f9 ff68 	bl	800a93c <GUI_ALLOC_h2p>
 8010a6c:	6a04      	ldr	r4, [r0, #32]
 8010a6e:	e7f2      	b.n	8010a56 <WM__InvalidateRect+0x50>
 8010a70:	a801      	add	r0, sp, #4
 8010a72:	f7f9 ff7b 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010a76:	b004      	add	sp, #16
 8010a78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010a7c <WM__InvalidateParent>:
 8010a7c:	b570      	push	{r4, r5, r6, lr}
 8010a7e:	4605      	mov	r5, r0
 8010a80:	4608      	mov	r0, r1
 8010a82:	460c      	mov	r4, r1
 8010a84:	4616      	mov	r6, r2
 8010a86:	f7f9 ff59 	bl	800a93c <GUI_ALLOC_h2p>
 8010a8a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010a8c:	4632      	mov	r2, r6
 8010a8e:	4621      	mov	r1, r4
 8010a90:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8010a94:	4628      	mov	r0, r5
 8010a96:	bf14      	ite	ne
 8010a98:	f44f 4380 	movne.w	r3, #16384	; 0x4000
 8010a9c:	2320      	moveq	r3, #32
 8010a9e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010aa2:	f7ff bfb0 	b.w	8010a06 <WM__InvalidateRect>

08010aa6 <WM__InvalidateRectEx>:
 8010aa6:	2320      	movs	r3, #32
 8010aa8:	f7ff bfad 	b.w	8010a06 <WM__InvalidateRect>

08010aac <WM__DetachWindow>:
 8010aac:	b513      	push	{r0, r1, r4, lr}
 8010aae:	4604      	mov	r4, r0
 8010ab0:	f7f9 ff4e 	bl	800a950 <GUI_ALLOC_LockH>
 8010ab4:	6981      	ldr	r1, [r0, #24]
 8010ab6:	9001      	str	r0, [sp, #4]
 8010ab8:	b141      	cbz	r1, 8010acc <WM__DetachWindow+0x20>
 8010aba:	6a02      	ldr	r2, [r0, #32]
 8010abc:	f7ff fff3 	bl	8010aa6 <WM__InvalidateRectEx>
 8010ac0:	4620      	mov	r0, r4
 8010ac2:	f7ff fe31 	bl	8010728 <WM__RemoveWindowFromList>
 8010ac6:	2200      	movs	r2, #0
 8010ac8:	9b01      	ldr	r3, [sp, #4]
 8010aca:	619a      	str	r2, [r3, #24]
 8010acc:	a801      	add	r0, sp, #4
 8010ace:	f7f9 ff4d 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010ad2:	b002      	add	sp, #8
 8010ad4:	bd10      	pop	{r4, pc}

08010ad6 <WM_InvalidateRect>:
 8010ad6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010ad8:	460f      	mov	r7, r1
 8010ada:	b087      	sub	sp, #28
 8010adc:	4605      	mov	r5, r0
 8010ade:	2800      	cmp	r0, #0
 8010ae0:	d033      	beq.n	8010b4a <WM_InvalidateRect+0x74>
 8010ae2:	f7f9 ff35 	bl	800a950 <GUI_ALLOC_LockH>
 8010ae6:	6a86      	ldr	r6, [r0, #40]	; 0x28
 8010ae8:	9001      	str	r0, [sp, #4]
 8010aea:	07b2      	lsls	r2, r6, #30
 8010aec:	d52a      	bpl.n	8010b44 <WM_InvalidateRect+0x6e>
 8010aee:	ac04      	add	r4, sp, #16
 8010af0:	03f3      	lsls	r3, r6, #15
 8010af2:	c803      	ldmia	r0, {r0, r1}
 8010af4:	e884 0003 	stmia.w	r4, {r0, r1}
 8010af8:	d502      	bpl.n	8010b00 <WM_InvalidateRect+0x2a>
 8010afa:	4628      	mov	r0, r5
 8010afc:	f7ff fe96 	bl	801082c <WM__InvalidateDrawAndDescs>
 8010b00:	b15f      	cbz	r7, 8010b1a <WM_InvalidateRect+0x44>
 8010b02:	6838      	ldr	r0, [r7, #0]
 8010b04:	ab02      	add	r3, sp, #8
 8010b06:	6879      	ldr	r1, [r7, #4]
 8010b08:	c303      	stmia	r3!, {r0, r1}
 8010b0a:	a902      	add	r1, sp, #8
 8010b0c:	9801      	ldr	r0, [sp, #4]
 8010b0e:	f7ff fe29 	bl	8010764 <WM__Client2Screen>
 8010b12:	a902      	add	r1, sp, #8
 8010b14:	4620      	mov	r0, r4
 8010b16:	f7fb fab9 	bl	800c08c <GUI__IntersectRect>
 8010b1a:	4629      	mov	r1, r5
 8010b1c:	4620      	mov	r0, r4
 8010b1e:	f7ff fd81 	bl	8010624 <WM__ClipAtParentBorders>
 8010b22:	b178      	cbz	r0, 8010b44 <WM_InvalidateRect+0x6e>
 8010b24:	f640 0301 	movw	r3, #2049	; 0x801
 8010b28:	4033      	ands	r3, r6
 8010b2a:	2b01      	cmp	r3, #1
 8010b2c:	d106      	bne.n	8010b3c <WM_InvalidateRect+0x66>
 8010b2e:	9b01      	ldr	r3, [sp, #4]
 8010b30:	4620      	mov	r0, r4
 8010b32:	6a1a      	ldr	r2, [r3, #32]
 8010b34:	6999      	ldr	r1, [r3, #24]
 8010b36:	f7ff ffb6 	bl	8010aa6 <WM__InvalidateRectEx>
 8010b3a:	e003      	b.n	8010b44 <WM_InvalidateRect+0x6e>
 8010b3c:	4621      	mov	r1, r4
 8010b3e:	4628      	mov	r0, r5
 8010b40:	f7ff ff2c 	bl	801099c <WM__Invalidate1Abs>
 8010b44:	a801      	add	r0, sp, #4
 8010b46:	f7f9 ff11 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010b4a:	b007      	add	sp, #28
 8010b4c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010b4e <WM_InvalidateWindow>:
 8010b4e:	2100      	movs	r1, #0
 8010b50:	f7ff bfc1 	b.w	8010ad6 <WM_InvalidateRect>

08010b54 <WM__SelectTopLevelLayer>:
 8010b54:	b508      	push	{r3, lr}
 8010b56:	f7ff febd 	bl	80108d4 <WM__GetTopLevelLayer>
 8010b5a:	2800      	cmp	r0, #0
 8010b5c:	db03      	blt.n	8010b66 <WM__SelectTopLevelLayer+0x12>
 8010b5e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010b62:	f7fa bf73 	b.w	800ba4c <GUI_SelectLayer>
 8010b66:	bd08      	pop	{r3, pc}

08010b68 <WM_SelectWindow>:
 8010b68:	4b0d      	ldr	r3, [pc, #52]	; (8010ba0 <WM_SelectWindow+0x38>)
 8010b6a:	681a      	ldr	r2, [r3, #0]
 8010b6c:	b570      	push	{r4, r5, r6, lr}
 8010b6e:	6c96      	ldr	r6, [r2, #72]	; 0x48
 8010b70:	4604      	mov	r4, r0
 8010b72:	461d      	mov	r5, r3
 8010b74:	b908      	cbnz	r0, 8010b7a <WM_SelectWindow+0x12>
 8010b76:	4b0b      	ldr	r3, [pc, #44]	; (8010ba4 <WM_SelectWindow+0x3c>)
 8010b78:	681c      	ldr	r4, [r3, #0]
 8010b7a:	6494      	str	r4, [r2, #72]	; 0x48
 8010b7c:	4620      	mov	r0, r4
 8010b7e:	f7ff ffe9 	bl	8010b54 <WM__SelectTopLevelLayer>
 8010b82:	f7fb ff9b 	bl	800cabc <LCD_SetClipRectMax>
 8010b86:	4620      	mov	r0, r4
 8010b88:	f7f9 fed8 	bl	800a93c <GUI_ALLOC_h2p>
 8010b8c:	682b      	ldr	r3, [r5, #0]
 8010b8e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010b92:	64da      	str	r2, [r3, #76]	; 0x4c
 8010b94:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010b98:	4630      	mov	r0, r6
 8010b9a:	651a      	str	r2, [r3, #80]	; 0x50
 8010b9c:	bd70      	pop	{r4, r5, r6, pc}
 8010b9e:	bf00      	nop
 8010ba0:	2000003c 	.word	0x2000003c
 8010ba4:	2002db48 	.word	0x2002db48

08010ba8 <WM_CreateWindowAsChild>:
 8010ba8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bac:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8010bb0:	4698      	mov	r8, r3
 8010bb2:	4b4e      	ldr	r3, [pc, #312]	; (8010cec <WM_CreateWindowAsChild+0x144>)
 8010bb4:	4605      	mov	r5, r0
 8010bb6:	460e      	mov	r6, r1
 8010bb8:	4617      	mov	r7, r2
 8010bba:	f8d3 9000 	ldr.w	r9, [r3]
 8010bbe:	f1ba 0f00 	cmp.w	sl, #0
 8010bc2:	d128      	bne.n	8010c16 <WM_CreateWindowAsChild+0x6e>
 8010bc4:	4b4a      	ldr	r3, [pc, #296]	; (8010cf0 <WM_CreateWindowAsChild+0x148>)
 8010bc6:	881b      	ldrh	r3, [r3, #0]
 8010bc8:	b353      	cbz	r3, 8010c20 <WM_CreateWindowAsChild+0x78>
 8010bca:	4b4a      	ldr	r3, [pc, #296]	; (8010cf4 <WM_CreateWindowAsChild+0x14c>)
 8010bcc:	681b      	ldr	r3, [r3, #0]
 8010bce:	7c5a      	ldrb	r2, [r3, #17]
 8010bd0:	4b49      	ldr	r3, [pc, #292]	; (8010cf8 <WM_CreateWindowAsChild+0x150>)
 8010bd2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010bd6:	1c5a      	adds	r2, r3, #1
 8010bd8:	2a01      	cmp	r2, #1
 8010bda:	d921      	bls.n	8010c20 <WM_CreateWindowAsChild+0x78>
 8010bdc:	469a      	mov	sl, r3
 8010bde:	4650      	mov	r0, sl
 8010be0:	f7f9 feb6 	bl	800a950 <GUI_ALLOC_LockH>
 8010be4:	f9b0 1000 	ldrsh.w	r1, [r0]
 8010be8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010bec:	9001      	str	r0, [sp, #4]
 8010bee:	440d      	add	r5, r1
 8010bf0:	4416      	add	r6, r2
 8010bf2:	b91f      	cbnz	r7, 8010bfc <WM_CreateWindowAsChild+0x54>
 8010bf4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010bf8:	1a5f      	subs	r7, r3, r1
 8010bfa:	3701      	adds	r7, #1
 8010bfc:	f1b8 0f00 	cmp.w	r8, #0
 8010c00:	d105      	bne.n	8010c0e <WM_CreateWindowAsChild+0x66>
 8010c02:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8010c06:	ebc2 0803 	rsb	r8, r2, r3
 8010c0a:	f108 0801 	add.w	r8, r8, #1
 8010c0e:	a801      	add	r0, sp, #4
 8010c10:	f7f9 feac 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010c14:	e004      	b.n	8010c20 <WM_CreateWindowAsChild+0x78>
 8010c16:	f1ba 3fff 	cmp.w	sl, #4294967295
 8010c1a:	d1e0      	bne.n	8010bde <WM_CreateWindowAsChild+0x36>
 8010c1c:	f04f 0a00 	mov.w	sl, #0
 8010c20:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8010c22:	302c      	adds	r0, #44	; 0x2c
 8010c24:	f7fa f86c 	bl	800ad00 <GUI_ALLOC_AllocZero>
 8010c28:	4604      	mov	r4, r0
 8010c2a:	2800      	cmp	r0, #0
 8010c2c:	d059      	beq.n	8010ce2 <WM_CreateWindowAsChild+0x13a>
 8010c2e:	4a30      	ldr	r2, [pc, #192]	; (8010cf0 <WM_CreateWindowAsChild+0x148>)
 8010c30:	f10d 0b08 	add.w	fp, sp, #8
 8010c34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010c36:	ea49 0903 	orr.w	r9, r9, r3
 8010c3a:	8813      	ldrh	r3, [r2, #0]
 8010c3c:	3301      	adds	r3, #1
 8010c3e:	8013      	strh	r3, [r2, #0]
 8010c40:	f7f9 fe86 	bl	800a950 <GUI_ALLOC_LockH>
 8010c44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010c46:	f84b 0d08 	str.w	r0, [fp, #-8]!
 8010c4a:	6103      	str	r3, [r0, #16]
 8010c4c:	4b2b      	ldr	r3, [pc, #172]	; (8010cfc <WM_CreateWindowAsChild+0x154>)
 8010c4e:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8010c50:	8005      	strh	r5, [r0, #0]
 8010c52:	ea09 0303 	and.w	r3, r9, r3
 8010c56:	8046      	strh	r6, [r0, #2]
 8010c58:	443d      	add	r5, r7
 8010c5a:	4446      	add	r6, r8
 8010c5c:	4313      	orrs	r3, r2
 8010c5e:	3d01      	subs	r5, #1
 8010c60:	3e01      	subs	r6, #1
 8010c62:	6283      	str	r3, [r0, #40]	; 0x28
 8010c64:	8085      	strh	r5, [r0, #4]
 8010c66:	80c6      	strh	r6, [r0, #6]
 8010c68:	4658      	mov	r0, fp
 8010c6a:	f7f9 fe7f 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010c6e:	4b24      	ldr	r3, [pc, #144]	; (8010d00 <WM_CreateWindowAsChild+0x158>)
 8010c70:	6818      	ldr	r0, [r3, #0]
 8010c72:	b148      	cbz	r0, 8010c88 <WM_CreateWindowAsChild+0xe0>
 8010c74:	f7f9 fe62 	bl	800a93c <GUI_ALLOC_h2p>
 8010c78:	4605      	mov	r5, r0
 8010c7a:	4620      	mov	r0, r4
 8010c7c:	f7f9 fe5e 	bl	800a93c <GUI_ALLOC_h2p>
 8010c80:	696b      	ldr	r3, [r5, #20]
 8010c82:	6143      	str	r3, [r0, #20]
 8010c84:	616c      	str	r4, [r5, #20]
 8010c86:	e000      	b.n	8010c8a <WM_CreateWindowAsChild+0xe2>
 8010c88:	601c      	str	r4, [r3, #0]
 8010c8a:	4651      	mov	r1, sl
 8010c8c:	4620      	mov	r0, r4
 8010c8e:	f7ff fcf5 	bl	801067c <WM__InsertWindowIntoList>
 8010c92:	f019 0f20 	tst.w	r9, #32
 8010c96:	d002      	beq.n	8010c9e <WM_CreateWindowAsChild+0xf6>
 8010c98:	4620      	mov	r0, r4
 8010c9a:	f7ff ff65 	bl	8010b68 <WM_SelectWindow>
 8010c9e:	f019 0f01 	tst.w	r9, #1
 8010ca2:	bf1f      	itttt	ne
 8010ca4:	4a17      	ldrne	r2, [pc, #92]	; (8010d04 <WM_CreateWindowAsChild+0x15c>)
 8010ca6:	6813      	ldrne	r3, [r2, #0]
 8010ca8:	3301      	addne	r3, #1
 8010caa:	6013      	strne	r3, [r2, #0]
 8010cac:	f019 0f40 	tst.w	r9, #64	; 0x40
 8010cb0:	d002      	beq.n	8010cb8 <WM_CreateWindowAsChild+0x110>
 8010cb2:	4620      	mov	r0, r4
 8010cb4:	f000 fd2c 	bl	8011710 <WM_BringToBottom>
 8010cb8:	f019 0f02 	tst.w	r9, #2
 8010cbc:	d00d      	beq.n	8010cda <WM_CreateWindowAsChild+0x132>
 8010cbe:	4620      	mov	r0, r4
 8010cc0:	f7f9 fe46 	bl	800a950 <GUI_ALLOC_LockH>
 8010cc4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010cc6:	9000      	str	r0, [sp, #0]
 8010cc8:	f043 0302 	orr.w	r3, r3, #2
 8010ccc:	6283      	str	r3, [r0, #40]	; 0x28
 8010cce:	4658      	mov	r0, fp
 8010cd0:	f7f9 fe4c 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010cd4:	4620      	mov	r0, r4
 8010cd6:	f7ff ff3a 	bl	8010b4e <WM_InvalidateWindow>
 8010cda:	2101      	movs	r1, #1
 8010cdc:	4620      	mov	r0, r4
 8010cde:	f7ff fde2 	bl	80108a6 <WM__SendMsgNoData>
 8010ce2:	4620      	mov	r0, r4
 8010ce4:	b003      	add	sp, #12
 8010ce6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010cea:	bf00      	nop
 8010cec:	2002db5c 	.word	0x2002db5c
 8010cf0:	2002db24 	.word	0x2002db24
 8010cf4:	2000003c 	.word	0x2000003c
 8010cf8:	2002db2c 	.word	0x2002db2c
 8010cfc:	003f3f9f 	.word	0x003f3f9f
 8010d00:	2002db48 	.word	0x2002db48
 8010d04:	2002db7c 	.word	0x2002db7c

08010d08 <WM_DeleteWindow>:
 8010d08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010d0a:	4604      	mov	r4, r0
 8010d0c:	2800      	cmp	r0, #0
 8010d0e:	d071      	beq.n	8010df4 <WM_DeleteWindow+0xec>
 8010d10:	f7ff fd7c 	bl	801080c <WM__IsWindow>
 8010d14:	2800      	cmp	r0, #0
 8010d16:	d06d      	beq.n	8010df4 <WM_DeleteWindow+0xec>
 8010d18:	4620      	mov	r0, r4
 8010d1a:	f7ff fddb 	bl	80108d4 <WM__GetTopLevelLayer>
 8010d1e:	210b      	movs	r1, #11
 8010d20:	4605      	mov	r5, r0
 8010d22:	4620      	mov	r0, r4
 8010d24:	f7ff fdbf 	bl	80108a6 <WM__SendMsgNoData>
 8010d28:	4620      	mov	r0, r4
 8010d2a:	f001 f850 	bl	8011dce <WM__DeleteAssocTimer>
 8010d2e:	4620      	mov	r0, r4
 8010d30:	f7f9 fe0e 	bl	800a950 <GUI_ALLOC_LockH>
 8010d34:	9001      	str	r0, [sp, #4]
 8010d36:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8010d38:	b108      	cbz	r0, 8010d3e <WM_DeleteWindow+0x36>
 8010d3a:	f003 fa39 	bl	80141b0 <GUI_MEMDEV_Delete>
 8010d3e:	2100      	movs	r1, #0
 8010d40:	4b2d      	ldr	r3, [pc, #180]	; (8010df8 <WM_DeleteWindow+0xf0>)
 8010d42:	4a2e      	ldr	r2, [pc, #184]	; (8010dfc <WM_DeleteWindow+0xf4>)
 8010d44:	6099      	str	r1, [r3, #8]
 8010d46:	4b2e      	ldr	r3, [pc, #184]	; (8010e00 <WM_DeleteWindow+0xf8>)
 8010d48:	681b      	ldr	r3, [r3, #0]
 8010d4a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8010d4e:	4284      	cmp	r4, r0
 8010d50:	bf08      	it	eq
 8010d52:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 8010d56:	4a2b      	ldr	r2, [pc, #172]	; (8010e04 <WM_DeleteWindow+0xfc>)
 8010d58:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8010d5c:	428c      	cmp	r4, r1
 8010d5e:	bf04      	itt	eq
 8010d60:	2100      	moveq	r1, #0
 8010d62:	f842 1023 	streq.w	r1, [r2, r3, lsl #2]
 8010d66:	2200      	movs	r2, #0
 8010d68:	4b27      	ldr	r3, [pc, #156]	; (8010e08 <WM_DeleteWindow+0x100>)
 8010d6a:	681b      	ldr	r3, [r3, #0]
 8010d6c:	b12b      	cbz	r3, 8010d7a <WM_DeleteWindow+0x72>
 8010d6e:	6859      	ldr	r1, [r3, #4]
 8010d70:	428c      	cmp	r4, r1
 8010d72:	d100      	bne.n	8010d76 <WM_DeleteWindow+0x6e>
 8010d74:	605a      	str	r2, [r3, #4]
 8010d76:	681b      	ldr	r3, [r3, #0]
 8010d78:	e7f8      	b.n	8010d6c <WM_DeleteWindow+0x64>
 8010d7a:	2107      	movs	r1, #7
 8010d7c:	4620      	mov	r0, r4
 8010d7e:	f000 fdf6 	bl	801196e <WM_NotifyParent>
 8010d82:	9e01      	ldr	r6, [sp, #4]
 8010d84:	69f0      	ldr	r0, [r6, #28]
 8010d86:	f7ff ffbf 	bl	8010d08 <WM_DeleteWindow>
 8010d8a:	69f3      	ldr	r3, [r6, #28]
 8010d8c:	2b00      	cmp	r3, #0
 8010d8e:	d1f9      	bne.n	8010d84 <WM_DeleteWindow+0x7c>
 8010d90:	4620      	mov	r0, r4
 8010d92:	f7ff fe8b 	bl	8010aac <WM__DetachWindow>
 8010d96:	4b1d      	ldr	r3, [pc, #116]	; (8010e0c <WM_DeleteWindow+0x104>)
 8010d98:	6818      	ldr	r0, [r3, #0]
 8010d9a:	b150      	cbz	r0, 8010db2 <WM_DeleteWindow+0xaa>
 8010d9c:	f7f9 fdce 	bl	800a93c <GUI_ALLOC_h2p>
 8010da0:	4606      	mov	r6, r0
 8010da2:	6940      	ldr	r0, [r0, #20]
 8010da4:	4284      	cmp	r4, r0
 8010da6:	d1f8      	bne.n	8010d9a <WM_DeleteWindow+0x92>
 8010da8:	4620      	mov	r0, r4
 8010daa:	f7f9 fdc7 	bl	800a93c <GUI_ALLOC_h2p>
 8010dae:	6943      	ldr	r3, [r0, #20]
 8010db0:	6173      	str	r3, [r6, #20]
 8010db2:	9b01      	ldr	r3, [sp, #4]
 8010db4:	a801      	add	r0, sp, #4
 8010db6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8010db8:	07d1      	lsls	r1, r2, #31
 8010dba:	bf41      	itttt	mi
 8010dbc:	4914      	ldrmi	r1, [pc, #80]	; (8010e10 <WM_DeleteWindow+0x108>)
 8010dbe:	680b      	ldrmi	r3, [r1, #0]
 8010dc0:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8010dc4:	600b      	strmi	r3, [r1, #0]
 8010dc6:	0693      	lsls	r3, r2, #26
 8010dc8:	bf41      	itttt	mi
 8010dca:	4a12      	ldrmi	r2, [pc, #72]	; (8010e14 <WM_DeleteWindow+0x10c>)
 8010dcc:	8813      	ldrhmi	r3, [r2, #0]
 8010dce:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8010dd2:	8013      	strhmi	r3, [r2, #0]
 8010dd4:	f7f9 fdca 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010dd8:	4a0f      	ldr	r2, [pc, #60]	; (8010e18 <WM_DeleteWindow+0x110>)
 8010dda:	4620      	mov	r0, r4
 8010ddc:	8813      	ldrh	r3, [r2, #0]
 8010dde:	3b01      	subs	r3, #1
 8010de0:	8013      	strh	r3, [r2, #0]
 8010de2:	f7f9 fdef 	bl	800a9c4 <GUI_ALLOC_Free>
 8010de6:	2d00      	cmp	r5, #0
 8010de8:	db04      	blt.n	8010df4 <WM_DeleteWindow+0xec>
 8010dea:	4b0c      	ldr	r3, [pc, #48]	; (8010e1c <WM_DeleteWindow+0x114>)
 8010dec:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8010df0:	f7ff feba 	bl	8010b68 <WM_SelectWindow>
 8010df4:	b002      	add	sp, #8
 8010df6:	bd70      	pop	{r4, r5, r6, pc}
 8010df8:	20000d34 	.word	0x20000d34
 8010dfc:	2002db3c 	.word	0x2002db3c
 8010e00:	2002db4c 	.word	0x2002db4c
 8010e04:	2002db70 	.word	0x2002db70
 8010e08:	2002db68 	.word	0x2002db68
 8010e0c:	2002db48 	.word	0x2002db48
 8010e10:	2002db7c 	.word	0x2002db7c
 8010e14:	2002db44 	.word	0x2002db44
 8010e18:	2002db24 	.word	0x2002db24
 8010e1c:	2002db2c 	.word	0x2002db2c

08010e20 <_Exec1Input>:
 8010e20:	4b1b      	ldr	r3, [pc, #108]	; (8010e90 <_Exec1Input+0x70>)
 8010e22:	685a      	ldr	r2, [r3, #4]
 8010e24:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010e26:	461d      	mov	r5, r3
 8010e28:	b1ca      	cbz	r2, 8010e5e <_Exec1Input+0x3e>
 8010e2a:	4b1a      	ldr	r3, [pc, #104]	; (8010e94 <_Exec1Input+0x74>)
 8010e2c:	681c      	ldr	r4, [r3, #0]
 8010e2e:	b1ac      	cbz	r4, 8010e5c <_Exec1Input+0x3c>
 8010e30:	4620      	mov	r0, r4
 8010e32:	f7f9 fd8d 	bl	800a950 <GUI_ALLOC_LockH>
 8010e36:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010e38:	9001      	str	r0, [sp, #4]
 8010e3a:	f413 4f00 	tst.w	r3, #32768	; 0x8000
 8010e3e:	6946      	ldr	r6, [r0, #20]
 8010e40:	d007      	beq.n	8010e52 <_Exec1Input+0x32>
 8010e42:	a801      	add	r0, sp, #4
 8010e44:	f7f9 fd92 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010e48:	4620      	mov	r0, r4
 8010e4a:	f7ff ff5d 	bl	8010d08 <WM_DeleteWindow>
 8010e4e:	4634      	mov	r4, r6
 8010e50:	e7ed      	b.n	8010e2e <_Exec1Input+0xe>
 8010e52:	a801      	add	r0, sp, #4
 8010e54:	4634      	mov	r4, r6
 8010e56:	f7f9 fd89 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010e5a:	e7e8      	b.n	8010e2e <_Exec1Input+0xe>
 8010e5c:	606c      	str	r4, [r5, #4]
 8010e5e:	4b0e      	ldr	r3, [pc, #56]	; (8010e98 <_Exec1Input+0x78>)
 8010e60:	681b      	ldr	r3, [r3, #0]
 8010e62:	b103      	cbz	r3, 8010e66 <_Exec1Input+0x46>
 8010e64:	4798      	blx	r3
 8010e66:	4b0d      	ldr	r3, [pc, #52]	; (8010e9c <_Exec1Input+0x7c>)
 8010e68:	681b      	ldr	r3, [r3, #0]
 8010e6a:	b953      	cbnz	r3, 8010e82 <_Exec1Input+0x62>
 8010e6c:	4b0c      	ldr	r3, [pc, #48]	; (8010ea0 <_Exec1Input+0x80>)
 8010e6e:	681b      	ldr	r3, [r3, #0]
 8010e70:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8010e74:	b148      	cbz	r0, 8010e8a <_Exec1Input+0x6a>
 8010e76:	f7fa fdbd 	bl	800b9f4 <GUI_PollKeyMsg>
 8010e7a:	3000      	adds	r0, #0
 8010e7c:	bf18      	it	ne
 8010e7e:	2001      	movne	r0, #1
 8010e80:	e003      	b.n	8010e8a <_Exec1Input+0x6a>
 8010e82:	4798      	blx	r3
 8010e84:	2800      	cmp	r0, #0
 8010e86:	d0f1      	beq.n	8010e6c <_Exec1Input+0x4c>
 8010e88:	2001      	movs	r0, #1
 8010e8a:	b002      	add	sp, #8
 8010e8c:	bd70      	pop	{r4, r5, r6, pc}
 8010e8e:	bf00      	nop
 8010e90:	20000d34 	.word	0x20000d34
 8010e94:	2002db48 	.word	0x2002db48
 8010e98:	2002db34 	.word	0x2002db34
 8010e9c:	2002db14 	.word	0x2002db14
 8010ea0:	2000003c 	.word	0x2000003c

08010ea4 <WM_GetActiveWindow>:
 8010ea4:	4b01      	ldr	r3, [pc, #4]	; (8010eac <WM_GetActiveWindow+0x8>)
 8010ea6:	681b      	ldr	r3, [r3, #0]
 8010ea8:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8010eaa:	4770      	bx	lr
 8010eac:	2000003c 	.word	0x2000003c

08010eb0 <WM__GetNextIVR>:
 8010eb0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010eb4:	4f5d      	ldr	r7, [pc, #372]	; (801102c <WM__GetNextIVR+0x17c>)
 8010eb6:	683b      	ldr	r3, [r7, #0]
 8010eb8:	f893 0054 	ldrb.w	r0, [r3, #84]	; 0x54
 8010ebc:	2800      	cmp	r0, #0
 8010ebe:	f000 80b1 	beq.w	8011024 <WM__GetNextIVR+0x174>
 8010ec2:	4a5b      	ldr	r2, [pc, #364]	; (8011030 <WM__GetNextIVR+0x180>)
 8010ec4:	6a13      	ldr	r3, [r2, #32]
 8010ec6:	4614      	mov	r4, r2
 8010ec8:	2b01      	cmp	r3, #1
 8010eca:	dd03      	ble.n	8010ed4 <WM__GetNextIVR+0x24>
 8010ecc:	3b01      	subs	r3, #1
 8010ece:	2000      	movs	r0, #0
 8010ed0:	6213      	str	r3, [r2, #32]
 8010ed2:	e0a7      	b.n	8011024 <WM__GetNextIVR+0x174>
 8010ed4:	69d3      	ldr	r3, [r2, #28]
 8010ed6:	f102 0614 	add.w	r6, r2, #20
 8010eda:	ad02      	add	r5, sp, #8
 8010edc:	3301      	adds	r3, #1
 8010ede:	e896 0003 	ldmia.w	r6, {r0, r1}
 8010ee2:	61d3      	str	r3, [r2, #28]
 8010ee4:	e885 0003 	stmia.w	r5, {r0, r1}
 8010ee8:	b923      	cbnz	r3, 8010ef4 <WM__GetNextIVR+0x44>
 8010eea:	8993      	ldrh	r3, [r2, #12]
 8010eec:	f8ad 3008 	strh.w	r3, [sp, #8]
 8010ef0:	89d3      	ldrh	r3, [r2, #14]
 8010ef2:	e010      	b.n	8010f16 <WM__GetNextIVR+0x66>
 8010ef4:	8b13      	ldrh	r3, [r2, #24]
 8010ef6:	8ad2      	ldrh	r2, [r2, #22]
 8010ef8:	3301      	adds	r3, #1
 8010efa:	f8ad 200a 	strh.w	r2, [sp, #10]
 8010efe:	b21b      	sxth	r3, r3
 8010f00:	f9b4 2010 	ldrsh.w	r2, [r4, #16]
 8010f04:	429a      	cmp	r2, r3
 8010f06:	f8ad 3008 	strh.w	r3, [sp, #8]
 8010f0a:	da06      	bge.n	8010f1a <WM__GetNextIVR+0x6a>
 8010f0c:	89a3      	ldrh	r3, [r4, #12]
 8010f0e:	f8ad 3008 	strh.w	r3, [sp, #8]
 8010f12:	8b63      	ldrh	r3, [r4, #26]
 8010f14:	3301      	adds	r3, #1
 8010f16:	f8ad 300a 	strh.w	r3, [sp, #10]
 8010f1a:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8010f1e:	f9b4 3012 	ldrsh.w	r3, [r4, #18]
 8010f22:	f8df 810c 	ldr.w	r8, [pc, #268]	; 8011030 <WM__GetNextIVR+0x180>
 8010f26:	429a      	cmp	r2, r3
 8010f28:	dd04      	ble.n	8010f34 <WM__GetNextIVR+0x84>
 8010f2a:	6a23      	ldr	r3, [r4, #32]
 8010f2c:	2000      	movs	r0, #0
 8010f2e:	3b01      	subs	r3, #1
 8010f30:	6223      	str	r3, [r4, #32]
 8010f32:	e077      	b.n	8011024 <WM__GetNextIVR+0x174>
 8010f34:	683b      	ldr	r3, [r7, #0]
 8010f36:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8010f38:	f7f9 fd0a 	bl	800a950 <GUI_ALLOC_LockH>
 8010f3c:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8010f40:	f9b8 300c 	ldrsh.w	r3, [r8, #12]
 8010f44:	9001      	str	r0, [sp, #4]
 8010f46:	429a      	cmp	r2, r3
 8010f48:	d11c      	bne.n	8010f84 <WM__GetNextIVR+0xd4>
 8010f4a:	f8b8 3012 	ldrh.w	r3, [r8, #18]
 8010f4e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010f52:	f8b8 3010 	ldrh.w	r3, [r8, #16]
 8010f56:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010f5a:	4b34      	ldr	r3, [pc, #208]	; (801102c <WM__GetNextIVR+0x17c>)
 8010f5c:	681b      	ldr	r3, [r3, #0]
 8010f5e:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8010f60:	b15a      	cbz	r2, 8010f7a <WM__GetNextIVR+0xca>
 8010f62:	4610      	mov	r0, r2
 8010f64:	f7f9 fcea 	bl	800a93c <GUI_ALLOC_h2p>
 8010f68:	4680      	mov	r8, r0
 8010f6a:	2200      	movs	r2, #0
 8010f6c:	4629      	mov	r1, r5
 8010f6e:	6a00      	ldr	r0, [r0, #32]
 8010f70:	f7ff f974 	bl	801025c <_Findy1>
 8010f74:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8010f78:	e7f2      	b.n	8010f60 <WM__GetNextIVR+0xb0>
 8010f7a:	9b01      	ldr	r3, [sp, #4]
 8010f7c:	4629      	mov	r1, r5
 8010f7e:	69d8      	ldr	r0, [r3, #28]
 8010f80:	f7ff f96c 	bl	801025c <_Findy1>
 8010f84:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010f88:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010f8c:	683b      	ldr	r3, [r7, #0]
 8010f8e:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8010f90:	b16a      	cbz	r2, 8010fae <WM__GetNextIVR+0xfe>
 8010f92:	4610      	mov	r0, r2
 8010f94:	f7f9 fcd2 	bl	800a93c <GUI_ALLOC_h2p>
 8010f98:	2200      	movs	r2, #0
 8010f9a:	4680      	mov	r8, r0
 8010f9c:	4629      	mov	r1, r5
 8010f9e:	6a00      	ldr	r0, [r0, #32]
 8010fa0:	f7ff f9af 	bl	8010302 <_Findx0>
 8010fa4:	2800      	cmp	r0, #0
 8010fa6:	d1ed      	bne.n	8010f84 <WM__GetNextIVR+0xd4>
 8010fa8:	f8d8 2018 	ldr.w	r2, [r8, #24]
 8010fac:	e7f0      	b.n	8010f90 <WM__GetNextIVR+0xe0>
 8010fae:	9b01      	ldr	r3, [sp, #4]
 8010fb0:	4629      	mov	r1, r5
 8010fb2:	69d8      	ldr	r0, [r3, #28]
 8010fb4:	f7ff f9a5 	bl	8010302 <_Findx0>
 8010fb8:	2800      	cmp	r0, #0
 8010fba:	d1e3      	bne.n	8010f84 <WM__GetNextIVR+0xd4>
 8010fbc:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 8010fc0:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8010fc4:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010fc8:	429a      	cmp	r2, r3
 8010fca:	dd07      	ble.n	8010fdc <WM__GetNextIVR+0x12c>
 8010fcc:	e895 0003 	ldmia.w	r5, {r0, r1}
 8010fd0:	e886 0003 	stmia.w	r6, {r0, r1}
 8010fd4:	a801      	add	r0, sp, #4
 8010fd6:	f7f9 fcc9 	bl	800a96c <GUI_ALLOC_UnlockH>
 8010fda:	e797      	b.n	8010f0c <WM__GetNextIVR+0x5c>
 8010fdc:	683b      	ldr	r3, [r7, #0]
 8010fde:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8010fe0:	b152      	cbz	r2, 8010ff8 <WM__GetNextIVR+0x148>
 8010fe2:	4610      	mov	r0, r2
 8010fe4:	f7f9 fcaa 	bl	800a93c <GUI_ALLOC_h2p>
 8010fe8:	4607      	mov	r7, r0
 8010fea:	2200      	movs	r2, #0
 8010fec:	4629      	mov	r1, r5
 8010fee:	6a00      	ldr	r0, [r0, #32]
 8010ff0:	f7ff f9ca 	bl	8010388 <_Findx1>
 8010ff4:	69ba      	ldr	r2, [r7, #24]
 8010ff6:	e7f3      	b.n	8010fe0 <WM__GetNextIVR+0x130>
 8010ff8:	af04      	add	r7, sp, #16
 8010ffa:	4629      	mov	r1, r5
 8010ffc:	f857 3d0c 	ldr.w	r3, [r7, #-12]!
 8011000:	69d8      	ldr	r0, [r3, #28]
 8011002:	f7ff f9c1 	bl	8010388 <_Findx1>
 8011006:	4638      	mov	r0, r7
 8011008:	f7f9 fcb0 	bl	800a96c <GUI_ALLOC_UnlockH>
 801100c:	69e2      	ldr	r2, [r4, #28]
 801100e:	f644 6320 	movw	r3, #20000	; 0x4e20
 8011012:	429a      	cmp	r2, r3
 8011014:	dc89      	bgt.n	8010f2a <WM__GetNextIVR+0x7a>
 8011016:	e895 0003 	ldmia.w	r5, {r0, r1}
 801101a:	e886 0003 	stmia.w	r6, {r0, r1}
 801101e:	f7ff fbd1 	bl	80107c4 <WM__ActivateClipRect>
 8011022:	2001      	movs	r0, #1
 8011024:	b004      	add	sp, #16
 8011026:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801102a:	bf00      	nop
 801102c:	2000003c 	.word	0x2000003c
 8011030:	20000d34 	.word	0x20000d34

08011034 <WM__InitIVRSearch>:
 8011034:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011038:	4e39      	ldr	r6, [pc, #228]	; (8011120 <WM__InitIVRSearch+0xec>)
 801103a:	b086      	sub	sp, #24
 801103c:	4680      	mov	r8, r0
 801103e:	6832      	ldr	r2, [r6, #0]
 8011040:	f892 3054 	ldrb.w	r3, [r2, #84]	; 0x54
 8011044:	b913      	cbnz	r3, 801104c <WM__InitIVRSearch+0x18>
 8011046:	f7ff fbbd 	bl	80107c4 <WM__ActivateClipRect>
 801104a:	e064      	b.n	8011116 <WM__InitIVRSearch+0xe2>
 801104c:	4f35      	ldr	r7, [pc, #212]	; (8011124 <WM__InitIVRSearch+0xf0>)
 801104e:	6a3b      	ldr	r3, [r7, #32]
 8011050:	463d      	mov	r5, r7
 8011052:	3301      	adds	r3, #1
 8011054:	2b01      	cmp	r3, #1
 8011056:	623b      	str	r3, [r7, #32]
 8011058:	dc5d      	bgt.n	8011116 <WM__InitIVRSearch+0xe2>
 801105a:	6c90      	ldr	r0, [r2, #72]	; 0x48
 801105c:	f7f9 fc78 	bl	800a950 <GUI_ALLOC_LockH>
 8011060:	f04f 33ff 	mov.w	r3, #4294967295
 8011064:	9000      	str	r0, [sp, #0]
 8011066:	61fb      	str	r3, [r7, #28]
 8011068:	4b2f      	ldr	r3, [pc, #188]	; (8011128 <WM__InitIVRSearch+0xf4>)
 801106a:	781b      	ldrb	r3, [r3, #0]
 801106c:	b113      	cbz	r3, 8011074 <WM__InitIVRSearch+0x40>
 801106e:	ab02      	add	r3, sp, #8
 8011070:	3008      	adds	r0, #8
 8011072:	e004      	b.n	801107e <WM__InitIVRSearch+0x4a>
 8011074:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011076:	f013 0402 	ands.w	r4, r3, #2
 801107a:	d00c      	beq.n	8011096 <WM__InitIVRSearch+0x62>
 801107c:	ab02      	add	r3, sp, #8
 801107e:	ac02      	add	r4, sp, #8
 8011080:	c803      	ldmia	r0, {r0, r1}
 8011082:	e883 0003 	stmia.w	r3, {r0, r1}
 8011086:	f1b8 0f00 	cmp.w	r8, #0
 801108a:	d00c      	beq.n	80110a6 <WM__InitIVRSearch+0x72>
 801108c:	4641      	mov	r1, r8
 801108e:	4620      	mov	r0, r4
 8011090:	f7fa fffc 	bl	800c08c <GUI__IntersectRect>
 8011094:	e007      	b.n	80110a6 <WM__InitIVRSearch+0x72>
 8011096:	6a3b      	ldr	r3, [r7, #32]
 8011098:	4668      	mov	r0, sp
 801109a:	3b01      	subs	r3, #1
 801109c:	623b      	str	r3, [r7, #32]
 801109e:	f7f9 fc65 	bl	800a96c <GUI_ALLOC_UnlockH>
 80110a2:	4620      	mov	r0, r4
 80110a4:	e038      	b.n	8011118 <WM__InitIVRSearch+0xe4>
 80110a6:	6833      	ldr	r3, [r6, #0]
 80110a8:	4f20      	ldr	r7, [pc, #128]	; (801112c <WM__InitIVRSearch+0xf8>)
 80110aa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80110ac:	b1c2      	cbz	r2, 80110e0 <WM__InitIVRSearch+0xac>
 80110ae:	9b00      	ldr	r3, [sp, #0]
 80110b0:	6810      	ldr	r0, [r2, #0]
 80110b2:	9301      	str	r3, [sp, #4]
 80110b4:	ab04      	add	r3, sp, #16
 80110b6:	6851      	ldr	r1, [r2, #4]
 80110b8:	c303      	stmia	r3!, {r0, r1}
 80110ba:	683b      	ldr	r3, [r7, #0]
 80110bc:	b133      	cbz	r3, 80110cc <WM__InitIVRSearch+0x98>
 80110be:	a801      	add	r0, sp, #4
 80110c0:	f7f9 fc54 	bl	800a96c <GUI_ALLOC_UnlockH>
 80110c4:	6838      	ldr	r0, [r7, #0]
 80110c6:	f7f9 fc43 	bl	800a950 <GUI_ALLOC_LockH>
 80110ca:	9001      	str	r0, [sp, #4]
 80110cc:	a904      	add	r1, sp, #16
 80110ce:	9801      	ldr	r0, [sp, #4]
 80110d0:	f7ff fb48 	bl	8010764 <WM__Client2Screen>
 80110d4:	4620      	mov	r0, r4
 80110d6:	a904      	add	r1, sp, #16
 80110d8:	f7fa ffd8 	bl	800c08c <GUI__IntersectRect>
 80110dc:	a801      	add	r0, sp, #4
 80110de:	e000      	b.n	80110e2 <WM__InitIVRSearch+0xae>
 80110e0:	4668      	mov	r0, sp
 80110e2:	f7f9 fc43 	bl	800a96c <GUI_ALLOC_UnlockH>
 80110e6:	6839      	ldr	r1, [r7, #0]
 80110e8:	b119      	cbz	r1, 80110f2 <WM__InitIVRSearch+0xbe>
 80110ea:	4620      	mov	r0, r4
 80110ec:	f7ff fa9a 	bl	8010624 <WM__ClipAtParentBorders>
 80110f0:	b128      	cbz	r0, 80110fe <WM__InitIVRSearch+0xca>
 80110f2:	6833      	ldr	r3, [r6, #0]
 80110f4:	4620      	mov	r0, r4
 80110f6:	6c99      	ldr	r1, [r3, #72]	; 0x48
 80110f8:	f7ff fa94 	bl	8010624 <WM__ClipAtParentBorders>
 80110fc:	b918      	cbnz	r0, 8011106 <WM__InitIVRSearch+0xd2>
 80110fe:	6a2b      	ldr	r3, [r5, #32]
 8011100:	3b01      	subs	r3, #1
 8011102:	622b      	str	r3, [r5, #32]
 8011104:	e008      	b.n	8011118 <WM__InitIVRSearch+0xe4>
 8011106:	4b0a      	ldr	r3, [pc, #40]	; (8011130 <WM__InitIVRSearch+0xfc>)
 8011108:	e894 0003 	ldmia.w	r4, {r0, r1}
 801110c:	e883 0003 	stmia.w	r3, {r0, r1}
 8011110:	f7ff fece 	bl	8010eb0 <WM__GetNextIVR>
 8011114:	e000      	b.n	8011118 <WM__InitIVRSearch+0xe4>
 8011116:	2001      	movs	r0, #1
 8011118:	b006      	add	sp, #24
 801111a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801111e:	bf00      	nop
 8011120:	2000003c 	.word	0x2000003c
 8011124:	20000d34 	.word	0x20000d34
 8011128:	2002db58 	.word	0x2002db58
 801112c:	2002db28 	.word	0x2002db28
 8011130:	20000d40 	.word	0x20000d40

08011134 <WM_SetDefault>:
 8011134:	b508      	push	{r3, lr}
 8011136:	f7fa f843 	bl	800b1c0 <GL_SetDefault>
 801113a:	4b02      	ldr	r3, [pc, #8]	; (8011144 <WM_SetDefault+0x10>)
 801113c:	2200      	movs	r2, #0
 801113e:	681b      	ldr	r3, [r3, #0]
 8011140:	645a      	str	r2, [r3, #68]	; 0x44
 8011142:	bd08      	pop	{r3, pc}
 8011144:	2000003c 	.word	0x2000003c

08011148 <WM__Paint1>:
 8011148:	b5f0      	push	{r4, r5, r6, r7, lr}
 801114a:	b089      	sub	sp, #36	; 0x24
 801114c:	4604      	mov	r4, r0
 801114e:	f7f9 fbff 	bl	800a950 <GUI_ALLOC_LockH>
 8011152:	6907      	ldr	r7, [r0, #16]
 8011154:	6a85      	ldr	r5, [r0, #40]	; 0x28
 8011156:	ae02      	add	r6, sp, #8
 8011158:	9001      	str	r0, [sp, #4]
 801115a:	3008      	adds	r0, #8
 801115c:	c803      	ldmia	r0, {r0, r1}
 801115e:	e886 0003 	stmia.w	r6, {r0, r1}
 8011162:	a801      	add	r0, sp, #4
 8011164:	f7f9 fc02 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011168:	2f00      	cmp	r7, #0
 801116a:	d032      	beq.n	80111d2 <WM__Paint1+0x8a>
 801116c:	07ab      	lsls	r3, r5, #30
 801116e:	d530      	bpl.n	80111d2 <WM__Paint1+0x8a>
 8011170:	212e      	movs	r1, #46	; 0x2e
 8011172:	4620      	mov	r0, r4
 8011174:	f000 fbeb 	bl	801194e <WM_SendMessageNoPara>
 8011178:	4b17      	ldr	r3, [pc, #92]	; (80111d8 <WM__Paint1+0x90>)
 801117a:	f415 5f80 	tst.w	r5, #4096	; 0x1000
 801117e:	781a      	ldrb	r2, [r3, #0]
 8011180:	461d      	mov	r5, r3
 8011182:	f102 0201 	add.w	r2, r2, #1
 8011186:	701a      	strb	r2, [r3, #0]
 8011188:	d00a      	beq.n	80111a0 <WM__Paint1+0x58>
 801118a:	230f      	movs	r3, #15
 801118c:	9405      	str	r4, [sp, #20]
 801118e:	9607      	str	r6, [sp, #28]
 8011190:	9304      	str	r3, [sp, #16]
 8011192:	f7ff ffcf 	bl	8011134 <WM_SetDefault>
 8011196:	a904      	add	r1, sp, #16
 8011198:	4620      	mov	r0, r4
 801119a:	f001 f8eb 	bl	8012374 <WM__SendMessage>
 801119e:	e011      	b.n	80111c4 <WM__Paint1+0x7c>
 80111a0:	4630      	mov	r0, r6
 80111a2:	f7ff ff47 	bl	8011034 <WM__InitIVRSearch>
 80111a6:	b168      	cbz	r0, 80111c4 <WM__Paint1+0x7c>
 80111a8:	270f      	movs	r7, #15
 80111aa:	9405      	str	r4, [sp, #20]
 80111ac:	9704      	str	r7, [sp, #16]
 80111ae:	9607      	str	r6, [sp, #28]
 80111b0:	f7ff ffc0 	bl	8011134 <WM_SetDefault>
 80111b4:	a904      	add	r1, sp, #16
 80111b6:	4620      	mov	r0, r4
 80111b8:	f001 f8dc 	bl	8012374 <WM__SendMessage>
 80111bc:	f7ff fe78 	bl	8010eb0 <WM__GetNextIVR>
 80111c0:	2800      	cmp	r0, #0
 80111c2:	d1f2      	bne.n	80111aa <WM__Paint1+0x62>
 80111c4:	782b      	ldrb	r3, [r5, #0]
 80111c6:	212f      	movs	r1, #47	; 0x2f
 80111c8:	4620      	mov	r0, r4
 80111ca:	3b01      	subs	r3, #1
 80111cc:	702b      	strb	r3, [r5, #0]
 80111ce:	f000 fbbe 	bl	801194e <WM_SendMessageNoPara>
 80111d2:	b009      	add	sp, #36	; 0x24
 80111d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80111d6:	bf00      	nop
 80111d8:	2002db58 	.word	0x2002db58

080111dc <WM__Paint>:
 80111dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80111e0:	b088      	sub	sp, #32
 80111e2:	f244 0420 	movw	r4, #16416	; 0x4020
 80111e6:	9003      	str	r0, [sp, #12]
 80111e8:	f7f9 fbb2 	bl	800a950 <GUI_ALLOC_LockH>
 80111ec:	4603      	mov	r3, r0
 80111ee:	f100 0208 	add.w	r2, r0, #8
 80111f2:	9005      	str	r0, [sp, #20]
 80111f4:	ae06      	add	r6, sp, #24
 80111f6:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 80111f8:	699f      	ldr	r7, [r3, #24]
 80111fa:	402c      	ands	r4, r5
 80111fc:	f8d3 8010 	ldr.w	r8, [r3, #16]
 8011200:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011204:	e886 0003 	stmia.w	r6, {r0, r1}
 8011208:	a805      	add	r0, sp, #20
 801120a:	f7f9 fbaf 	bl	800a96c <GUI_ALLOC_UnlockH>
 801120e:	2c00      	cmp	r4, #0
 8011210:	d035      	beq.n	801127e <WM__Paint+0xa2>
 8011212:	f1b8 0f00 	cmp.w	r8, #0
 8011216:	d017      	beq.n	8011248 <WM__Paint+0x6c>
 8011218:	9903      	ldr	r1, [sp, #12]
 801121a:	4630      	mov	r0, r6
 801121c:	f7ff fa02 	bl	8010624 <WM__ClipAtParentBorders>
 8011220:	b190      	cbz	r0, 8011248 <WM__Paint+0x6c>
 8011222:	9803      	ldr	r0, [sp, #12]
 8011224:	f7ff fca0 	bl	8010b68 <WM_SelectWindow>
 8011228:	0769      	lsls	r1, r5, #29
 801122a:	d50f      	bpl.n	801124c <WM__Paint+0x70>
 801122c:	b127      	cbz	r7, 8011238 <WM__Paint+0x5c>
 801122e:	f005 0501 	and.w	r5, r5, #1
 8011232:	f085 0501 	eor.w	r5, r5, #1
 8011236:	e000      	b.n	801123a <WM__Paint+0x5e>
 8011238:	2501      	movs	r5, #1
 801123a:	9500      	str	r5, [sp, #0]
 801123c:	2300      	movs	r3, #0
 801123e:	aa03      	add	r2, sp, #12
 8011240:	4911      	ldr	r1, [pc, #68]	; (8011288 <WM__Paint+0xac>)
 8011242:	4630      	mov	r0, r6
 8011244:	f003 f892 	bl	801436c <GUI_MEMDEV_Draw>
 8011248:	2400      	movs	r4, #0
 801124a:	e003      	b.n	8011254 <WM__Paint+0x78>
 801124c:	2401      	movs	r4, #1
 801124e:	9803      	ldr	r0, [sp, #12]
 8011250:	f7ff f976 	bl	8010540 <WM__PaintWinAndOverlays>
 8011254:	9803      	ldr	r0, [sp, #12]
 8011256:	f7f9 fb7b 	bl	800a950 <GUI_ALLOC_LockH>
 801125a:	6a82      	ldr	r2, [r0, #40]	; 0x28
 801125c:	9005      	str	r0, [sp, #20]
 801125e:	f422 4380 	bic.w	r3, r2, #16384	; 0x4000
 8011262:	0492      	lsls	r2, r2, #18
 8011264:	f023 0320 	bic.w	r3, r3, #32
 8011268:	bf48      	it	mi
 801126a:	f043 0304 	orrmi.w	r3, r3, #4
 801126e:	6283      	str	r3, [r0, #40]	; 0x28
 8011270:	a805      	add	r0, sp, #20
 8011272:	f7f9 fb7b 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011276:	4a05      	ldr	r2, [pc, #20]	; (801128c <WM__Paint+0xb0>)
 8011278:	8813      	ldrh	r3, [r2, #0]
 801127a:	3b01      	subs	r3, #1
 801127c:	8013      	strh	r3, [r2, #0]
 801127e:	4620      	mov	r0, r4
 8011280:	b008      	add	sp, #32
 8011282:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011286:	bf00      	nop
 8011288:	080105b9 	.word	0x080105b9
 801128c:	2002db44 	.word	0x2002db44

08011290 <_Exec1Draw>:
 8011290:	4b1e      	ldr	r3, [pc, #120]	; (801130c <_Exec1Draw+0x7c>)
 8011292:	681a      	ldr	r2, [r3, #0]
 8011294:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011298:	f892 0054 	ldrb.w	r0, [r2, #84]	; 0x54
 801129c:	b09f      	sub	sp, #124	; 0x7c
 801129e:	461d      	mov	r5, r3
 80112a0:	2800      	cmp	r0, #0
 80112a2:	d02f      	beq.n	8011304 <_Exec1Draw+0x74>
 80112a4:	4b1a      	ldr	r3, [pc, #104]	; (8011310 <_Exec1Draw+0x80>)
 80112a6:	8818      	ldrh	r0, [r3, #0]
 80112a8:	461f      	mov	r7, r3
 80112aa:	b358      	cbz	r0, 8011304 <_Exec1Draw+0x74>
 80112ac:	4b19      	ldr	r3, [pc, #100]	; (8011314 <_Exec1Draw+0x84>)
 80112ae:	689c      	ldr	r4, [r3, #8]
 80112b0:	461e      	mov	r6, r3
 80112b2:	b90c      	cbnz	r4, 80112b8 <_Exec1Draw+0x28>
 80112b4:	4b18      	ldr	r3, [pc, #96]	; (8011318 <_Exec1Draw+0x88>)
 80112b6:	681c      	ldr	r4, [r3, #0]
 80112b8:	a801      	add	r0, sp, #4
 80112ba:	f7f9 ff1b 	bl	800b0f4 <GUI_SaveContext_W>
 80112be:	682b      	ldr	r3, [r5, #0]
 80112c0:	f8d3 8030 	ldr.w	r8, [r3, #48]	; 0x30
 80112c4:	6b5d      	ldr	r5, [r3, #52]	; 0x34
 80112c6:	b924      	cbnz	r4, 80112d2 <_Exec1Draw+0x42>
 80112c8:	2400      	movs	r4, #0
 80112ca:	e00d      	b.n	80112e8 <_Exec1Draw+0x58>
 80112cc:	f1b9 0f00 	cmp.w	r9, #0
 80112d0:	d10a      	bne.n	80112e8 <_Exec1Draw+0x58>
 80112d2:	4620      	mov	r0, r4
 80112d4:	f7ff ff82 	bl	80111dc <WM__Paint>
 80112d8:	4681      	mov	r9, r0
 80112da:	4620      	mov	r0, r4
 80112dc:	f7f9 fb2e 	bl	800a93c <GUI_ALLOC_h2p>
 80112e0:	6944      	ldr	r4, [r0, #20]
 80112e2:	2c00      	cmp	r4, #0
 80112e4:	d1f2      	bne.n	80112cc <_Exec1Draw+0x3c>
 80112e6:	e7ef      	b.n	80112c8 <_Exec1Draw+0x38>
 80112e8:	4640      	mov	r0, r8
 80112ea:	60b4      	str	r4, [r6, #8]
 80112ec:	f7f9 ff21 	bl	800b132 <GUI_SetColor>
 80112f0:	4628      	mov	r0, r5
 80112f2:	f7f9 ff1c 	bl	800b12e <GUI_SetBkColor>
 80112f6:	a801      	add	r0, sp, #4
 80112f8:	f7f9 ff06 	bl	800b108 <GUI_RestoreContext>
 80112fc:	8838      	ldrh	r0, [r7, #0]
 80112fe:	3000      	adds	r0, #0
 8011300:	bf18      	it	ne
 8011302:	2001      	movne	r0, #1
 8011304:	b01f      	add	sp, #124	; 0x7c
 8011306:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801130a:	bf00      	nop
 801130c:	2000003c 	.word	0x2000003c
 8011310:	2002db44 	.word	0x2002db44
 8011314:	20000d34 	.word	0x20000d34
 8011318:	2002db48 	.word	0x2002db48

0801131c <WM_Exec>:
 801131c:	4b18      	ldr	r3, [pc, #96]	; (8011380 <WM_Exec+0x64>)
 801131e:	681b      	ldr	r3, [r3, #0]
 8011320:	b570      	push	{r4, r5, r6, lr}
 8011322:	b103      	cbz	r3, 8011326 <WM_Exec+0xa>
 8011324:	4798      	blx	r3
 8011326:	2500      	movs	r5, #0
 8011328:	f7ff fd7a 	bl	8010e20 <_Exec1Input>
 801132c:	b108      	cbz	r0, 8011332 <WM_Exec+0x16>
 801132e:	2501      	movs	r5, #1
 8011330:	e7fa      	b.n	8011328 <WM_Exec+0xc>
 8011332:	4b14      	ldr	r3, [pc, #80]	; (8011384 <WM_Exec+0x68>)
 8011334:	681b      	ldr	r3, [r3, #0]
 8011336:	f893 4054 	ldrb.w	r4, [r3, #84]	; 0x54
 801133a:	b144      	cbz	r4, 801134e <WM_Exec+0x32>
 801133c:	4b12      	ldr	r3, [pc, #72]	; (8011388 <WM_Exec+0x6c>)
 801133e:	881c      	ldrh	r4, [r3, #0]
 8011340:	b12c      	cbz	r4, 801134e <WM_Exec+0x32>
 8011342:	4b12      	ldr	r3, [pc, #72]	; (801138c <WM_Exec+0x70>)
 8011344:	681b      	ldr	r3, [r3, #0]
 8011346:	b1a3      	cbz	r3, 8011372 <WM_Exec+0x56>
 8011348:	681b      	ldr	r3, [r3, #0]
 801134a:	4798      	blx	r3
 801134c:	2401      	movs	r4, #1
 801134e:	f7ff ff9f 	bl	8011290 <_Exec1Draw>
 8011352:	4606      	mov	r6, r0
 8011354:	b108      	cbz	r0, 801135a <WM_Exec+0x3e>
 8011356:	2501      	movs	r5, #1
 8011358:	e7f9      	b.n	801134e <WM_Exec+0x32>
 801135a:	b174      	cbz	r4, 801137a <WM_Exec+0x5e>
 801135c:	4b0b      	ldr	r3, [pc, #44]	; (801138c <WM_Exec+0x70>)
 801135e:	681b      	ldr	r3, [r3, #0]
 8011360:	b123      	cbz	r3, 801136c <WM_Exec+0x50>
 8011362:	685b      	ldr	r3, [r3, #4]
 8011364:	4798      	blx	r3
 8011366:	4b0a      	ldr	r3, [pc, #40]	; (8011390 <WM_Exec+0x74>)
 8011368:	601e      	str	r6, [r3, #0]
 801136a:	e006      	b.n	801137a <WM_Exec+0x5e>
 801136c:	f002 fe3c 	bl	8013fe8 <GUI__ManageCache>
 8011370:	e003      	b.n	801137a <WM_Exec+0x5e>
 8011372:	2001      	movs	r0, #1
 8011374:	f002 fe38 	bl	8013fe8 <GUI__ManageCache>
 8011378:	e7e8      	b.n	801134c <WM_Exec+0x30>
 801137a:	4628      	mov	r0, r5
 801137c:	bd70      	pop	{r4, r5, r6, pc}
 801137e:	bf00      	nop
 8011380:	2002db38 	.word	0x2002db38
 8011384:	2000003c 	.word	0x2000003c
 8011388:	2002db44 	.word	0x2002db44
 801138c:	2002db6c 	.word	0x2002db6c
 8011390:	2002db54 	.word	0x2002db54

08011394 <WM_Activate>:
 8011394:	4b02      	ldr	r3, [pc, #8]	; (80113a0 <WM_Activate+0xc>)
 8011396:	2201      	movs	r2, #1
 8011398:	681b      	ldr	r3, [r3, #0]
 801139a:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 801139e:	4770      	bx	lr
 80113a0:	2000003c 	.word	0x2000003c

080113a4 <WM_Deactivate>:
 80113a4:	4b03      	ldr	r3, [pc, #12]	; (80113b4 <WM_Deactivate+0x10>)
 80113a6:	2200      	movs	r2, #0
 80113a8:	681b      	ldr	r3, [r3, #0]
 80113aa:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 80113ae:	f7fb bb85 	b.w	800cabc <LCD_SetClipRectMax>
 80113b2:	bf00      	nop
 80113b4:	2000003c 	.word	0x2000003c

080113b8 <WM_DefaultProc>:
 80113b8:	b510      	push	{r4, lr}
 80113ba:	4604      	mov	r4, r0
 80113bc:	6840      	ldr	r0, [r0, #4]
 80113be:	6823      	ldr	r3, [r4, #0]
 80113c0:	2b17      	cmp	r3, #23
 80113c2:	d010      	beq.n	80113e6 <WM_DefaultProc+0x2e>
 80113c4:	dc07      	bgt.n	80113d6 <WM_DefaultProc+0x1e>
 80113c6:	2b0e      	cmp	r3, #14
 80113c8:	d00f      	beq.n	80113ea <WM_DefaultProc+0x32>
 80113ca:	2b14      	cmp	r3, #20
 80113cc:	d115      	bne.n	80113fa <WM_DefaultProc+0x42>
 80113ce:	68e1      	ldr	r1, [r4, #12]
 80113d0:	f001 f8a4 	bl	801251c <WM__GetClientRectEx>
 80113d4:	e011      	b.n	80113fa <WM_DefaultProc+0x42>
 80113d6:	2b22      	cmp	r3, #34	; 0x22
 80113d8:	d00c      	beq.n	80113f4 <WM_DefaultProc+0x3c>
 80113da:	2b28      	cmp	r3, #40	; 0x28
 80113dc:	d10d      	bne.n	80113fa <WM_DefaultProc+0x42>
 80113de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80113e2:	f7ff bbb4 	b.w	8010b4e <WM_InvalidateWindow>
 80113e6:	60e0      	str	r0, [r4, #12]
 80113e8:	bd10      	pop	{r4, pc}
 80113ea:	4621      	mov	r1, r4
 80113ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80113f0:	f000 baaf 	b.w	8011952 <WM_SendToParent>
 80113f4:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 80113f8:	e000      	b.n	80113fc <WM_DefaultProc+0x44>
 80113fa:	2300      	movs	r3, #0
 80113fc:	60e3      	str	r3, [r4, #12]
 80113fe:	bd10      	pop	{r4, pc}

08011400 <_cbBackWin>:
 8011400:	6803      	ldr	r3, [r0, #0]
 8011402:	2b0e      	cmp	r3, #14
 8011404:	b510      	push	{r4, lr}
 8011406:	4604      	mov	r4, r0
 8011408:	d002      	beq.n	8011410 <_cbBackWin+0x10>
 801140a:	2b0f      	cmp	r3, #15
 801140c:	d009      	beq.n	8011422 <_cbBackWin+0x22>
 801140e:	e020      	b.n	8011452 <_cbBackWin+0x52>
 8011410:	68c3      	ldr	r3, [r0, #12]
 8011412:	685a      	ldr	r2, [r3, #4]
 8011414:	2a01      	cmp	r2, #1
 8011416:	d121      	bne.n	801145c <_cbBackWin+0x5c>
 8011418:	6818      	ldr	r0, [r3, #0]
 801141a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801141e:	f7fa bae1 	b.w	800b9e4 <GUI_StoreKey>
 8011422:	4a0f      	ldr	r2, [pc, #60]	; (8011460 <_cbBackWin+0x60>)
 8011424:	6843      	ldr	r3, [r0, #4]
 8011426:	6811      	ldr	r1, [r2, #0]
 8011428:	428b      	cmp	r3, r1
 801142a:	d006      	beq.n	801143a <_cbBackWin+0x3a>
 801142c:	6852      	ldr	r2, [r2, #4]
 801142e:	4293      	cmp	r3, r2
 8011430:	bf0c      	ite	eq
 8011432:	2301      	moveq	r3, #1
 8011434:	f04f 33ff 	movne.w	r3, #4294967295
 8011438:	e000      	b.n	801143c <_cbBackWin+0x3c>
 801143a:	2300      	movs	r3, #0
 801143c:	4a09      	ldr	r2, [pc, #36]	; (8011464 <_cbBackWin+0x64>)
 801143e:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8011442:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8011446:	4298      	cmp	r0, r3
 8011448:	d003      	beq.n	8011452 <_cbBackWin+0x52>
 801144a:	f7f9 fe70 	bl	800b12e <GUI_SetBkColor>
 801144e:	f7f9 ff75 	bl	800b33c <GUI_Clear>
 8011452:	4620      	mov	r0, r4
 8011454:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011458:	f7ff bfae 	b.w	80113b8 <WM_DefaultProc>
 801145c:	bd10      	pop	{r4, pc}
 801145e:	bf00      	nop
 8011460:	2002db2c 	.word	0x2002db2c
 8011464:	2002db60 	.word	0x2002db60

08011468 <WM_Init>:
 8011468:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801146c:	4d2a      	ldr	r5, [pc, #168]	; (8011518 <WM_Init+0xb0>)
 801146e:	7828      	ldrb	r0, [r5, #0]
 8011470:	2800      	cmp	r0, #0
 8011472:	d14d      	bne.n	8011510 <WM_Init+0xa8>
 8011474:	4b29      	ldr	r3, [pc, #164]	; (801151c <WM_Init+0xb4>)
 8011476:	4604      	mov	r4, r0
 8011478:	4e29      	ldr	r6, [pc, #164]	; (8011520 <WM_Init+0xb8>)
 801147a:	6018      	str	r0, [r3, #0]
 801147c:	4b29      	ldr	r3, [pc, #164]	; (8011524 <WM_Init+0xbc>)
 801147e:	4f2a      	ldr	r7, [pc, #168]	; (8011528 <WM_Init+0xc0>)
 8011480:	681b      	ldr	r3, [r3, #0]
 8011482:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8011554 <WM_Init+0xec>
 8011486:	6458      	str	r0, [r3, #68]	; 0x44
 8011488:	4b28      	ldr	r3, [pc, #160]	; (801152c <WM_Init+0xc4>)
 801148a:	60a8      	str	r0, [r5, #8]
 801148c:	8018      	strh	r0, [r3, #0]
 801148e:	4b28      	ldr	r3, [pc, #160]	; (8011530 <WM_Init+0xc8>)
 8011490:	8018      	strh	r0, [r3, #0]
 8011492:	4620      	mov	r0, r4
 8011494:	f7fa f896 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 8011498:	b1a8      	cbz	r0, 80114c6 <WM_Init+0x5e>
 801149a:	f04f 32ff 	mov.w	r2, #4294967295
 801149e:	2302      	movs	r3, #2
 80114a0:	2100      	movs	r1, #0
 80114a2:	9602      	str	r6, [sp, #8]
 80114a4:	e88d 000c 	stmia.w	sp, {r2, r3}
 80114a8:	f643 73ff 	movw	r3, #16383	; 0x3fff
 80114ac:	9103      	str	r1, [sp, #12]
 80114ae:	4608      	mov	r0, r1
 80114b0:	461a      	mov	r2, r3
 80114b2:	f7ff fb79 	bl	8010ba8 <WM_CreateWindowAsChild>
 80114b6:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 80114ba:	f847 0024 	str.w	r0, [r7, r4, lsl #2]
 80114be:	f848 3024 	str.w	r3, [r8, r4, lsl #2]
 80114c2:	f7ff fb44 	bl	8010b4e <WM_InvalidateWindow>
 80114c6:	3401      	adds	r4, #1
 80114c8:	2c02      	cmp	r4, #2
 80114ca:	d1e2      	bne.n	8011492 <WM_Init+0x2a>
 80114cc:	4819      	ldr	r0, [pc, #100]	; (8011534 <WM_Init+0xcc>)
 80114ce:	f001 f807 	bl	80124e0 <WM__AddCriticalHandle>
 80114d2:	4819      	ldr	r0, [pc, #100]	; (8011538 <WM_Init+0xd0>)
 80114d4:	f001 f804 	bl	80124e0 <WM__AddCriticalHandle>
 80114d8:	4818      	ldr	r0, [pc, #96]	; (801153c <WM_Init+0xd4>)
 80114da:	f001 f801 	bl	80124e0 <WM__AddCriticalHandle>
 80114de:	4818      	ldr	r0, [pc, #96]	; (8011540 <WM_Init+0xd8>)
 80114e0:	f000 fffe 	bl	80124e0 <WM__AddCriticalHandle>
 80114e4:	4817      	ldr	r0, [pc, #92]	; (8011544 <WM_Init+0xdc>)
 80114e6:	f000 fffb 	bl	80124e0 <WM__AddCriticalHandle>
 80114ea:	4817      	ldr	r0, [pc, #92]	; (8011548 <WM_Init+0xe0>)
 80114ec:	f000 fff8 	bl	80124e0 <WM__AddCriticalHandle>
 80114f0:	4b0d      	ldr	r3, [pc, #52]	; (8011528 <WM_Init+0xc0>)
 80114f2:	6818      	ldr	r0, [r3, #0]
 80114f4:	f7ff fb38 	bl	8010b68 <WM_SelectWindow>
 80114f8:	f7ff ff4c 	bl	8011394 <WM_Activate>
 80114fc:	2301      	movs	r3, #1
 80114fe:	4813      	ldr	r0, [pc, #76]	; (801154c <WM_Init+0xe4>)
 8011500:	702b      	strb	r3, [r5, #0]
 8011502:	4b13      	ldr	r3, [pc, #76]	; (8011550 <WM_Init+0xe8>)
 8011504:	626b      	str	r3, [r5, #36]	; 0x24
 8011506:	b004      	add	sp, #16
 8011508:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801150c:	f7fa b834 	b.w	800b578 <GUI__RegisterExit>
 8011510:	b004      	add	sp, #16
 8011512:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011516:	bf00      	nop
 8011518:	20000d34 	.word	0x20000d34
 801151c:	2002db48 	.word	0x2002db48
 8011520:	08011401 	.word	0x08011401
 8011524:	2000003c 	.word	0x2000003c
 8011528:	2002db2c 	.word	0x2002db2c
 801152c:	2002db44 	.word	0x2002db44
 8011530:	2002db24 	.word	0x2002db24
 8011534:	2002dba0 	.word	0x2002dba0
 8011538:	2002db90 	.word	0x2002db90
 801153c:	2002db80 	.word	0x2002db80
 8011540:	2002dba8 	.word	0x2002dba8
 8011544:	2002db98 	.word	0x2002db98
 8011548:	2002db88 	.word	0x2002db88
 801154c:	20000d58 	.word	0x20000d58
 8011550:	08010191 	.word	0x08010191
 8011554:	2002db60 	.word	0x2002db60

08011558 <WM_GetWindowSizeX>:
 8011558:	b513      	push	{r0, r1, r4, lr}
 801155a:	b908      	cbnz	r0, 8011560 <WM_GetWindowSizeX+0x8>
 801155c:	f7ff fca2 	bl	8010ea4 <WM_GetActiveWindow>
 8011560:	f7f9 f9f6 	bl	800a950 <GUI_ALLOC_LockH>
 8011564:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011568:	f9b0 4000 	ldrsh.w	r4, [r0]
 801156c:	aa02      	add	r2, sp, #8
 801156e:	1b1c      	subs	r4, r3, r4
 8011570:	f842 0d04 	str.w	r0, [r2, #-4]!
 8011574:	4610      	mov	r0, r2
 8011576:	3401      	adds	r4, #1
 8011578:	f7f9 f9f8 	bl	800a96c <GUI_ALLOC_UnlockH>
 801157c:	4620      	mov	r0, r4
 801157e:	b002      	add	sp, #8
 8011580:	bd10      	pop	{r4, pc}

08011582 <WM_GetWindowSizeY>:
 8011582:	b513      	push	{r0, r1, r4, lr}
 8011584:	b908      	cbnz	r0, 801158a <WM_GetWindowSizeY+0x8>
 8011586:	f7ff fc8d 	bl	8010ea4 <WM_GetActiveWindow>
 801158a:	f7f9 f9e1 	bl	800a950 <GUI_ALLOC_LockH>
 801158e:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8011592:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 8011596:	aa02      	add	r2, sp, #8
 8011598:	1b1c      	subs	r4, r3, r4
 801159a:	f842 0d04 	str.w	r0, [r2, #-4]!
 801159e:	4610      	mov	r0, r2
 80115a0:	3401      	adds	r4, #1
 80115a2:	f7f9 f9e3 	bl	800a96c <GUI_ALLOC_UnlockH>
 80115a6:	4620      	mov	r0, r4
 80115a8:	b002      	add	sp, #8
 80115aa:	bd10      	pop	{r4, pc}

080115ac <WM_ForEachDesc>:
 80115ac:	f000 be5e 	b.w	801226c <WM__ForEachDesc>

080115b0 <WM_GetClientRect>:
 80115b0:	4b04      	ldr	r3, [pc, #16]	; (80115c4 <WM_GetClientRect+0x14>)
 80115b2:	4601      	mov	r1, r0
 80115b4:	6818      	ldr	r0, [r3, #0]
 80115b6:	b910      	cbnz	r0, 80115be <WM_GetClientRect+0xe>
 80115b8:	4b03      	ldr	r3, [pc, #12]	; (80115c8 <WM_GetClientRect+0x18>)
 80115ba:	681b      	ldr	r3, [r3, #0]
 80115bc:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80115be:	f000 bfad 	b.w	801251c <WM__GetClientRectEx>
 80115c2:	bf00      	nop
 80115c4:	2002db28 	.word	0x2002db28
 80115c8:	2000003c 	.word	0x2000003c

080115cc <WM_GetClientWindow>:
 80115cc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80115ce:	2300      	movs	r3, #0
 80115d0:	a904      	add	r1, sp, #16
 80115d2:	9303      	str	r3, [sp, #12]
 80115d4:	2317      	movs	r3, #23
 80115d6:	f841 3d10 	str.w	r3, [r1, #-16]!
 80115da:	f7ff f960 	bl	801089e <WM_SendMessage>
 80115de:	9803      	ldr	r0, [sp, #12]
 80115e0:	b005      	add	sp, #20
 80115e2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080115e8 <WM_GetDesktopWindow>:
 80115e8:	4b03      	ldr	r3, [pc, #12]	; (80115f8 <WM_GetDesktopWindow+0x10>)
 80115ea:	681b      	ldr	r3, [r3, #0]
 80115ec:	7c5a      	ldrb	r2, [r3, #17]
 80115ee:	4b03      	ldr	r3, [pc, #12]	; (80115fc <WM_GetDesktopWindow+0x14>)
 80115f0:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80115f4:	4770      	bx	lr
 80115f6:	bf00      	nop
 80115f8:	2000003c 	.word	0x2000003c
 80115fc:	2002db2c 	.word	0x2002db2c

08011600 <WM_GetDesktopWindowEx>:
 8011600:	2801      	cmp	r0, #1
 8011602:	bf9a      	itte	ls
 8011604:	4b02      	ldrls	r3, [pc, #8]	; (8011610 <WM_GetDesktopWindowEx+0x10>)
 8011606:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 801160a:	2000      	movhi	r0, #0
 801160c:	4770      	bx	lr
 801160e:	bf00      	nop
 8011610:	2002db2c 	.word	0x2002db2c

08011614 <WM_GetFirstChild>:
 8011614:	b508      	push	{r3, lr}
 8011616:	4603      	mov	r3, r0
 8011618:	b110      	cbz	r0, 8011620 <WM_GetFirstChild+0xc>
 801161a:	f7f9 f98f 	bl	800a93c <GUI_ALLOC_h2p>
 801161e:	69c3      	ldr	r3, [r0, #28]
 8011620:	4618      	mov	r0, r3
 8011622:	bd08      	pop	{r3, pc}

08011624 <WM_GetFocusedWindow>:
 8011624:	4b02      	ldr	r3, [pc, #8]	; (8011630 <WM_GetFocusedWindow+0xc>)
 8011626:	681a      	ldr	r2, [r3, #0]
 8011628:	4b02      	ldr	r3, [pc, #8]	; (8011634 <WM_GetFocusedWindow+0x10>)
 801162a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801162e:	4770      	bx	lr
 8011630:	2002db4c 	.word	0x2002db4c
 8011634:	2002db3c 	.word	0x2002db3c

08011638 <WM_GetId>:
 8011638:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801163a:	4604      	mov	r4, r0
 801163c:	2210      	movs	r2, #16
 801163e:	2100      	movs	r1, #0
 8011640:	4668      	mov	r0, sp
 8011642:	f004 f957 	bl	80158f4 <memset>
 8011646:	2315      	movs	r3, #21
 8011648:	4620      	mov	r0, r4
 801164a:	4669      	mov	r1, sp
 801164c:	9300      	str	r3, [sp, #0]
 801164e:	f7ff f926 	bl	801089e <WM_SendMessage>
 8011652:	9803      	ldr	r0, [sp, #12]
 8011654:	b004      	add	sp, #16
 8011656:	bd10      	pop	{r4, pc}

08011658 <_GetDialogItem>:
 8011658:	b570      	push	{r4, r5, r6, lr}
 801165a:	4606      	mov	r6, r0
 801165c:	460d      	mov	r5, r1
 801165e:	f7f9 f96d 	bl	800a93c <GUI_ALLOC_h2p>
 8011662:	69c4      	ldr	r4, [r0, #28]
 8011664:	b14c      	cbz	r4, 801167a <_GetDialogItem+0x22>
 8011666:	4620      	mov	r0, r4
 8011668:	f7ff ffe6 	bl	8011638 <WM_GetId>
 801166c:	42a8      	cmp	r0, r5
 801166e:	4620      	mov	r0, r4
 8011670:	d014      	beq.n	801169c <_GetDialogItem+0x44>
 8011672:	f7f9 f963 	bl	800a93c <GUI_ALLOC_h2p>
 8011676:	6a04      	ldr	r4, [r0, #32]
 8011678:	e7f4      	b.n	8011664 <_GetDialogItem+0xc>
 801167a:	4630      	mov	r0, r6
 801167c:	f7f9 f95e 	bl	800a93c <GUI_ALLOC_h2p>
 8011680:	69c4      	ldr	r4, [r0, #28]
 8011682:	b14c      	cbz	r4, 8011698 <_GetDialogItem+0x40>
 8011684:	4629      	mov	r1, r5
 8011686:	4620      	mov	r0, r4
 8011688:	f7ff ffe6 	bl	8011658 <_GetDialogItem>
 801168c:	b930      	cbnz	r0, 801169c <_GetDialogItem+0x44>
 801168e:	4620      	mov	r0, r4
 8011690:	f7f9 f954 	bl	800a93c <GUI_ALLOC_h2p>
 8011694:	6a04      	ldr	r4, [r0, #32]
 8011696:	e7f4      	b.n	8011682 <_GetDialogItem+0x2a>
 8011698:	4620      	mov	r0, r4
 801169a:	bd70      	pop	{r4, r5, r6, pc}
 801169c:	bd70      	pop	{r4, r5, r6, pc}

0801169e <WM_GetDialogItem>:
 801169e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80116a0:	460d      	mov	r5, r1
 80116a2:	4604      	mov	r4, r0
 80116a4:	b1c8      	cbz	r0, 80116da <WM_GetDialogItem+0x3c>
 80116a6:	f7f9 f953 	bl	800a950 <GUI_ALLOC_LockH>
 80116aa:	ab02      	add	r3, sp, #8
 80116ac:	69c4      	ldr	r4, [r0, #28]
 80116ae:	f843 0d04 	str.w	r0, [r3, #-4]!
 80116b2:	4618      	mov	r0, r3
 80116b4:	f7f9 f95a 	bl	800a96c <GUI_ALLOC_UnlockH>
 80116b8:	b17c      	cbz	r4, 80116da <WM_GetDialogItem+0x3c>
 80116ba:	4620      	mov	r0, r4
 80116bc:	f7ff ffbc 	bl	8011638 <WM_GetId>
 80116c0:	4285      	cmp	r5, r0
 80116c2:	d00a      	beq.n	80116da <WM_GetDialogItem+0x3c>
 80116c4:	4629      	mov	r1, r5
 80116c6:	4620      	mov	r0, r4
 80116c8:	f7ff ffc6 	bl	8011658 <_GetDialogItem>
 80116cc:	b920      	cbnz	r0, 80116d8 <WM_GetDialogItem+0x3a>
 80116ce:	4620      	mov	r0, r4
 80116d0:	f7f9 f934 	bl	800a93c <GUI_ALLOC_h2p>
 80116d4:	6a04      	ldr	r4, [r0, #32]
 80116d6:	e7ef      	b.n	80116b8 <WM_GetDialogItem+0x1a>
 80116d8:	4604      	mov	r4, r0
 80116da:	4620      	mov	r0, r4
 80116dc:	b003      	add	sp, #12
 80116de:	bd30      	pop	{r4, r5, pc}

080116e0 <WM_GetWindowOrgX>:
 80116e0:	b508      	push	{r3, lr}
 80116e2:	b120      	cbz	r0, 80116ee <WM_GetWindowOrgX+0xe>
 80116e4:	f7f9 f92a 	bl	800a93c <GUI_ALLOC_h2p>
 80116e8:	f9b0 0000 	ldrsh.w	r0, [r0]
 80116ec:	bd08      	pop	{r3, pc}
 80116ee:	bd08      	pop	{r3, pc}

080116f0 <WM_GetWindowOrgY>:
 80116f0:	b508      	push	{r3, lr}
 80116f2:	b120      	cbz	r0, 80116fe <WM_GetWindowOrgY+0xe>
 80116f4:	f7f9 f922 	bl	800a93c <GUI_ALLOC_h2p>
 80116f8:	f9b0 0002 	ldrsh.w	r0, [r0, #2]
 80116fc:	bd08      	pop	{r3, pc}
 80116fe:	bd08      	pop	{r3, pc}

08011700 <WM_GetParent>:
 8011700:	b508      	push	{r3, lr}
 8011702:	4603      	mov	r3, r0
 8011704:	b110      	cbz	r0, 801170c <WM_GetParent+0xc>
 8011706:	f7f9 f919 	bl	800a93c <GUI_ALLOC_h2p>
 801170a:	6983      	ldr	r3, [r0, #24]
 801170c:	4618      	mov	r0, r3
 801170e:	bd08      	pop	{r3, pc}

08011710 <WM_BringToBottom>:
 8011710:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011714:	4604      	mov	r4, r0
 8011716:	b087      	sub	sp, #28
 8011718:	2800      	cmp	r0, #0
 801171a:	d039      	beq.n	8011790 <WM_BringToBottom+0x80>
 801171c:	f7f9 f918 	bl	800a950 <GUI_ALLOC_LockH>
 8011720:	ad04      	add	r5, sp, #16
 8011722:	4603      	mov	r3, r0
 8011724:	9001      	str	r0, [sp, #4]
 8011726:	c803      	ldmia	r0, {r0, r1}
 8011728:	6a1e      	ldr	r6, [r3, #32]
 801172a:	f8d3 9028 	ldr.w	r9, [r3, #40]	; 0x28
 801172e:	e885 0003 	stmia.w	r5, {r0, r1}
 8011732:	a801      	add	r0, sp, #4
 8011734:	f7f9 f91a 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011738:	4620      	mov	r0, r4
 801173a:	f000 fdc1 	bl	80122c0 <WM__GetPrevSibling>
 801173e:	4607      	mov	r7, r0
 8011740:	b330      	cbz	r0, 8011790 <WM_BringToBottom+0x80>
 8011742:	4620      	mov	r0, r4
 8011744:	f7ff ffdc 	bl	8011700 <WM_GetParent>
 8011748:	f019 0f02 	tst.w	r9, #2
 801174c:	4680      	mov	r8, r0
 801174e:	d004      	beq.n	801175a <WM_BringToBottom+0x4a>
 8011750:	4601      	mov	r1, r0
 8011752:	4632      	mov	r2, r6
 8011754:	4628      	mov	r0, r5
 8011756:	f7ff f9a6 	bl	8010aa6 <WM__InvalidateRectEx>
 801175a:	4620      	mov	r0, r4
 801175c:	f7f9 f8f8 	bl	800a950 <GUI_ALLOC_LockH>
 8011760:	9001      	str	r0, [sp, #4]
 8011762:	4640      	mov	r0, r8
 8011764:	f7f9 f8f4 	bl	800a950 <GUI_ALLOC_LockH>
 8011768:	9003      	str	r0, [sp, #12]
 801176a:	4638      	mov	r0, r7
 801176c:	f7f9 f8f0 	bl	800a950 <GUI_ALLOC_LockH>
 8011770:	9b03      	ldr	r3, [sp, #12]
 8011772:	9a01      	ldr	r2, [sp, #4]
 8011774:	69d9      	ldr	r1, [r3, #28]
 8011776:	6206      	str	r6, [r0, #32]
 8011778:	9002      	str	r0, [sp, #8]
 801177a:	a801      	add	r0, sp, #4
 801177c:	6211      	str	r1, [r2, #32]
 801177e:	61dc      	str	r4, [r3, #28]
 8011780:	f7f9 f8f4 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011784:	a803      	add	r0, sp, #12
 8011786:	f7f9 f8f1 	bl	800a96c <GUI_ALLOC_UnlockH>
 801178a:	a802      	add	r0, sp, #8
 801178c:	f7f9 f8ee 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011790:	b007      	add	sp, #28
 8011792:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08011798 <WM_HasFocus>:
 8011798:	4b04      	ldr	r3, [pc, #16]	; (80117ac <WM_HasFocus+0x14>)
 801179a:	681a      	ldr	r2, [r3, #0]
 801179c:	4b04      	ldr	r3, [pc, #16]	; (80117b0 <WM_HasFocus+0x18>)
 801179e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80117a2:	1a1b      	subs	r3, r3, r0
 80117a4:	4258      	negs	r0, r3
 80117a6:	4158      	adcs	r0, r3
 80117a8:	4770      	bx	lr
 80117aa:	bf00      	nop
 80117ac:	2002db4c 	.word	0x2002db4c
 80117b0:	2002db3c 	.word	0x2002db3c

080117b4 <WM_IsFocusable>:
 80117b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80117b6:	4604      	mov	r4, r0
 80117b8:	b908      	cbnz	r0, 80117be <WM_IsFocusable+0xa>
 80117ba:	2000      	movs	r0, #0
 80117bc:	e010      	b.n	80117e0 <WM_IsFocusable+0x2c>
 80117be:	f7f9 f8bd 	bl	800a93c <GUI_ALLOC_h2p>
 80117c2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80117c4:	079a      	lsls	r2, r3, #30
 80117c6:	d5f8      	bpl.n	80117ba <WM_IsFocusable+0x6>
 80117c8:	f013 0310 	ands.w	r3, r3, #16
 80117cc:	d1f5      	bne.n	80117ba <WM_IsFocusable+0x6>
 80117ce:	9303      	str	r3, [sp, #12]
 80117d0:	a904      	add	r1, sp, #16
 80117d2:	231f      	movs	r3, #31
 80117d4:	4620      	mov	r0, r4
 80117d6:	f841 3d10 	str.w	r3, [r1, #-16]!
 80117da:	f7ff f860 	bl	801089e <WM_SendMessage>
 80117de:	9803      	ldr	r0, [sp, #12]
 80117e0:	b004      	add	sp, #16
 80117e2:	bd10      	pop	{r4, pc}

080117e4 <WM_IsWindow>:
 80117e4:	f7ff b812 	b.w	801080c <WM__IsWindow>

080117e8 <WM_OnKey>:
 80117e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80117ea:	4a0a      	ldr	r2, [pc, #40]	; (8011814 <WM_OnKey+0x2c>)
 80117ec:	4603      	mov	r3, r0
 80117ee:	6810      	ldr	r0, [r2, #0]
 80117f0:	4a09      	ldr	r2, [pc, #36]	; (8011818 <WM_OnKey+0x30>)
 80117f2:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 80117f6:	b148      	cbz	r0, 801180c <WM_OnKey+0x24>
 80117f8:	9300      	str	r3, [sp, #0]
 80117fa:	230e      	movs	r3, #14
 80117fc:	9101      	str	r1, [sp, #4]
 80117fe:	a902      	add	r1, sp, #8
 8011800:	9302      	str	r3, [sp, #8]
 8011802:	f8cd d014 	str.w	sp, [sp, #20]
 8011806:	f000 fdb5 	bl	8012374 <WM__SendMessage>
 801180a:	2001      	movs	r0, #1
 801180c:	b007      	add	sp, #28
 801180e:	f85d fb04 	ldr.w	pc, [sp], #4
 8011812:	bf00      	nop
 8011814:	2002db4c 	.word	0x2002db4c
 8011818:	2002db3c 	.word	0x2002db3c

0801181c <WM_Update>:
 801181c:	b510      	push	{r4, lr}
 801181e:	4604      	mov	r4, r0
 8011820:	b09e      	sub	sp, #120	; 0x78
 8011822:	b170      	cbz	r0, 8011842 <WM_Update+0x26>
 8011824:	a801      	add	r0, sp, #4
 8011826:	f7f9 fc65 	bl	800b0f4 <GUI_SaveContext_W>
 801182a:	4620      	mov	r0, r4
 801182c:	f7ff fcd6 	bl	80111dc <WM__Paint>
 8011830:	a801      	add	r0, sp, #4
 8011832:	f7f9 fc69 	bl	800b108 <GUI_RestoreContext>
 8011836:	980d      	ldr	r0, [sp, #52]	; 0x34
 8011838:	f7fb f9fa 	bl	800cc30 <LCD_SetColor>
 801183c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801183e:	f7fb f9f1 	bl	800cc24 <LCD_SetBkColor>
 8011842:	b01e      	add	sp, #120	; 0x78
 8011844:	bd10      	pop	{r4, pc}

08011846 <WM_Paint>:
 8011846:	b510      	push	{r4, lr}
 8011848:	4604      	mov	r4, r0
 801184a:	f7ff f980 	bl	8010b4e <WM_InvalidateWindow>
 801184e:	4620      	mov	r0, r4
 8011850:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011854:	f7ff bfe2 	b.w	801181c <WM_Update>

08011858 <WM_ResizeWindow>:
 8011858:	ea51 0302 	orrs.w	r3, r1, r2
 801185c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011860:	4680      	mov	r8, r0
 8011862:	b08a      	sub	sp, #40	; 0x28
 8011864:	460f      	mov	r7, r1
 8011866:	4616      	mov	r6, r2
 8011868:	d06e      	beq.n	8011948 <WM_ResizeWindow+0xf0>
 801186a:	2800      	cmp	r0, #0
 801186c:	d06c      	beq.n	8011948 <WM_ResizeWindow+0xf0>
 801186e:	f7f9 f86f 	bl	800a950 <GUI_ALLOC_LockH>
 8011872:	ac04      	add	r4, sp, #16
 8011874:	4603      	mov	r3, r0
 8011876:	9003      	str	r0, [sp, #12]
 8011878:	ad06      	add	r5, sp, #24
 801187a:	c803      	ldmia	r0, {r0, r1}
 801187c:	e884 0003 	stmia.w	r4, {r0, r1}
 8011880:	e885 0003 	stmia.w	r5, {r0, r1}
 8011884:	b17f      	cbz	r7, 80118a6 <WM_ResizeWindow+0x4e>
 8011886:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8011888:	f402 7220 	and.w	r2, r2, #640	; 0x280
 801188c:	2a80      	cmp	r2, #128	; 0x80
 801188e:	bf0b      	itete	eq
 8011890:	f8bd 2018 	ldrheq.w	r2, [sp, #24]
 8011894:	f8bd 201c 	ldrhne.w	r2, [sp, #28]
 8011898:	1bd7      	subeq	r7, r2, r7
 801189a:	18bf      	addne	r7, r7, r2
 801189c:	bf0c      	ite	eq
 801189e:	f8ad 7018 	strheq.w	r7, [sp, #24]
 80118a2:	f8ad 701c 	strhne.w	r7, [sp, #28]
 80118a6:	b186      	cbz	r6, 80118ca <WM_ResizeWindow+0x72>
 80118a8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80118aa:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 80118ae:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 80118b2:	bf0b      	itete	eq
 80118b4:	f8bd 201a 	ldrheq.w	r2, [sp, #26]
 80118b8:	f8bd 201e 	ldrhne.w	r2, [sp, #30]
 80118bc:	1b96      	subeq	r6, r2, r6
 80118be:	18b6      	addne	r6, r6, r2
 80118c0:	bf0c      	ite	eq
 80118c2:	f8ad 601a 	strheq.w	r6, [sp, #26]
 80118c6:	f8ad 601e 	strhne.w	r6, [sp, #30]
 80118ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80118cc:	03da      	lsls	r2, r3, #15
 80118ce:	d502      	bpl.n	80118d6 <WM_ResizeWindow+0x7e>
 80118d0:	4640      	mov	r0, r8
 80118d2:	f7fe ffab 	bl	801082c <WM__InvalidateDrawAndDescs>
 80118d6:	9b03      	ldr	r3, [sp, #12]
 80118d8:	e895 0003 	ldmia.w	r5, {r0, r1}
 80118dc:	e883 0003 	stmia.w	r3, {r0, r1}
 80118e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80118e2:	079b      	lsls	r3, r3, #30
 80118e4:	d50a      	bpl.n	80118fc <WM_ResizeWindow+0xa4>
 80118e6:	462a      	mov	r2, r5
 80118e8:	4621      	mov	r1, r4
 80118ea:	a808      	add	r0, sp, #32
 80118ec:	f7f9 fb1e 	bl	800af2c <GUI_MergeRect>
 80118f0:	9b03      	ldr	r3, [sp, #12]
 80118f2:	a808      	add	r0, sp, #32
 80118f4:	6a1a      	ldr	r2, [r3, #32]
 80118f6:	6999      	ldr	r1, [r3, #24]
 80118f8:	f7ff f8d5 	bl	8010aa6 <WM__InvalidateRectEx>
 80118fc:	f9bd 001e 	ldrsh.w	r0, [sp, #30]
 8011900:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8011904:	f9bd 4018 	ldrsh.w	r4, [sp, #24]
 8011908:	f9bd 1010 	ldrsh.w	r1, [sp, #16]
 801190c:	1bc0      	subs	r0, r0, r7
 801190e:	f9bd 601c 	ldrsh.w	r6, [sp, #28]
 8011912:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011916:	1a61      	subs	r1, r4, r1
 8011918:	f9bd 501a 	ldrsh.w	r5, [sp, #26]
 801191c:	ac0a      	add	r4, sp, #40	; 0x28
 801191e:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8011922:	1af3      	subs	r3, r6, r3
 8011924:	9000      	str	r0, [sp, #0]
 8011926:	1aaa      	subs	r2, r5, r2
 8011928:	9803      	ldr	r0, [sp, #12]
 801192a:	f000 fd62 	bl	80123f2 <WM__UpdateChildPositions>
 801192e:	f854 1d1c 	ldr.w	r1, [r4, #-28]!
 8011932:	f101 0008 	add.w	r0, r1, #8
 8011936:	f7fa fba9 	bl	800c08c <GUI__IntersectRect>
 801193a:	4640      	mov	r0, r8
 801193c:	2105      	movs	r1, #5
 801193e:	f7fe ffb2 	bl	80108a6 <WM__SendMsgNoData>
 8011942:	4620      	mov	r0, r4
 8011944:	f7f9 f812 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011948:	b00a      	add	sp, #40	; 0x28
 801194a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801194e <WM_SendMessageNoPara>:
 801194e:	f000 bd3c 	b.w	80123ca <WM__SendMessageNoPara>

08011952 <WM_SendToParent>:
 8011952:	b538      	push	{r3, r4, r5, lr}
 8011954:	4605      	mov	r5, r0
 8011956:	460c      	mov	r4, r1
 8011958:	b141      	cbz	r1, 801196c <WM_SendToParent+0x1a>
 801195a:	f7ff fed1 	bl	8011700 <WM_GetParent>
 801195e:	b128      	cbz	r0, 801196c <WM_SendToParent+0x1a>
 8011960:	60a5      	str	r5, [r4, #8]
 8011962:	4621      	mov	r1, r4
 8011964:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011968:	f000 bd04 	b.w	8012374 <WM__SendMessage>
 801196c:	bd38      	pop	{r3, r4, r5, pc}

0801196e <WM_NotifyParent>:
 801196e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011970:	2326      	movs	r3, #38	; 0x26
 8011972:	9103      	str	r1, [sp, #12]
 8011974:	4669      	mov	r1, sp
 8011976:	9300      	str	r3, [sp, #0]
 8011978:	f7ff ffeb 	bl	8011952 <WM_SendToParent>
 801197c:	b005      	add	sp, #20
 801197e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08011984 <WM_SetCreateFlags>:
 8011984:	4b02      	ldr	r3, [pc, #8]	; (8011990 <WM_SetCreateFlags+0xc>)
 8011986:	681a      	ldr	r2, [r3, #0]
 8011988:	6018      	str	r0, [r3, #0]
 801198a:	4610      	mov	r0, r2
 801198c:	4770      	bx	lr
 801198e:	bf00      	nop
 8011990:	2002db5c 	.word	0x2002db5c

08011994 <WM_SetFocus>:
 8011994:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011996:	b087      	sub	sp, #28
 8011998:	4604      	mov	r4, r0
 801199a:	2210      	movs	r2, #16
 801199c:	2100      	movs	r1, #0
 801199e:	a802      	add	r0, sp, #8
 80119a0:	f003 ffa8 	bl	80158f4 <memset>
 80119a4:	2c00      	cmp	r4, #0
 80119a6:	d03a      	beq.n	8011a1e <WM_SetFocus+0x8a>
 80119a8:	4b1f      	ldr	r3, [pc, #124]	; (8011a28 <WM_SetFocus+0x94>)
 80119aa:	4a20      	ldr	r2, [pc, #128]	; (8011a2c <WM_SetFocus+0x98>)
 80119ac:	6819      	ldr	r1, [r3, #0]
 80119ae:	461e      	mov	r6, r3
 80119b0:	4617      	mov	r7, r2
 80119b2:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 80119b6:	4284      	cmp	r4, r0
 80119b8:	d031      	beq.n	8011a1e <WM_SetFocus+0x8a>
 80119ba:	231e      	movs	r3, #30
 80119bc:	e88d 0011 	stmia.w	sp, {r0, r4}
 80119c0:	9302      	str	r3, [sp, #8]
 80119c2:	b110      	cbz	r0, 80119ca <WM_SetFocus+0x36>
 80119c4:	a902      	add	r1, sp, #8
 80119c6:	f000 fcd5 	bl	8012374 <WM__SendMessage>
 80119ca:	2301      	movs	r3, #1
 80119cc:	a902      	add	r1, sp, #8
 80119ce:	4620      	mov	r0, r4
 80119d0:	9305      	str	r3, [sp, #20]
 80119d2:	f000 fccf 	bl	8012374 <WM__SendMessage>
 80119d6:	9d05      	ldr	r5, [sp, #20]
 80119d8:	bb15      	cbnz	r5, 8011a20 <WM_SetFocus+0x8c>
 80119da:	6833      	ldr	r3, [r6, #0]
 80119dc:	2620      	movs	r6, #32
 80119de:	f847 4023 	str.w	r4, [r7, r3, lsl #2]
 80119e2:	4620      	mov	r0, r4
 80119e4:	f7ff fe8c 	bl	8011700 <WM_GetParent>
 80119e8:	4604      	mov	r4, r0
 80119ea:	b130      	cbz	r0, 80119fa <WM_SetFocus+0x66>
 80119ec:	a902      	add	r1, sp, #8
 80119ee:	9602      	str	r6, [sp, #8]
 80119f0:	f8cd d014 	str.w	sp, [sp, #20]
 80119f4:	f000 fcbe 	bl	8012374 <WM__SendMessage>
 80119f8:	e7f3      	b.n	80119e2 <WM_SetFocus+0x4e>
 80119fa:	9c00      	ldr	r4, [sp, #0]
 80119fc:	4620      	mov	r0, r4
 80119fe:	f7fe ff05 	bl	801080c <WM__IsWindow>
 8011a02:	b168      	cbz	r0, 8011a20 <WM_SetFocus+0x8c>
 8011a04:	2620      	movs	r6, #32
 8011a06:	4620      	mov	r0, r4
 8011a08:	f7ff fe7a 	bl	8011700 <WM_GetParent>
 8011a0c:	4604      	mov	r4, r0
 8011a0e:	b138      	cbz	r0, 8011a20 <WM_SetFocus+0x8c>
 8011a10:	a902      	add	r1, sp, #8
 8011a12:	9602      	str	r6, [sp, #8]
 8011a14:	f8cd d014 	str.w	sp, [sp, #20]
 8011a18:	f000 fcac 	bl	8012374 <WM__SendMessage>
 8011a1c:	e7f3      	b.n	8011a06 <WM_SetFocus+0x72>
 8011a1e:	2501      	movs	r5, #1
 8011a20:	4628      	mov	r0, r5
 8011a22:	b007      	add	sp, #28
 8011a24:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011a26:	bf00      	nop
 8011a28:	2002db4c 	.word	0x2002db4c
 8011a2c:	2002db3c 	.word	0x2002db3c

08011a30 <WM_SetSize>:
 8011a30:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8011a34:	460f      	mov	r7, r1
 8011a36:	4690      	mov	r8, r2
 8011a38:	4606      	mov	r6, r0
 8011a3a:	b1e0      	cbz	r0, 8011a76 <WM_SetSize+0x46>
 8011a3c:	f7f8 ff88 	bl	800a950 <GUI_ALLOC_LockH>
 8011a40:	f9b0 5004 	ldrsh.w	r5, [r0, #4]
 8011a44:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011a48:	f10d 0e08 	add.w	lr, sp, #8
 8011a4c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8011a50:	1b2c      	subs	r4, r5, r4
 8011a52:	f84e 0d04 	str.w	r0, [lr, #-4]!
 8011a56:	3401      	adds	r4, #1
 8011a58:	1b3d      	subs	r5, r7, r4
 8011a5a:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 8011a5e:	4670      	mov	r0, lr
 8011a60:	1ae3      	subs	r3, r4, r3
 8011a62:	3301      	adds	r3, #1
 8011a64:	ebc3 0408 	rsb	r4, r3, r8
 8011a68:	f7f8 ff80 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011a6c:	4629      	mov	r1, r5
 8011a6e:	4630      	mov	r0, r6
 8011a70:	4622      	mov	r2, r4
 8011a72:	f7ff fef1 	bl	8011858 <WM_ResizeWindow>
 8011a76:	b002      	add	sp, #8
 8011a78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011a7c <WM_SetUserClipRect>:
 8011a7c:	4b04      	ldr	r3, [pc, #16]	; (8011a90 <WM_SetUserClipRect+0x14>)
 8011a7e:	681b      	ldr	r3, [r3, #0]
 8011a80:	b510      	push	{r4, lr}
 8011a82:	6c5c      	ldr	r4, [r3, #68]	; 0x44
 8011a84:	6458      	str	r0, [r3, #68]	; 0x44
 8011a86:	f7fe fe9d 	bl	80107c4 <WM__ActivateClipRect>
 8011a8a:	4620      	mov	r0, r4
 8011a8c:	bd10      	pop	{r4, pc}
 8011a8e:	bf00      	nop
 8011a90:	2000003c 	.word	0x2000003c

08011a94 <WM_SetWindowPos>:
 8011a94:	b570      	push	{r4, r5, r6, lr}
 8011a96:	4604      	mov	r4, r0
 8011a98:	460d      	mov	r5, r1
 8011a9a:	4616      	mov	r6, r2
 8011a9c:	4619      	mov	r1, r3
 8011a9e:	9a04      	ldr	r2, [sp, #16]
 8011aa0:	f7ff ffc6 	bl	8011a30 <WM_SetSize>
 8011aa4:	4632      	mov	r2, r6
 8011aa6:	4629      	mov	r1, r5
 8011aa8:	4620      	mov	r0, r4
 8011aaa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011aae:	f000 b90c 	b.w	8011cca <WM_MoveTo>

08011ab2 <WM_InvalidateWindowAndDescs>:
 8011ab2:	b510      	push	{r4, lr}
 8011ab4:	4604      	mov	r4, r0
 8011ab6:	b170      	cbz	r0, 8011ad6 <WM_InvalidateWindowAndDescs+0x24>
 8011ab8:	f7ff f849 	bl	8010b4e <WM_InvalidateWindow>
 8011abc:	4620      	mov	r0, r4
 8011abe:	f7ff fda9 	bl	8011614 <WM_GetFirstChild>
 8011ac2:	4604      	mov	r4, r0
 8011ac4:	b13c      	cbz	r4, 8011ad6 <WM_InvalidateWindowAndDescs+0x24>
 8011ac6:	4620      	mov	r0, r4
 8011ac8:	f7ff fff3 	bl	8011ab2 <WM_InvalidateWindowAndDescs>
 8011acc:	4620      	mov	r0, r4
 8011ace:	f7f8 ff35 	bl	800a93c <GUI_ALLOC_h2p>
 8011ad2:	6a04      	ldr	r4, [r0, #32]
 8011ad4:	e7f6      	b.n	8011ac4 <WM_InvalidateWindowAndDescs+0x12>
 8011ad6:	bd10      	pop	{r4, pc}

08011ad8 <WM_ShowWindow>:
 8011ad8:	b513      	push	{r0, r1, r4, lr}
 8011ada:	4604      	mov	r4, r0
 8011adc:	b170      	cbz	r0, 8011afc <WM_ShowWindow+0x24>
 8011ade:	f7f8 ff37 	bl	800a950 <GUI_ALLOC_LockH>
 8011ae2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011ae4:	9001      	str	r0, [sp, #4]
 8011ae6:	079a      	lsls	r2, r3, #30
 8011ae8:	d405      	bmi.n	8011af6 <WM_ShowWindow+0x1e>
 8011aea:	f043 0302 	orr.w	r3, r3, #2
 8011aee:	6283      	str	r3, [r0, #40]	; 0x28
 8011af0:	4620      	mov	r0, r4
 8011af2:	f7ff ffde 	bl	8011ab2 <WM_InvalidateWindowAndDescs>
 8011af6:	a801      	add	r0, sp, #4
 8011af8:	f7f8 ff38 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011afc:	b002      	add	sp, #8
 8011afe:	bd10      	pop	{r4, pc}

08011b00 <_MULTIBUF_End>:
 8011b00:	b570      	push	{r4, r5, r6, lr}
 8011b02:	2400      	movs	r4, #0
 8011b04:	4e07      	ldr	r6, [pc, #28]	; (8011b24 <_MULTIBUF_End+0x24>)
 8011b06:	4d08      	ldr	r5, [pc, #32]	; (8011b28 <_MULTIBUF_End+0x28>)
 8011b08:	6832      	ldr	r2, [r6, #0]
 8011b0a:	682b      	ldr	r3, [r5, #0]
 8011b0c:	b102      	cbz	r2, 8011b10 <_MULTIBUF_End+0x10>
 8011b0e:	4013      	ands	r3, r2
 8011b10:	40e3      	lsrs	r3, r4
 8011b12:	07db      	lsls	r3, r3, #31
 8011b14:	d502      	bpl.n	8011b1c <_MULTIBUF_End+0x1c>
 8011b16:	4620      	mov	r0, r4
 8011b18:	f7f9 ff06 	bl	800b928 <GUI_MULTIBUF_EndEx>
 8011b1c:	3401      	adds	r4, #1
 8011b1e:	2c02      	cmp	r4, #2
 8011b20:	d1f2      	bne.n	8011b08 <_MULTIBUF_End+0x8>
 8011b22:	bd70      	pop	{r4, r5, r6, pc}
 8011b24:	2002dabc 	.word	0x2002dabc
 8011b28:	2002db54 	.word	0x2002db54

08011b2c <_MULTIBUF_Begin>:
 8011b2c:	b570      	push	{r4, r5, r6, lr}
 8011b2e:	2400      	movs	r4, #0
 8011b30:	4e07      	ldr	r6, [pc, #28]	; (8011b50 <_MULTIBUF_Begin+0x24>)
 8011b32:	4d08      	ldr	r5, [pc, #32]	; (8011b54 <_MULTIBUF_Begin+0x28>)
 8011b34:	6832      	ldr	r2, [r6, #0]
 8011b36:	682b      	ldr	r3, [r5, #0]
 8011b38:	b102      	cbz	r2, 8011b3c <_MULTIBUF_Begin+0x10>
 8011b3a:	4013      	ands	r3, r2
 8011b3c:	40e3      	lsrs	r3, r4
 8011b3e:	07db      	lsls	r3, r3, #31
 8011b40:	d502      	bpl.n	8011b48 <_MULTIBUF_Begin+0x1c>
 8011b42:	4620      	mov	r0, r4
 8011b44:	f7f9 febc 	bl	800b8c0 <GUI_MULTIBUF_BeginEx>
 8011b48:	3401      	adds	r4, #1
 8011b4a:	2c02      	cmp	r4, #2
 8011b4c:	d1f2      	bne.n	8011b34 <_MULTIBUF_Begin+0x8>
 8011b4e:	bd70      	pop	{r4, r5, r6, pc}
 8011b50:	2002dabc 	.word	0x2002dabc
 8011b54:	2002db54 	.word	0x2002db54

08011b58 <WM_MULTIBUF_Enable>:
 8011b58:	4a05      	ldr	r2, [pc, #20]	; (8011b70 <WM_MULTIBUF_Enable+0x18>)
 8011b5a:	6813      	ldr	r3, [r2, #0]
 8011b5c:	3300      	adds	r3, #0
 8011b5e:	bf18      	it	ne
 8011b60:	2301      	movne	r3, #1
 8011b62:	b110      	cbz	r0, 8011b6a <WM_MULTIBUF_Enable+0x12>
 8011b64:	4903      	ldr	r1, [pc, #12]	; (8011b74 <WM_MULTIBUF_Enable+0x1c>)
 8011b66:	6011      	str	r1, [r2, #0]
 8011b68:	e000      	b.n	8011b6c <WM_MULTIBUF_Enable+0x14>
 8011b6a:	6010      	str	r0, [r2, #0]
 8011b6c:	4618      	mov	r0, r3
 8011b6e:	4770      	bx	lr
 8011b70:	2002db6c 	.word	0x2002db6c
 8011b74:	0801dd14 	.word	0x0801dd14

08011b78 <_MoveDescendents>:
 8011b78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011b7c:	b088      	sub	sp, #32
 8011b7e:	4616      	mov	r6, r2
 8011b80:	2210      	movs	r2, #16
 8011b82:	2703      	movs	r7, #3
 8011b84:	f10d 0808 	add.w	r8, sp, #8
 8011b88:	4604      	mov	r4, r0
 8011b8a:	460d      	mov	r5, r1
 8011b8c:	eb0d 0002 	add.w	r0, sp, r2
 8011b90:	2100      	movs	r1, #0
 8011b92:	f003 feaf 	bl	80158f4 <memset>
 8011b96:	b32c      	cbz	r4, 8011be4 <_MoveDescendents+0x6c>
 8011b98:	4620      	mov	r0, r4
 8011b9a:	f7f8 fed9 	bl	800a950 <GUI_ALLOC_LockH>
 8011b9e:	4632      	mov	r2, r6
 8011ba0:	4629      	mov	r1, r5
 8011ba2:	9001      	str	r0, [sp, #4]
 8011ba4:	f7f9 f9ed 	bl	800af82 <GUI_MoveRect>
 8011ba8:	9801      	ldr	r0, [sp, #4]
 8011baa:	4632      	mov	r2, r6
 8011bac:	4629      	mov	r1, r5
 8011bae:	3008      	adds	r0, #8
 8011bb0:	f7f9 f9e7 	bl	800af82 <GUI_MoveRect>
 8011bb4:	9b01      	ldr	r3, [sp, #4]
 8011bb6:	a801      	add	r0, sp, #4
 8011bb8:	f8d3 a01c 	ldr.w	sl, [r3, #28]
 8011bbc:	f8d3 9020 	ldr.w	r9, [r3, #32]
 8011bc0:	f7f8 fed4 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011bc4:	4632      	mov	r2, r6
 8011bc6:	4629      	mov	r1, r5
 8011bc8:	4650      	mov	r0, sl
 8011bca:	f7ff ffd5 	bl	8011b78 <_MoveDescendents>
 8011bce:	4620      	mov	r0, r4
 8011bd0:	a904      	add	r1, sp, #16
 8011bd2:	9704      	str	r7, [sp, #16]
 8011bd4:	f8cd 801c 	str.w	r8, [sp, #28]
 8011bd8:	464c      	mov	r4, r9
 8011bda:	9502      	str	r5, [sp, #8]
 8011bdc:	9603      	str	r6, [sp, #12]
 8011bde:	f000 fbc9 	bl	8012374 <WM__SendMessage>
 8011be2:	e7d8      	b.n	8011b96 <_MoveDescendents+0x1e>
 8011be4:	b008      	add	sp, #32
 8011be6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08011bea <WM__MoveWindow>:
 8011bea:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011bee:	b08b      	sub	sp, #44	; 0x2c
 8011bf0:	4606      	mov	r6, r0
 8011bf2:	460d      	mov	r5, r1
 8011bf4:	4614      	mov	r4, r2
 8011bf6:	2100      	movs	r1, #0
 8011bf8:	2210      	movs	r2, #16
 8011bfa:	a806      	add	r0, sp, #24
 8011bfc:	f003 fe7a 	bl	80158f4 <memset>
 8011c00:	2e00      	cmp	r6, #0
 8011c02:	d043      	beq.n	8011c8c <WM__MoveWindow+0xa2>
 8011c04:	b90d      	cbnz	r5, 8011c0a <WM__MoveWindow+0x20>
 8011c06:	2c00      	cmp	r4, #0
 8011c08:	d040      	beq.n	8011c8c <WM__MoveWindow+0xa2>
 8011c0a:	4630      	mov	r0, r6
 8011c0c:	f10d 0808 	add.w	r8, sp, #8
 8011c10:	f7f8 fe9e 	bl	800a950 <GUI_ALLOC_LockH>
 8011c14:	4603      	mov	r3, r0
 8011c16:	9001      	str	r0, [sp, #4]
 8011c18:	4622      	mov	r2, r4
 8011c1a:	af0a      	add	r7, sp, #40	; 0x28
 8011c1c:	c803      	ldmia	r0, {r0, r1}
 8011c1e:	e888 0003 	stmia.w	r8, {r0, r1}
 8011c22:	4618      	mov	r0, r3
 8011c24:	4629      	mov	r1, r5
 8011c26:	f7f9 f9ac 	bl	800af82 <GUI_MoveRect>
 8011c2a:	9801      	ldr	r0, [sp, #4]
 8011c2c:	4622      	mov	r2, r4
 8011c2e:	4629      	mov	r1, r5
 8011c30:	3008      	adds	r0, #8
 8011c32:	f7f9 f9a6 	bl	800af82 <GUI_MoveRect>
 8011c36:	f857 3d24 	ldr.w	r3, [r7, #-36]!
 8011c3a:	f8d3 901c 	ldr.w	r9, [r3, #28]
 8011c3e:	4638      	mov	r0, r7
 8011c40:	f7f8 fe94 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011c44:	4622      	mov	r2, r4
 8011c46:	4629      	mov	r1, r5
 8011c48:	4648      	mov	r0, r9
 8011c4a:	f7ff ff95 	bl	8011b78 <_MoveDescendents>
 8011c4e:	4630      	mov	r0, r6
 8011c50:	f7f8 fe7e 	bl	800a950 <GUI_ALLOC_LockH>
 8011c54:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8011c56:	9001      	str	r0, [sp, #4]
 8011c58:	0792      	lsls	r2, r2, #30
 8011c5a:	d50a      	bpl.n	8011c72 <WM__MoveWindow+0x88>
 8011c5c:	6981      	ldr	r1, [r0, #24]
 8011c5e:	b141      	cbz	r1, 8011c72 <WM__MoveWindow+0x88>
 8011c60:	6a02      	ldr	r2, [r0, #32]
 8011c62:	f7fe ff0b 	bl	8010a7c <WM__InvalidateParent>
 8011c66:	9b01      	ldr	r3, [sp, #4]
 8011c68:	4640      	mov	r0, r8
 8011c6a:	6a1a      	ldr	r2, [r3, #32]
 8011c6c:	6999      	ldr	r1, [r3, #24]
 8011c6e:	f7fe ff05 	bl	8010a7c <WM__InvalidateParent>
 8011c72:	4638      	mov	r0, r7
 8011c74:	f7f8 fe7a 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011c78:	2303      	movs	r3, #3
 8011c7a:	a906      	add	r1, sp, #24
 8011c7c:	4630      	mov	r0, r6
 8011c7e:	9306      	str	r3, [sp, #24]
 8011c80:	ab04      	add	r3, sp, #16
 8011c82:	9504      	str	r5, [sp, #16]
 8011c84:	9309      	str	r3, [sp, #36]	; 0x24
 8011c86:	9405      	str	r4, [sp, #20]
 8011c88:	f000 fb74 	bl	8012374 <WM__SendMessage>
 8011c8c:	b00b      	add	sp, #44	; 0x2c
 8011c8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08011c92 <WM__MoveTo>:
 8011c92:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011c94:	460c      	mov	r4, r1
 8011c96:	4615      	mov	r5, r2
 8011c98:	4606      	mov	r6, r0
 8011c9a:	b190      	cbz	r0, 8011cc2 <WM__MoveTo+0x30>
 8011c9c:	f7f8 fe58 	bl	800a950 <GUI_ALLOC_LockH>
 8011ca0:	f9b0 1000 	ldrsh.w	r1, [r0]
 8011ca4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011ca8:	ab02      	add	r3, sp, #8
 8011caa:	1a64      	subs	r4, r4, r1
 8011cac:	1aad      	subs	r5, r5, r2
 8011cae:	f843 0d04 	str.w	r0, [r3, #-4]!
 8011cb2:	4618      	mov	r0, r3
 8011cb4:	f7f8 fe5a 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011cb8:	462a      	mov	r2, r5
 8011cba:	4621      	mov	r1, r4
 8011cbc:	4630      	mov	r0, r6
 8011cbe:	f7ff ff94 	bl	8011bea <WM__MoveWindow>
 8011cc2:	b002      	add	sp, #8
 8011cc4:	bd70      	pop	{r4, r5, r6, pc}

08011cc6 <WM_MoveWindow>:
 8011cc6:	f7ff bf90 	b.w	8011bea <WM__MoveWindow>

08011cca <WM_MoveTo>:
 8011cca:	f7ff bfe2 	b.w	8011c92 <WM__MoveTo>

08011cce <_cbPaintWindowAndDescs>:
 8011cce:	f7ff bdba 	b.w	8011846 <WM_Paint>
	...

08011cd4 <WM_PaintWindowAndDescs>:
 8011cd4:	b510      	push	{r4, lr}
 8011cd6:	4604      	mov	r4, r0
 8011cd8:	f7ff fdb5 	bl	8011846 <WM_Paint>
 8011cdc:	2200      	movs	r2, #0
 8011cde:	4903      	ldr	r1, [pc, #12]	; (8011cec <WM_PaintWindowAndDescs+0x18>)
 8011ce0:	4620      	mov	r0, r4
 8011ce2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011ce6:	f7ff bc61 	b.w	80115ac <WM_ForEachDesc>
 8011cea:	bf00      	nop
 8011cec:	08011ccf 	.word	0x08011ccf

08011cf0 <WM__IsInWindow>:
 8011cf0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8011cf2:	f013 0302 	ands.w	r3, r3, #2
 8011cf6:	d012      	beq.n	8011d1e <WM__IsInWindow+0x2e>
 8011cf8:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011cfc:	428b      	cmp	r3, r1
 8011cfe:	dc10      	bgt.n	8011d22 <WM__IsInWindow+0x32>
 8011d00:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011d04:	4299      	cmp	r1, r3
 8011d06:	dc0c      	bgt.n	8011d22 <WM__IsInWindow+0x32>
 8011d08:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8011d0c:	4293      	cmp	r3, r2
 8011d0e:	dc08      	bgt.n	8011d22 <WM__IsInWindow+0x32>
 8011d10:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8011d14:	429a      	cmp	r2, r3
 8011d16:	bfcc      	ite	gt
 8011d18:	2000      	movgt	r0, #0
 8011d1a:	2001      	movle	r0, #1
 8011d1c:	4770      	bx	lr
 8011d1e:	4618      	mov	r0, r3
 8011d20:	4770      	bx	lr
 8011d22:	2000      	movs	r0, #0
 8011d24:	4770      	bx	lr

08011d26 <_Screen2hWin>:
 8011d26:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011d2a:	460e      	mov	r6, r1
 8011d2c:	4617      	mov	r7, r2
 8011d2e:	4698      	mov	r8, r3
 8011d30:	4604      	mov	r4, r0
 8011d32:	b320      	cbz	r0, 8011d7e <_Screen2hWin+0x58>
 8011d34:	f7f8 fe0c 	bl	800a950 <GUI_ALLOC_LockH>
 8011d38:	4642      	mov	r2, r8
 8011d3a:	4639      	mov	r1, r7
 8011d3c:	4605      	mov	r5, r0
 8011d3e:	9001      	str	r0, [sp, #4]
 8011d40:	f7ff ffd6 	bl	8011cf0 <WM__IsInWindow>
 8011d44:	4681      	mov	r9, r0
 8011d46:	b920      	cbnz	r0, 8011d52 <_Screen2hWin+0x2c>
 8011d48:	a801      	add	r0, sp, #4
 8011d4a:	f7f8 fe0f 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011d4e:	4648      	mov	r0, r9
 8011d50:	e016      	b.n	8011d80 <_Screen2hWin+0x5a>
 8011d52:	69ed      	ldr	r5, [r5, #28]
 8011d54:	b91d      	cbnz	r5, 8011d5e <_Screen2hWin+0x38>
 8011d56:	a801      	add	r0, sp, #4
 8011d58:	f7f8 fe08 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011d5c:	e00f      	b.n	8011d7e <_Screen2hWin+0x58>
 8011d5e:	42b5      	cmp	r5, r6
 8011d60:	d0f9      	beq.n	8011d56 <_Screen2hWin+0x30>
 8011d62:	4643      	mov	r3, r8
 8011d64:	463a      	mov	r2, r7
 8011d66:	4631      	mov	r1, r6
 8011d68:	4628      	mov	r0, r5
 8011d6a:	f7ff ffdc 	bl	8011d26 <_Screen2hWin>
 8011d6e:	2800      	cmp	r0, #0
 8011d70:	bf18      	it	ne
 8011d72:	4604      	movne	r4, r0
 8011d74:	4628      	mov	r0, r5
 8011d76:	f7f8 fde1 	bl	800a93c <GUI_ALLOC_h2p>
 8011d7a:	6a05      	ldr	r5, [r0, #32]
 8011d7c:	e7ea      	b.n	8011d54 <_Screen2hWin+0x2e>
 8011d7e:	4620      	mov	r0, r4
 8011d80:	b003      	add	sp, #12
 8011d82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08011d88 <WM_Screen2hWin>:
 8011d88:	4b06      	ldr	r3, [pc, #24]	; (8011da4 <WM_Screen2hWin+0x1c>)
 8011d8a:	b570      	push	{r4, r5, r6, lr}
 8011d8c:	460d      	mov	r5, r1
 8011d8e:	4604      	mov	r4, r0
 8011d90:	6818      	ldr	r0, [r3, #0]
 8011d92:	f7ff fc35 	bl	8011600 <WM_GetDesktopWindowEx>
 8011d96:	462b      	mov	r3, r5
 8011d98:	4622      	mov	r2, r4
 8011d9a:	2100      	movs	r1, #0
 8011d9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011da0:	f7ff bfc1 	b.w	8011d26 <_Screen2hWin>
 8011da4:	2002db4c 	.word	0x2002db4c

08011da8 <WM_DeleteTimer>:
 8011da8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011daa:	4605      	mov	r5, r0
 8011dac:	b168      	cbz	r0, 8011dca <WM_DeleteTimer+0x22>
 8011dae:	ac02      	add	r4, sp, #8
 8011db0:	f7f8 fdce 	bl	800a950 <GUI_ALLOC_LockH>
 8011db4:	f844 0d04 	str.w	r0, [r4, #-4]!
 8011db8:	6800      	ldr	r0, [r0, #0]
 8011dba:	f001 fed7 	bl	8013b6c <GUI_TIMER_Delete>
 8011dbe:	4620      	mov	r0, r4
 8011dc0:	f7f8 fdd4 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011dc4:	4628      	mov	r0, r5
 8011dc6:	f7f8 fdfd 	bl	800a9c4 <GUI_ALLOC_Free>
 8011dca:	b003      	add	sp, #12
 8011dcc:	bd30      	pop	{r4, r5, pc}

08011dce <WM__DeleteAssocTimer>:
 8011dce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011dd0:	4605      	mov	r5, r0
 8011dd2:	a801      	add	r0, sp, #4
 8011dd4:	f001 fe96 	bl	8013b04 <GUI_TIMER__GetFirstTimer>
 8011dd8:	4604      	mov	r4, r0
 8011dda:	b1dc      	cbz	r4, 8011e14 <WM__DeleteAssocTimer+0x46>
 8011ddc:	2101      	movs	r1, #1
 8011dde:	4620      	mov	r0, r4
 8011de0:	f001 fef6 	bl	8013bd0 <GUI_TIMER_GetFlag>
 8011de4:	9b01      	ldr	r3, [sp, #4]
 8011de6:	b183      	cbz	r3, 8011e0a <WM__DeleteAssocTimer+0x3c>
 8011de8:	b178      	cbz	r0, 8011e0a <WM__DeleteAssocTimer+0x3c>
 8011dea:	4618      	mov	r0, r3
 8011dec:	f7f8 fda6 	bl	800a93c <GUI_ALLOC_h2p>
 8011df0:	6843      	ldr	r3, [r0, #4]
 8011df2:	42ab      	cmp	r3, r5
 8011df4:	d109      	bne.n	8011e0a <WM__DeleteAssocTimer+0x3c>
 8011df6:	9e01      	ldr	r6, [sp, #4]
 8011df8:	a901      	add	r1, sp, #4
 8011dfa:	4620      	mov	r0, r4
 8011dfc:	f001 fe9a 	bl	8013b34 <GUI_TIMER__GetNextTimerLin>
 8011e00:	4604      	mov	r4, r0
 8011e02:	4630      	mov	r0, r6
 8011e04:	f7ff ffd0 	bl	8011da8 <WM_DeleteTimer>
 8011e08:	e7e7      	b.n	8011dda <WM__DeleteAssocTimer+0xc>
 8011e0a:	a901      	add	r1, sp, #4
 8011e0c:	4620      	mov	r0, r4
 8011e0e:	f001 fe91 	bl	8013b34 <GUI_TIMER__GetNextTimerLin>
 8011e12:	e7e1      	b.n	8011dd8 <WM__DeleteAssocTimer+0xa>
 8011e14:	b002      	add	sp, #8
 8011e16:	bd70      	pop	{r4, r5, r6, pc}

08011e18 <WM__IsInModalArea>:
 8011e18:	b570      	push	{r4, r5, r6, lr}
 8011e1a:	4604      	mov	r4, r0
 8011e1c:	b908      	cbnz	r0, 8011e22 <WM__IsInModalArea+0xa>
 8011e1e:	2000      	movs	r0, #0
 8011e20:	bd70      	pop	{r4, r5, r6, pc}
 8011e22:	4b11      	ldr	r3, [pc, #68]	; (8011e68 <WM__IsInModalArea+0x50>)
 8011e24:	681b      	ldr	r3, [r3, #0]
 8011e26:	2b00      	cmp	r3, #0
 8011e28:	da0f      	bge.n	8011e4a <WM__IsInModalArea+0x32>
 8011e2a:	4e10      	ldr	r6, [pc, #64]	; (8011e6c <WM__IsInModalArea+0x54>)
 8011e2c:	4620      	mov	r0, r4
 8011e2e:	4d10      	ldr	r5, [pc, #64]	; (8011e70 <WM__IsInModalArea+0x58>)
 8011e30:	6833      	ldr	r3, [r6, #0]
 8011e32:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
 8011e36:	6859      	ldr	r1, [r3, #4]
 8011e38:	f000 fa55 	bl	80122e6 <WM__IsAncestor>
 8011e3c:	6833      	ldr	r3, [r6, #0]
 8011e3e:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
 8011e42:	686a      	ldr	r2, [r5, #4]
 8011e44:	686b      	ldr	r3, [r5, #4]
 8011e46:	b942      	cbnz	r2, 8011e5a <WM__IsInModalArea+0x42>
 8011e48:	e00c      	b.n	8011e64 <WM__IsInModalArea+0x4c>
 8011e4a:	4a0a      	ldr	r2, [pc, #40]	; (8011e74 <WM__IsInModalArea+0x5c>)
 8011e4c:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8011e50:	f000 fa49 	bl	80122e6 <WM__IsAncestor>
 8011e54:	2800      	cmp	r0, #0
 8011e56:	d1e8      	bne.n	8011e2a <WM__IsInModalArea+0x12>
 8011e58:	e7e1      	b.n	8011e1e <WM__IsInModalArea+0x6>
 8011e5a:	b918      	cbnz	r0, 8011e64 <WM__IsInModalArea+0x4c>
 8011e5c:	1ae3      	subs	r3, r4, r3
 8011e5e:	4258      	negs	r0, r3
 8011e60:	4158      	adcs	r0, r3
 8011e62:	bd70      	pop	{r4, r5, r6, pc}
 8011e64:	2001      	movs	r0, #1
 8011e66:	bd70      	pop	{r4, r5, r6, pc}
 8011e68:	20000094 	.word	0x20000094
 8011e6c:	2002db4c 	.word	0x2002db4c
 8011e70:	2002dba0 	.word	0x2002dba0
 8011e74:	2002db2c 	.word	0x2002db2c

08011e78 <WM__SendPIDMessage>:
 8011e78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e7a:	4606      	mov	r6, r0
 8011e7c:	b085      	sub	sp, #20
 8011e7e:	460c      	mov	r4, r1
 8011e80:	466d      	mov	r5, sp
 8011e82:	4637      	mov	r7, r6
 8011e84:	c90f      	ldmia	r1, {r0, r1, r2, r3}
 8011e86:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
 8011e8a:	230d      	movs	r3, #13
 8011e8c:	9602      	str	r6, [sp, #8]
 8011e8e:	9300      	str	r3, [sp, #0]
 8011e90:	4638      	mov	r0, r7
 8011e92:	f7ff fca7 	bl	80117e4 <WM_IsWindow>
 8011e96:	b150      	cbz	r0, 8011eae <WM__SendPIDMessage+0x36>
 8011e98:	4638      	mov	r0, r7
 8011e9a:	f7ff fc31 	bl	8011700 <WM_GetParent>
 8011e9e:	4607      	mov	r7, r0
 8011ea0:	2800      	cmp	r0, #0
 8011ea2:	d0f5      	beq.n	8011e90 <WM__SendPIDMessage+0x18>
 8011ea4:	4629      	mov	r1, r5
 8011ea6:	9403      	str	r4, [sp, #12]
 8011ea8:	f000 fa82 	bl	80123b0 <WM__SendMessageIfEnabled>
 8011eac:	e7f0      	b.n	8011e90 <WM__SendPIDMessage+0x18>
 8011eae:	4621      	mov	r1, r4
 8011eb0:	4630      	mov	r0, r6
 8011eb2:	f000 fa7d 	bl	80123b0 <WM__SendMessageIfEnabled>
 8011eb6:	b005      	add	sp, #20
 8011eb8:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011eba <WM__SendTouchMessage>:
 8011eba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011ebc:	68cc      	ldr	r4, [r1, #12]
 8011ebe:	4606      	mov	r6, r0
 8011ec0:	460d      	mov	r5, r1
 8011ec2:	b18c      	cbz	r4, 8011ee8 <WM__SendTouchMessage+0x2e>
 8011ec4:	f7f8 fd44 	bl	800a950 <GUI_ALLOC_LockH>
 8011ec8:	6822      	ldr	r2, [r4, #0]
 8011eca:	f9b0 1000 	ldrsh.w	r1, [r0]
 8011ece:	ab02      	add	r3, sp, #8
 8011ed0:	1a52      	subs	r2, r2, r1
 8011ed2:	f843 0d04 	str.w	r0, [r3, #-4]!
 8011ed6:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8011eda:	4618      	mov	r0, r3
 8011edc:	6022      	str	r2, [r4, #0]
 8011ede:	6862      	ldr	r2, [r4, #4]
 8011ee0:	1a52      	subs	r2, r2, r1
 8011ee2:	6062      	str	r2, [r4, #4]
 8011ee4:	f7f8 fd42 	bl	800a96c <GUI_ALLOC_UnlockH>
 8011ee8:	4629      	mov	r1, r5
 8011eea:	4630      	mov	r0, r6
 8011eec:	f7ff ffc4 	bl	8011e78 <WM__SendPIDMessage>
 8011ef0:	b002      	add	sp, #8
 8011ef2:	bd70      	pop	{r4, r5, r6, pc}

08011ef4 <WM_HandlePID>:
 8011ef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ef8:	b097      	sub	sp, #92	; 0x5c
 8011efa:	2300      	movs	r3, #0
 8011efc:	ad06      	add	r5, sp, #24
 8011efe:	9306      	str	r3, [sp, #24]
 8011f00:	606b      	str	r3, [r5, #4]
 8011f02:	60ab      	str	r3, [r5, #8]
 8011f04:	f001 fa28 	bl	8013358 <GUI_PID_IsEmpty>
 8011f08:	b108      	cbz	r0, 8011f0e <WM_HandlePID+0x1a>
 8011f0a:	2000      	movs	r0, #0
 8011f0c:	e1a9      	b.n	8012262 <WM_HandlePID+0x36e>
 8011f0e:	ac09      	add	r4, sp, #36	; 0x24
 8011f10:	4eaf      	ldr	r6, [pc, #700]	; (80121d0 <WM_HandlePID+0x2dc>)
 8011f12:	4620      	mov	r0, r4
 8011f14:	f001 f99c 	bl	8013250 <GUI_PID_GetState>
 8011f18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011f1a:	1c5a      	adds	r2, r3, #1
 8011f1c:	d111      	bne.n	8011f42 <WM_HandlePID+0x4e>
 8011f1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011f20:	3301      	adds	r3, #1
 8011f22:	d11d      	bne.n	8011f60 <WM_HandlePID+0x6c>
 8011f24:	6832      	ldr	r2, [r6, #0]
 8011f26:	210c      	movs	r1, #12
 8011f28:	4baa      	ldr	r3, [pc, #680]	; (80121d4 <WM_HandlePID+0x2e0>)
 8011f2a:	fb01 3302 	mla	r3, r1, r2, r3
 8011f2e:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 8011f32:	7e19      	ldrb	r1, [r3, #24]
 8011f34:	4291      	cmp	r1, r2
 8011f36:	d0e8      	beq.n	8011f0a <WM_HandlePID+0x16>
 8011f38:	691a      	ldr	r2, [r3, #16]
 8011f3a:	695b      	ldr	r3, [r3, #20]
 8011f3c:	9209      	str	r2, [sp, #36]	; 0x24
 8011f3e:	930a      	str	r3, [sp, #40]	; 0x28
 8011f40:	e00e      	b.n	8011f60 <WM_HandlePID+0x6c>
 8011f42:	2b00      	cmp	r3, #0
 8011f44:	db0c      	blt.n	8011f60 <WM_HandlePID+0x6c>
 8011f46:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8011f48:	2a00      	cmp	r2, #0
 8011f4a:	db09      	blt.n	8011f60 <WM_HandlePID+0x6c>
 8011f4c:	49a2      	ldr	r1, [pc, #648]	; (80121d8 <WM_HandlePID+0x2e4>)
 8011f4e:	f9b1 1000 	ldrsh.w	r1, [r1]
 8011f52:	440b      	add	r3, r1
 8011f54:	9309      	str	r3, [sp, #36]	; 0x24
 8011f56:	4ba1      	ldr	r3, [pc, #644]	; (80121dc <WM_HandlePID+0x2e8>)
 8011f58:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011f5c:	441a      	add	r2, r3
 8011f5e:	920a      	str	r2, [sp, #40]	; 0x28
 8011f60:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8011f64:	4f9a      	ldr	r7, [pc, #616]	; (80121d0 <WM_HandlePID+0x2dc>)
 8011f66:	2b01      	cmp	r3, #1
 8011f68:	bf98      	it	ls
 8011f6a:	6033      	strls	r3, [r6, #0]
 8011f6c:	6830      	ldr	r0, [r6, #0]
 8011f6e:	f7f9 fb29 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 8011f72:	2800      	cmp	r0, #0
 8011f74:	d0c9      	beq.n	8011f0a <WM_HandlePID+0x16>
 8011f76:	aa02      	add	r2, sp, #8
 8011f78:	a901      	add	r1, sp, #4
 8011f7a:	6838      	ldr	r0, [r7, #0]
 8011f7c:	f7f9 fd5c 	bl	800ba38 <GUI_GetLayerPosEx>
 8011f80:	a804      	add	r0, sp, #16
 8011f82:	f000 faad 	bl	80124e0 <WM__AddCriticalHandle>
 8011f86:	9b01      	ldr	r3, [sp, #4]
 8011f88:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011f8a:	220c      	movs	r2, #12
 8011f8c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011f8e:	1ac0      	subs	r0, r0, r3
 8011f90:	9b02      	ldr	r3, [sp, #8]
 8011f92:	1ac9      	subs	r1, r1, r3
 8011f94:	683b      	ldr	r3, [r7, #0]
 8011f96:	4f8f      	ldr	r7, [pc, #572]	; (80121d4 <WM_HandlePID+0x2e0>)
 8011f98:	9009      	str	r0, [sp, #36]	; 0x24
 8011f9a:	fb02 7303 	mla	r3, r2, r3, r7
 8011f9e:	910a      	str	r1, [sp, #40]	; 0x28
 8011fa0:	691a      	ldr	r2, [r3, #16]
 8011fa2:	4290      	cmp	r0, r2
 8011fa4:	d108      	bne.n	8011fb8 <WM_HandlePID+0xc4>
 8011fa6:	695a      	ldr	r2, [r3, #20]
 8011fa8:	4291      	cmp	r1, r2
 8011faa:	d105      	bne.n	8011fb8 <WM_HandlePID+0xc4>
 8011fac:	7e1a      	ldrb	r2, [r3, #24]
 8011fae:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8011fb2:	429a      	cmp	r2, r3
 8011fb4:	f000 8150 	beq.w	8012258 <WM_HandlePID+0x364>
 8011fb8:	f89d 202d 	ldrb.w	r2, [sp, #45]	; 0x2d
 8011fbc:	f001 f90a 	bl	80131d4 <GUI_CURSOR_SetPositionEx>
 8011fc0:	683b      	ldr	r3, [r7, #0]
 8011fc2:	b113      	cbz	r3, 8011fca <WM_HandlePID+0xd6>
 8011fc4:	2100      	movs	r1, #0
 8011fc6:	4620      	mov	r0, r4
 8011fc8:	4798      	blx	r3
 8011fca:	6832      	ldr	r2, [r6, #0]
 8011fcc:	4b84      	ldr	r3, [pc, #528]	; (80121e0 <WM_HandlePID+0x2ec>)
 8011fce:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8011fd2:	b918      	cbnz	r0, 8011fdc <WM_HandlePID+0xe8>
 8011fd4:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011fd6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011fd8:	f7ff fed6 	bl	8011d88 <WM_Screen2hWin>
 8011fdc:	687b      	ldr	r3, [r7, #4]
 8011fde:	9005      	str	r0, [sp, #20]
 8011fe0:	b113      	cbz	r3, 8011fe8 <WM_HandlePID+0xf4>
 8011fe2:	9905      	ldr	r1, [sp, #20]
 8011fe4:	4620      	mov	r0, r4
 8011fe6:	4798      	blx	r3
 8011fe8:	497e      	ldr	r1, [pc, #504]	; (80121e4 <WM_HandlePID+0x2f0>)
 8011fea:	6833      	ldr	r3, [r6, #0]
 8011fec:	f8df 91e0 	ldr.w	r9, [pc, #480]	; 80121d0 <WM_HandlePID+0x2dc>
 8011ff0:	4688      	mov	r8, r1
 8011ff2:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8011ff6:	685a      	ldr	r2, [r3, #4]
 8011ff8:	9805      	ldr	r0, [sp, #20]
 8011ffa:	b312      	cbz	r2, 8012042 <WM_HandlePID+0x14e>
 8011ffc:	4282      	cmp	r2, r0
 8011ffe:	d020      	beq.n	8012042 <WM_HandlePID+0x14e>
 8012000:	6858      	ldr	r0, [r3, #4]
 8012002:	f7ff ff09 	bl	8011e18 <WM__IsInModalArea>
 8012006:	b1e0      	cbz	r0, 8012042 <WM_HandlePID+0x14e>
 8012008:	f8d9 3000 	ldr.w	r3, [r9]
 801200c:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8012010:	6858      	ldr	r0, [r3, #4]
 8012012:	f000 f9a5 	bl	8012360 <WM__IsEnabled>
 8012016:	b1a0      	cbz	r0, 8012042 <WM_HandlePID+0x14e>
 8012018:	2312      	movs	r3, #18
 801201a:	9515      	str	r5, [sp, #84]	; 0x54
 801201c:	9312      	str	r3, [sp, #72]	; 0x48
 801201e:	f8d9 3000 	ldr.w	r3, [r9]
 8012022:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8012026:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 801202a:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 801202e:	6858      	ldr	r0, [r3, #4]
 8012030:	a912      	add	r1, sp, #72	; 0x48
 8012032:	f7ff ff42 	bl	8011eba <WM__SendTouchMessage>
 8012036:	f8d9 3000 	ldr.w	r3, [r9]
 801203a:	2200      	movs	r2, #0
 801203c:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 8012040:	605a      	str	r2, [r3, #4]
 8012042:	9805      	ldr	r0, [sp, #20]
 8012044:	f7ff fee8 	bl	8011e18 <WM__IsInModalArea>
 8012048:	b908      	cbnz	r0, 801204e <WM_HandlePID+0x15a>
 801204a:	2500      	movs	r5, #0
 801204c:	e0f6      	b.n	801223c <WM_HandlePID+0x348>
 801204e:	6833      	ldr	r3, [r6, #0]
 8012050:	9a05      	ldr	r2, [sp, #20]
 8012052:	eb08 08c3 	add.w	r8, r8, r3, lsl #3
 8012056:	f8df a178 	ldr.w	sl, [pc, #376]	; 80121d0 <WM_HandlePID+0x2dc>
 801205a:	f8df 9178 	ldr.w	r9, [pc, #376]	; 80121d4 <WM_HandlePID+0x2e0>
 801205e:	f8c8 2004 	str.w	r2, [r8, #4]
 8012062:	f04f 080c 	mov.w	r8, #12
 8012066:	fb08 7303 	mla	r3, r8, r3, r7
 801206a:	7e1a      	ldrb	r2, [r3, #24]
 801206c:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8012070:	429a      	cmp	r2, r3
 8012072:	d063      	beq.n	801213c <WM_HandlePID+0x248>
 8012074:	9b05      	ldr	r3, [sp, #20]
 8012076:	2b00      	cmp	r3, #0
 8012078:	d060      	beq.n	801213c <WM_HandlePID+0x248>
 801207a:	9805      	ldr	r0, [sp, #20]
 801207c:	f7f8 fc68 	bl	800a950 <GUI_ALLOC_LockH>
 8012080:	f89d 302c 	ldrb.w	r3, [sp, #44]	; 0x2c
 8012084:	9003      	str	r0, [sp, #12]
 8012086:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
 801208a:	f8da 3000 	ldr.w	r3, [sl]
 801208e:	fb08 9303 	mla	r3, r8, r3, r9
 8012092:	7e1b      	ldrb	r3, [r3, #24]
 8012094:	f88d 3045 	strb.w	r3, [sp, #69]	; 0x45
 8012098:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801209a:	f9b0 2000 	ldrsh.w	r2, [r0]
 801209e:	1a9b      	subs	r3, r3, r2
 80120a0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80120a4:	eb0d 0008 	add.w	r0, sp, r8
 80120a8:	930f      	str	r3, [sp, #60]	; 0x3c
 80120aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80120ac:	1a9b      	subs	r3, r3, r2
 80120ae:	9310      	str	r3, [sp, #64]	; 0x40
 80120b0:	f7f8 fc5c 	bl	800a96c <GUI_ALLOC_UnlockH>
 80120b4:	ab0f      	add	r3, sp, #60	; 0x3c
 80120b6:	9315      	str	r3, [sp, #84]	; 0x54
 80120b8:	2311      	movs	r3, #17
 80120ba:	9312      	str	r3, [sp, #72]	; 0x48
 80120bc:	f8da 3000 	ldr.w	r3, [sl]
 80120c0:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
 80120c4:	fb08 9e03 	mla	lr, r8, r3, r9
 80120c8:	f8df 911c 	ldr.w	r9, [pc, #284]	; 80121e8 <WM_HandlePID+0x2f4>
 80120cc:	00db      	lsls	r3, r3, #3
 80120ce:	f10e 0210 	add.w	r2, lr, #16
 80120d2:	ca07      	ldmia	r2, {r0, r1, r2}
 80120d4:	e88a 0007 	stmia.w	sl, {r0, r1, r2}
 80120d8:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 80120dc:	f88e 2018 	strb.w	r2, [lr, #24]
 80120e0:	f89d 2020 	ldrb.w	r2, [sp, #32]
 80120e4:	b132      	cbz	r2, 80120f4 <WM_HandlePID+0x200>
 80120e6:	eb09 0203 	add.w	r2, r9, r3
 80120ea:	f8d2 8004 	ldr.w	r8, [r2, #4]
 80120ee:	9905      	ldr	r1, [sp, #20]
 80120f0:	6051      	str	r1, [r2, #4]
 80120f2:	e000      	b.n	80120f6 <WM_HandlePID+0x202>
 80120f4:	4690      	mov	r8, r2
 80120f6:	444b      	add	r3, r9
 80120f8:	a912      	add	r1, sp, #72	; 0x48
 80120fa:	f8d3 b004 	ldr.w	fp, [r3, #4]
 80120fe:	9805      	ldr	r0, [sp, #20]
 8012100:	f000 f956 	bl	80123b0 <WM__SendMessageIfEnabled>
 8012104:	6833      	ldr	r3, [r6, #0]
 8012106:	eb09 02c3 	add.w	r2, r9, r3, lsl #3
 801210a:	6851      	ldr	r1, [r2, #4]
 801210c:	458b      	cmp	fp, r1
 801210e:	d001      	beq.n	8012114 <WM_HandlePID+0x220>
 8012110:	6852      	ldr	r2, [r2, #4]
 8012112:	9205      	str	r2, [sp, #20]
 8012114:	220c      	movs	r2, #12
 8012116:	fb02 7303 	mla	r3, r2, r3, r7
 801211a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 801211e:	3310      	adds	r3, #16
 8012120:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8012124:	f1b8 0f00 	cmp.w	r8, #0
 8012128:	d008      	beq.n	801213c <WM_HandlePID+0x248>
 801212a:	4640      	mov	r0, r8
 801212c:	f7ff fb5a 	bl	80117e4 <WM_IsWindow>
 8012130:	b120      	cbz	r0, 801213c <WM_HandlePID+0x248>
 8012132:	6833      	ldr	r3, [r6, #0]
 8012134:	eb09 09c3 	add.w	r9, r9, r3, lsl #3
 8012138:	f8c9 8004 	str.w	r8, [r9, #4]
 801213c:	6833      	ldr	r3, [r6, #0]
 801213e:	f04f 0e0c 	mov.w	lr, #12
 8012142:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 8012146:	fb0e 7e03 	mla	lr, lr, r3, r7
 801214a:	f89e 2018 	ldrb.w	r2, [lr, #24]
 801214e:	ea50 0802 	orrs.w	r8, r0, r2
 8012152:	d05c      	beq.n	801220e <WM_HandlePID+0x31a>
 8012154:	f44f 7210 	mov.w	r2, #576	; 0x240
 8012158:	4923      	ldr	r1, [pc, #140]	; (80121e8 <WM_HandlePID+0x2f4>)
 801215a:	00db      	lsls	r3, r3, #3
 801215c:	9212      	str	r2, [sp, #72]	; 0x48
 801215e:	18ca      	adds	r2, r1, r3
 8012160:	f8d2 8004 	ldr.w	r8, [r2, #4]
 8012164:	f8dd c014 	ldr.w	ip, [sp, #20]
 8012168:	45e0      	cmp	r8, ip
 801216a:	4688      	mov	r8, r1
 801216c:	d018      	beq.n	80121a0 <WM_HandlePID+0x2ac>
 801216e:	6852      	ldr	r2, [r2, #4]
 8012170:	b1b2      	cbz	r2, 80121a0 <WM_HandlePID+0x2ac>
 8012172:	b110      	cbz	r0, 801217a <WM_HandlePID+0x286>
 8012174:	2200      	movs	r2, #0
 8012176:	9215      	str	r2, [sp, #84]	; 0x54
 8012178:	e008      	b.n	801218c <WM_HandlePID+0x298>
 801217a:	f8de 2010 	ldr.w	r2, [lr, #16]
 801217e:	f88d 0020 	strb.w	r0, [sp, #32]
 8012182:	9206      	str	r2, [sp, #24]
 8012184:	f8de 2014 	ldr.w	r2, [lr, #20]
 8012188:	9515      	str	r5, [sp, #84]	; 0x54
 801218a:	9207      	str	r2, [sp, #28]
 801218c:	4443      	add	r3, r8
 801218e:	a912      	add	r1, sp, #72	; 0x48
 8012190:	6858      	ldr	r0, [r3, #4]
 8012192:	f7ff fe92 	bl	8011eba <WM__SendTouchMessage>
 8012196:	6833      	ldr	r3, [r6, #0]
 8012198:	2200      	movs	r2, #0
 801219a:	eb08 03c3 	add.w	r3, r8, r3, lsl #3
 801219e:	605a      	str	r2, [r3, #4]
 80121a0:	6833      	ldr	r3, [r6, #0]
 80121a2:	220c      	movs	r2, #12
 80121a4:	f89d e02c 	ldrb.w	lr, [sp, #44]	; 0x2c
 80121a8:	fb02 7203 	mla	r2, r2, r3, r7
 80121ac:	f882 e018 	strb.w	lr, [r2, #24]
 80121b0:	9a05      	ldr	r2, [sp, #20]
 80121b2:	2a00      	cmp	r2, #0
 80121b4:	d041      	beq.n	801223a <WM_HandlePID+0x346>
 80121b6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80121ba:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 80121be:	f1be 0f00 	cmp.w	lr, #0
 80121c2:	d013      	beq.n	80121ec <WM_HandlePID+0x2f8>
 80121c4:	9a05      	ldr	r2, [sp, #20]
 80121c6:	eb08 08c3 	add.w	r8, r8, r3, lsl #3
 80121ca:	f8c8 2004 	str.w	r2, [r8, #4]
 80121ce:	e018      	b.n	8012202 <WM_HandlePID+0x30e>
 80121d0:	2002db4c 	.word	0x2002db4c
 80121d4:	20000d64 	.word	0x20000d64
 80121d8:	2002dae0 	.word	0x2002dae0
 80121dc:	2002dad0 	.word	0x2002dad0
 80121e0:	2002db70 	.word	0x2002db70
 80121e4:	2002db80 	.word	0x2002db80
 80121e8:	2002db90 	.word	0x2002db90
 80121ec:	4b1e      	ldr	r3, [pc, #120]	; (8012268 <WM_HandlePID+0x374>)
 80121ee:	781b      	ldrb	r3, [r3, #0]
 80121f0:	b10b      	cbz	r3, 80121f6 <WM_HandlePID+0x302>
 80121f2:	f002 fc1b 	bl	8014a2c <WM_ReleaseCapture>
 80121f6:	6833      	ldr	r3, [r6, #0]
 80121f8:	eb08 08c3 	add.w	r8, r8, r3, lsl #3
 80121fc:	2300      	movs	r3, #0
 80121fe:	f8c8 3004 	str.w	r3, [r8, #4]
 8012202:	9805      	ldr	r0, [sp, #20]
 8012204:	a912      	add	r1, sp, #72	; 0x48
 8012206:	9515      	str	r5, [sp, #84]	; 0x54
 8012208:	f7ff fe57 	bl	8011eba <WM__SendTouchMessage>
 801220c:	e015      	b.n	801223a <WM_HandlePID+0x346>
 801220e:	9b05      	ldr	r3, [sp, #20]
 8012210:	2b00      	cmp	r3, #0
 8012212:	f43f af1a 	beq.w	801204a <WM_HandlePID+0x156>
 8012216:	9805      	ldr	r0, [sp, #20]
 8012218:	f000 f8a2 	bl	8012360 <WM__IsEnabled>
 801221c:	2800      	cmp	r0, #0
 801221e:	f43f af14 	beq.w	801204a <WM_HandlePID+0x156>
 8012222:	2310      	movs	r3, #16
 8012224:	9515      	str	r5, [sp, #84]	; 0x54
 8012226:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 801222a:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 801222e:	9805      	ldr	r0, [sp, #20]
 8012230:	a912      	add	r1, sp, #72	; 0x48
 8012232:	9312      	str	r3, [sp, #72]	; 0x48
 8012234:	f7ff fe41 	bl	8011eba <WM__SendTouchMessage>
 8012238:	e707      	b.n	801204a <WM_HandlePID+0x156>
 801223a:	2501      	movs	r5, #1
 801223c:	6836      	ldr	r6, [r6, #0]
 801223e:	230c      	movs	r3, #12
 8012240:	fb03 7706 	mla	r7, r3, r6, r7
 8012244:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8012248:	3710      	adds	r7, #16
 801224a:	e887 0007 	stmia.w	r7, {r0, r1, r2}
 801224e:	4631      	mov	r1, r6
 8012250:	4620      	mov	r0, r4
 8012252:	f002 fbc9 	bl	80149e8 <WM_PID__SetPrevState>
 8012256:	e000      	b.n	801225a <WM_HandlePID+0x366>
 8012258:	2500      	movs	r5, #0
 801225a:	a804      	add	r0, sp, #16
 801225c:	f000 f948 	bl	80124f0 <WM__RemoveCriticalHandle>
 8012260:	4628      	mov	r0, r5
 8012262:	b017      	add	sp, #92	; 0x5c
 8012264:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012268:	2002db50 	.word	0x2002db50

0801226c <WM__ForEachDesc>:
 801226c:	b570      	push	{r4, r5, r6, lr}
 801226e:	460d      	mov	r5, r1
 8012270:	4616      	mov	r6, r2
 8012272:	f7f8 fb63 	bl	800a93c <GUI_ALLOC_h2p>
 8012276:	69c4      	ldr	r4, [r0, #28]
 8012278:	b164      	cbz	r4, 8012294 <WM__ForEachDesc+0x28>
 801227a:	4620      	mov	r0, r4
 801227c:	4631      	mov	r1, r6
 801227e:	47a8      	blx	r5
 8012280:	4620      	mov	r0, r4
 8012282:	4632      	mov	r2, r6
 8012284:	4629      	mov	r1, r5
 8012286:	f7ff fff1 	bl	801226c <WM__ForEachDesc>
 801228a:	4620      	mov	r0, r4
 801228c:	f7f8 fb56 	bl	800a93c <GUI_ALLOC_h2p>
 8012290:	6a04      	ldr	r4, [r0, #32]
 8012292:	e7f1      	b.n	8012278 <WM__ForEachDesc+0xc>
 8012294:	bd70      	pop	{r4, r5, r6, pc}

08012296 <WM__GetFirstSibling>:
 8012296:	b508      	push	{r3, lr}
 8012298:	f7ff fa32 	bl	8011700 <WM_GetParent>
 801229c:	b118      	cbz	r0, 80122a6 <WM__GetFirstSibling+0x10>
 801229e:	f7f8 fb4d 	bl	800a93c <GUI_ALLOC_h2p>
 80122a2:	69c0      	ldr	r0, [r0, #28]
 80122a4:	bd08      	pop	{r3, pc}
 80122a6:	bd08      	pop	{r3, pc}

080122a8 <WM__GetLastSibling>:
 80122a8:	b510      	push	{r4, lr}
 80122aa:	4604      	mov	r4, r0
 80122ac:	b134      	cbz	r4, 80122bc <WM__GetLastSibling+0x14>
 80122ae:	4620      	mov	r0, r4
 80122b0:	f7f8 fb44 	bl	800a93c <GUI_ALLOC_h2p>
 80122b4:	6a03      	ldr	r3, [r0, #32]
 80122b6:	b10b      	cbz	r3, 80122bc <WM__GetLastSibling+0x14>
 80122b8:	461c      	mov	r4, r3
 80122ba:	e7f7      	b.n	80122ac <WM__GetLastSibling+0x4>
 80122bc:	4620      	mov	r0, r4
 80122be:	bd10      	pop	{r4, pc}

080122c0 <WM__GetPrevSibling>:
 80122c0:	b538      	push	{r3, r4, r5, lr}
 80122c2:	4605      	mov	r5, r0
 80122c4:	f7ff ffe7 	bl	8012296 <WM__GetFirstSibling>
 80122c8:	4604      	mov	r4, r0
 80122ca:	b154      	cbz	r4, 80122e2 <WM__GetPrevSibling+0x22>
 80122cc:	42ac      	cmp	r4, r5
 80122ce:	d007      	beq.n	80122e0 <WM__GetPrevSibling+0x20>
 80122d0:	4620      	mov	r0, r4
 80122d2:	f7f8 fb33 	bl	800a93c <GUI_ALLOC_h2p>
 80122d6:	6a03      	ldr	r3, [r0, #32]
 80122d8:	429d      	cmp	r5, r3
 80122da:	d002      	beq.n	80122e2 <WM__GetPrevSibling+0x22>
 80122dc:	461c      	mov	r4, r3
 80122de:	e7f4      	b.n	80122ca <WM__GetPrevSibling+0xa>
 80122e0:	2400      	movs	r4, #0
 80122e2:	4620      	mov	r0, r4
 80122e4:	bd38      	pop	{r3, r4, r5, pc}

080122e6 <WM__IsAncestor>:
 80122e6:	b510      	push	{r4, lr}
 80122e8:	460c      	mov	r4, r1
 80122ea:	b908      	cbnz	r0, 80122f0 <WM__IsAncestor+0xa>
 80122ec:	2000      	movs	r0, #0
 80122ee:	bd10      	pop	{r4, pc}
 80122f0:	2900      	cmp	r1, #0
 80122f2:	d0fb      	beq.n	80122ec <WM__IsAncestor+0x6>
 80122f4:	f7f8 fb22 	bl	800a93c <GUI_ALLOC_h2p>
 80122f8:	6980      	ldr	r0, [r0, #24]
 80122fa:	4284      	cmp	r4, r0
 80122fc:	d002      	beq.n	8012304 <WM__IsAncestor+0x1e>
 80122fe:	2800      	cmp	r0, #0
 8012300:	d1f8      	bne.n	80122f4 <WM__IsAncestor+0xe>
 8012302:	e7f3      	b.n	80122ec <WM__IsAncestor+0x6>
 8012304:	2001      	movs	r0, #1
 8012306:	bd10      	pop	{r4, pc}

08012308 <WM__IsAncestorOrSelf>:
 8012308:	4288      	cmp	r0, r1
 801230a:	d001      	beq.n	8012310 <WM__IsAncestorOrSelf+0x8>
 801230c:	f7ff bfeb 	b.w	80122e6 <WM__IsAncestor>
 8012310:	2001      	movs	r0, #1
 8012312:	4770      	bx	lr

08012314 <WM__IsChild>:
 8012314:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012316:	460d      	mov	r5, r1
 8012318:	4604      	mov	r4, r0
 801231a:	b160      	cbz	r0, 8012336 <WM__IsChild+0x22>
 801231c:	f7f8 fb18 	bl	800a950 <GUI_ALLOC_LockH>
 8012320:	9001      	str	r0, [sp, #4]
 8012322:	b120      	cbz	r0, 801232e <WM__IsChild+0x1a>
 8012324:	6980      	ldr	r0, [r0, #24]
 8012326:	1b43      	subs	r3, r0, r5
 8012328:	425c      	negs	r4, r3
 801232a:	415c      	adcs	r4, r3
 801232c:	e000      	b.n	8012330 <WM__IsChild+0x1c>
 801232e:	4604      	mov	r4, r0
 8012330:	a801      	add	r0, sp, #4
 8012332:	f7f8 fb1b 	bl	800a96c <GUI_ALLOC_UnlockH>
 8012336:	4620      	mov	r0, r4
 8012338:	b003      	add	sp, #12
 801233a:	bd30      	pop	{r4, r5, pc}

0801233c <WM__GetFocusedChild>:
 801233c:	b538      	push	{r3, r4, r5, lr}
 801233e:	4d06      	ldr	r5, [pc, #24]	; (8012358 <WM__GetFocusedChild+0x1c>)
 8012340:	4601      	mov	r1, r0
 8012342:	4c06      	ldr	r4, [pc, #24]	; (801235c <WM__GetFocusedChild+0x20>)
 8012344:	682b      	ldr	r3, [r5, #0]
 8012346:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801234a:	f7ff ffe3 	bl	8012314 <WM__IsChild>
 801234e:	b110      	cbz	r0, 8012356 <WM__GetFocusedChild+0x1a>
 8012350:	682b      	ldr	r3, [r5, #0]
 8012352:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8012356:	bd38      	pop	{r3, r4, r5, pc}
 8012358:	2002db4c 	.word	0x2002db4c
 801235c:	2002db3c 	.word	0x2002db3c

08012360 <WM__IsEnabled>:
 8012360:	b508      	push	{r3, lr}
 8012362:	f7f8 faeb 	bl	800a93c <GUI_ALLOC_h2p>
 8012366:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012368:	f080 0010 	eor.w	r0, r0, #16
 801236c:	f3c0 1000 	ubfx	r0, r0, #4, #1
 8012370:	bd08      	pop	{r3, pc}
	...

08012374 <WM__SendMessage>:
 8012374:	b570      	push	{r4, r5, r6, lr}
 8012376:	4c0d      	ldr	r4, [pc, #52]	; (80123ac <WM__SendMessage+0x38>)
 8012378:	4606      	mov	r6, r0
 801237a:	460d      	mov	r5, r1
 801237c:	6823      	ldr	r3, [r4, #0]
 801237e:	2b13      	cmp	r3, #19
 8012380:	dc12      	bgt.n	80123a8 <WM__SendMessage+0x34>
 8012382:	f7f8 fadb 	bl	800a93c <GUI_ALLOC_h2p>
 8012386:	6902      	ldr	r2, [r0, #16]
 8012388:	606e      	str	r6, [r5, #4]
 801238a:	b142      	cbz	r2, 801239e <WM__SendMessage+0x2a>
 801238c:	6823      	ldr	r3, [r4, #0]
 801238e:	4628      	mov	r0, r5
 8012390:	3301      	adds	r3, #1
 8012392:	6023      	str	r3, [r4, #0]
 8012394:	4790      	blx	r2
 8012396:	6823      	ldr	r3, [r4, #0]
 8012398:	3b01      	subs	r3, #1
 801239a:	6023      	str	r3, [r4, #0]
 801239c:	bd70      	pop	{r4, r5, r6, pc}
 801239e:	4628      	mov	r0, r5
 80123a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80123a4:	f7ff b808 	b.w	80113b8 <WM_DefaultProc>
 80123a8:	bd70      	pop	{r4, r5, r6, pc}
 80123aa:	bf00      	nop
 80123ac:	20000d8c 	.word	0x20000d8c

080123b0 <WM__SendMessageIfEnabled>:
 80123b0:	b538      	push	{r3, r4, r5, lr}
 80123b2:	4604      	mov	r4, r0
 80123b4:	460d      	mov	r5, r1
 80123b6:	f7ff ffd3 	bl	8012360 <WM__IsEnabled>
 80123ba:	b128      	cbz	r0, 80123c8 <WM__SendMessageIfEnabled+0x18>
 80123bc:	4629      	mov	r1, r5
 80123be:	4620      	mov	r0, r4
 80123c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80123c4:	f7ff bfd6 	b.w	8012374 <WM__SendMessage>
 80123c8:	bd38      	pop	{r3, r4, r5, pc}

080123ca <WM__SendMessageNoPara>:
 80123ca:	b530      	push	{r4, r5, lr}
 80123cc:	b085      	sub	sp, #20
 80123ce:	4604      	mov	r4, r0
 80123d0:	2210      	movs	r2, #16
 80123d2:	460d      	mov	r5, r1
 80123d4:	4668      	mov	r0, sp
 80123d6:	2100      	movs	r1, #0
 80123d8:	f003 fa8c 	bl	80158f4 <memset>
 80123dc:	4620      	mov	r0, r4
 80123de:	f7f8 faad 	bl	800a93c <GUI_ALLOC_h2p>
 80123e2:	6903      	ldr	r3, [r0, #16]
 80123e4:	b11b      	cbz	r3, 80123ee <WM__SendMessageNoPara+0x24>
 80123e6:	9401      	str	r4, [sp, #4]
 80123e8:	4668      	mov	r0, sp
 80123ea:	9500      	str	r5, [sp, #0]
 80123ec:	4798      	blx	r3
 80123ee:	b005      	add	sp, #20
 80123f0:	bd30      	pop	{r4, r5, pc}

080123f2 <WM__UpdateChildPositions>:
 80123f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123f6:	b08b      	sub	sp, #44	; 0x2c
 80123f8:	f8d0 b01c 	ldr.w	fp, [r0, #28]
 80123fc:	9303      	str	r3, [sp, #12]
 80123fe:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8012402:	9101      	str	r1, [sp, #4]
 8012404:	9304      	str	r3, [sp, #16]
 8012406:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801240a:	9202      	str	r2, [sp, #8]
 801240c:	9305      	str	r3, [sp, #20]
 801240e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8012412:	9306      	str	r3, [sp, #24]
 8012414:	f1bb 0f00 	cmp.w	fp, #0
 8012418:	d05e      	beq.n	80124d8 <WM__UpdateChildPositions+0xe6>
 801241a:	4658      	mov	r0, fp
 801241c:	f7f8 fa98 	bl	800a950 <GUI_ALLOC_LockH>
 8012420:	6a82      	ldr	r2, [r0, #40]	; 0x28
 8012422:	9009      	str	r0, [sp, #36]	; 0x24
 8012424:	f402 7120 	and.w	r1, r2, #640	; 0x280
 8012428:	f9b0 a000 	ldrsh.w	sl, [r0]
 801242c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8012430:	2980      	cmp	r1, #128	; 0x80
 8012432:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8012436:	f9b0 9006 	ldrsh.w	r9, [r0, #6]
 801243a:	d008      	beq.n	801244e <WM__UpdateChildPositions+0x5c>
 801243c:	f5b1 7f20 	cmp.w	r1, #640	; 0x280
 8012440:	d107      	bne.n	8012452 <WM__UpdateChildPositions+0x60>
 8012442:	9901      	ldr	r1, [sp, #4]
 8012444:	eb0a 0601 	add.w	r6, sl, r1
 8012448:	9903      	ldr	r1, [sp, #12]
 801244a:	b236      	sxth	r6, r6
 801244c:	e005      	b.n	801245a <WM__UpdateChildPositions+0x68>
 801244e:	9904      	ldr	r1, [sp, #16]
 8012450:	e000      	b.n	8012454 <WM__UpdateChildPositions+0x62>
 8012452:	9905      	ldr	r1, [sp, #20]
 8012454:	eb01 060a 	add.w	r6, r1, sl
 8012458:	b236      	sxth	r6, r6
 801245a:	f402 62a0 	and.w	r2, r2, #1280	; 0x500
 801245e:	eb01 0508 	add.w	r5, r1, r8
 8012462:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8012466:	b22d      	sxth	r5, r5
 8012468:	d007      	beq.n	801247a <WM__UpdateChildPositions+0x88>
 801246a:	f5b2 6fa0 	cmp.w	r2, #1280	; 0x500
 801246e:	d10a      	bne.n	8012486 <WM__UpdateChildPositions+0x94>
 8012470:	9a02      	ldr	r2, [sp, #8]
 8012472:	189f      	adds	r7, r3, r2
 8012474:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012476:	b23f      	sxth	r7, r7
 8012478:	e002      	b.n	8012480 <WM__UpdateChildPositions+0x8e>
 801247a:	9a06      	ldr	r2, [sp, #24]
 801247c:	18d7      	adds	r7, r2, r3
 801247e:	b23f      	sxth	r7, r7
 8012480:	eb09 0402 	add.w	r4, r9, r2
 8012484:	e005      	b.n	8012492 <WM__UpdateChildPositions+0xa0>
 8012486:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801248a:	18cf      	adds	r7, r1, r3
 801248c:	eb01 0409 	add.w	r4, r1, r9
 8012490:	b23f      	sxth	r7, r7
 8012492:	ebb6 010a 	subs.w	r1, r6, sl
 8012496:	b224      	sxth	r4, r4
 8012498:	eba7 0203 	sub.w	r2, r7, r3
 801249c:	d100      	bne.n	80124a0 <WM__UpdateChildPositions+0xae>
 801249e:	b122      	cbz	r2, 80124aa <WM__UpdateChildPositions+0xb8>
 80124a0:	4658      	mov	r0, fp
 80124a2:	9307      	str	r3, [sp, #28]
 80124a4:	f7ff fc0f 	bl	8011cc6 <WM_MoveWindow>
 80124a8:	9b07      	ldr	r3, [sp, #28]
 80124aa:	1bad      	subs	r5, r5, r6
 80124ac:	ebca 0808 	rsb	r8, sl, r8
 80124b0:	1be4      	subs	r4, r4, r7
 80124b2:	ebc3 0909 	rsb	r9, r3, r9
 80124b6:	ebb5 0108 	subs.w	r1, r5, r8
 80124ba:	ebc9 0204 	rsb	r2, r9, r4
 80124be:	d100      	bne.n	80124c2 <WM__UpdateChildPositions+0xd0>
 80124c0:	b112      	cbz	r2, 80124c8 <WM__UpdateChildPositions+0xd6>
 80124c2:	4658      	mov	r0, fp
 80124c4:	f7ff f9c8 	bl	8011858 <WM_ResizeWindow>
 80124c8:	a80a      	add	r0, sp, #40	; 0x28
 80124ca:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80124ce:	f8d3 b020 	ldr.w	fp, [r3, #32]
 80124d2:	f7f8 fa4b 	bl	800a96c <GUI_ALLOC_UnlockH>
 80124d6:	e79d      	b.n	8012414 <WM__UpdateChildPositions+0x22>
 80124d8:	b00b      	add	sp, #44	; 0x2c
 80124da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080124e0 <WM__AddCriticalHandle>:
 80124e0:	4b02      	ldr	r3, [pc, #8]	; (80124ec <WM__AddCriticalHandle+0xc>)
 80124e2:	681a      	ldr	r2, [r3, #0]
 80124e4:	6002      	str	r2, [r0, #0]
 80124e6:	6018      	str	r0, [r3, #0]
 80124e8:	4770      	bx	lr
 80124ea:	bf00      	nop
 80124ec:	2002db68 	.word	0x2002db68

080124f0 <WM__RemoveCriticalHandle>:
 80124f0:	4a09      	ldr	r2, [pc, #36]	; (8012518 <WM__RemoveCriticalHandle+0x28>)
 80124f2:	6813      	ldr	r3, [r2, #0]
 80124f4:	b510      	push	{r4, lr}
 80124f6:	b16b      	cbz	r3, 8012514 <WM__RemoveCriticalHandle+0x24>
 80124f8:	2100      	movs	r1, #0
 80124fa:	4298      	cmp	r0, r3
 80124fc:	d105      	bne.n	801250a <WM__RemoveCriticalHandle+0x1a>
 80124fe:	6803      	ldr	r3, [r0, #0]
 8012500:	b109      	cbz	r1, 8012506 <WM__RemoveCriticalHandle+0x16>
 8012502:	600b      	str	r3, [r1, #0]
 8012504:	bd10      	pop	{r4, pc}
 8012506:	6013      	str	r3, [r2, #0]
 8012508:	bd10      	pop	{r4, pc}
 801250a:	681c      	ldr	r4, [r3, #0]
 801250c:	4619      	mov	r1, r3
 801250e:	b10c      	cbz	r4, 8012514 <WM__RemoveCriticalHandle+0x24>
 8012510:	4623      	mov	r3, r4
 8012512:	e7f2      	b.n	80124fa <WM__RemoveCriticalHandle+0xa>
 8012514:	bd10      	pop	{r4, pc}
 8012516:	bf00      	nop
 8012518:	2002db68 	.word	0x2002db68

0801251c <WM__GetClientRectEx>:
 801251c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801251e:	460d      	mov	r5, r1
 8012520:	b158      	cbz	r0, 801253a <WM__GetClientRectEx+0x1e>
 8012522:	b151      	cbz	r1, 801253a <WM__GetClientRectEx+0x1e>
 8012524:	ac02      	add	r4, sp, #8
 8012526:	f7f8 fa13 	bl	800a950 <GUI_ALLOC_LockH>
 801252a:	4629      	mov	r1, r5
 801252c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8012530:	f7fe f9c4 	bl	80108bc <WM__GetClientRectWin>
 8012534:	4620      	mov	r0, r4
 8012536:	f7f8 fa19 	bl	800a96c <GUI_ALLOC_UnlockH>
 801253a:	b003      	add	sp, #12
 801253c:	bd30      	pop	{r4, r5, pc}

0801253e <GUI_CreateDialogBox>:
 801253e:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012542:	4606      	mov	r6, r0
 8012544:	4688      	mov	r8, r1
 8012546:	4614      	mov	r4, r2
 8012548:	461d      	mov	r5, r3
 801254a:	b913      	cbnz	r3, 8012552 <GUI_CreateDialogBox+0x14>
 801254c:	f7ff f84c 	bl	80115e8 <WM_GetDesktopWindow>
 8012550:	4605      	mov	r5, r0
 8012552:	9400      	str	r4, [sp, #0]
 8012554:	4629      	mov	r1, r5
 8012556:	6834      	ldr	r4, [r6, #0]
 8012558:	4630      	mov	r0, r6
 801255a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801255c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801255e:	47a0      	blx	r4
 8012560:	4604      	mov	r4, r0
 8012562:	2800      	cmp	r0, #0
 8012564:	d03e      	beq.n	80125e4 <GUI_CreateDialogBox+0xa6>
 8012566:	f7ff f831 	bl	80115cc <WM_GetClientWindow>
 801256a:	8a71      	ldrh	r1, [r6, #18]
 801256c:	4607      	mov	r7, r0
 801256e:	4620      	mov	r0, r4
 8012570:	f000 f98c 	bl	801288c <WIDGET_OrState>
 8012574:	f04f 0900 	mov.w	r9, #0
 8012578:	4620      	mov	r0, r4
 801257a:	f7ff faad 	bl	8011ad8 <WM_ShowWindow>
 801257e:	4638      	mov	r0, r7
 8012580:	f7ff faaa 	bl	8011ad8 <WM_ShowWindow>
 8012584:	f108 38ff 	add.w	r8, r8, #4294967295
 8012588:	f1b8 0f00 	cmp.w	r8, #0
 801258c:	dd12      	ble.n	80125b4 <GUI_CreateDialogBox+0x76>
 801258e:	f856 af1c 	ldr.w	sl, [r6, #28]!
 8012592:	2300      	movs	r3, #0
 8012594:	f8cd 9000 	str.w	r9, [sp]
 8012598:	4639      	mov	r1, r7
 801259a:	461a      	mov	r2, r3
 801259c:	4630      	mov	r0, r6
 801259e:	47d0      	blx	sl
 80125a0:	4682      	mov	sl, r0
 80125a2:	b920      	cbnz	r0, 80125ae <GUI_CreateDialogBox+0x70>
 80125a4:	4620      	mov	r0, r4
 80125a6:	f7fe fbaf 	bl	8010d08 <WM_DeleteWindow>
 80125aa:	4650      	mov	r0, sl
 80125ac:	e01b      	b.n	80125e6 <GUI_CreateDialogBox+0xa8>
 80125ae:	f7ff fa93 	bl	8011ad8 <WM_ShowWindow>
 80125b2:	e7e7      	b.n	8012584 <GUI_CreateDialogBox+0x46>
 80125b4:	211d      	movs	r1, #29
 80125b6:	4638      	mov	r0, r7
 80125b8:	f7ff f9c9 	bl	801194e <WM_SendMessageNoPara>
 80125bc:	1c6b      	adds	r3, r5, #1
 80125be:	d011      	beq.n	80125e4 <GUI_CreateDialogBox+0xa6>
 80125c0:	f7ff f830 	bl	8011624 <WM_GetFocusedWindow>
 80125c4:	b150      	cbz	r0, 80125dc <GUI_CreateDialogBox+0x9e>
 80125c6:	f7f8 f9b9 	bl	800a93c <GUI_ALLOC_h2p>
 80125ca:	6980      	ldr	r0, [r0, #24]
 80125cc:	4284      	cmp	r4, r0
 80125ce:	d009      	beq.n	80125e4 <GUI_CreateDialogBox+0xa6>
 80125d0:	2800      	cmp	r0, #0
 80125d2:	d1f8      	bne.n	80125c6 <GUI_CreateDialogBox+0x88>
 80125d4:	4620      	mov	r0, r4
 80125d6:	f002 fa3f 	bl	8014a58 <WM_SetFocusOnNextChild>
 80125da:	e003      	b.n	80125e4 <GUI_CreateDialogBox+0xa6>
 80125dc:	42a5      	cmp	r5, r4
 80125de:	d1f9      	bne.n	80125d4 <GUI_CreateDialogBox+0x96>
 80125e0:	4628      	mov	r0, r5
 80125e2:	e000      	b.n	80125e6 <GUI_CreateDialogBox+0xa8>
 80125e4:	4620      	mov	r0, r4
 80125e6:	b002      	add	sp, #8
 80125e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080125ec <TEXT_Callback>:
 80125ec:	b530      	push	{r4, r5, lr}
 80125ee:	6845      	ldr	r5, [r0, #4]
 80125f0:	b085      	sub	sp, #20
 80125f2:	4604      	mov	r4, r0
 80125f4:	4601      	mov	r1, r0
 80125f6:	4628      	mov	r0, r5
 80125f8:	f000 f95d 	bl	80128b6 <WIDGET_HandleActive>
 80125fc:	2800      	cmp	r0, #0
 80125fe:	d056      	beq.n	80126ae <TEXT_Callback+0xc2>
 8012600:	6823      	ldr	r3, [r4, #0]
 8012602:	2b0f      	cmp	r3, #15
 8012604:	d01e      	beq.n	8012644 <TEXT_Callback+0x58>
 8012606:	f5b3 7f10 	cmp.w	r3, #576	; 0x240
 801260a:	d00e      	beq.n	801262a <TEXT_Callback+0x3e>
 801260c:	2b0b      	cmp	r3, #11
 801260e:	d14b      	bne.n	80126a8 <TEXT_Callback+0xbc>
 8012610:	4628      	mov	r0, r5
 8012612:	ad04      	add	r5, sp, #16
 8012614:	f7f8 f99c 	bl	800a950 <GUI_ALLOC_LockH>
 8012618:	f845 0d08 	str.w	r0, [r5, #-8]!
 801261c:	3044      	adds	r0, #68	; 0x44
 801261e:	f7f8 fb67 	bl	800acf0 <GUI_ALLOC_FreePtr>
 8012622:	4628      	mov	r0, r5
 8012624:	f7f8 f9a2 	bl	800a96c <GUI_ALLOC_UnlockH>
 8012628:	e03e      	b.n	80126a8 <TEXT_Callback+0xbc>
 801262a:	68e3      	ldr	r3, [r4, #12]
 801262c:	b12b      	cbz	r3, 801263a <TEXT_Callback+0x4e>
 801262e:	7a1b      	ldrb	r3, [r3, #8]
 8012630:	2b00      	cmp	r3, #0
 8012632:	bf14      	ite	ne
 8012634:	2101      	movne	r1, #1
 8012636:	2102      	moveq	r1, #2
 8012638:	e000      	b.n	801263c <TEXT_Callback+0x50>
 801263a:	2103      	movs	r1, #3
 801263c:	4628      	mov	r0, r5
 801263e:	f7ff f996 	bl	801196e <WM_NotifyParent>
 8012642:	e031      	b.n	80126a8 <TEXT_Callback+0xbc>
 8012644:	4628      	mov	r0, r5
 8012646:	f7f8 f983 	bl	800a950 <GUI_ALLOC_LockH>
 801264a:	9000      	str	r0, [sp, #0]
 801264c:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801264e:	f7fa faef 	bl	800cc30 <LCD_SetColor>
 8012652:	9b00      	ldr	r3, [sp, #0]
 8012654:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8012656:	f7f8 fd71 	bl	800b13c <GUI_SetFont>
 801265a:	4628      	mov	r0, r5
 801265c:	f002 fa51 	bl	8014b02 <WM_GetHasTrans>
 8012660:	b928      	cbnz	r0, 801266e <TEXT_Callback+0x82>
 8012662:	9b00      	ldr	r3, [sp, #0]
 8012664:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 8012666:	f7fa fadd 	bl	800cc24 <LCD_SetBkColor>
 801266a:	f7f8 fe67 	bl	800b33c <GUI_Clear>
 801266e:	9b00      	ldr	r3, [sp, #0]
 8012670:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012672:	b1ab      	cbz	r3, 80126a0 <TEXT_Callback+0xb4>
 8012674:	2002      	movs	r0, #2
 8012676:	f7f8 fd99 	bl	800b1ac <GUI_SetTextMode>
 801267a:	a802      	add	r0, sp, #8
 801267c:	f7fe ff98 	bl	80115b0 <WM_GetClientRect>
 8012680:	9b00      	ldr	r3, [sp, #0]
 8012682:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8012684:	f7f8 f964 	bl	800a950 <GUI_ALLOC_LockH>
 8012688:	9a00      	ldr	r2, [sp, #0]
 801268a:	a902      	add	r1, sp, #8
 801268c:	9001      	str	r0, [sp, #4]
 801268e:	f892 3040 	ldrb.w	r3, [r2, #64]	; 0x40
 8012692:	f9b2 2048 	ldrsh.w	r2, [r2, #72]	; 0x48
 8012696:	f7f9 f84b 	bl	800b730 <GUI_DispStringInRectWrap>
 801269a:	a801      	add	r0, sp, #4
 801269c:	f7f8 f966 	bl	800a96c <GUI_ALLOC_UnlockH>
 80126a0:	4668      	mov	r0, sp
 80126a2:	f7f8 f963 	bl	800a96c <GUI_ALLOC_UnlockH>
 80126a6:	e002      	b.n	80126ae <TEXT_Callback+0xc2>
 80126a8:	4620      	mov	r0, r4
 80126aa:	f7fe fe85 	bl	80113b8 <WM_DefaultProc>
 80126ae:	b005      	add	sp, #20
 80126b0:	bd30      	pop	{r4, r5, pc}
	...

080126b4 <TEXT_CreateUser>:
 80126b4:	b570      	push	{r4, r5, r6, lr}
 80126b6:	b086      	sub	sp, #24
 80126b8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80126ba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80126bc:	3520      	adds	r5, #32
 80126be:	9503      	str	r5, [sp, #12]
 80126c0:	4d1b      	ldr	r5, [pc, #108]	; (8012730 <TEXT_CreateUser+0x7c>)
 80126c2:	9502      	str	r5, [sp, #8]
 80126c4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80126c6:	f045 0501 	orr.w	r5, r5, #1
 80126ca:	9501      	str	r5, [sp, #4]
 80126cc:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80126ce:	9500      	str	r5, [sp, #0]
 80126d0:	f7fe fa6a 	bl	8010ba8 <WM_CreateWindowAsChild>
 80126d4:	4605      	mov	r5, r0
 80126d6:	b338      	cbz	r0, 8012728 <TEXT_CreateUser+0x74>
 80126d8:	b18c      	cbz	r4, 80126fe <TEXT_CreateUser+0x4a>
 80126da:	4620      	mov	r0, r4
 80126dc:	f7ed fd98 	bl	8000210 <strlen>
 80126e0:	3001      	adds	r0, #1
 80126e2:	f7f8 fb0d 	bl	800ad00 <GUI_ALLOC_AllocZero>
 80126e6:	4606      	mov	r6, r0
 80126e8:	b150      	cbz	r0, 8012700 <TEXT_CreateUser+0x4c>
 80126ea:	f7f8 f931 	bl	800a950 <GUI_ALLOC_LockH>
 80126ee:	4621      	mov	r1, r4
 80126f0:	9005      	str	r0, [sp, #20]
 80126f2:	f003 fd91 	bl	8016218 <strcpy>
 80126f6:	a805      	add	r0, sp, #20
 80126f8:	f7f8 f938 	bl	800a96c <GUI_ALLOC_UnlockH>
 80126fc:	e000      	b.n	8012700 <TEXT_CreateUser+0x4c>
 80126fe:	4626      	mov	r6, r4
 8012700:	4628      	mov	r0, r5
 8012702:	f7f8 f925 	bl	800a950 <GUI_ALLOC_LockH>
 8012706:	2200      	movs	r2, #0
 8012708:	990d      	ldr	r1, [sp, #52]	; 0x34
 801270a:	9005      	str	r0, [sp, #20]
 801270c:	f000 f8a4 	bl	8012858 <WIDGET__Init>
 8012710:	9c05      	ldr	r4, [sp, #20]
 8012712:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012714:	6466      	str	r6, [r4, #68]	; 0x44
 8012716:	3434      	adds	r4, #52	; 0x34
 8012718:	82a3      	strh	r3, [r4, #20]
 801271a:	4b06      	ldr	r3, [pc, #24]	; (8012734 <TEXT_CreateUser+0x80>)
 801271c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 801271e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8012722:	a805      	add	r0, sp, #20
 8012724:	f7f8 f922 	bl	800a96c <GUI_ALLOC_UnlockH>
 8012728:	4628      	mov	r0, r5
 801272a:	b006      	add	sp, #24
 801272c:	bd70      	pop	{r4, r5, r6, pc}
 801272e:	bf00      	nop
 8012730:	080125ed 	.word	0x080125ed
 8012734:	20000098 	.word	0x20000098

08012738 <TEXT_CreateIndirect>:
 8012738:	b5f0      	push	{r4, r5, r6, r7, lr}
 801273a:	f9b0 500c 	ldrsh.w	r5, [r0, #12]
 801273e:	4604      	mov	r4, r0
 8012740:	b087      	sub	sp, #28
 8012742:	f9b0 7010 	ldrsh.w	r7, [r0, #16]
 8012746:	441d      	add	r5, r3
 8012748:	69a3      	ldr	r3, [r4, #24]
 801274a:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 801274e:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 8012752:	9305      	str	r3, [sp, #20]
 8012754:	6863      	ldr	r3, [r4, #4]
 8012756:	4410      	add	r0, r2
 8012758:	4632      	mov	r2, r6
 801275a:	9304      	str	r3, [sp, #16]
 801275c:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8012760:	9303      	str	r3, [sp, #12]
 8012762:	8a63      	ldrh	r3, [r4, #18]
 8012764:	9302      	str	r3, [sp, #8]
 8012766:	2302      	movs	r3, #2
 8012768:	e88d 000a 	stmia.w	sp, {r1, r3}
 801276c:	463b      	mov	r3, r7
 801276e:	4629      	mov	r1, r5
 8012770:	f7ff ffa0 	bl	80126b4 <TEXT_CreateUser>
 8012774:	b007      	add	sp, #28
 8012776:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012778 <TEXT_SetFont>:
 8012778:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801277a:	460c      	mov	r4, r1
 801277c:	4605      	mov	r5, r0
 801277e:	b160      	cbz	r0, 801279a <TEXT_SetFont+0x22>
 8012780:	f7f8 f8e6 	bl	800a950 <GUI_ALLOC_LockH>
 8012784:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8012786:	9001      	str	r0, [sp, #4]
 8012788:	42a3      	cmp	r3, r4
 801278a:	d003      	beq.n	8012794 <TEXT_SetFont+0x1c>
 801278c:	6344      	str	r4, [r0, #52]	; 0x34
 801278e:	4628      	mov	r0, r5
 8012790:	f7fe f9dd 	bl	8010b4e <WM_InvalidateWindow>
 8012794:	a801      	add	r0, sp, #4
 8012796:	f7f8 f8e9 	bl	800a96c <GUI_ALLOC_UnlockH>
 801279a:	b003      	add	sp, #12
 801279c:	bd30      	pop	{r4, r5, pc}

0801279e <TEXT_SetText>:
 801279e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80127a0:	460c      	mov	r4, r1
 80127a2:	4605      	mov	r5, r0
 80127a4:	b300      	cbz	r0, 80127e8 <TEXT_SetText+0x4a>
 80127a6:	f7f8 f8d3 	bl	800a950 <GUI_ALLOC_LockH>
 80127aa:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80127ac:	9000      	str	r0, [sp, #0]
 80127ae:	4668      	mov	r0, sp
 80127b0:	9301      	str	r3, [sp, #4]
 80127b2:	f7f8 f8db 	bl	800a96c <GUI_ALLOC_UnlockH>
 80127b6:	4621      	mov	r1, r4
 80127b8:	a801      	add	r0, sp, #4
 80127ba:	f7f9 fd65 	bl	800c288 <GUI__SetText>
 80127be:	2800      	cmp	r0, #0
 80127c0:	bf0c      	ite	eq
 80127c2:	2401      	moveq	r4, #1
 80127c4:	2400      	movne	r4, #0
 80127c6:	d010      	beq.n	80127ea <TEXT_SetText+0x4c>
 80127c8:	4628      	mov	r0, r5
 80127ca:	f7f8 f8c1 	bl	800a950 <GUI_ALLOC_LockH>
 80127ce:	9b01      	ldr	r3, [sp, #4]
 80127d0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80127d2:	9000      	str	r0, [sp, #0]
 80127d4:	429a      	cmp	r2, r3
 80127d6:	bf18      	it	ne
 80127d8:	6443      	strne	r3, [r0, #68]	; 0x44
 80127da:	4668      	mov	r0, sp
 80127dc:	f7f8 f8c6 	bl	800a96c <GUI_ALLOC_UnlockH>
 80127e0:	4628      	mov	r0, r5
 80127e2:	f7fe f9b4 	bl	8010b4e <WM_InvalidateWindow>
 80127e6:	e000      	b.n	80127ea <TEXT_SetText+0x4c>
 80127e8:	2401      	movs	r4, #1
 80127ea:	4620      	mov	r0, r4
 80127ec:	b003      	add	sp, #12
 80127ee:	bd30      	pop	{r4, r5, pc}

080127f0 <TEXT_SetTextAlign>:
 80127f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80127f2:	460d      	mov	r5, r1
 80127f4:	4604      	mov	r4, r0
 80127f6:	b160      	cbz	r0, 8012812 <TEXT_SetTextAlign+0x22>
 80127f8:	f7f8 f8aa 	bl	800a950 <GUI_ALLOC_LockH>
 80127fc:	ab02      	add	r3, sp, #8
 80127fe:	f8a0 5048 	strh.w	r5, [r0, #72]	; 0x48
 8012802:	f843 0d04 	str.w	r0, [r3, #-4]!
 8012806:	4618      	mov	r0, r3
 8012808:	f7f8 f8b0 	bl	800a96c <GUI_ALLOC_UnlockH>
 801280c:	4620      	mov	r0, r4
 801280e:	f7fe f99e 	bl	8010b4e <WM_InvalidateWindow>
 8012812:	b003      	add	sp, #12
 8012814:	bd30      	pop	{r4, r5, pc}

08012816 <TEXT_SetTextColor>:
 8012816:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012818:	460c      	mov	r4, r1
 801281a:	4605      	mov	r5, r0
 801281c:	b160      	cbz	r0, 8012838 <TEXT_SetTextColor+0x22>
 801281e:	f7f8 f897 	bl	800a950 <GUI_ALLOC_LockH>
 8012822:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012824:	9001      	str	r0, [sp, #4]
 8012826:	42a3      	cmp	r3, r4
 8012828:	d003      	beq.n	8012832 <TEXT_SetTextColor+0x1c>
 801282a:	6384      	str	r4, [r0, #56]	; 0x38
 801282c:	4628      	mov	r0, r5
 801282e:	f7fe f98e 	bl	8010b4e <WM_InvalidateWindow>
 8012832:	a801      	add	r0, sp, #4
 8012834:	f7f8 f89a 	bl	800a96c <GUI_ALLOC_UnlockH>
 8012838:	b003      	add	sp, #12
 801283a:	bd30      	pop	{r4, r5, pc}

0801283c <WIDGET__GetInsideRect>:
 801283c:	b538      	push	{r3, r4, r5, lr}
 801283e:	4605      	mov	r5, r0
 8012840:	460c      	mov	r4, r1
 8012842:	f7fe f83b 	bl	80108bc <WM__GetClientRectWin>
 8012846:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8012848:	4621      	mov	r1, r4
 801284a:	4620      	mov	r0, r4
 801284c:	681a      	ldr	r2, [r3, #0]
 801284e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012852:	f7f9 bcc3 	b.w	800c1dc <GUI__ReduceRect>
	...

08012858 <WIDGET__Init>:
 8012858:	4b02      	ldr	r3, [pc, #8]	; (8012864 <WIDGET__Init+0xc>)
 801285a:	8642      	strh	r2, [r0, #50]	; 0x32
 801285c:	681b      	ldr	r3, [r3, #0]
 801285e:	8601      	strh	r1, [r0, #48]	; 0x30
 8012860:	62c3      	str	r3, [r0, #44]	; 0x2c
 8012862:	4770      	bx	lr
 8012864:	200000a8 	.word	0x200000a8

08012868 <WIDGET_SetState>:
 8012868:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801286a:	460c      	mov	r4, r1
 801286c:	4605      	mov	r5, r0
 801286e:	f7f8 f86f 	bl	800a950 <GUI_ALLOC_LockH>
 8012872:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8012874:	9001      	str	r0, [sp, #4]
 8012876:	42a3      	cmp	r3, r4
 8012878:	d003      	beq.n	8012882 <WIDGET_SetState+0x1a>
 801287a:	8644      	strh	r4, [r0, #50]	; 0x32
 801287c:	4628      	mov	r0, r5
 801287e:	f7fe f966 	bl	8010b4e <WM_InvalidateWindow>
 8012882:	a801      	add	r0, sp, #4
 8012884:	f7f8 f872 	bl	800a96c <GUI_ALLOC_UnlockH>
 8012888:	b003      	add	sp, #12
 801288a:	bd30      	pop	{r4, r5, pc}

0801288c <WIDGET_OrState>:
 801288c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801288e:	460c      	mov	r4, r1
 8012890:	4605      	mov	r5, r0
 8012892:	b170      	cbz	r0, 80128b2 <WIDGET_OrState+0x26>
 8012894:	f7f8 f85c 	bl	800a950 <GUI_ALLOC_LockH>
 8012898:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 801289a:	9001      	str	r0, [sp, #4]
 801289c:	ea34 0301 	bics.w	r3, r4, r1
 80128a0:	d004      	beq.n	80128ac <WIDGET_OrState+0x20>
 80128a2:	430c      	orrs	r4, r1
 80128a4:	8644      	strh	r4, [r0, #50]	; 0x32
 80128a6:	4628      	mov	r0, r5
 80128a8:	f7fe f951 	bl	8010b4e <WM_InvalidateWindow>
 80128ac:	a801      	add	r0, sp, #4
 80128ae:	f7f8 f85d 	bl	800a96c <GUI_ALLOC_UnlockH>
 80128b2:	b003      	add	sp, #12
 80128b4:	bd30      	pop	{r4, r5, pc}

080128b6 <WIDGET_HandleActive>:
 80128b6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80128b8:	460d      	mov	r5, r1
 80128ba:	b085      	sub	sp, #20
 80128bc:	4606      	mov	r6, r0
 80128be:	2800      	cmp	r0, #0
 80128c0:	f000 8094 	beq.w	80129ec <WIDGET_HandleActive+0x136>
 80128c4:	f7f8 f844 	bl	800a950 <GUI_ALLOC_LockH>
 80128c8:	682b      	ldr	r3, [r5, #0]
 80128ca:	9002      	str	r0, [sp, #8]
 80128cc:	2b16      	cmp	r3, #22
 80128ce:	d054      	beq.n	801297a <WIDGET_HandleActive+0xc4>
 80128d0:	dc0c      	bgt.n	80128ec <WIDGET_HandleActive+0x36>
 80128d2:	2b11      	cmp	r3, #17
 80128d4:	d033      	beq.n	801293e <WIDGET_HandleActive+0x88>
 80128d6:	dc02      	bgt.n	80128de <WIDGET_HandleActive+0x28>
 80128d8:	2b0d      	cmp	r3, #13
 80128da:	d040      	beq.n	801295e <WIDGET_HandleActive+0xa8>
 80128dc:	e07f      	b.n	80129de <WIDGET_HandleActive+0x128>
 80128de:	2b14      	cmp	r3, #20
 80128e0:	d078      	beq.n	80129d4 <WIDGET_HandleActive+0x11e>
 80128e2:	2b15      	cmp	r3, #21
 80128e4:	d17b      	bne.n	80129de <WIDGET_HandleActive+0x128>
 80128e6:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 80128ea:	e071      	b.n	80129d0 <WIDGET_HandleActive+0x11a>
 80128ec:	2b1f      	cmp	r3, #31
 80128ee:	d06c      	beq.n	80129ca <WIDGET_HandleActive+0x114>
 80128f0:	dc02      	bgt.n	80128f8 <WIDGET_HandleActive+0x42>
 80128f2:	2b1e      	cmp	r3, #30
 80128f4:	d044      	beq.n	8012980 <WIDGET_HandleActive+0xca>
 80128f6:	e072      	b.n	80129de <WIDGET_HandleActive+0x128>
 80128f8:	2b31      	cmp	r3, #49	; 0x31
 80128fa:	d01e      	beq.n	801293a <WIDGET_HandleActive+0x84>
 80128fc:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8012900:	d16d      	bne.n	80129de <WIDGET_HandleActive+0x128>
 8012902:	68e9      	ldr	r1, [r5, #12]
 8012904:	ad04      	add	r5, sp, #16
 8012906:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012908:	680c      	ldr	r4, [r1, #0]
 801290a:	681b      	ldr	r3, [r3, #0]
 801290c:	62c1      	str	r1, [r0, #44]	; 0x2c
 801290e:	a802      	add	r0, sp, #8
 8012910:	1b1c      	subs	r4, r3, r4
 8012912:	f7f8 f82b 	bl	800a96c <GUI_ALLOC_UnlockH>
 8012916:	4630      	mov	r0, r6
 8012918:	f7f8 f81a 	bl	800a950 <GUI_ALLOC_LockH>
 801291c:	4262      	negs	r2, r4
 801291e:	f845 0d04 	str.w	r0, [r5, #-4]!
 8012922:	4623      	mov	r3, r4
 8012924:	4611      	mov	r1, r2
 8012926:	9400      	str	r4, [sp, #0]
 8012928:	f7ff fd63 	bl	80123f2 <WM__UpdateChildPositions>
 801292c:	4628      	mov	r0, r5
 801292e:	f7f8 f81d 	bl	800a96c <GUI_ALLOC_UnlockH>
 8012932:	4630      	mov	r0, r6
 8012934:	f7fe f90b 	bl	8010b4e <WM_InvalidateWindow>
 8012938:	e04f      	b.n	80129da <WIDGET_HandleActive+0x124>
 801293a:	2400      	movs	r4, #0
 801293c:	e040      	b.n	80129c0 <WIDGET_HandleActive+0x10a>
 801293e:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 8012940:	06d9      	lsls	r1, r3, #27
 8012942:	d54c      	bpl.n	80129de <WIDGET_HandleActive+0x128>
 8012944:	68eb      	ldr	r3, [r5, #12]
 8012946:	2b00      	cmp	r3, #0
 8012948:	d049      	beq.n	80129de <WIDGET_HandleActive+0x128>
 801294a:	7a1b      	ldrb	r3, [r3, #8]
 801294c:	2b00      	cmp	r3, #0
 801294e:	d046      	beq.n	80129de <WIDGET_HandleActive+0x128>
 8012950:	a802      	add	r0, sp, #8
 8012952:	f7f8 f80b 	bl	800a96c <GUI_ALLOC_UnlockH>
 8012956:	4630      	mov	r0, r6
 8012958:	f7ff f81c 	bl	8011994 <WM_SetFocus>
 801295c:	e03f      	b.n	80129de <WIDGET_HandleActive+0x128>
 801295e:	68eb      	ldr	r3, [r5, #12]
 8012960:	68db      	ldr	r3, [r3, #12]
 8012962:	2b00      	cmp	r3, #0
 8012964:	d03b      	beq.n	80129de <WIDGET_HandleActive+0x128>
 8012966:	7a1b      	ldrb	r3, [r3, #8]
 8012968:	2b00      	cmp	r3, #0
 801296a:	d038      	beq.n	80129de <WIDGET_HandleActive+0x128>
 801296c:	a802      	add	r0, sp, #8
 801296e:	f7f7 fffd 	bl	800a96c <GUI_ALLOC_UnlockH>
 8012972:	4630      	mov	r0, r6
 8012974:	f001 fffe 	bl	8014974 <WM_BringToTop>
 8012978:	e02f      	b.n	80129da <WIDGET_HandleActive+0x124>
 801297a:	68eb      	ldr	r3, [r5, #12]
 801297c:	8603      	strh	r3, [r0, #48]	; 0x30
 801297e:	e02c      	b.n	80129da <WIDGET_HandleActive+0x124>
 8012980:	68eb      	ldr	r3, [r5, #12]
 8012982:	8e41      	ldrh	r1, [r0, #50]	; 0x32
 8012984:	2b01      	cmp	r3, #1
 8012986:	d108      	bne.n	801299a <WIDGET_HandleActive+0xe4>
 8012988:	06ca      	lsls	r2, r1, #27
 801298a:	d50d      	bpl.n	80129a8 <WIDGET_HandleActive+0xf2>
 801298c:	f041 0101 	orr.w	r1, r1, #1
 8012990:	4630      	mov	r0, r6
 8012992:	f7ff ff69 	bl	8012868 <WIDGET_SetState>
 8012996:	2708      	movs	r7, #8
 8012998:	e008      	b.n	80129ac <WIDGET_HandleActive+0xf6>
 801299a:	f021 0101 	bic.w	r1, r1, #1
 801299e:	4630      	mov	r0, r6
 80129a0:	f7ff ff62 	bl	8012868 <WIDGET_SetState>
 80129a4:	2709      	movs	r7, #9
 80129a6:	e001      	b.n	80129ac <WIDGET_HandleActive+0xf6>
 80129a8:	f04f 37ff 	mov.w	r7, #4294967295
 80129ac:	a802      	add	r0, sp, #8
 80129ae:	2400      	movs	r4, #0
 80129b0:	f7f7 ffdc 	bl	800a96c <GUI_ALLOC_UnlockH>
 80129b4:	1c7b      	adds	r3, r7, #1
 80129b6:	d005      	beq.n	80129c4 <WIDGET_HandleActive+0x10e>
 80129b8:	4639      	mov	r1, r7
 80129ba:	4630      	mov	r0, r6
 80129bc:	f7fe ffd7 	bl	801196e <WM_NotifyParent>
 80129c0:	60ec      	str	r4, [r5, #12]
 80129c2:	e00d      	b.n	80129e0 <WIDGET_HandleActive+0x12a>
 80129c4:	2301      	movs	r3, #1
 80129c6:	60eb      	str	r3, [r5, #12]
 80129c8:	e00a      	b.n	80129e0 <WIDGET_HandleActive+0x12a>
 80129ca:	8e43      	ldrh	r3, [r0, #50]	; 0x32
 80129cc:	f3c3 1300 	ubfx	r3, r3, #4, #1
 80129d0:	60eb      	str	r3, [r5, #12]
 80129d2:	e002      	b.n	80129da <WIDGET_HandleActive+0x124>
 80129d4:	68e9      	ldr	r1, [r5, #12]
 80129d6:	f7ff ff31 	bl	801283c <WIDGET__GetInsideRect>
 80129da:	2400      	movs	r4, #0
 80129dc:	e000      	b.n	80129e0 <WIDGET_HandleActive+0x12a>
 80129de:	2401      	movs	r4, #1
 80129e0:	9b02      	ldr	r3, [sp, #8]
 80129e2:	b123      	cbz	r3, 80129ee <WIDGET_HandleActive+0x138>
 80129e4:	a802      	add	r0, sp, #8
 80129e6:	f7f7 ffc1 	bl	800a96c <GUI_ALLOC_UnlockH>
 80129ea:	e000      	b.n	80129ee <WIDGET_HandleActive+0x138>
 80129ec:	2401      	movs	r4, #1
 80129ee:	4620      	mov	r0, r4
 80129f0:	b005      	add	sp, #20
 80129f2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080129f4 <_DrawDownRect>:
 80129f4:	b510      	push	{r4, lr}
 80129f6:	b09e      	sub	sp, #120	; 0x78
 80129f8:	4604      	mov	r4, r0
 80129fa:	a801      	add	r0, sp, #4
 80129fc:	f7f8 fb7a 	bl	800b0f4 <GUI_SaveContext_W>
 8012a00:	4b09      	ldr	r3, [pc, #36]	; (8012a28 <_DrawDownRect+0x34>)
 8012a02:	6818      	ldr	r0, [r3, #0]
 8012a04:	f7fa f914 	bl	800cc30 <LCD_SetColor>
 8012a08:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8012a0c:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8012a10:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8012a14:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012a18:	f000 f9bc 	bl	8012d94 <GUI_DrawRect>
 8012a1c:	a801      	add	r0, sp, #4
 8012a1e:	f7f8 fb73 	bl	800b108 <GUI_RestoreContext>
 8012a22:	b01e      	add	sp, #120	; 0x78
 8012a24:	bd10      	pop	{r4, pc}
 8012a26:	bf00      	nop
 8012a28:	200000ac 	.word	0x200000ac

08012a2c <_DrawUpRect>:
 8012a2c:	f7ff bfe2 	b.w	80129f4 <_DrawDownRect>

08012a30 <_DrawDown>:
 8012a30:	b507      	push	{r0, r1, r2, lr}
 8012a32:	4668      	mov	r0, sp
 8012a34:	f7fe fdbc 	bl	80115b0 <WM_GetClientRect>
 8012a38:	4668      	mov	r0, sp
 8012a3a:	f7ff ffdb 	bl	80129f4 <_DrawDownRect>
 8012a3e:	b003      	add	sp, #12
 8012a40:	f85d fb04 	ldr.w	pc, [sp], #4

08012a44 <_DrawUp>:
 8012a44:	f7ff bff4 	b.w	8012a30 <_DrawDown>

08012a48 <WINDOW_Callback>:
 8012a48:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012a4c:	6845      	ldr	r5, [r0, #4]
 8012a4e:	af02      	add	r7, sp, #8
 8012a50:	4604      	mov	r4, r0
 8012a52:	4628      	mov	r0, r5
 8012a54:	f7f7 ff7c 	bl	800a950 <GUI_ALLOC_LockH>
 8012a58:	f847 0d08 	str.w	r0, [r7, #-8]!
 8012a5c:	6b86      	ldr	r6, [r0, #56]	; 0x38
 8012a5e:	f8d0 9034 	ldr.w	r9, [r0, #52]	; 0x34
 8012a62:	f8d0 8040 	ldr.w	r8, [r0, #64]	; 0x40
 8012a66:	4638      	mov	r0, r7
 8012a68:	f7f7 ff80 	bl	800a96c <GUI_ALLOC_UnlockH>
 8012a6c:	6823      	ldr	r3, [r4, #0]
 8012a6e:	2b1f      	cmp	r3, #31
 8012a70:	d02f      	beq.n	8012ad2 <WINDOW_Callback+0x8a>
 8012a72:	dc06      	bgt.n	8012a82 <WINDOW_Callback+0x3a>
 8012a74:	2b0f      	cmp	r3, #15
 8012a76:	d05f      	beq.n	8012b38 <WINDOW_Callback+0xf0>
 8012a78:	2b1e      	cmp	r3, #30
 8012a7a:	d015      	beq.n	8012aa8 <WINDOW_Callback+0x60>
 8012a7c:	2b0e      	cmp	r3, #14
 8012a7e:	d168      	bne.n	8012b52 <WINDOW_Callback+0x10a>
 8012a80:	e049      	b.n	8012b16 <WINDOW_Callback+0xce>
 8012a82:	2b22      	cmp	r3, #34	; 0x22
 8012a84:	d062      	beq.n	8012b4c <WINDOW_Callback+0x104>
 8012a86:	2b2a      	cmp	r3, #42	; 0x2a
 8012a88:	d002      	beq.n	8012a90 <WINDOW_Callback+0x48>
 8012a8a:	2b20      	cmp	r3, #32
 8012a8c:	d161      	bne.n	8012b52 <WINDOW_Callback+0x10a>
 8012a8e:	e025      	b.n	8012adc <WINDOW_Callback+0x94>
 8012a90:	4628      	mov	r0, r5
 8012a92:	f7f7 ff5d 	bl	800a950 <GUI_ALLOC_LockH>
 8012a96:	68e3      	ldr	r3, [r4, #12]
 8012a98:	9000      	str	r0, [sp, #0]
 8012a9a:	b10b      	cbz	r3, 8012aa0 <WINDOW_Callback+0x58>
 8012a9c:	63c3      	str	r3, [r0, #60]	; 0x3c
 8012a9e:	e001      	b.n	8012aa4 <WINDOW_Callback+0x5c>
 8012aa0:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012aa2:	60e3      	str	r3, [r4, #12]
 8012aa4:	4638      	mov	r0, r7
 8012aa6:	e033      	b.n	8012b10 <WINDOW_Callback+0xc8>
 8012aa8:	68e4      	ldr	r4, [r4, #12]
 8012aaa:	2c01      	cmp	r4, #1
 8012aac:	d15a      	bne.n	8012b64 <WINDOW_Callback+0x11c>
 8012aae:	4630      	mov	r0, r6
 8012ab0:	f7fe fe98 	bl	80117e4 <WM_IsWindow>
 8012ab4:	2800      	cmp	r0, #0
 8012ab6:	d03b      	beq.n	8012b30 <WINDOW_Callback+0xe8>
 8012ab8:	4630      	mov	r0, r6
 8012aba:	f7fe ff6b 	bl	8011994 <WM_SetFocus>
 8012abe:	4630      	mov	r0, r6
 8012ac0:	f7fe fe6a 	bl	8011798 <WM_HasFocus>
 8012ac4:	2800      	cmp	r0, #0
 8012ac6:	d04d      	beq.n	8012b64 <WINDOW_Callback+0x11c>
 8012ac8:	4621      	mov	r1, r4
 8012aca:	4630      	mov	r0, r6
 8012acc:	f7ff fede 	bl	801288c <WIDGET_OrState>
 8012ad0:	e048      	b.n	8012b64 <WINDOW_Callback+0x11c>
 8012ad2:	4621      	mov	r1, r4
 8012ad4:	4628      	mov	r0, r5
 8012ad6:	f7ff feee 	bl	80128b6 <WIDGET_HandleActive>
 8012ada:	e043      	b.n	8012b64 <WINDOW_Callback+0x11c>
 8012adc:	4628      	mov	r0, r5
 8012ade:	f7f7 ff37 	bl	800a950 <GUI_ALLOC_LockH>
 8012ae2:	68e4      	ldr	r4, [r4, #12]
 8012ae4:	9001      	str	r0, [sp, #4]
 8012ae6:	b194      	cbz	r4, 8012b0e <WINDOW_Callback+0xc6>
 8012ae8:	4629      	mov	r1, r5
 8012aea:	6860      	ldr	r0, [r4, #4]
 8012aec:	f7ff fc0c 	bl	8012308 <WM__IsAncestorOrSelf>
 8012af0:	4629      	mov	r1, r5
 8012af2:	b928      	cbnz	r0, 8012b00 <WINDOW_Callback+0xb8>
 8012af4:	6820      	ldr	r0, [r4, #0]
 8012af6:	f7ff fbf6 	bl	80122e6 <WM__IsAncestor>
 8012afa:	b140      	cbz	r0, 8012b0e <WINDOW_Callback+0xc6>
 8012afc:	6822      	ldr	r2, [r4, #0]
 8012afe:	e004      	b.n	8012b0a <WINDOW_Callback+0xc2>
 8012b00:	6860      	ldr	r0, [r4, #4]
 8012b02:	f7ff fbf0 	bl	80122e6 <WM__IsAncestor>
 8012b06:	b110      	cbz	r0, 8012b0e <WINDOW_Callback+0xc6>
 8012b08:	6862      	ldr	r2, [r4, #4]
 8012b0a:	9b01      	ldr	r3, [sp, #4]
 8012b0c:	639a      	str	r2, [r3, #56]	; 0x38
 8012b0e:	a801      	add	r0, sp, #4
 8012b10:	f7f7 ff2c 	bl	800a96c <GUI_ALLOC_UnlockH>
 8012b14:	e026      	b.n	8012b64 <WINDOW_Callback+0x11c>
 8012b16:	68e3      	ldr	r3, [r4, #12]
 8012b18:	685a      	ldr	r2, [r3, #4]
 8012b1a:	2a00      	cmp	r2, #0
 8012b1c:	dd19      	ble.n	8012b52 <WINDOW_Callback+0x10a>
 8012b1e:	681b      	ldr	r3, [r3, #0]
 8012b20:	2b09      	cmp	r3, #9
 8012b22:	d005      	beq.n	8012b30 <WINDOW_Callback+0xe8>
 8012b24:	2b0a      	cmp	r3, #10
 8012b26:	d114      	bne.n	8012b52 <WINDOW_Callback+0x10a>
 8012b28:	4628      	mov	r0, r5
 8012b2a:	f001 ffce 	bl	8014aca <WM_SetFocusOnPrevChild>
 8012b2e:	e019      	b.n	8012b64 <WINDOW_Callback+0x11c>
 8012b30:	4628      	mov	r0, r5
 8012b32:	f001 ff91 	bl	8014a58 <WM_SetFocusOnNextChild>
 8012b36:	e015      	b.n	8012b64 <WINDOW_Callback+0x11c>
 8012b38:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
 8012b3c:	4598      	cmp	r8, r3
 8012b3e:	d008      	beq.n	8012b52 <WINDOW_Callback+0x10a>
 8012b40:	4640      	mov	r0, r8
 8012b42:	f7fa f86f 	bl	800cc24 <LCD_SetBkColor>
 8012b46:	f7f8 fbf9 	bl	800b33c <GUI_Clear>
 8012b4a:	e002      	b.n	8012b52 <WINDOW_Callback+0x10a>
 8012b4c:	f8c4 800c 	str.w	r8, [r4, #12]
 8012b50:	e008      	b.n	8012b64 <WINDOW_Callback+0x11c>
 8012b52:	f1b9 0f00 	cmp.w	r9, #0
 8012b56:	d002      	beq.n	8012b5e <WINDOW_Callback+0x116>
 8012b58:	4620      	mov	r0, r4
 8012b5a:	47c8      	blx	r9
 8012b5c:	e002      	b.n	8012b64 <WINDOW_Callback+0x11c>
 8012b5e:	4620      	mov	r0, r4
 8012b60:	f7fe fc2a 	bl	80113b8 <WM_DefaultProc>
 8012b64:	b003      	add	sp, #12
 8012b66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08012b6a <WINDOW_SetBkColor>:
 8012b6a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012b6c:	460d      	mov	r5, r1
 8012b6e:	4604      	mov	r4, r0
 8012b70:	f7f7 feee 	bl	800a950 <GUI_ALLOC_LockH>
 8012b74:	ab02      	add	r3, sp, #8
 8012b76:	6405      	str	r5, [r0, #64]	; 0x40
 8012b78:	f843 0d04 	str.w	r0, [r3, #-4]!
 8012b7c:	4618      	mov	r0, r3
 8012b7e:	f7f7 fef5 	bl	800a96c <GUI_ALLOC_UnlockH>
 8012b82:	4620      	mov	r0, r4
 8012b84:	f7fd ffe3 	bl	8010b4e <WM_InvalidateWindow>
 8012b88:	b003      	add	sp, #12
 8012b8a:	bd30      	pop	{r4, r5, pc}

08012b8c <WINDOW_CreateUser>:
 8012b8c:	b510      	push	{r4, lr}
 8012b8e:	b086      	sub	sp, #24
 8012b90:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8012b92:	3418      	adds	r4, #24
 8012b94:	9403      	str	r4, [sp, #12]
 8012b96:	4c10      	ldr	r4, [pc, #64]	; (8012bd8 <WINDOW_CreateUser+0x4c>)
 8012b98:	9402      	str	r4, [sp, #8]
 8012b9a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8012b9c:	9401      	str	r4, [sp, #4]
 8012b9e:	9c08      	ldr	r4, [sp, #32]
 8012ba0:	9400      	str	r4, [sp, #0]
 8012ba2:	f7fe f801 	bl	8010ba8 <WM_CreateWindowAsChild>
 8012ba6:	4604      	mov	r4, r0
 8012ba8:	b190      	cbz	r0, 8012bd0 <WINDOW_CreateUser+0x44>
 8012baa:	f7f7 fed1 	bl	800a950 <GUI_ALLOC_LockH>
 8012bae:	2210      	movs	r2, #16
 8012bb0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012bb2:	9005      	str	r0, [sp, #20]
 8012bb4:	f7ff fe50 	bl	8012858 <WIDGET__Init>
 8012bb8:	a806      	add	r0, sp, #24
 8012bba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8012bbc:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 8012bc0:	635a      	str	r2, [r3, #52]	; 0x34
 8012bc2:	2200      	movs	r2, #0
 8012bc4:	639a      	str	r2, [r3, #56]	; 0x38
 8012bc6:	4a05      	ldr	r2, [pc, #20]	; (8012bdc <WINDOW_CreateUser+0x50>)
 8012bc8:	6812      	ldr	r2, [r2, #0]
 8012bca:	641a      	str	r2, [r3, #64]	; 0x40
 8012bcc:	f7f7 fece 	bl	800a96c <GUI_ALLOC_UnlockH>
 8012bd0:	4620      	mov	r0, r4
 8012bd2:	b006      	add	sp, #24
 8012bd4:	bd10      	pop	{r4, pc}
 8012bd6:	bf00      	nop
 8012bd8:	08012a49 	.word	0x08012a49
 8012bdc:	200000b0 	.word	0x200000b0

08012be0 <WINDOW_CreateIndirect>:
 8012be0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012be2:	f9b0 500c 	ldrsh.w	r5, [r0, #12]
 8012be6:	4604      	mov	r4, r0
 8012be8:	b087      	sub	sp, #28
 8012bea:	f9b0 7010 	ldrsh.w	r7, [r0, #16]
 8012bee:	441d      	add	r5, r3
 8012bf0:	69a3      	ldr	r3, [r4, #24]
 8012bf2:	f9b0 600e 	ldrsh.w	r6, [r0, #14]
 8012bf6:	f9b0 000a 	ldrsh.w	r0, [r0, #10]
 8012bfa:	9305      	str	r3, [sp, #20]
 8012bfc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012bfe:	4410      	add	r0, r2
 8012c00:	4632      	mov	r2, r6
 8012c02:	9304      	str	r3, [sp, #16]
 8012c04:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8012c08:	9303      	str	r3, [sp, #12]
 8012c0a:	2300      	movs	r3, #0
 8012c0c:	9302      	str	r3, [sp, #8]
 8012c0e:	8a63      	ldrh	r3, [r4, #18]
 8012c10:	e88d 000a 	stmia.w	sp, {r1, r3}
 8012c14:	463b      	mov	r3, r7
 8012c16:	4629      	mov	r1, r5
 8012c18:	f7ff ffb8 	bl	8012b8c <WINDOW_CreateUser>
 8012c1c:	b007      	add	sp, #28
 8012c1e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012c20 <_Color2Index_16>:
 8012c20:	f3c0 4107 	ubfx	r1, r0, #16, #8
 8012c24:	b2c2      	uxtb	r2, r0
 8012c26:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012c28:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8012c2c:	f101 0e01 	add.w	lr, r1, #1
 8012c30:	1c56      	adds	r6, r2, #1
 8012c32:	f1be 0f54 	cmp.w	lr, #84	; 0x54
 8012c36:	f104 0701 	add.w	r7, r4, #1
 8012c3a:	4625      	mov	r5, r4
 8012c3c:	4614      	mov	r4, r2
 8012c3e:	bf94      	ite	ls
 8012c40:	2000      	movls	r0, #0
 8012c42:	2001      	movhi	r0, #1
 8012c44:	2f54      	cmp	r7, #84	; 0x54
 8012c46:	bf94      	ite	ls
 8012c48:	2300      	movls	r3, #0
 8012c4a:	2301      	movhi	r3, #1
 8012c4c:	2e54      	cmp	r6, #84	; 0x54
 8012c4e:	eb00 0203 	add.w	r2, r0, r3
 8012c52:	ea4f 0383 	mov.w	r3, r3, lsl #2
 8012c56:	bf94      	ite	ls
 8012c58:	f04f 0c00 	movls.w	ip, #0
 8012c5c:	f04f 0c01 	movhi.w	ip, #1
 8012c60:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8012c64:	f1be 0f54 	cmp.w	lr, #84	; 0x54
 8012c68:	4462      	add	r2, ip
 8012c6a:	eb03 00cc 	add.w	r0, r3, ip, lsl #3
 8012c6e:	d803      	bhi.n	8012c78 <_Color2Index_16+0x58>
 8012c70:	2f54      	cmp	r7, #84	; 0x54
 8012c72:	d801      	bhi.n	8012c78 <_Color2Index_16+0x58>
 8012c74:	2e54      	cmp	r6, #84	; 0x54
 8012c76:	d90a      	bls.n	8012c8e <_Color2Index_16+0x6e>
 8012c78:	4429      	add	r1, r5
 8012c7a:	ebc2 1382 	rsb	r3, r2, r2, lsl #6
 8012c7e:	ebc2 12c2 	rsb	r2, r2, r2, lsl #7
 8012c82:	4421      	add	r1, r4
 8012c84:	4419      	add	r1, r3
 8012c86:	fbb1 f2f2 	udiv	r2, r1, r2
 8012c8a:	eb00 0052 	add.w	r0, r0, r2, lsr #1
 8012c8e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012c90 <_Index2Color_16>:
 8012c90:	b570      	push	{r4, r5, r6, lr}
 8012c92:	f3c0 0680 	ubfx	r6, r0, #2, #1
 8012c96:	f3c0 0440 	ubfx	r4, r0, #1, #1
 8012c9a:	f3c0 03c0 	ubfx	r3, r0, #3, #1
 8012c9e:	ea00 0106 	and.w	r1, r0, r6
 8012ca2:	ea00 0504 	and.w	r5, r0, r4
 8012ca6:	4018      	ands	r0, r3
 8012ca8:	01ca      	lsls	r2, r1, #7
 8012caa:	1a52      	subs	r2, r2, r1
 8012cac:	eb02 11c6 	add.w	r1, r2, r6, lsl #7
 8012cb0:	01c2      	lsls	r2, r0, #7
 8012cb2:	1a12      	subs	r2, r2, r0
 8012cb4:	eb02 13c3 	add.w	r3, r2, r3, lsl #7
 8012cb8:	01ea      	lsls	r2, r5, #7
 8012cba:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8012cbe:	1b50      	subs	r0, r2, r5
 8012cc0:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8012cc4:	eb00 10c4 	add.w	r0, r0, r4, lsl #7
 8012cc8:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8012ccc:	bd70      	pop	{r4, r5, r6, pc}

08012cce <_GetIndexMask_16>:
 8012cce:	200f      	movs	r0, #15
 8012cd0:	4770      	bx	lr

08012cd2 <_GetIndexMask_0>:
 8012cd2:	b508      	push	{r3, lr}
 8012cd4:	f7fa f932 	bl	800cf3c <LCD_GetNumColors>
 8012cd8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8012cdc:	d010      	beq.n	8012d00 <_GetIndexMask_0+0x2e>
 8012cde:	287f      	cmp	r0, #127	; 0x7f
 8012ce0:	d810      	bhi.n	8012d04 <_GetIndexMask_0+0x32>
 8012ce2:	283f      	cmp	r0, #63	; 0x3f
 8012ce4:	d810      	bhi.n	8012d08 <_GetIndexMask_0+0x36>
 8012ce6:	281f      	cmp	r0, #31
 8012ce8:	d810      	bhi.n	8012d0c <_GetIndexMask_0+0x3a>
 8012cea:	280f      	cmp	r0, #15
 8012cec:	d810      	bhi.n	8012d10 <_GetIndexMask_0+0x3e>
 8012cee:	2807      	cmp	r0, #7
 8012cf0:	d810      	bhi.n	8012d14 <_GetIndexMask_0+0x42>
 8012cf2:	2803      	cmp	r0, #3
 8012cf4:	d810      	bhi.n	8012d18 <_GetIndexMask_0+0x46>
 8012cf6:	2801      	cmp	r0, #1
 8012cf8:	bf94      	ite	ls
 8012cfa:	2000      	movls	r0, #0
 8012cfc:	2001      	movhi	r0, #1
 8012cfe:	e00c      	b.n	8012d1a <_GetIndexMask_0+0x48>
 8012d00:	2008      	movs	r0, #8
 8012d02:	e00a      	b.n	8012d1a <_GetIndexMask_0+0x48>
 8012d04:	2007      	movs	r0, #7
 8012d06:	e008      	b.n	8012d1a <_GetIndexMask_0+0x48>
 8012d08:	2006      	movs	r0, #6
 8012d0a:	e006      	b.n	8012d1a <_GetIndexMask_0+0x48>
 8012d0c:	2005      	movs	r0, #5
 8012d0e:	e004      	b.n	8012d1a <_GetIndexMask_0+0x48>
 8012d10:	2004      	movs	r0, #4
 8012d12:	e002      	b.n	8012d1a <_GetIndexMask_0+0x48>
 8012d14:	2003      	movs	r0, #3
 8012d16:	e000      	b.n	8012d1a <_GetIndexMask_0+0x48>
 8012d18:	2002      	movs	r0, #2
 8012d1a:	2301      	movs	r3, #1
 8012d1c:	fa03 f000 	lsl.w	r0, r3, r0
 8012d20:	3801      	subs	r0, #1
 8012d22:	bd08      	pop	{r3, pc}

08012d24 <_Index2Color_0>:
 8012d24:	b538      	push	{r3, r4, r5, lr}
 8012d26:	4604      	mov	r4, r0
 8012d28:	f7fa f908 	bl	800cf3c <LCD_GetNumColors>
 8012d2c:	4605      	mov	r5, r0
 8012d2e:	f7fa f92d 	bl	800cf8c <LCD_GetPalette>
 8012d32:	42a5      	cmp	r5, r4
 8012d34:	d903      	bls.n	8012d3e <_Index2Color_0+0x1a>
 8012d36:	b118      	cbz	r0, 8012d40 <_Index2Color_0+0x1c>
 8012d38:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 8012d3c:	bd38      	pop	{r3, r4, r5, pc}
 8012d3e:	2000      	movs	r0, #0
 8012d40:	bd38      	pop	{r3, r4, r5, pc}

08012d42 <_Color2Index_0>:
 8012d42:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012d46:	4681      	mov	r9, r0
 8012d48:	f7fa f8f8 	bl	800cf3c <LCD_GetNumColors>
 8012d4c:	4607      	mov	r7, r0
 8012d4e:	f7fa f91d 	bl	800cf8c <LCD_GetPalette>
 8012d52:	4606      	mov	r6, r0
 8012d54:	b1e0      	cbz	r0, 8012d90 <_Color2Index_0+0x4e>
 8012d56:	2000      	movs	r0, #0
 8012d58:	f856 3020 	ldr.w	r3, [r6, r0, lsl #2]
 8012d5c:	454b      	cmp	r3, r9
 8012d5e:	d017      	beq.n	8012d90 <_Color2Index_0+0x4e>
 8012d60:	3001      	adds	r0, #1
 8012d62:	4287      	cmp	r7, r0
 8012d64:	dcf8      	bgt.n	8012d58 <_Color2Index_0+0x16>
 8012d66:	2400      	movs	r4, #0
 8012d68:	f06f 487f 	mvn.w	r8, #4278190080	; 0xff000000
 8012d6c:	4625      	mov	r5, r4
 8012d6e:	f856 1025 	ldr.w	r1, [r6, r5, lsl #2]
 8012d72:	4648      	mov	r0, r9
 8012d74:	f7f8 f885 	bl	800ae82 <GUI_CalcColorDist>
 8012d78:	4580      	cmp	r8, r0
 8012d7a:	bf88      	it	hi
 8012d7c:	462c      	movhi	r4, r5
 8012d7e:	f105 0501 	add.w	r5, r5, #1
 8012d82:	bf88      	it	hi
 8012d84:	4680      	movhi	r8, r0
 8012d86:	42af      	cmp	r7, r5
 8012d88:	dcf1      	bgt.n	8012d6e <_Color2Index_0+0x2c>
 8012d8a:	4620      	mov	r0, r4
 8012d8c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012d90:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08012d94 <GUI_DrawRect>:
 8012d94:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012d98:	4c1e      	ldr	r4, [pc, #120]	; (8012e14 <GUI_DrawRect+0x80>)
 8012d9a:	f8d4 e000 	ldr.w	lr, [r4]
 8012d9e:	f8de 5050 	ldr.w	r5, [lr, #80]	; 0x50
 8012da2:	f8de 404c 	ldr.w	r4, [lr, #76]	; 0x4c
 8012da6:	186f      	adds	r7, r5, r1
 8012da8:	441d      	add	r5, r3
 8012daa:	f89e 3018 	ldrb.w	r3, [lr, #24]
 8012dae:	1826      	adds	r6, r4, r0
 8012db0:	4414      	add	r4, r2
 8012db2:	4668      	mov	r0, sp
 8012db4:	3b01      	subs	r3, #1
 8012db6:	b29b      	uxth	r3, r3
 8012db8:	1af2      	subs	r2, r6, r3
 8012dba:	f8ad 2000 	strh.w	r2, [sp]
 8012dbe:	191a      	adds	r2, r3, r4
 8012dc0:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012dc4:	1afa      	subs	r2, r7, r3
 8012dc6:	442b      	add	r3, r5
 8012dc8:	f8ad 2002 	strh.w	r2, [sp, #2]
 8012dcc:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012dd0:	f7fe f930 	bl	8011034 <WM__InitIVRSearch>
 8012dd4:	b1d8      	cbz	r0, 8012e0e <GUI_DrawRect+0x7a>
 8012dd6:	f107 0801 	add.w	r8, r7, #1
 8012dda:	f105 39ff 	add.w	r9, r5, #4294967295
 8012dde:	4622      	mov	r2, r4
 8012de0:	4639      	mov	r1, r7
 8012de2:	4630      	mov	r0, r6
 8012de4:	f7f9 fbee 	bl	800c5c4 <LCD_DrawHLine>
 8012de8:	4622      	mov	r2, r4
 8012dea:	4629      	mov	r1, r5
 8012dec:	4630      	mov	r0, r6
 8012dee:	f7f9 fbe9 	bl	800c5c4 <LCD_DrawHLine>
 8012df2:	464a      	mov	r2, r9
 8012df4:	4641      	mov	r1, r8
 8012df6:	4630      	mov	r0, r6
 8012df8:	f7f9 fc0c 	bl	800c614 <LCD_DrawVLine>
 8012dfc:	464a      	mov	r2, r9
 8012dfe:	4641      	mov	r1, r8
 8012e00:	4620      	mov	r0, r4
 8012e02:	f7f9 fc07 	bl	800c614 <LCD_DrawVLine>
 8012e06:	f7fe f853 	bl	8010eb0 <WM__GetNextIVR>
 8012e0a:	2800      	cmp	r0, #0
 8012e0c:	d1e7      	bne.n	8012dde <GUI_DrawRect+0x4a>
 8012e0e:	b003      	add	sp, #12
 8012e10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012e14:	2000003c 	.word	0x2000003c

08012e18 <GUI_GetFontDistY>:
 8012e18:	4b02      	ldr	r3, [pc, #8]	; (8012e24 <GUI_GetFontDistY+0xc>)
 8012e1a:	681b      	ldr	r3, [r3, #0]
 8012e1c:	69db      	ldr	r3, [r3, #28]
 8012e1e:	7e58      	ldrb	r0, [r3, #25]
 8012e20:	4770      	bx	lr
 8012e22:	bf00      	nop
 8012e24:	2000003c 	.word	0x2000003c

08012e28 <GUI_GetCharDistX>:
 8012e28:	4b02      	ldr	r3, [pc, #8]	; (8012e34 <GUI_GetCharDistX+0xc>)
 8012e2a:	2100      	movs	r1, #0
 8012e2c:	681b      	ldr	r3, [r3, #0]
 8012e2e:	69db      	ldr	r3, [r3, #28]
 8012e30:	685b      	ldr	r3, [r3, #4]
 8012e32:	4718      	bx	r3
 8012e34:	2000003c 	.word	0x2000003c

08012e38 <GUI_GetCharDistXEx>:
 8012e38:	4b02      	ldr	r3, [pc, #8]	; (8012e44 <GUI_GetCharDistXEx+0xc>)
 8012e3a:	681b      	ldr	r3, [r3, #0]
 8012e3c:	69db      	ldr	r3, [r3, #28]
 8012e3e:	685b      	ldr	r3, [r3, #4]
 8012e40:	4718      	bx	r3
 8012e42:	bf00      	nop
 8012e44:	2000003c 	.word	0x2000003c

08012e48 <_Log2VisBuffered>:
 8012e48:	4770      	bx	lr
	...

08012e4c <_DispLine>:
 8012e4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012e4e:	4615      	mov	r5, r2
 8012e50:	ab02      	add	r3, sp, #8
 8012e52:	4a21      	ldr	r2, [pc, #132]	; (8012ed8 <_DispLine+0x8c>)
 8012e54:	4c21      	ldr	r4, [pc, #132]	; (8012edc <_DispLine+0x90>)
 8012e56:	f843 1d08 	str.w	r1, [r3, #-8]!
 8012e5a:	4619      	mov	r1, r3
 8012e5c:	9001      	str	r0, [sp, #4]
 8012e5e:	6812      	ldr	r2, [r2, #0]
 8012e60:	4790      	blx	r2
 8012e62:	6823      	ldr	r3, [r4, #0]
 8012e64:	9001      	str	r0, [sp, #4]
 8012e66:	6958      	ldr	r0, [r3, #20]
 8012e68:	b940      	cbnz	r0, 8012e7c <_DispLine+0x30>
 8012e6a:	2001      	movs	r0, #1
 8012e6c:	f001 f8bc 	bl	8013fe8 <GUI__ManageCache>
 8012e70:	6822      	ldr	r2, [r4, #0]
 8012e72:	69d3      	ldr	r3, [r2, #28]
 8012e74:	695b      	ldr	r3, [r3, #20]
 8012e76:	b93b      	cbnz	r3, 8012e88 <_DispLine+0x3c>
 8012e78:	4d19      	ldr	r5, [pc, #100]	; (8012ee0 <_DispLine+0x94>)
 8012e7a:	e022      	b.n	8012ec2 <_DispLine+0x76>
 8012e7c:	4629      	mov	r1, r5
 8012e7e:	f7f8 f91b 	bl	800b0b8 <GUI_RectsIntersect>
 8012e82:	2800      	cmp	r0, #0
 8012e84:	d1f1      	bne.n	8012e6a <_DispLine+0x1e>
 8012e86:	e024      	b.n	8012ed2 <_DispLine+0x86>
 8012e88:	4c16      	ldr	r4, [pc, #88]	; (8012ee4 <_DispLine+0x98>)
 8012e8a:	689b      	ldr	r3, [r3, #8]
 8012e8c:	6821      	ldr	r1, [r4, #0]
 8012e8e:	b141      	cbz	r1, 8012ea2 <_DispLine+0x56>
 8012e90:	f9b2 5022 	ldrsh.w	r5, [r2, #34]	; 0x22
 8012e94:	9801      	ldr	r0, [sp, #4]
 8012e96:	9900      	ldr	r1, [sp, #0]
 8012e98:	4798      	blx	r3
 8012e9a:	6823      	ldr	r3, [r4, #0]
 8012e9c:	4628      	mov	r0, r5
 8012e9e:	4798      	blx	r3
 8012ea0:	e014      	b.n	8012ecc <_DispLine+0x80>
 8012ea2:	9900      	ldr	r1, [sp, #0]
 8012ea4:	9801      	ldr	r0, [sp, #4]
 8012ea6:	4798      	blx	r3
 8012ea8:	e010      	b.n	8012ecc <_DispLine+0x80>
 8012eaa:	a801      	add	r0, sp, #4
 8012eac:	f7f8 fe0e 	bl	800bacc <GUI_UC__GetCharCodeInc>
 8012eb0:	6823      	ldr	r3, [r4, #0]
 8012eb2:	4606      	mov	r6, r0
 8012eb4:	69db      	ldr	r3, [r3, #28]
 8012eb6:	681b      	ldr	r3, [r3, #0]
 8012eb8:	4798      	blx	r3
 8012eba:	682b      	ldr	r3, [r5, #0]
 8012ebc:	b10b      	cbz	r3, 8012ec2 <_DispLine+0x76>
 8012ebe:	4630      	mov	r0, r6
 8012ec0:	4798      	blx	r3
 8012ec2:	9b00      	ldr	r3, [sp, #0]
 8012ec4:	3b01      	subs	r3, #1
 8012ec6:	2b00      	cmp	r3, #0
 8012ec8:	9300      	str	r3, [sp, #0]
 8012eca:	daee      	bge.n	8012eaa <_DispLine+0x5e>
 8012ecc:	2000      	movs	r0, #0
 8012ece:	f001 f88b 	bl	8013fe8 <GUI__ManageCache>
 8012ed2:	b002      	add	sp, #8
 8012ed4:	bd70      	pop	{r4, r5, r6, pc}
 8012ed6:	bf00      	nop
 8012ed8:	200000b4 	.word	0x200000b4
 8012edc:	2000003c 	.word	0x2000003c
 8012ee0:	2002dae4 	.word	0x2002dae4
 8012ee4:	2002dad8 	.word	0x2002dad8

08012ee8 <GUI__GetLineNumChars>:
 8012ee8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012eea:	460d      	mov	r5, r1
 8012eec:	9001      	str	r0, [sp, #4]
 8012eee:	4604      	mov	r4, r0
 8012ef0:	b188      	cbz	r0, 8012f16 <GUI__GetLineNumChars+0x2e>
 8012ef2:	4b0a      	ldr	r3, [pc, #40]	; (8012f1c <GUI__GetLineNumChars+0x34>)
 8012ef4:	681b      	ldr	r3, [r3, #0]
 8012ef6:	69db      	ldr	r3, [r3, #28]
 8012ef8:	695c      	ldr	r4, [r3, #20]
 8012efa:	b154      	cbz	r4, 8012f12 <GUI__GetLineNumChars+0x2a>
 8012efc:	6864      	ldr	r4, [r4, #4]
 8012efe:	b144      	cbz	r4, 8012f12 <GUI__GetLineNumChars+0x2a>
 8012f00:	47a0      	blx	r4
 8012f02:	e009      	b.n	8012f18 <GUI__GetLineNumChars+0x30>
 8012f04:	a801      	add	r0, sp, #4
 8012f06:	f7f8 fde1 	bl	800bacc <GUI_UC__GetCharCodeInc>
 8012f0a:	b120      	cbz	r0, 8012f16 <GUI__GetLineNumChars+0x2e>
 8012f0c:	280a      	cmp	r0, #10
 8012f0e:	d002      	beq.n	8012f16 <GUI__GetLineNumChars+0x2e>
 8012f10:	3401      	adds	r4, #1
 8012f12:	42ac      	cmp	r4, r5
 8012f14:	dbf6      	blt.n	8012f04 <GUI__GetLineNumChars+0x1c>
 8012f16:	4620      	mov	r0, r4
 8012f18:	b003      	add	sp, #12
 8012f1a:	bd30      	pop	{r4, r5, pc}
 8012f1c:	2000003c 	.word	0x2000003c

08012f20 <GUI__GetOverlap>:
 8012f20:	b513      	push	{r0, r1, r4, lr}
 8012f22:	2400      	movs	r4, #0
 8012f24:	a902      	add	r1, sp, #8
 8012f26:	f841 4d04 	str.w	r4, [r1, #-4]!
 8012f2a:	f7ff ff85 	bl	8012e38 <GUI_GetCharDistXEx>
 8012f2e:	9b01      	ldr	r3, [sp, #4]
 8012f30:	4298      	cmp	r0, r3
 8012f32:	bfb4      	ite	lt
 8012f34:	1a18      	sublt	r0, r3, r0
 8012f36:	4620      	movge	r0, r4
 8012f38:	b002      	add	sp, #8
 8012f3a:	bd10      	pop	{r4, pc}

08012f3c <GUI__GetLineDistX>:
 8012f3c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012f3e:	4a15      	ldr	r2, [pc, #84]	; (8012f94 <GUI__GetLineDistX+0x58>)
 8012f40:	ab02      	add	r3, sp, #8
 8012f42:	9001      	str	r0, [sp, #4]
 8012f44:	f843 1d08 	str.w	r1, [r3, #-8]!
 8012f48:	4619      	mov	r1, r3
 8012f4a:	6812      	ldr	r2, [r2, #0]
 8012f4c:	4790      	blx	r2
 8012f4e:	9001      	str	r0, [sp, #4]
 8012f50:	b1e8      	cbz	r0, 8012f8e <GUI__GetLineDistX+0x52>
 8012f52:	4b11      	ldr	r3, [pc, #68]	; (8012f98 <GUI__GetLineDistX+0x5c>)
 8012f54:	681b      	ldr	r3, [r3, #0]
 8012f56:	69db      	ldr	r3, [r3, #28]
 8012f58:	695c      	ldr	r4, [r3, #20]
 8012f5a:	b10c      	cbz	r4, 8012f60 <GUI__GetLineDistX+0x24>
 8012f5c:	6824      	ldr	r4, [r4, #0]
 8012f5e:	b90c      	cbnz	r4, 8012f64 <GUI__GetLineDistX+0x28>
 8012f60:	4625      	mov	r5, r4
 8012f62:	e002      	b.n	8012f6a <GUI__GetLineDistX+0x2e>
 8012f64:	9900      	ldr	r1, [sp, #0]
 8012f66:	47a0      	blx	r4
 8012f68:	e011      	b.n	8012f8e <GUI__GetLineDistX+0x52>
 8012f6a:	9b00      	ldr	r3, [sp, #0]
 8012f6c:	3b01      	subs	r3, #1
 8012f6e:	2b00      	cmp	r3, #0
 8012f70:	9300      	str	r3, [sp, #0]
 8012f72:	db07      	blt.n	8012f84 <GUI__GetLineDistX+0x48>
 8012f74:	a801      	add	r0, sp, #4
 8012f76:	f7f8 fda9 	bl	800bacc <GUI_UC__GetCharCodeInc>
 8012f7a:	4604      	mov	r4, r0
 8012f7c:	f7ff ff54 	bl	8012e28 <GUI_GetCharDistX>
 8012f80:	4405      	add	r5, r0
 8012f82:	e7f2      	b.n	8012f6a <GUI__GetLineDistX+0x2e>
 8012f84:	4620      	mov	r0, r4
 8012f86:	f7ff ffcb 	bl	8012f20 <GUI__GetOverlap>
 8012f8a:	4428      	add	r0, r5
 8012f8c:	e7ff      	b.n	8012f8e <GUI__GetLineDistX+0x52>
 8012f8e:	b003      	add	sp, #12
 8012f90:	bd30      	pop	{r4, r5, pc}
 8012f92:	bf00      	nop
 8012f94:	200000b4 	.word	0x200000b4
 8012f98:	2000003c 	.word	0x2000003c

08012f9c <GUI__DispLine>:
 8012f9c:	4b27      	ldr	r3, [pc, #156]	; (801303c <GUI__DispLine+0xa0>)
 8012f9e:	681b      	ldr	r3, [r3, #0]
 8012fa0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012fa2:	4605      	mov	r5, r0
 8012fa4:	460e      	mov	r6, r1
 8012fa6:	b163      	cbz	r3, 8012fc2 <GUI__DispLine+0x26>
 8012fa8:	2000      	movs	r0, #0
 8012faa:	f7fe f843 	bl	8011034 <WM__InitIVRSearch>
 8012fae:	2800      	cmp	r0, #0
 8012fb0:	d041      	beq.n	8013036 <GUI__DispLine+0x9a>
 8012fb2:	466a      	mov	r2, sp
 8012fb4:	4631      	mov	r1, r6
 8012fb6:	4628      	mov	r0, r5
 8012fb8:	f7ff ff48 	bl	8012e4c <_DispLine>
 8012fbc:	f7fd ff78 	bl	8010eb0 <WM__GetNextIVR>
 8012fc0:	e7f5      	b.n	8012fae <GUI__DispLine+0x12>
 8012fc2:	4c1f      	ldr	r4, [pc, #124]	; (8013040 <GUI__DispLine+0xa4>)
 8012fc4:	466b      	mov	r3, sp
 8012fc6:	6810      	ldr	r0, [r2, #0]
 8012fc8:	6851      	ldr	r1, [r2, #4]
 8012fca:	6822      	ldr	r2, [r4, #0]
 8012fcc:	c303      	stmia	r3!, {r0, r1}
 8012fce:	f8b2 704c 	ldrh.w	r7, [r2, #76]	; 0x4c
 8012fd2:	f8bd 3000 	ldrh.w	r3, [sp]
 8012fd6:	f8b2 0050 	ldrh.w	r0, [r2, #80]	; 0x50
 8012fda:	443b      	add	r3, r7
 8012fdc:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 8012fe0:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8012fe4:	f8ad 3000 	strh.w	r3, [sp]
 8012fe8:	4401      	add	r1, r0
 8012fea:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012fee:	443a      	add	r2, r7
 8012ff0:	f8ad 1002 	strh.w	r1, [sp, #2]
 8012ff4:	4403      	add	r3, r0
 8012ff6:	4668      	mov	r0, sp
 8012ff8:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012ffc:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013000:	f7fe f818 	bl	8011034 <WM__InitIVRSearch>
 8013004:	6823      	ldr	r3, [r4, #0]
 8013006:	b940      	cbnz	r0, 801301a <GUI__DispLine+0x7e>
 8013008:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
 801300a:	8c5a      	ldrh	r2, [r3, #34]	; 0x22
 801300c:	1a52      	subs	r2, r2, r1
 801300e:	6d19      	ldr	r1, [r3, #80]	; 0x50
 8013010:	845a      	strh	r2, [r3, #34]	; 0x22
 8013012:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
 8013014:	1a52      	subs	r2, r2, r1
 8013016:	849a      	strh	r2, [r3, #36]	; 0x24
 8013018:	e00d      	b.n	8013036 <GUI__DispLine+0x9a>
 801301a:	f8bd 2000 	ldrh.w	r2, [sp]
 801301e:	4631      	mov	r1, r6
 8013020:	4628      	mov	r0, r5
 8013022:	845a      	strh	r2, [r3, #34]	; 0x22
 8013024:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8013028:	849a      	strh	r2, [r3, #36]	; 0x24
 801302a:	466a      	mov	r2, sp
 801302c:	f7ff ff0e 	bl	8012e4c <_DispLine>
 8013030:	f7fd ff3e 	bl	8010eb0 <WM__GetNextIVR>
 8013034:	e7e6      	b.n	8013004 <GUI__DispLine+0x68>
 8013036:	b003      	add	sp, #12
 8013038:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801303a:	bf00      	nop
 801303c:	2002dac4 	.word	0x2002dac4
 8013040:	2000003c 	.word	0x2000003c

08013044 <GUIMONO_DispChar>:
 8013044:	4b4d      	ldr	r3, [pc, #308]	; (801317c <GUIMONO_DispChar+0x138>)
 8013046:	681a      	ldr	r2, [r3, #0]
 8013048:	69d1      	ldr	r1, [r2, #28]
 801304a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801304e:	69cc      	ldr	r4, [r1, #28]
 8013050:	b08b      	sub	sp, #44	; 0x2c
 8013052:	89a3      	ldrh	r3, [r4, #12]
 8013054:	4283      	cmp	r3, r0
 8013056:	d808      	bhi.n	801306a <GUIMONO_DispChar+0x26>
 8013058:	89e5      	ldrh	r5, [r4, #14]
 801305a:	4285      	cmp	r5, r0
 801305c:	d305      	bcc.n	801306a <GUIMONO_DispChar+0x26>
 801305e:	6825      	ldr	r5, [r4, #0]
 8013060:	1ac3      	subs	r3, r0, r3
 8013062:	f04f 36ff 	mov.w	r6, #4294967295
 8013066:	9506      	str	r5, [sp, #24]
 8013068:	e013      	b.n	8013092 <GUIMONO_DispChar+0x4e>
 801306a:	68a3      	ldr	r3, [r4, #8]
 801306c:	2b00      	cmp	r3, #0
 801306e:	d07c      	beq.n	801316a <GUIMONO_DispChar+0x126>
 8013070:	881d      	ldrh	r5, [r3, #0]
 8013072:	42a8      	cmp	r0, r5
 8013074:	d379      	bcc.n	801316a <GUIMONO_DispChar+0x126>
 8013076:	885e      	ldrh	r6, [r3, #2]
 8013078:	4286      	cmp	r6, r0
 801307a:	d376      	bcc.n	801316a <GUIMONO_DispChar+0x126>
 801307c:	1b40      	subs	r0, r0, r5
 801307e:	685b      	ldr	r3, [r3, #4]
 8013080:	6866      	ldr	r6, [r4, #4]
 8013082:	b280      	uxth	r0, r0
 8013084:	9606      	str	r6, [sp, #24]
 8013086:	eb03 0580 	add.w	r5, r3, r0, lsl #2
 801308a:	f933 3020 	ldrsh.w	r3, [r3, r0, lsl #2]
 801308e:	f9b5 6002 	ldrsh.w	r6, [r5, #2]
 8013092:	1c58      	adds	r0, r3, #1
 8013094:	9309      	str	r3, [sp, #36]	; 0x24
 8013096:	d068      	beq.n	801316a <GUIMONO_DispChar+0x126>
 8013098:	f891 b018 	ldrb.w	fp, [r1, #24]
 801309c:	7ca1      	ldrb	r1, [r4, #18]
 801309e:	f9b2 902a 	ldrsh.w	r9, [r2, #42]	; 0x2a
 80130a2:	fb1b f301 	smulbb	r3, fp, r1
 80130a6:	4d35      	ldr	r5, [pc, #212]	; (801317c <GUIMONO_DispChar+0x138>)
 80130a8:	4648      	mov	r0, r9
 80130aa:	f9b2 7022 	ldrsh.w	r7, [r2, #34]	; 0x22
 80130ae:	f9b2 8024 	ldrsh.w	r8, [r2, #36]	; 0x24
 80130b2:	9307      	str	r3, [sp, #28]
 80130b4:	f894 a010 	ldrb.w	sl, [r4, #16]
 80130b8:	f7f9 fa4e 	bl	800c558 <LCD_SetDrawMode>
 80130bc:	6829      	ldr	r1, [r5, #0]
 80130be:	9b07      	ldr	r3, [sp, #28]
 80130c0:	69ca      	ldr	r2, [r1, #28]
 80130c2:	6b89      	ldr	r1, [r1, #56]	; 0x38
 80130c4:	9008      	str	r0, [sp, #32]
 80130c6:	4618      	mov	r0, r3
 80130c8:	9105      	str	r1, [sp, #20]
 80130ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80130cc:	9906      	ldr	r1, [sp, #24]
 80130ce:	fb00 1003 	mla	r0, r0, r3, r1
 80130d2:	4641      	mov	r1, r8
 80130d4:	9004      	str	r0, [sp, #16]
 80130d6:	4638      	mov	r0, r7
 80130d8:	7ca3      	ldrb	r3, [r4, #18]
 80130da:	9303      	str	r3, [sp, #12]
 80130dc:	2301      	movs	r3, #1
 80130de:	9302      	str	r3, [sp, #8]
 80130e0:	7ed3      	ldrb	r3, [r2, #27]
 80130e2:	9301      	str	r3, [sp, #4]
 80130e4:	7e93      	ldrb	r3, [r2, #26]
 80130e6:	4652      	mov	r2, sl
 80130e8:	9300      	str	r3, [sp, #0]
 80130ea:	465b      	mov	r3, fp
 80130ec:	f7f9 fbd4 	bl	800c898 <LCD_DrawBitmap>
 80130f0:	1c73      	adds	r3, r6, #1
 80130f2:	d01a      	beq.n	801312a <GUIMONO_DispChar+0xe6>
 80130f4:	f049 0002 	orr.w	r0, r9, #2
 80130f8:	f7f9 fa2e 	bl	800c558 <LCD_SetDrawMode>
 80130fc:	682a      	ldr	r2, [r5, #0]
 80130fe:	9906      	ldr	r1, [sp, #24]
 8013100:	4638      	mov	r0, r7
 8013102:	69d3      	ldr	r3, [r2, #28]
 8013104:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8013106:	9205      	str	r2, [sp, #20]
 8013108:	9a07      	ldr	r2, [sp, #28]
 801310a:	fb02 1606 	mla	r6, r2, r6, r1
 801310e:	4641      	mov	r1, r8
 8013110:	9604      	str	r6, [sp, #16]
 8013112:	7ca2      	ldrb	r2, [r4, #18]
 8013114:	9203      	str	r2, [sp, #12]
 8013116:	2201      	movs	r2, #1
 8013118:	9202      	str	r2, [sp, #8]
 801311a:	7eda      	ldrb	r2, [r3, #27]
 801311c:	9201      	str	r2, [sp, #4]
 801311e:	4652      	mov	r2, sl
 8013120:	7e9b      	ldrb	r3, [r3, #26]
 8013122:	9300      	str	r3, [sp, #0]
 8013124:	465b      	mov	r3, fp
 8013126:	f7f9 fbb7 	bl	800c898 <LCD_DrawBitmap>
 801312a:	682b      	ldr	r3, [r5, #0]
 801312c:	69db      	ldr	r3, [r3, #28]
 801312e:	7e5a      	ldrb	r2, [r3, #25]
 8013130:	7e1b      	ldrb	r3, [r3, #24]
 8013132:	429a      	cmp	r2, r3
 8013134:	d915      	bls.n	8013162 <GUIMONO_DispChar+0x11e>
 8013136:	f1b9 0f02 	cmp.w	r9, #2
 801313a:	d012      	beq.n	8013162 <GUIMONO_DispChar+0x11e>
 801313c:	f089 0004 	eor.w	r0, r9, #4
 8013140:	f7f9 fa0a 	bl	800c558 <LCD_SetDrawMode>
 8013144:	4b0d      	ldr	r3, [pc, #52]	; (801317c <GUIMONO_DispChar+0x138>)
 8013146:	681b      	ldr	r3, [r3, #0]
 8013148:	69db      	ldr	r3, [r3, #28]
 801314a:	7e18      	ldrb	r0, [r3, #24]
 801314c:	7ed9      	ldrb	r1, [r3, #27]
 801314e:	7e9a      	ldrb	r2, [r3, #26]
 8013150:	7e5b      	ldrb	r3, [r3, #25]
 8013152:	fb00 8101 	mla	r1, r0, r1, r8
 8013156:	fb0a 7202 	mla	r2, sl, r2, r7
 801315a:	4638      	mov	r0, r7
 801315c:	4443      	add	r3, r8
 801315e:	f7f9 fa83 	bl	800c668 <LCD_FillRect>
 8013162:	f89d 0020 	ldrb.w	r0, [sp, #32]
 8013166:	f7f9 f9f7 	bl	800c558 <LCD_SetDrawMode>
 801316a:	4b04      	ldr	r3, [pc, #16]	; (801317c <GUIMONO_DispChar+0x138>)
 801316c:	7c61      	ldrb	r1, [r4, #17]
 801316e:	681a      	ldr	r2, [r3, #0]
 8013170:	8c53      	ldrh	r3, [r2, #34]	; 0x22
 8013172:	440b      	add	r3, r1
 8013174:	8453      	strh	r3, [r2, #34]	; 0x22
 8013176:	b00b      	add	sp, #44	; 0x2c
 8013178:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801317c:	2000003c 	.word	0x2000003c

08013180 <GUIMONO_GetCharDistX>:
 8013180:	4b04      	ldr	r3, [pc, #16]	; (8013194 <GUIMONO_GetCharDistX+0x14>)
 8013182:	681b      	ldr	r3, [r3, #0]
 8013184:	69db      	ldr	r3, [r3, #28]
 8013186:	69db      	ldr	r3, [r3, #28]
 8013188:	b109      	cbz	r1, 801318e <GUIMONO_GetCharDistX+0xe>
 801318a:	7c1a      	ldrb	r2, [r3, #16]
 801318c:	600a      	str	r2, [r1, #0]
 801318e:	7c58      	ldrb	r0, [r3, #17]
 8013190:	4770      	bx	lr
 8013192:	bf00      	nop
 8013194:	2000003c 	.word	0x2000003c

08013198 <GUIMONO_GetFontInfo>:
 8013198:	2302      	movs	r3, #2
 801319a:	800b      	strh	r3, [r1, #0]
 801319c:	4770      	bx	lr

0801319e <GUIMONO_IsInFont>:
 801319e:	69c3      	ldr	r3, [r0, #28]
 80131a0:	899a      	ldrh	r2, [r3, #12]
 80131a2:	428a      	cmp	r2, r1
 80131a4:	d802      	bhi.n	80131ac <GUIMONO_IsInFont+0xe>
 80131a6:	89da      	ldrh	r2, [r3, #14]
 80131a8:	428a      	cmp	r2, r1
 80131aa:	d20f      	bcs.n	80131cc <GUIMONO_IsInFont+0x2e>
 80131ac:	6898      	ldr	r0, [r3, #8]
 80131ae:	b180      	cbz	r0, 80131d2 <GUIMONO_IsInFont+0x34>
 80131b0:	8803      	ldrh	r3, [r0, #0]
 80131b2:	4299      	cmp	r1, r3
 80131b4:	d30c      	bcc.n	80131d0 <GUIMONO_IsInFont+0x32>
 80131b6:	8842      	ldrh	r2, [r0, #2]
 80131b8:	428a      	cmp	r2, r1
 80131ba:	d309      	bcc.n	80131d0 <GUIMONO_IsInFont+0x32>
 80131bc:	1ac9      	subs	r1, r1, r3
 80131be:	6843      	ldr	r3, [r0, #4]
 80131c0:	f833 0021 	ldrh.w	r0, [r3, r1, lsl #2]
 80131c4:	43c0      	mvns	r0, r0
 80131c6:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 80131ca:	4770      	bx	lr
 80131cc:	2001      	movs	r0, #1
 80131ce:	4770      	bx	lr
 80131d0:	2000      	movs	r0, #0
 80131d2:	4770      	bx	lr

080131d4 <GUI_CURSOR_SetPositionEx>:
 80131d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80131d6:	4606      	mov	r6, r0
 80131d8:	4610      	mov	r0, r2
 80131da:	460d      	mov	r5, r1
 80131dc:	4614      	mov	r4, r2
 80131de:	4f15      	ldr	r7, [pc, #84]	; (8013234 <GUI_CURSOR_SetPositionEx+0x60>)
 80131e0:	f7f8 fc20 	bl	800ba24 <GUI_GetCursorLayer>
 80131e4:	2314      	movs	r3, #20
 80131e6:	b150      	cbz	r0, 80131fe <GUI_CURSOR_SetPositionEx+0x2a>
 80131e8:	fb03 7404 	mla	r4, r3, r4, r7
 80131ec:	6863      	ldr	r3, [r4, #4]
 80131ee:	689a      	ldr	r2, [r3, #8]
 80131f0:	6859      	ldr	r1, [r3, #4]
 80131f2:	1aaa      	subs	r2, r5, r2
 80131f4:	1a71      	subs	r1, r6, r1
 80131f6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80131fa:	f7f8 bc3d 	b.w	800ba78 <GUI_SetLayerPosEx>
 80131fe:	fb03 7304 	mla	r3, r3, r4, r7
 8013202:	68da      	ldr	r2, [r3, #12]
 8013204:	42b2      	cmp	r2, r6
 8013206:	d102      	bne.n	801320e <GUI_CURSOR_SetPositionEx+0x3a>
 8013208:	691b      	ldr	r3, [r3, #16]
 801320a:	42ab      	cmp	r3, r5
 801320c:	d010      	beq.n	8013230 <GUI_CURSOR_SetPositionEx+0x5c>
 801320e:	2314      	movs	r3, #20
 8013210:	fb03 7304 	mla	r3, r3, r4, r7
 8013214:	6958      	ldr	r0, [r3, #20]
 8013216:	b130      	cbz	r0, 8013226 <GUI_CURSOR_SetPositionEx+0x52>
 8013218:	685b      	ldr	r3, [r3, #4]
 801321a:	689a      	ldr	r2, [r3, #8]
 801321c:	6859      	ldr	r1, [r3, #4]
 801321e:	1aaa      	subs	r2, r5, r2
 8013220:	1a71      	subs	r1, r6, r1
 8013222:	f000 f9f3 	bl	801360c <GUI_SPRITE_SetPosition>
 8013226:	2314      	movs	r3, #20
 8013228:	fb03 7404 	mla	r4, r3, r4, r7
 801322c:	60e6      	str	r6, [r4, #12]
 801322e:	6125      	str	r5, [r4, #16]
 8013230:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013232:	bf00      	nop
 8013234:	20000d90 	.word	0x20000d90

08013238 <_OnExit>:
 8013238:	4b03      	ldr	r3, [pc, #12]	; (8013248 <_OnExit+0x10>)
 801323a:	4a04      	ldr	r2, [pc, #16]	; (801324c <_OnExit+0x14>)
 801323c:	6013      	str	r3, [r2, #0]
 801323e:	6053      	str	r3, [r2, #4]
 8013240:	2200      	movs	r2, #0
 8013242:	649a      	str	r2, [r3, #72]	; 0x48
 8013244:	64da      	str	r2, [r3, #76]	; 0x4c
 8013246:	4770      	bx	lr
 8013248:	20000ddc 	.word	0x20000ddc
 801324c:	200000b8 	.word	0x200000b8

08013250 <GUI_PID_GetState>:
 8013250:	4a11      	ldr	r2, [pc, #68]	; (8013298 <GUI_PID_GetState+0x48>)
 8013252:	6813      	ldr	r3, [r2, #0]
 8013254:	6851      	ldr	r1, [r2, #4]
 8013256:	428b      	cmp	r3, r1
 8013258:	b570      	push	{r4, r5, r6, lr}
 801325a:	4604      	mov	r4, r0
 801325c:	4616      	mov	r6, r2
 801325e:	4d0f      	ldr	r5, [pc, #60]	; (801329c <GUI_PID_GetState+0x4c>)
 8013260:	d109      	bne.n	8013276 <GUI_PID_GetState+0x26>
 8013262:	42ab      	cmp	r3, r5
 8013264:	bf0a      	itet	eq
 8013266:	333c      	addeq	r3, #60	; 0x3c
 8013268:	e913 0007 	ldmdbne	r3, {r0, r1, r2}
 801326c:	e893 0007 	ldmiaeq.w	r3, {r0, r1, r2}
 8013270:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8013274:	e00a      	b.n	801328c <GUI_PID_GetState+0x3c>
 8013276:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 801327a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801327e:	f105 023c 	add.w	r2, r5, #60	; 0x3c
 8013282:	4293      	cmp	r3, r2
 8013284:	bf18      	it	ne
 8013286:	f103 050c 	addne.w	r5, r3, #12
 801328a:	6035      	str	r5, [r6, #0]
 801328c:	7a20      	ldrb	r0, [r4, #8]
 801328e:	3000      	adds	r0, #0
 8013290:	bf18      	it	ne
 8013292:	2001      	movne	r0, #1
 8013294:	bd70      	pop	{r4, r5, r6, pc}
 8013296:	bf00      	nop
 8013298:	200000b8 	.word	0x200000b8
 801329c:	20000ddc 	.word	0x20000ddc

080132a0 <GUI_PID_StoreState>:
 80132a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80132a2:	4c27      	ldr	r4, [pc, #156]	; (8013340 <GUI_PID_StoreState+0xa0>)
 80132a4:	b085      	sub	sp, #20
 80132a6:	4606      	mov	r6, r0
 80132a8:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80132aa:	b92b      	cbnz	r3, 80132b8 <GUI_PID_StoreState+0x18>
 80132ac:	4620      	mov	r0, r4
 80132ae:	4b25      	ldr	r3, [pc, #148]	; (8013344 <GUI_PID_StoreState+0xa4>)
 80132b0:	f840 3f50 	str.w	r3, [r0, #80]!
 80132b4:	f7f8 f960 	bl	800b578 <GUI__RegisterExit>
 80132b8:	4a23      	ldr	r2, [pc, #140]	; (8013348 <GUI_PID_StoreState+0xa8>)
 80132ba:	ad01      	add	r5, sp, #4
 80132bc:	4b23      	ldr	r3, [pc, #140]	; (801334c <GUI_PID_StoreState+0xac>)
 80132be:	601a      	str	r2, [r3, #0]
 80132c0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 80132c2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80132c6:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 80132ca:	b10b      	cbz	r3, 80132d0 <GUI_PID_StoreState+0x30>
 80132cc:	4628      	mov	r0, r5
 80132ce:	4798      	blx	r3
 80132d0:	4e1f      	ldr	r6, [pc, #124]	; (8013350 <GUI_PID_StoreState+0xb0>)
 80132d2:	f8df e080 	ldr.w	lr, [pc, #128]	; 8013354 <GUI_PID_StoreState+0xb4>
 80132d6:	6837      	ldr	r7, [r6, #0]
 80132d8:	6873      	ldr	r3, [r6, #4]
 80132da:	429f      	cmp	r7, r3
 80132dc:	d017      	beq.n	801330e <GUI_PID_StoreState+0x6e>
 80132de:	42a3      	cmp	r3, r4
 80132e0:	f89d 100c 	ldrb.w	r1, [sp, #12]
 80132e4:	bf14      	ite	ne
 80132e6:	f1a3 020c 	subne.w	r2, r3, #12
 80132ea:	4672      	moveq	r2, lr
 80132ec:	7a10      	ldrb	r0, [r2, #8]
 80132ee:	4288      	cmp	r0, r1
 80132f0:	d10d      	bne.n	801330e <GUI_PID_StoreState+0x6e>
 80132f2:	4297      	cmp	r7, r2
 80132f4:	d00b      	beq.n	801330e <GUI_PID_StoreState+0x6e>
 80132f6:	42a2      	cmp	r2, r4
 80132f8:	bf14      	ite	ne
 80132fa:	3a0c      	subne	r2, #12
 80132fc:	4a15      	ldreq	r2, [pc, #84]	; (8013354 <GUI_PID_StoreState+0xb4>)
 80132fe:	7a12      	ldrb	r2, [r2, #8]
 8013300:	428a      	cmp	r2, r1
 8013302:	d104      	bne.n	801330e <GUI_PID_StoreState+0x6e>
 8013304:	42a3      	cmp	r3, r4
 8013306:	bf14      	ite	ne
 8013308:	3b0c      	subne	r3, #12
 801330a:	4b12      	ldreq	r3, [pc, #72]	; (8013354 <GUI_PID_StoreState+0xb4>)
 801330c:	6073      	str	r3, [r6, #4]
 801330e:	6873      	ldr	r3, [r6, #4]
 8013310:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8013314:	4573      	cmp	r3, lr
 8013316:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 801331a:	bf14      	ite	ne
 801331c:	330c      	addne	r3, #12
 801331e:	4b08      	ldreq	r3, [pc, #32]	; (8013340 <GUI_PID_StoreState+0xa0>)
 8013320:	429f      	cmp	r7, r3
 8013322:	6073      	str	r3, [r6, #4]
 8013324:	d104      	bne.n	8013330 <GUI_PID_StoreState+0x90>
 8013326:	4577      	cmp	r7, lr
 8013328:	bf14      	ite	ne
 801332a:	370c      	addne	r7, #12
 801332c:	4f04      	ldreq	r7, [pc, #16]	; (8013340 <GUI_PID_StoreState+0xa0>)
 801332e:	6037      	str	r7, [r6, #0]
 8013330:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8013332:	b10b      	cbz	r3, 8013338 <GUI_PID_StoreState+0x98>
 8013334:	4628      	mov	r0, r5
 8013336:	4798      	blx	r3
 8013338:	f7f8 fbf8 	bl	800bb2c <GUI_SignalEvent>
 801333c:	b005      	add	sp, #20
 801333e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013340:	20000ddc 	.word	0x20000ddc
 8013344:	08013239 	.word	0x08013239
 8013348:	08011ef5 	.word	0x08011ef5
 801334c:	2002db14 	.word	0x2002db14
 8013350:	200000b8 	.word	0x200000b8
 8013354:	20000e18 	.word	0x20000e18

08013358 <GUI_PID_IsEmpty>:
 8013358:	4b02      	ldr	r3, [pc, #8]	; (8013364 <GUI_PID_IsEmpty+0xc>)
 801335a:	cb09      	ldmia	r3, {r0, r3}
 801335c:	1ac3      	subs	r3, r0, r3
 801335e:	4258      	negs	r0, r3
 8013360:	4158      	adcs	r0, r3
 8013362:	4770      	bx	lr
 8013364:	200000b8 	.word	0x200000b8

08013368 <_CreateBuffer>:
 8013368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801336a:	6943      	ldr	r3, [r0, #20]
 801336c:	4605      	mov	r5, r0
 801336e:	460e      	mov	r6, r1
 8013370:	8818      	ldrh	r0, [r3, #0]
 8013372:	300d      	adds	r0, #13
 8013374:	0080      	lsls	r0, r0, #2
 8013376:	f7f7 fcb7 	bl	800ace8 <GUI_ALLOC_AllocNoInit>
 801337a:	4607      	mov	r7, r0
 801337c:	b908      	cbnz	r0, 8013382 <_CreateBuffer+0x1a>
 801337e:	2000      	movs	r0, #0
 8013380:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013382:	f7f7 fae5 	bl	800a950 <GUI_ALLOC_LockH>
 8013386:	682b      	ldr	r3, [r5, #0]
 8013388:	4604      	mov	r4, r0
 801338a:	6998      	ldr	r0, [r3, #24]
 801338c:	f7f8 f91a 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 8013390:	2800      	cmp	r0, #0
 8013392:	d0f4      	beq.n	801337e <_CreateBuffer+0x16>
 8013394:	68c3      	ldr	r3, [r0, #12]
 8013396:	2108      	movs	r1, #8
 8013398:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801339a:	4798      	blx	r3
 801339c:	2802      	cmp	r0, #2
 801339e:	dd0b      	ble.n	80133b8 <_CreateBuffer+0x50>
 80133a0:	2804      	cmp	r0, #4
 80133a2:	dd06      	ble.n	80133b2 <_CreateBuffer+0x4a>
 80133a4:	2808      	cmp	r0, #8
 80133a6:	dd06      	ble.n	80133b6 <_CreateBuffer+0x4e>
 80133a8:	2810      	cmp	r0, #16
 80133aa:	bfcc      	ite	gt
 80133ac:	2020      	movgt	r0, #32
 80133ae:	2010      	movle	r0, #16
 80133b0:	e002      	b.n	80133b8 <_CreateBuffer+0x50>
 80133b2:	2004      	movs	r0, #4
 80133b4:	e000      	b.n	80133b8 <_CreateBuffer+0x50>
 80133b6:	2008      	movs	r0, #8
 80133b8:	2808      	cmp	r0, #8
 80133ba:	61a0      	str	r0, [r4, #24]
 80133bc:	dd04      	ble.n	80133c8 <_CreateBuffer+0x60>
 80133be:	2811      	cmp	r0, #17
 80133c0:	bfb4      	ite	lt
 80133c2:	2202      	movlt	r2, #2
 80133c4:	2204      	movge	r2, #4
 80133c6:	e000      	b.n	80133ca <_CreateBuffer+0x62>
 80133c8:	2201      	movs	r2, #1
 80133ca:	696b      	ldr	r3, [r5, #20]
 80133cc:	6122      	str	r2, [r4, #16]
 80133ce:	881b      	ldrh	r3, [r3, #0]
 80133d0:	61e3      	str	r3, [r4, #28]
 80133d2:	4353      	muls	r3, r2
 80133d4:	6163      	str	r3, [r4, #20]
 80133d6:	f7f7 fbdd 	bl	800ab94 <GUI_ALLOC_GetMaxSize>
 80133da:	6963      	ldr	r3, [r4, #20]
 80133dc:	2200      	movs	r2, #0
 80133de:	60a7      	str	r7, [r4, #8]
 80133e0:	4298      	cmp	r0, r3
 80133e2:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80133e6:	60e2      	str	r2, [r4, #12]
 80133e8:	bfb8      	it	lt
 80133ea:	6160      	strlt	r0, [r4, #20]
 80133ec:	2e01      	cmp	r6, #1
 80133ee:	6023      	str	r3, [r4, #0]
 80133f0:	4620      	mov	r0, r4
 80133f2:	bf18      	it	ne
 80133f4:	69e2      	ldrne	r2, [r4, #28]
 80133f6:	f884 6030 	strb.w	r6, [r4, #48]	; 0x30
 80133fa:	bf1e      	ittt	ne
 80133fc:	f102 4280 	addne.w	r2, r2, #1073741824	; 0x40000000
 8013400:	f102 32ff 	addne.w	r2, r2, #4294967295
 8013404:	eb03 0382 	addne.w	r3, r3, r2, lsl #2
 8013408:	6063      	str	r3, [r4, #4]
 801340a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801340c <_GetBkIndex.isra.0>:
 801340c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013410:	f9b3 6004 	ldrsh.w	r6, [r3, #4]
 8013414:	4607      	mov	r7, r0
 8013416:	4688      	mov	r8, r1
 8013418:	4691      	mov	r9, r2
 801341a:	4286      	cmp	r6, r0
 801341c:	461c      	mov	r4, r3
 801341e:	dd04      	ble.n	801342a <_GetBkIndex.isra.0+0x1e>
 8013420:	f8d9 0000 	ldr.w	r0, [r9]
 8013424:	bb18      	cbnz	r0, 801346e <_GetBkIndex.isra.0+0x62>
 8013426:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801342a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801342e:	4298      	cmp	r0, r3
 8013430:	dcf6      	bgt.n	8013420 <_GetBkIndex.isra.0+0x14>
 8013432:	f9b4 5006 	ldrsh.w	r5, [r4, #6]
 8013436:	428d      	cmp	r5, r1
 8013438:	dcf2      	bgt.n	8013420 <_GetBkIndex.isra.0+0x14>
 801343a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801343e:	4299      	cmp	r1, r3
 8013440:	dcee      	bgt.n	8013420 <_GetBkIndex.isra.0+0x14>
 8013442:	1b86      	subs	r6, r0, r6
 8013444:	1b4d      	subs	r5, r1, r5
 8013446:	6960      	ldr	r0, [r4, #20]
 8013448:	462a      	mov	r2, r5
 801344a:	4631      	mov	r1, r6
 801344c:	f7f7 fe17 	bl	800b07e <GUI_GetBitmapPixelIndex>
 8013450:	2800      	cmp	r0, #0
 8013452:	d0e5      	beq.n	8013420 <_GetBkIndex.isra.0+0x14>
 8013454:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8013458:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801345c:	1a9b      	subs	r3, r3, r2
 801345e:	fb03 5505 	mla	r5, r3, r5, r5
 8013462:	4435      	add	r5, r6
 8013464:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 8013468:	6a20      	ldr	r0, [r4, #32]
 801346a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801346e:	68c3      	ldr	r3, [r0, #12]
 8013470:	4642      	mov	r2, r8
 8013472:	4639      	mov	r1, r7
 8013474:	695b      	ldr	r3, [r3, #20]
 8013476:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801347a:	4718      	bx	r3

0801347c <_GetBkIndexAlpha.isra.2>:
 801347c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013480:	f9b3 5004 	ldrsh.w	r5, [r3, #4]
 8013484:	4607      	mov	r7, r0
 8013486:	4688      	mov	r8, r1
 8013488:	4691      	mov	r9, r2
 801348a:	4285      	cmp	r5, r0
 801348c:	461e      	mov	r6, r3
 801348e:	dc14      	bgt.n	80134ba <_GetBkIndexAlpha.isra.2+0x3e>
 8013490:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8013494:	4298      	cmp	r0, r3
 8013496:	dc10      	bgt.n	80134ba <_GetBkIndexAlpha.isra.2+0x3e>
 8013498:	f9b6 4006 	ldrsh.w	r4, [r6, #6]
 801349c:	428c      	cmp	r4, r1
 801349e:	dc0c      	bgt.n	80134ba <_GetBkIndexAlpha.isra.2+0x3e>
 80134a0:	f9b6 300a 	ldrsh.w	r3, [r6, #10]
 80134a4:	4299      	cmp	r1, r3
 80134a6:	dc08      	bgt.n	80134ba <_GetBkIndexAlpha.isra.2+0x3e>
 80134a8:	1b45      	subs	r5, r0, r5
 80134aa:	6970      	ldr	r0, [r6, #20]
 80134ac:	1b0c      	subs	r4, r1, r4
 80134ae:	b138      	cbz	r0, 80134c0 <_GetBkIndexAlpha.isra.2+0x44>
 80134b0:	4622      	mov	r2, r4
 80134b2:	4629      	mov	r1, r5
 80134b4:	f7f7 fde3 	bl	800b07e <GUI_GetBitmapPixelIndex>
 80134b8:	e002      	b.n	80134c0 <_GetBkIndexAlpha.isra.2+0x44>
 80134ba:	2400      	movs	r4, #0
 80134bc:	4625      	mov	r5, r4
 80134be:	4620      	mov	r0, r4
 80134c0:	0e03      	lsrs	r3, r0, #24
 80134c2:	d109      	bne.n	80134d8 <_GetBkIndexAlpha.isra.2+0x5c>
 80134c4:	f8d9 0000 	ldr.w	r0, [r9]
 80134c8:	b188      	cbz	r0, 80134ee <_GetBkIndexAlpha.isra.2+0x72>
 80134ca:	68c3      	ldr	r3, [r0, #12]
 80134cc:	4642      	mov	r2, r8
 80134ce:	4639      	mov	r1, r7
 80134d0:	695b      	ldr	r3, [r3, #20]
 80134d2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80134d6:	4718      	bx	r3
 80134d8:	f9b6 3008 	ldrsh.w	r3, [r6, #8]
 80134dc:	f9b6 2004 	ldrsh.w	r2, [r6, #4]
 80134e0:	1a9b      	subs	r3, r3, r2
 80134e2:	fb03 4404 	mla	r4, r3, r4, r4
 80134e6:	442c      	add	r4, r5
 80134e8:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 80134ec:	6a20      	ldr	r0, [r4, #32]
 80134ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080134f4 <_GetDeviceRect>:
 80134f4:	6983      	ldr	r3, [r0, #24]
 80134f6:	4a0d      	ldr	r2, [pc, #52]	; (801352c <_GetDeviceRect+0x38>)
 80134f8:	b570      	push	{r4, r5, r6, lr}
 80134fa:	56d2      	ldrsb	r2, [r2, r3]
 80134fc:	4605      	mov	r5, r0
 80134fe:	460c      	mov	r4, r1
 8013500:	2a01      	cmp	r2, #1
 8013502:	dd0d      	ble.n	8013520 <_GetDeviceRect+0x2c>
 8013504:	2200      	movs	r2, #0
 8013506:	4618      	mov	r0, r3
 8013508:	804a      	strh	r2, [r1, #2]
 801350a:	800a      	strh	r2, [r1, #0]
 801350c:	f7f9 fcea 	bl	800cee4 <LCD_GetXSizeEx>
 8013510:	3801      	subs	r0, #1
 8013512:	80a0      	strh	r0, [r4, #4]
 8013514:	69a8      	ldr	r0, [r5, #24]
 8013516:	f7f9 fce8 	bl	800ceea <LCD_GetYSizeEx>
 801351a:	3801      	subs	r0, #1
 801351c:	80e0      	strh	r0, [r4, #6]
 801351e:	bd70      	pop	{r4, r5, r6, pc}
 8013520:	68c3      	ldr	r3, [r0, #12]
 8013522:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013526:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013528:	4718      	bx	r3
 801352a:	bf00      	nop
 801352c:	2002dab8 	.word	0x2002dab8

08013530 <_FlushBuffer.isra.5>:
 8013530:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013534:	460c      	mov	r4, r1
 8013536:	68c9      	ldr	r1, [r1, #12]
 8013538:	b086      	sub	sp, #24
 801353a:	2900      	cmp	r1, #0
 801353c:	d031      	beq.n	80135a2 <_FlushBuffer.isra.5+0x72>
 801353e:	f994 3030 	ldrsb.w	r3, [r4, #48]	; 0x30
 8013542:	6822      	ldr	r2, [r4, #0]
 8013544:	2b01      	cmp	r3, #1
 8013546:	d104      	bne.n	8013552 <_FlushBuffer.isra.5+0x22>
 8013548:	4616      	mov	r6, r2
 801354a:	6062      	str	r2, [r4, #4]
 801354c:	f8d4 8028 	ldr.w	r8, [r4, #40]	; 0x28
 8013550:	e00a      	b.n	8013568 <_FlushBuffer.isra.5+0x38>
 8013552:	69e3      	ldr	r3, [r4, #28]
 8013554:	6866      	ldr	r6, [r4, #4]
 8013556:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801355a:	f8d4 8020 	ldr.w	r8, [r4, #32]
 801355e:	3604      	adds	r6, #4
 8013560:	3b01      	subs	r3, #1
 8013562:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8013566:	6063      	str	r3, [r4, #4]
 8013568:	6807      	ldr	r7, [r0, #0]
 801356a:	b1af      	cbz	r7, 8013598 <_FlushBuffer.isra.5+0x68>
 801356c:	69a2      	ldr	r2, [r4, #24]
 801356e:	4630      	mov	r0, r6
 8013570:	f000 fb43 	bl	8013bfa <GUI__CompactPixelIndices>
 8013574:	6962      	ldr	r2, [r4, #20]
 8013576:	68fb      	ldr	r3, [r7, #12]
 8013578:	2500      	movs	r5, #0
 801357a:	9202      	str	r2, [sp, #8]
 801357c:	4641      	mov	r1, r8
 801357e:	69a2      	ldr	r2, [r4, #24]
 8013580:	4638      	mov	r0, r7
 8013582:	9505      	str	r5, [sp, #20]
 8013584:	9201      	str	r2, [sp, #4]
 8013586:	2201      	movs	r2, #1
 8013588:	9504      	str	r5, [sp, #16]
 801358a:	9200      	str	r2, [sp, #0]
 801358c:	9603      	str	r6, [sp, #12]
 801358e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8013590:	685e      	ldr	r6, [r3, #4]
 8013592:	68e3      	ldr	r3, [r4, #12]
 8013594:	47b0      	blx	r6
 8013596:	e000      	b.n	801359a <_FlushBuffer.isra.5+0x6a>
 8013598:	2501      	movs	r5, #1
 801359a:	2300      	movs	r3, #0
 801359c:	b2e8      	uxtb	r0, r5
 801359e:	60e3      	str	r3, [r4, #12]
 80135a0:	e000      	b.n	80135a4 <_FlushBuffer.isra.5+0x74>
 80135a2:	4608      	mov	r0, r1
 80135a4:	b006      	add	sp, #24
 80135a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080135aa <_SetBkIndexBuffered>:
 80135aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80135ac:	9c06      	ldr	r4, [sp, #24]
 80135ae:	4617      	mov	r7, r2
 80135b0:	4606      	mov	r6, r0
 80135b2:	460d      	mov	r5, r1
 80135b4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80135b6:	428a      	cmp	r2, r1
 80135b8:	d105      	bne.n	80135c6 <_SetBkIndexBuffered+0x1c>
 80135ba:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 80135be:	6a21      	ldr	r1, [r4, #32]
 80135c0:	4411      	add	r1, r2
 80135c2:	4281      	cmp	r1, r0
 80135c4:	d003      	beq.n	80135ce <_SetBkIndexBuffered+0x24>
 80135c6:	4621      	mov	r1, r4
 80135c8:	4618      	mov	r0, r3
 80135ca:	f7ff ffb1 	bl	8013530 <_FlushBuffer.isra.5>
 80135ce:	6863      	ldr	r3, [r4, #4]
 80135d0:	601f      	str	r7, [r3, #0]
 80135d2:	f994 2030 	ldrsb.w	r2, [r4, #48]	; 0x30
 80135d6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80135da:	6063      	str	r3, [r4, #4]
 80135dc:	68e3      	ldr	r3, [r4, #12]
 80135de:	b90b      	cbnz	r3, 80135e4 <_SetBkIndexBuffered+0x3a>
 80135e0:	62a6      	str	r6, [r4, #40]	; 0x28
 80135e2:	62e5      	str	r5, [r4, #44]	; 0x2c
 80135e4:	3301      	adds	r3, #1
 80135e6:	6226      	str	r6, [r4, #32]
 80135e8:	6265      	str	r5, [r4, #36]	; 0x24
 80135ea:	60e3      	str	r3, [r4, #12]
 80135ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080135ee <_ReleaseBuffer.isra.6>:
 80135ee:	b513      	push	{r0, r1, r4, lr}
 80135f0:	9101      	str	r1, [sp, #4]
 80135f2:	f7ff ff9d 	bl	8013530 <_FlushBuffer.isra.5>
 80135f6:	a802      	add	r0, sp, #8
 80135f8:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80135fc:	689c      	ldr	r4, [r3, #8]
 80135fe:	f7f7 f9b5 	bl	800a96c <GUI_ALLOC_UnlockH>
 8013602:	4620      	mov	r0, r4
 8013604:	f7f7 f9de 	bl	800a9c4 <GUI_ALLOC_Free>
 8013608:	b002      	add	sp, #8
 801360a:	bd10      	pop	{r4, pc}

0801360c <GUI_SPRITE_SetPosition>:
 801360c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013610:	b0a7      	sub	sp, #156	; 0x9c
 8013612:	9111      	str	r1, [sp, #68]	; 0x44
 8013614:	9212      	str	r2, [sp, #72]	; 0x48
 8013616:	2800      	cmp	r0, #0
 8013618:	f000 8242 	beq.w	8013aa0 <GUI_SPRITE_SetPosition+0x494>
 801361c:	f7f7 f998 	bl	800a950 <GUI_ALLOC_LockH>
 8013620:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013622:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013626:	9023      	str	r0, [sp, #140]	; 0x8c
 8013628:	429a      	cmp	r2, r3
 801362a:	f8d0 b000 	ldr.w	fp, [r0]
 801362e:	d105      	bne.n	801363c <GUI_SPRITE_SetPosition+0x30>
 8013630:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8013634:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013636:	429a      	cmp	r2, r3
 8013638:	f000 8204 	beq.w	8013a44 <GUI_SPRITE_SetPosition+0x438>
 801363c:	2000      	movs	r0, #0
 801363e:	f000 fe15 	bl	801426c <GUI_MEMDEV_Select>
 8013642:	f8db 3018 	ldr.w	r3, [fp, #24]
 8013646:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 8013648:	9309      	str	r3, [sp, #36]	; 0x24
 801364a:	4b96      	ldr	r3, [pc, #600]	; (80138a4 <GUI_SPRITE_SetPosition+0x298>)
 801364c:	901e      	str	r0, [sp, #120]	; 0x78
 801364e:	681b      	ldr	r3, [r3, #0]
 8013650:	7c5a      	ldrb	r2, [r3, #17]
 8013652:	9213      	str	r2, [sp, #76]	; 0x4c
 8013654:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8013656:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013658:	428a      	cmp	r2, r1
 801365a:	bf1c      	itt	ne
 801365c:	f89d 2024 	ldrbne.w	r2, [sp, #36]	; 0x24
 8013660:	745a      	strbne	r2, [r3, #17]
 8013662:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8013666:	9305      	str	r3, [sp, #20]
 8013668:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 801366c:	9a05      	ldr	r2, [sp, #20]
 801366e:	9306      	str	r3, [sp, #24]
 8013670:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8013674:	ebc2 0a03 	rsb	sl, r2, r3
 8013678:	9a06      	ldr	r2, [sp, #24]
 801367a:	f10a 0301 	add.w	r3, sl, #1
 801367e:	9307      	str	r3, [sp, #28]
 8013680:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8013684:	1a9b      	subs	r3, r3, r2
 8013686:	9308      	str	r3, [sp, #32]
 8013688:	3301      	adds	r3, #1
 801368a:	9319      	str	r3, [sp, #100]	; 0x64
 801368c:	8a2b      	ldrh	r3, [r5, #16]
 801368e:	079b      	lsls	r3, r3, #30
 8013690:	f140 81bb 	bpl.w	8013a0a <GUI_SPRITE_SetPosition+0x3fe>
 8013694:	696b      	ldr	r3, [r5, #20]
 8013696:	9a05      	ldr	r2, [sp, #20]
 8013698:	930c      	str	r3, [sp, #48]	; 0x30
 801369a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801369c:	1a9b      	subs	r3, r3, r2
 801369e:	9a06      	ldr	r2, [sp, #24]
 80136a0:	9302      	str	r3, [sp, #8]
 80136a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80136a4:	1a9b      	subs	r3, r3, r2
 80136a6:	9303      	str	r3, [sp, #12]
 80136a8:	9b02      	ldr	r3, [sp, #8]
 80136aa:	2b00      	cmp	r3, #0
 80136ac:	dc09      	bgt.n	80136c2 <GUI_SPRITE_SetPosition+0xb6>
 80136ae:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
 80136b2:	449a      	add	sl, r3
 80136b4:	2300      	movs	r3, #0
 80136b6:	9316      	str	r3, [sp, #88]	; 0x58
 80136b8:	f04f 33ff 	mov.w	r3, #4294967295
 80136bc:	930f      	str	r3, [sp, #60]	; 0x3c
 80136be:	9304      	str	r3, [sp, #16]
 80136c0:	e007      	b.n	80136d2 <GUI_SPRITE_SetPosition+0xc6>
 80136c2:	9b02      	ldr	r3, [sp, #8]
 80136c4:	9316      	str	r3, [sp, #88]	; 0x58
 80136c6:	9b07      	ldr	r3, [sp, #28]
 80136c8:	930f      	str	r3, [sp, #60]	; 0x3c
 80136ca:	2301      	movs	r3, #1
 80136cc:	9304      	str	r3, [sp, #16]
 80136ce:	2300      	movs	r3, #0
 80136d0:	930b      	str	r3, [sp, #44]	; 0x2c
 80136d2:	9b03      	ldr	r3, [sp, #12]
 80136d4:	2b00      	cmp	r3, #0
 80136d6:	dc0b      	bgt.n	80136f0 <GUI_SPRITE_SetPosition+0xe4>
 80136d8:	9c08      	ldr	r4, [sp, #32]
 80136da:	9a03      	ldr	r2, [sp, #12]
 80136dc:	4623      	mov	r3, r4
 80136de:	4413      	add	r3, r2
 80136e0:	9308      	str	r3, [sp, #32]
 80136e2:	2300      	movs	r3, #0
 80136e4:	9314      	str	r3, [sp, #80]	; 0x50
 80136e6:	f04f 33ff 	mov.w	r3, #4294967295
 80136ea:	9310      	str	r3, [sp, #64]	; 0x40
 80136ec:	930a      	str	r3, [sp, #40]	; 0x28
 80136ee:	e006      	b.n	80136fe <GUI_SPRITE_SetPosition+0xf2>
 80136f0:	9b03      	ldr	r3, [sp, #12]
 80136f2:	2400      	movs	r4, #0
 80136f4:	9314      	str	r3, [sp, #80]	; 0x50
 80136f6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80136f8:	9310      	str	r3, [sp, #64]	; 0x40
 80136fa:	2301      	movs	r3, #1
 80136fc:	930a      	str	r3, [sp, #40]	; 0x28
 80136fe:	a924      	add	r1, sp, #144	; 0x90
 8013700:	4658      	mov	r0, fp
 8013702:	f7ff fef7 	bl	80134f4 <_GetDeviceRect>
 8013706:	9904      	ldr	r1, [sp, #16]
 8013708:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801370a:	f7ff fe2d 	bl	8013368 <_CreateBuffer>
 801370e:	900d      	str	r0, [sp, #52]	; 0x34
 8013710:	2800      	cmp	r0, #0
 8013712:	f000 817a 	beq.w	8013a0a <GUI_SPRITE_SetPosition+0x3fe>
 8013716:	9904      	ldr	r1, [sp, #16]
 8013718:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801371a:	f7ff fe25 	bl	8013368 <_CreateBuffer>
 801371e:	900e      	str	r0, [sp, #56]	; 0x38
 8013720:	2800      	cmp	r0, #0
 8013722:	f000 816d 	beq.w	8013a00 <GUI_SPRITE_SetPosition+0x3f4>
 8013726:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8013728:	68d8      	ldr	r0, [r3, #12]
 801372a:	b980      	cbnz	r0, 801374e <GUI_SPRITE_SetPosition+0x142>
 801372c:	9b07      	ldr	r3, [sp, #28]
 801372e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013730:	009b      	lsls	r3, r3, #2
 8013732:	901d      	str	r0, [sp, #116]	; 0x74
 8013734:	4353      	muls	r3, r2
 8013736:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013738:	931f      	str	r3, [sp, #124]	; 0x7c
 801373a:	9b07      	ldr	r3, [sp, #28]
 801373c:	fb03 2304 	mla	r3, r3, r4, r2
 8013740:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8013744:	9315      	str	r3, [sp, #84]	; 0x54
 8013746:	9b04      	ldr	r3, [sp, #16]
 8013748:	009b      	lsls	r3, r3, #2
 801374a:	9320      	str	r3, [sp, #128]	; 0x80
 801374c:	e0cc      	b.n	80138e8 <GUI_SPRITE_SetPosition+0x2dc>
 801374e:	f7f7 f8ff 	bl	800a950 <GUI_ALLOC_LockH>
 8013752:	9b07      	ldr	r3, [sp, #28]
 8013754:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013756:	009b      	lsls	r3, r3, #2
 8013758:	9022      	str	r0, [sp, #136]	; 0x88
 801375a:	4353      	muls	r3, r2
 801375c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801375e:	931f      	str	r3, [sp, #124]	; 0x7c
 8013760:	9b07      	ldr	r3, [sp, #28]
 8013762:	fb03 2304 	mla	r3, r3, r4, r2
 8013766:	9a02      	ldr	r2, [sp, #8]
 8013768:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 801376c:	9315      	str	r3, [sp, #84]	; 0x54
 801376e:	9b04      	ldr	r3, [sp, #16]
 8013770:	009b      	lsls	r3, r3, #2
 8013772:	9320      	str	r3, [sp, #128]	; 0x80
 8013774:	9b05      	ldr	r3, [sp, #20]
 8013776:	4413      	add	r3, r2
 8013778:	9321      	str	r3, [sp, #132]	; 0x84
 801377a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801377c:	429c      	cmp	r4, r3
 801377e:	f000 808c 	beq.w	801389a <GUI_SPRITE_SetPosition+0x28e>
 8013782:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013784:	429c      	cmp	r4, r3
 8013786:	db05      	blt.n	8013794 <GUI_SPRITE_SetPosition+0x188>
 8013788:	9b08      	ldr	r3, [sp, #32]
 801378a:	429c      	cmp	r4, r3
 801378c:	bfcc      	ite	gt
 801378e:	2300      	movgt	r3, #0
 8013790:	2301      	movle	r3, #1
 8013792:	e000      	b.n	8013796 <GUI_SPRITE_SetPosition+0x18a>
 8013794:	2300      	movs	r3, #0
 8013796:	931a      	str	r3, [sp, #104]	; 0x68
 8013798:	9b06      	ldr	r3, [sp, #24]
 801379a:	9a06      	ldr	r2, [sp, #24]
 801379c:	18e3      	adds	r3, r4, r3
 801379e:	f8dd 9054 	ldr.w	r9, [sp, #84]	; 0x54
 80137a2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80137a4:	9318      	str	r3, [sp, #96]	; 0x60
 80137a6:	9b03      	ldr	r3, [sp, #12]
 80137a8:	189e      	adds	r6, r3, r2
 80137aa:	1ae3      	subs	r3, r4, r3
 80137ac:	4426      	add	r6, r4
 80137ae:	931d      	str	r3, [sp, #116]	; 0x74
 80137b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80137b2:	429d      	cmp	r5, r3
 80137b4:	d06a      	beq.n	801388c <GUI_SPRITE_SetPosition+0x280>
 80137b6:	4622      	mov	r2, r4
 80137b8:	4629      	mov	r1, r5
 80137ba:	980c      	ldr	r0, [sp, #48]	; 0x30
 80137bc:	f7f7 fc5f 	bl	800b07e <GUI_GetBitmapPixelIndex>
 80137c0:	901b      	str	r0, [sp, #108]	; 0x6c
 80137c2:	2800      	cmp	r0, #0
 80137c4:	d05d      	beq.n	8013882 <GUI_SPRITE_SetPosition+0x276>
 80137c6:	9b05      	ldr	r3, [sp, #20]
 80137c8:	18eb      	adds	r3, r5, r3
 80137ca:	9317      	str	r3, [sp, #92]	; 0x5c
 80137cc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80137ce:	195f      	adds	r7, r3, r5
 80137d0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80137d2:	429d      	cmp	r5, r3
 80137d4:	db04      	blt.n	80137e0 <GUI_SPRITE_SetPosition+0x1d4>
 80137d6:	4555      	cmp	r5, sl
 80137d8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80137da:	bfc8      	it	gt
 80137dc:	2300      	movgt	r3, #0
 80137de:	e000      	b.n	80137e2 <GUI_SPRITE_SetPosition+0x1d6>
 80137e0:	2300      	movs	r3, #0
 80137e2:	931c      	str	r3, [sp, #112]	; 0x70
 80137e4:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 80137e8:	42bb      	cmp	r3, r7
 80137ea:	dc13      	bgt.n	8013814 <GUI_SPRITE_SetPosition+0x208>
 80137ec:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 80137f0:	42b3      	cmp	r3, r6
 80137f2:	dc0f      	bgt.n	8013814 <GUI_SPRITE_SetPosition+0x208>
 80137f4:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 80137f8:	42bb      	cmp	r3, r7
 80137fa:	db0b      	blt.n	8013814 <GUI_SPRITE_SetPosition+0x208>
 80137fc:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8013800:	42b3      	cmp	r3, r6
 8013802:	db07      	blt.n	8013814 <GUI_SPRITE_SetPosition+0x208>
 8013804:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8013806:	465a      	mov	r2, fp
 8013808:	4631      	mov	r1, r6
 801380a:	4638      	mov	r0, r7
 801380c:	f7ff fdfe 	bl	801340c <_GetBkIndex.isra.0>
 8013810:	4680      	mov	r8, r0
 8013812:	e001      	b.n	8013818 <GUI_SPRITE_SetPosition+0x20c>
 8013814:	f04f 0800 	mov.w	r8, #0
 8013818:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801381a:	b153      	cbz	r3, 8013832 <GUI_SPRITE_SetPosition+0x226>
 801381c:	9b02      	ldr	r3, [sp, #8]
 801381e:	1ae9      	subs	r1, r5, r3
 8013820:	d412      	bmi.n	8013848 <GUI_SPRITE_SetPosition+0x23c>
 8013822:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8013824:	2b00      	cmp	r3, #0
 8013826:	db0f      	blt.n	8013848 <GUI_SPRITE_SetPosition+0x23c>
 8013828:	461a      	mov	r2, r3
 801382a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801382c:	f7f7 fc27 	bl	800b07e <GUI_GetBitmapPixelIndex>
 8013830:	b950      	cbnz	r0, 8013848 <GUI_SPRITE_SetPosition+0x23c>
 8013832:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 8013836:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8013838:	4293      	cmp	r3, r2
 801383a:	dc05      	bgt.n	8013848 <GUI_SPRITE_SetPosition+0x23c>
 801383c:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8013840:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8013842:	4293      	cmp	r3, r2
 8013844:	f340 8102 	ble.w	8013a4c <GUI_SPRITE_SetPosition+0x440>
 8013848:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 801384c:	42bb      	cmp	r3, r7
 801384e:	dc16      	bgt.n	801387e <GUI_SPRITE_SetPosition+0x272>
 8013850:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8013854:	42b3      	cmp	r3, r6
 8013856:	dc12      	bgt.n	801387e <GUI_SPRITE_SetPosition+0x272>
 8013858:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 801385c:	42bb      	cmp	r3, r7
 801385e:	db0e      	blt.n	801387e <GUI_SPRITE_SetPosition+0x272>
 8013860:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8013864:	42b3      	cmp	r3, r6
 8013866:	db0a      	blt.n	801387e <GUI_SPRITE_SetPosition+0x272>
 8013868:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801386a:	4638      	mov	r0, r7
 801386c:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801386e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8013870:	9300      	str	r3, [sp, #0]
 8013872:	465b      	mov	r3, fp
 8013874:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 8013878:	4631      	mov	r1, r6
 801387a:	f7ff fe96 	bl	80135aa <_SetBkIndexBuffered>
 801387e:	f8c9 8020 	str.w	r8, [r9, #32]
 8013882:	9b04      	ldr	r3, [sp, #16]
 8013884:	441d      	add	r5, r3
 8013886:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8013888:	4499      	add	r9, r3
 801388a:	e791      	b.n	80137b0 <GUI_SPRITE_SetPosition+0x1a4>
 801388c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801388e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8013890:	441c      	add	r4, r3
 8013892:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013894:	4413      	add	r3, r2
 8013896:	9315      	str	r3, [sp, #84]	; 0x54
 8013898:	e76f      	b.n	801377a <GUI_SPRITE_SetPosition+0x16e>
 801389a:	a822      	add	r0, sp, #136	; 0x88
 801389c:	f7f7 f866 	bl	800a96c <GUI_ALLOC_UnlockH>
 80138a0:	e0a9      	b.n	80139f6 <GUI_SPRITE_SetPosition+0x3ea>
 80138a2:	bf00      	nop
 80138a4:	2000003c 	.word	0x2000003c
 80138a8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80138aa:	42a3      	cmp	r3, r4
 80138ac:	dc20      	bgt.n	80138f0 <GUI_SPRITE_SetPosition+0x2e4>
 80138ae:	9b08      	ldr	r3, [sp, #32]
 80138b0:	42a3      	cmp	r3, r4
 80138b2:	bfb4      	ite	lt
 80138b4:	2300      	movlt	r3, #0
 80138b6:	2301      	movge	r3, #1
 80138b8:	931a      	str	r3, [sp, #104]	; 0x68
 80138ba:	9b06      	ldr	r3, [sp, #24]
 80138bc:	9a06      	ldr	r2, [sp, #24]
 80138be:	4423      	add	r3, r4
 80138c0:	f8dd 9054 	ldr.w	r9, [sp, #84]	; 0x54
 80138c4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80138c6:	9318      	str	r3, [sp, #96]	; 0x60
 80138c8:	9b03      	ldr	r3, [sp, #12]
 80138ca:	189e      	adds	r6, r3, r2
 80138cc:	9b05      	ldr	r3, [sp, #20]
 80138ce:	9a02      	ldr	r2, [sp, #8]
 80138d0:	4426      	add	r6, r4
 80138d2:	4413      	add	r3, r2
 80138d4:	9321      	str	r3, [sp, #132]	; 0x84
 80138d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80138d8:	42ab      	cmp	r3, r5
 80138da:	d10b      	bne.n	80138f4 <GUI_SPRITE_SetPosition+0x2e8>
 80138dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80138de:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80138e0:	441c      	add	r4, r3
 80138e2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80138e4:	4413      	add	r3, r2
 80138e6:	9315      	str	r3, [sp, #84]	; 0x54
 80138e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80138ea:	42a3      	cmp	r3, r4
 80138ec:	d1dc      	bne.n	80138a8 <GUI_SPRITE_SetPosition+0x29c>
 80138ee:	e082      	b.n	80139f6 <GUI_SPRITE_SetPosition+0x3ea>
 80138f0:	2300      	movs	r3, #0
 80138f2:	e7e1      	b.n	80138b8 <GUI_SPRITE_SetPosition+0x2ac>
 80138f4:	4622      	mov	r2, r4
 80138f6:	4629      	mov	r1, r5
 80138f8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80138fa:	f7f7 fbc0 	bl	800b07e <GUI_GetBitmapPixelIndex>
 80138fe:	4603      	mov	r3, r0
 8013900:	901b      	str	r0, [sp, #108]	; 0x6c
 8013902:	0e1b      	lsrs	r3, r3, #24
 8013904:	d072      	beq.n	80139ec <GUI_SPRITE_SetPosition+0x3e0>
 8013906:	9b05      	ldr	r3, [sp, #20]
 8013908:	18eb      	adds	r3, r5, r3
 801390a:	9317      	str	r3, [sp, #92]	; 0x5c
 801390c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801390e:	eb03 0805 	add.w	r8, r3, r5
 8013912:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8013914:	42ab      	cmp	r3, r5
 8013916:	dc04      	bgt.n	8013922 <GUI_SPRITE_SetPosition+0x316>
 8013918:	45aa      	cmp	sl, r5
 801391a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801391c:	bfb8      	it	lt
 801391e:	2300      	movlt	r3, #0
 8013920:	e000      	b.n	8013924 <GUI_SPRITE_SetPosition+0x318>
 8013922:	2300      	movs	r3, #0
 8013924:	931c      	str	r3, [sp, #112]	; 0x70
 8013926:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 801392a:	4543      	cmp	r3, r8
 801392c:	dc1d      	bgt.n	801396a <GUI_SPRITE_SetPosition+0x35e>
 801392e:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8013932:	42b3      	cmp	r3, r6
 8013934:	dc19      	bgt.n	801396a <GUI_SPRITE_SetPosition+0x35e>
 8013936:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 801393a:	4543      	cmp	r3, r8
 801393c:	db15      	blt.n	801396a <GUI_SPRITE_SetPosition+0x35e>
 801393e:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8013942:	42b3      	cmp	r3, r6
 8013944:	db11      	blt.n	801396a <GUI_SPRITE_SetPosition+0x35e>
 8013946:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8013948:	465a      	mov	r2, fp
 801394a:	4631      	mov	r1, r6
 801394c:	4640      	mov	r0, r8
 801394e:	f7ff fd95 	bl	801347c <_GetBkIndexAlpha.isra.2>
 8013952:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013954:	4b54      	ldr	r3, [pc, #336]	; (8013aa8 <GUI_SPRITE_SetPosition+0x49c>)
 8013956:	4607      	mov	r7, r0
 8013958:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 801395c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013960:	691b      	ldr	r3, [r3, #16]
 8013962:	685b      	ldr	r3, [r3, #4]
 8013964:	4798      	blx	r3
 8013966:	901d      	str	r0, [sp, #116]	; 0x74
 8013968:	e000      	b.n	801396c <GUI_SPRITE_SetPosition+0x360>
 801396a:	2700      	movs	r7, #0
 801396c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801396e:	b153      	cbz	r3, 8013986 <GUI_SPRITE_SetPosition+0x37a>
 8013970:	9b02      	ldr	r3, [sp, #8]
 8013972:	1ae9      	subs	r1, r5, r3
 8013974:	d411      	bmi.n	801399a <GUI_SPRITE_SetPosition+0x38e>
 8013976:	9b03      	ldr	r3, [sp, #12]
 8013978:	1ae2      	subs	r2, r4, r3
 801397a:	d40e      	bmi.n	801399a <GUI_SPRITE_SetPosition+0x38e>
 801397c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801397e:	f7f7 fb7e 	bl	800b07e <GUI_GetBitmapPixelIndex>
 8013982:	0e03      	lsrs	r3, r0, #24
 8013984:	d109      	bne.n	801399a <GUI_SPRITE_SetPosition+0x38e>
 8013986:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 801398a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 801398c:	4293      	cmp	r3, r2
 801398e:	dc04      	bgt.n	801399a <GUI_SPRITE_SetPosition+0x38e>
 8013990:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 8013994:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8013996:	4293      	cmp	r3, r2
 8013998:	dd6e      	ble.n	8013a78 <GUI_SPRITE_SetPosition+0x46c>
 801399a:	f9bd 3090 	ldrsh.w	r3, [sp, #144]	; 0x90
 801399e:	4543      	cmp	r3, r8
 80139a0:	dc22      	bgt.n	80139e8 <GUI_SPRITE_SetPosition+0x3dc>
 80139a2:	f9bd 3092 	ldrsh.w	r3, [sp, #146]	; 0x92
 80139a6:	42b3      	cmp	r3, r6
 80139a8:	dc1e      	bgt.n	80139e8 <GUI_SPRITE_SetPosition+0x3dc>
 80139aa:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 80139ae:	4543      	cmp	r3, r8
 80139b0:	db1a      	blt.n	80139e8 <GUI_SPRITE_SetPosition+0x3dc>
 80139b2:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 80139b6:	42b3      	cmp	r3, r6
 80139b8:	db16      	blt.n	80139e8 <GUI_SPRITE_SetPosition+0x3dc>
 80139ba:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80139bc:	22ff      	movs	r2, #255	; 0xff
 80139be:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80139c0:	f043 417f 	orr.w	r1, r3, #4278190080	; 0xff000000
 80139c4:	4b39      	ldr	r3, [pc, #228]	; (8013aac <GUI_SPRITE_SetPosition+0x4a0>)
 80139c6:	681b      	ldr	r3, [r3, #0]
 80139c8:	4798      	blx	r3
 80139ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80139cc:	4b36      	ldr	r3, [pc, #216]	; (8013aa8 <GUI_SPRITE_SetPosition+0x49c>)
 80139ce:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80139d2:	691b      	ldr	r3, [r3, #16]
 80139d4:	681b      	ldr	r3, [r3, #0]
 80139d6:	4798      	blx	r3
 80139d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80139da:	4602      	mov	r2, r0
 80139dc:	4631      	mov	r1, r6
 80139de:	9300      	str	r3, [sp, #0]
 80139e0:	4640      	mov	r0, r8
 80139e2:	465b      	mov	r3, fp
 80139e4:	f7ff fde1 	bl	80135aa <_SetBkIndexBuffered>
 80139e8:	f8c9 7020 	str.w	r7, [r9, #32]
 80139ec:	9b04      	ldr	r3, [sp, #16]
 80139ee:	441d      	add	r5, r3
 80139f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80139f2:	4499      	add	r9, r3
 80139f4:	e76f      	b.n	80138d6 <GUI_SPRITE_SetPosition+0x2ca>
 80139f6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80139f8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80139fa:	6818      	ldr	r0, [r3, #0]
 80139fc:	f7ff fdf7 	bl	80135ee <_ReleaseBuffer.isra.6>
 8013a00:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8013a02:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013a04:	6818      	ldr	r0, [r3, #0]
 8013a06:	f7ff fdf2 	bl	80135ee <_ReleaseBuffer.isra.6>
 8013a0a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8013a0c:	f8bd 2044 	ldrh.w	r2, [sp, #68]	; 0x44
 8013a10:	9907      	ldr	r1, [sp, #28]
 8013a12:	809a      	strh	r2, [r3, #4]
 8013a14:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 8013a18:	981e      	ldr	r0, [sp, #120]	; 0x78
 8013a1a:	80da      	strh	r2, [r3, #6]
 8013a1c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013a1e:	440a      	add	r2, r1
 8013a20:	9919      	ldr	r1, [sp, #100]	; 0x64
 8013a22:	3a01      	subs	r2, #1
 8013a24:	811a      	strh	r2, [r3, #8]
 8013a26:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013a28:	3a01      	subs	r2, #1
 8013a2a:	440a      	add	r2, r1
 8013a2c:	815a      	strh	r2, [r3, #10]
 8013a2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a30:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013a32:	4293      	cmp	r3, r2
 8013a34:	bf1f      	itttt	ne
 8013a36:	4b1e      	ldrne	r3, [pc, #120]	; (8013ab0 <GUI_SPRITE_SetPosition+0x4a4>)
 8013a38:	f89d 204c 	ldrbne.w	r2, [sp, #76]	; 0x4c
 8013a3c:	681b      	ldrne	r3, [r3, #0]
 8013a3e:	745a      	strbne	r2, [r3, #17]
 8013a40:	f000 fc14 	bl	801426c <GUI_MEMDEV_Select>
 8013a44:	a823      	add	r0, sp, #140	; 0x8c
 8013a46:	f7f6 ff91 	bl	800a96c <GUI_ALLOC_UnlockH>
 8013a4a:	e029      	b.n	8013aa0 <GUI_SPRITE_SetPosition+0x494>
 8013a4c:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8013a50:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8013a52:	4293      	cmp	r3, r2
 8013a54:	f6ff aef8 	blt.w	8013848 <GUI_SPRITE_SetPosition+0x23c>
 8013a58:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8013a5c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8013a5e:	4293      	cmp	r3, r2
 8013a60:	f6ff aef2 	blt.w	8013848 <GUI_SPRITE_SetPosition+0x23c>
 8013a64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013a66:	9918      	ldr	r1, [sp, #96]	; 0x60
 8013a68:	9300      	str	r3, [sp, #0]
 8013a6a:	465b      	mov	r3, fp
 8013a6c:	f8d9 2020 	ldr.w	r2, [r9, #32]
 8013a70:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8013a72:	f7ff fd9a 	bl	80135aa <_SetBkIndexBuffered>
 8013a76:	e6e7      	b.n	8013848 <GUI_SPRITE_SetPosition+0x23c>
 8013a78:	f9bd 3094 	ldrsh.w	r3, [sp, #148]	; 0x94
 8013a7c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8013a7e:	4293      	cmp	r3, r2
 8013a80:	db8b      	blt.n	801399a <GUI_SPRITE_SetPosition+0x38e>
 8013a82:	f9bd 3096 	ldrsh.w	r3, [sp, #150]	; 0x96
 8013a86:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8013a88:	4293      	cmp	r3, r2
 8013a8a:	db86      	blt.n	801399a <GUI_SPRITE_SetPosition+0x38e>
 8013a8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013a8e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8013a90:	9300      	str	r3, [sp, #0]
 8013a92:	465b      	mov	r3, fp
 8013a94:	f8d9 2020 	ldr.w	r2, [r9, #32]
 8013a98:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8013a9a:	f7ff fd86 	bl	80135aa <_SetBkIndexBuffered>
 8013a9e:	e77c      	b.n	801399a <GUI_SPRITE_SetPosition+0x38e>
 8013aa0:	b027      	add	sp, #156	; 0x9c
 8013aa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013aa6:	bf00      	nop
 8013aa8:	2002db08 	.word	0x2002db08
 8013aac:	20000048 	.word	0x20000048
 8013ab0:	2000003c 	.word	0x2000003c

08013ab4 <GUI_GetTime>:
 8013ab4:	f7f5 bf16 	b.w	80098e4 <GUI_X_GetTime>

08013ab8 <_Unlink>:
 8013ab8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013aba:	4605      	mov	r5, r0
 8013abc:	b1e8      	cbz	r0, 8013afa <_Unlink+0x42>
 8013abe:	f7f6 ff47 	bl	800a950 <GUI_ALLOC_LockH>
 8013ac2:	4b0f      	ldr	r3, [pc, #60]	; (8013b00 <_Unlink+0x48>)
 8013ac4:	9000      	str	r0, [sp, #0]
 8013ac6:	685c      	ldr	r4, [r3, #4]
 8013ac8:	42a5      	cmp	r5, r4
 8013aca:	d105      	bne.n	8013ad8 <_Unlink+0x20>
 8013acc:	6842      	ldr	r2, [r0, #4]
 8013ace:	605a      	str	r2, [r3, #4]
 8013ad0:	e010      	b.n	8013af4 <_Unlink+0x3c>
 8013ad2:	a801      	add	r0, sp, #4
 8013ad4:	f7f6 ff4a 	bl	800a96c <GUI_ALLOC_UnlockH>
 8013ad8:	b164      	cbz	r4, 8013af4 <_Unlink+0x3c>
 8013ada:	4620      	mov	r0, r4
 8013adc:	f7f6 ff38 	bl	800a950 <GUI_ALLOC_LockH>
 8013ae0:	6844      	ldr	r4, [r0, #4]
 8013ae2:	9001      	str	r0, [sp, #4]
 8013ae4:	42a5      	cmp	r5, r4
 8013ae6:	d1f4      	bne.n	8013ad2 <_Unlink+0x1a>
 8013ae8:	9b00      	ldr	r3, [sp, #0]
 8013aea:	685b      	ldr	r3, [r3, #4]
 8013aec:	6043      	str	r3, [r0, #4]
 8013aee:	a801      	add	r0, sp, #4
 8013af0:	f7f6 ff3c 	bl	800a96c <GUI_ALLOC_UnlockH>
 8013af4:	4668      	mov	r0, sp
 8013af6:	f7f6 ff39 	bl	800a96c <GUI_ALLOC_UnlockH>
 8013afa:	b003      	add	sp, #12
 8013afc:	bd30      	pop	{r4, r5, pc}
 8013afe:	bf00      	nop
 8013b00:	20000e34 	.word	0x20000e34

08013b04 <GUI_TIMER__GetFirstTimer>:
 8013b04:	2300      	movs	r3, #0
 8013b06:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013b08:	6003      	str	r3, [r0, #0]
 8013b0a:	4605      	mov	r5, r0
 8013b0c:	4b08      	ldr	r3, [pc, #32]	; (8013b30 <GUI_TIMER__GetFirstTimer+0x2c>)
 8013b0e:	681c      	ldr	r4, [r3, #0]
 8013b10:	b154      	cbz	r4, 8013b28 <GUI_TIMER__GetFirstTimer+0x24>
 8013b12:	4620      	mov	r0, r4
 8013b14:	f7f6 ff1c 	bl	800a950 <GUI_ALLOC_LockH>
 8013b18:	ab02      	add	r3, sp, #8
 8013b1a:	6902      	ldr	r2, [r0, #16]
 8013b1c:	f843 0d04 	str.w	r0, [r3, #-4]!
 8013b20:	4618      	mov	r0, r3
 8013b22:	602a      	str	r2, [r5, #0]
 8013b24:	f7f6 ff22 	bl	800a96c <GUI_ALLOC_UnlockH>
 8013b28:	4620      	mov	r0, r4
 8013b2a:	b003      	add	sp, #12
 8013b2c:	bd30      	pop	{r4, r5, pc}
 8013b2e:	bf00      	nop
 8013b30:	20000e34 	.word	0x20000e34

08013b34 <GUI_TIMER__GetNextTimerLin>:
 8013b34:	2300      	movs	r3, #0
 8013b36:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013b38:	600b      	str	r3, [r1, #0]
 8013b3a:	460e      	mov	r6, r1
 8013b3c:	4604      	mov	r4, r0
 8013b3e:	b190      	cbz	r0, 8013b66 <GUI_TIMER__GetNextTimerLin+0x32>
 8013b40:	f7f6 ff06 	bl	800a950 <GUI_ALLOC_LockH>
 8013b44:	ad02      	add	r5, sp, #8
 8013b46:	6884      	ldr	r4, [r0, #8]
 8013b48:	f845 0d04 	str.w	r0, [r5, #-4]!
 8013b4c:	b144      	cbz	r4, 8013b60 <GUI_TIMER__GetNextTimerLin+0x2c>
 8013b4e:	4628      	mov	r0, r5
 8013b50:	f7f6 ff0c 	bl	800a96c <GUI_ALLOC_UnlockH>
 8013b54:	4620      	mov	r0, r4
 8013b56:	f7f6 fefb 	bl	800a950 <GUI_ALLOC_LockH>
 8013b5a:	6903      	ldr	r3, [r0, #16]
 8013b5c:	9001      	str	r0, [sp, #4]
 8013b5e:	6033      	str	r3, [r6, #0]
 8013b60:	4628      	mov	r0, r5
 8013b62:	f7f6 ff03 	bl	800a96c <GUI_ALLOC_UnlockH>
 8013b66:	4620      	mov	r0, r4
 8013b68:	b002      	add	sp, #8
 8013b6a:	bd70      	pop	{r4, r5, r6, pc}

08013b6c <GUI_TIMER_Delete>:
 8013b6c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013b6e:	4604      	mov	r4, r0
 8013b70:	b350      	cbz	r0, 8013bc8 <GUI_TIMER_Delete+0x5c>
 8013b72:	4e16      	ldr	r6, [pc, #88]	; (8013bcc <GUI_TIMER_Delete+0x60>)
 8013b74:	6835      	ldr	r5, [r6, #0]
 8013b76:	42a8      	cmp	r0, r5
 8013b78:	d10b      	bne.n	8013b92 <GUI_TIMER_Delete+0x26>
 8013b7a:	f7f6 fee9 	bl	800a950 <GUI_ALLOC_LockH>
 8013b7e:	ab02      	add	r3, sp, #8
 8013b80:	6882      	ldr	r2, [r0, #8]
 8013b82:	f843 0d04 	str.w	r0, [r3, #-4]!
 8013b86:	4618      	mov	r0, r3
 8013b88:	6032      	str	r2, [r6, #0]
 8013b8a:	e015      	b.n	8013bb8 <GUI_TIMER_Delete+0x4c>
 8013b8c:	4668      	mov	r0, sp
 8013b8e:	f7f6 feed 	bl	800a96c <GUI_ALLOC_UnlockH>
 8013b92:	b19d      	cbz	r5, 8013bbc <GUI_TIMER_Delete+0x50>
 8013b94:	4628      	mov	r0, r5
 8013b96:	f7f6 fedb 	bl	800a950 <GUI_ALLOC_LockH>
 8013b9a:	6885      	ldr	r5, [r0, #8]
 8013b9c:	9000      	str	r0, [sp, #0]
 8013b9e:	42ac      	cmp	r4, r5
 8013ba0:	d1f4      	bne.n	8013b8c <GUI_TIMER_Delete+0x20>
 8013ba2:	4620      	mov	r0, r4
 8013ba4:	f7f6 fed4 	bl	800a950 <GUI_ALLOC_LockH>
 8013ba8:	9b00      	ldr	r3, [sp, #0]
 8013baa:	6882      	ldr	r2, [r0, #8]
 8013bac:	9001      	str	r0, [sp, #4]
 8013bae:	a801      	add	r0, sp, #4
 8013bb0:	609a      	str	r2, [r3, #8]
 8013bb2:	f7f6 fedb 	bl	800a96c <GUI_ALLOC_UnlockH>
 8013bb6:	4668      	mov	r0, sp
 8013bb8:	f7f6 fed8 	bl	800a96c <GUI_ALLOC_UnlockH>
 8013bbc:	4620      	mov	r0, r4
 8013bbe:	f7ff ff7b 	bl	8013ab8 <_Unlink>
 8013bc2:	4620      	mov	r0, r4
 8013bc4:	f7f6 fefe 	bl	800a9c4 <GUI_ALLOC_Free>
 8013bc8:	b002      	add	sp, #8
 8013bca:	bd70      	pop	{r4, r5, r6, pc}
 8013bcc:	20000e34 	.word	0x20000e34

08013bd0 <GUI_TIMER_GetFlag>:
 8013bd0:	b513      	push	{r0, r1, r4, lr}
 8013bd2:	460c      	mov	r4, r1
 8013bd4:	b168      	cbz	r0, 8013bf2 <GUI_TIMER_GetFlag+0x22>
 8013bd6:	f7f6 febb 	bl	800a950 <GUI_ALLOC_LockH>
 8013bda:	8982      	ldrh	r2, [r0, #12]
 8013bdc:	ab02      	add	r3, sp, #8
 8013bde:	4222      	tst	r2, r4
 8013be0:	f843 0d04 	str.w	r0, [r3, #-4]!
 8013be4:	4618      	mov	r0, r3
 8013be6:	bf14      	ite	ne
 8013be8:	2401      	movne	r4, #1
 8013bea:	2400      	moveq	r4, #0
 8013bec:	f7f6 febe 	bl	800a96c <GUI_ALLOC_UnlockH>
 8013bf0:	e000      	b.n	8013bf4 <GUI_TIMER_GetFlag+0x24>
 8013bf2:	2401      	movs	r4, #1
 8013bf4:	4620      	mov	r0, r4
 8013bf6:	b002      	add	sp, #8
 8013bf8:	bd10      	pop	{r4, pc}

08013bfa <GUI__CompactPixelIndices>:
 8013bfa:	2a08      	cmp	r2, #8
 8013bfc:	b510      	push	{r4, lr}
 8013bfe:	dd0e      	ble.n	8013c1e <GUI__CompactPixelIndices+0x24>
 8013c00:	2a10      	cmp	r2, #16
 8013c02:	dc0a      	bgt.n	8013c1a <GUI__CompactPixelIndices+0x20>
 8013c04:	4603      	mov	r3, r0
 8013c06:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8013c0a:	f850 2b04 	ldr.w	r2, [r0], #4
 8013c0e:	f823 2b02 	strh.w	r2, [r3], #2
 8013c12:	428b      	cmp	r3, r1
 8013c14:	d1f9      	bne.n	8013c0a <GUI__CompactPixelIndices+0x10>
 8013c16:	2001      	movs	r0, #1
 8013c18:	bd10      	pop	{r4, pc}
 8013c1a:	2000      	movs	r0, #0
 8013c1c:	bd10      	pop	{r4, pc}
 8013c1e:	2a02      	cmp	r2, #2
 8013c20:	d12a      	bne.n	8013c78 <GUI__CompactPixelIndices+0x7e>
 8013c22:	4604      	mov	r4, r0
 8013c24:	6803      	ldr	r3, [r0, #0]
 8013c26:	2901      	cmp	r1, #1
 8013c28:	ea4f 1383 	mov.w	r3, r3, lsl #6
 8013c2c:	b2db      	uxtb	r3, r3
 8013c2e:	d020      	beq.n	8013c72 <GUI__CompactPixelIndices+0x78>
 8013c30:	6842      	ldr	r2, [r0, #4]
 8013c32:	2902      	cmp	r1, #2
 8013c34:	ea4f 1202 	mov.w	r2, r2, lsl #4
 8013c38:	f002 0230 	and.w	r2, r2, #48	; 0x30
 8013c3c:	ea43 0302 	orr.w	r3, r3, r2
 8013c40:	d101      	bne.n	8013c46 <GUI__CompactPixelIndices+0x4c>
 8013c42:	3008      	adds	r0, #8
 8013c44:	e016      	b.n	8013c74 <GUI__CompactPixelIndices+0x7a>
 8013c46:	6882      	ldr	r2, [r0, #8]
 8013c48:	2903      	cmp	r1, #3
 8013c4a:	ea4f 0282 	mov.w	r2, r2, lsl #2
 8013c4e:	f002 020c 	and.w	r2, r2, #12
 8013c52:	ea43 0302 	orr.w	r3, r3, r2
 8013c56:	d101      	bne.n	8013c5c <GUI__CompactPixelIndices+0x62>
 8013c58:	300c      	adds	r0, #12
 8013c5a:	e00b      	b.n	8013c74 <GUI__CompactPixelIndices+0x7a>
 8013c5c:	68c2      	ldr	r2, [r0, #12]
 8013c5e:	3904      	subs	r1, #4
 8013c60:	3010      	adds	r0, #16
 8013c62:	f002 0203 	and.w	r2, r2, #3
 8013c66:	4313      	orrs	r3, r2
 8013c68:	f804 3b01 	strb.w	r3, [r4], #1
 8013c6c:	2900      	cmp	r1, #0
 8013c6e:	d1d9      	bne.n	8013c24 <GUI__CompactPixelIndices+0x2a>
 8013c70:	e7d1      	b.n	8013c16 <GUI__CompactPixelIndices+0x1c>
 8013c72:	3004      	adds	r0, #4
 8013c74:	2100      	movs	r1, #0
 8013c76:	e7f7      	b.n	8013c68 <GUI__CompactPixelIndices+0x6e>
 8013c78:	2a04      	cmp	r2, #4
 8013c7a:	d115      	bne.n	8013ca8 <GUI__CompactPixelIndices+0xae>
 8013c7c:	4604      	mov	r4, r0
 8013c7e:	2901      	cmp	r1, #1
 8013c80:	6803      	ldr	r3, [r0, #0]
 8013c82:	bf18      	it	ne
 8013c84:	6842      	ldrne	r2, [r0, #4]
 8013c86:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8013c8a:	bf0c      	ite	eq
 8013c8c:	2100      	moveq	r1, #0
 8013c8e:	3902      	subne	r1, #2
 8013c90:	b2db      	uxtb	r3, r3
 8013c92:	bf17      	itett	ne
 8013c94:	f002 020f 	andne.w	r2, r2, #15
 8013c98:	3004      	addeq	r0, #4
 8013c9a:	3008      	addne	r0, #8
 8013c9c:	4313      	orrne	r3, r2
 8013c9e:	f804 3b01 	strb.w	r3, [r4], #1
 8013ca2:	2900      	cmp	r1, #0
 8013ca4:	d1eb      	bne.n	8013c7e <GUI__CompactPixelIndices+0x84>
 8013ca6:	e7b6      	b.n	8013c16 <GUI__CompactPixelIndices+0x1c>
 8013ca8:	2a01      	cmp	r2, #1
 8013caa:	4603      	mov	r3, r0
 8013cac:	d154      	bne.n	8013d58 <GUI__CompactPixelIndices+0x15e>
 8013cae:	681a      	ldr	r2, [r3, #0]
 8013cb0:	2901      	cmp	r1, #1
 8013cb2:	ea4f 12c2 	mov.w	r2, r2, lsl #7
 8013cb6:	b2d2      	uxtb	r2, r2
 8013cb8:	d04b      	beq.n	8013d52 <GUI__CompactPixelIndices+0x158>
 8013cba:	685c      	ldr	r4, [r3, #4]
 8013cbc:	2902      	cmp	r1, #2
 8013cbe:	ea4f 1484 	mov.w	r4, r4, lsl #6
 8013cc2:	f004 0440 	and.w	r4, r4, #64	; 0x40
 8013cc6:	ea42 0204 	orr.w	r2, r2, r4
 8013cca:	d101      	bne.n	8013cd0 <GUI__CompactPixelIndices+0xd6>
 8013ccc:	3308      	adds	r3, #8
 8013cce:	e041      	b.n	8013d54 <GUI__CompactPixelIndices+0x15a>
 8013cd0:	689c      	ldr	r4, [r3, #8]
 8013cd2:	2903      	cmp	r1, #3
 8013cd4:	ea4f 1444 	mov.w	r4, r4, lsl #5
 8013cd8:	f004 0420 	and.w	r4, r4, #32
 8013cdc:	ea42 0204 	orr.w	r2, r2, r4
 8013ce0:	d101      	bne.n	8013ce6 <GUI__CompactPixelIndices+0xec>
 8013ce2:	330c      	adds	r3, #12
 8013ce4:	e036      	b.n	8013d54 <GUI__CompactPixelIndices+0x15a>
 8013ce6:	68dc      	ldr	r4, [r3, #12]
 8013ce8:	2904      	cmp	r1, #4
 8013cea:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8013cee:	f004 0410 	and.w	r4, r4, #16
 8013cf2:	ea42 0204 	orr.w	r2, r2, r4
 8013cf6:	d101      	bne.n	8013cfc <GUI__CompactPixelIndices+0x102>
 8013cf8:	3310      	adds	r3, #16
 8013cfa:	e02b      	b.n	8013d54 <GUI__CompactPixelIndices+0x15a>
 8013cfc:	691c      	ldr	r4, [r3, #16]
 8013cfe:	2905      	cmp	r1, #5
 8013d00:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8013d04:	f004 0408 	and.w	r4, r4, #8
 8013d08:	ea42 0204 	orr.w	r2, r2, r4
 8013d0c:	d101      	bne.n	8013d12 <GUI__CompactPixelIndices+0x118>
 8013d0e:	3314      	adds	r3, #20
 8013d10:	e020      	b.n	8013d54 <GUI__CompactPixelIndices+0x15a>
 8013d12:	695c      	ldr	r4, [r3, #20]
 8013d14:	2906      	cmp	r1, #6
 8013d16:	ea4f 0484 	mov.w	r4, r4, lsl #2
 8013d1a:	f004 0404 	and.w	r4, r4, #4
 8013d1e:	ea42 0204 	orr.w	r2, r2, r4
 8013d22:	d101      	bne.n	8013d28 <GUI__CompactPixelIndices+0x12e>
 8013d24:	3318      	adds	r3, #24
 8013d26:	e015      	b.n	8013d54 <GUI__CompactPixelIndices+0x15a>
 8013d28:	699c      	ldr	r4, [r3, #24]
 8013d2a:	3907      	subs	r1, #7
 8013d2c:	ea4f 0444 	mov.w	r4, r4, lsl #1
 8013d30:	bf08      	it	eq
 8013d32:	331c      	addeq	r3, #28
 8013d34:	f004 0402 	and.w	r4, r4, #2
 8013d38:	ea42 0204 	orr.w	r2, r2, r4
 8013d3c:	bf1f      	itttt	ne
 8013d3e:	69dc      	ldrne	r4, [r3, #28]
 8013d40:	3320      	addne	r3, #32
 8013d42:	f004 0401 	andne.w	r4, r4, #1
 8013d46:	4322      	orrne	r2, r4
 8013d48:	f800 2b01 	strb.w	r2, [r0], #1
 8013d4c:	2900      	cmp	r1, #0
 8013d4e:	d1ae      	bne.n	8013cae <GUI__CompactPixelIndices+0xb4>
 8013d50:	e761      	b.n	8013c16 <GUI__CompactPixelIndices+0x1c>
 8013d52:	3304      	adds	r3, #4
 8013d54:	2100      	movs	r1, #0
 8013d56:	e7f7      	b.n	8013d48 <GUI__CompactPixelIndices+0x14e>
 8013d58:	4401      	add	r1, r0
 8013d5a:	f850 2b04 	ldr.w	r2, [r0], #4
 8013d5e:	f803 2b01 	strb.w	r2, [r3], #1
 8013d62:	4299      	cmp	r1, r3
 8013d64:	d1f9      	bne.n	8013d5a <GUI__CompactPixelIndices+0x160>
 8013d66:	e756      	b.n	8013c16 <GUI__CompactPixelIndices+0x1c>

08013d68 <GUI__ConvertColor2Index>:
 8013d68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013d6c:	9f08      	ldr	r7, [sp, #32]
 8013d6e:	4604      	mov	r4, r0
 8013d70:	460d      	mov	r5, r1
 8013d72:	f8d3 8000 	ldr.w	r8, [r3]
 8013d76:	2f00      	cmp	r7, #0
 8013d78:	bf08      	it	eq
 8013d7a:	4607      	moveq	r7, r0
 8013d7c:	2a08      	cmp	r2, #8
 8013d7e:	dd05      	ble.n	8013d8c <GUI__ConvertColor2Index+0x24>
 8013d80:	2a10      	cmp	r2, #16
 8013d82:	f340 80ad 	ble.w	8013ee0 <GUI__ConvertColor2Index+0x178>
 8013d86:	2000      	movs	r0, #0
 8013d88:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013d8c:	3a01      	subs	r2, #1
 8013d8e:	2a07      	cmp	r2, #7
 8013d90:	f200 809d 	bhi.w	8013ece <GUI__ConvertColor2Index+0x166>
 8013d94:	e8df f002 	tbb	[pc, r2]
 8013d98:	7f9b5b11 	.word	0x7f9b5b11
 8013d9c:	899b9b9b 	.word	0x899b9b9b
 8013da0:	69e0      	ldr	r0, [r4, #28]
 8013da2:	f104 0920 	add.w	r9, r4, #32
 8013da6:	47c0      	blx	r8
 8013da8:	4330      	orrs	r0, r6
 8013daa:	3d08      	subs	r5, #8
 8013dac:	464c      	mov	r4, r9
 8013dae:	b2c6      	uxtb	r6, r0
 8013db0:	f807 6b01 	strb.w	r6, [r7], #1
 8013db4:	2d00      	cmp	r5, #0
 8013db6:	f000 808a 	beq.w	8013ece <GUI__ConvertColor2Index+0x166>
 8013dba:	6820      	ldr	r0, [r4, #0]
 8013dbc:	47c0      	blx	r8
 8013dbe:	2d01      	cmp	r5, #1
 8013dc0:	ea4f 10c0 	mov.w	r0, r0, lsl #7
 8013dc4:	b2c6      	uxtb	r6, r0
 8013dc6:	f000 8085 	beq.w	8013ed4 <GUI__ConvertColor2Index+0x16c>
 8013dca:	6860      	ldr	r0, [r4, #4]
 8013dcc:	47c0      	blx	r8
 8013dce:	2d02      	cmp	r5, #2
 8013dd0:	ea46 1080 	orr.w	r0, r6, r0, lsl #6
 8013dd4:	b2c6      	uxtb	r6, r0
 8013dd6:	d101      	bne.n	8013ddc <GUI__ConvertColor2Index+0x74>
 8013dd8:	3408      	adds	r4, #8
 8013dda:	e07c      	b.n	8013ed6 <GUI__ConvertColor2Index+0x16e>
 8013ddc:	68a0      	ldr	r0, [r4, #8]
 8013dde:	47c0      	blx	r8
 8013de0:	2d03      	cmp	r5, #3
 8013de2:	ea46 1040 	orr.w	r0, r6, r0, lsl #5
 8013de6:	b2c6      	uxtb	r6, r0
 8013de8:	d101      	bne.n	8013dee <GUI__ConvertColor2Index+0x86>
 8013dea:	340c      	adds	r4, #12
 8013dec:	e073      	b.n	8013ed6 <GUI__ConvertColor2Index+0x16e>
 8013dee:	68e0      	ldr	r0, [r4, #12]
 8013df0:	47c0      	blx	r8
 8013df2:	2d04      	cmp	r5, #4
 8013df4:	ea46 1000 	orr.w	r0, r6, r0, lsl #4
 8013df8:	b2c6      	uxtb	r6, r0
 8013dfa:	d101      	bne.n	8013e00 <GUI__ConvertColor2Index+0x98>
 8013dfc:	3410      	adds	r4, #16
 8013dfe:	e06a      	b.n	8013ed6 <GUI__ConvertColor2Index+0x16e>
 8013e00:	6920      	ldr	r0, [r4, #16]
 8013e02:	47c0      	blx	r8
 8013e04:	2d05      	cmp	r5, #5
 8013e06:	ea46 00c0 	orr.w	r0, r6, r0, lsl #3
 8013e0a:	b2c6      	uxtb	r6, r0
 8013e0c:	d101      	bne.n	8013e12 <GUI__ConvertColor2Index+0xaa>
 8013e0e:	3414      	adds	r4, #20
 8013e10:	e061      	b.n	8013ed6 <GUI__ConvertColor2Index+0x16e>
 8013e12:	6960      	ldr	r0, [r4, #20]
 8013e14:	47c0      	blx	r8
 8013e16:	2d06      	cmp	r5, #6
 8013e18:	ea46 0080 	orr.w	r0, r6, r0, lsl #2
 8013e1c:	b2c6      	uxtb	r6, r0
 8013e1e:	d101      	bne.n	8013e24 <GUI__ConvertColor2Index+0xbc>
 8013e20:	3418      	adds	r4, #24
 8013e22:	e058      	b.n	8013ed6 <GUI__ConvertColor2Index+0x16e>
 8013e24:	69a0      	ldr	r0, [r4, #24]
 8013e26:	47c0      	blx	r8
 8013e28:	2d07      	cmp	r5, #7
 8013e2a:	ea46 0040 	orr.w	r0, r6, r0, lsl #1
 8013e2e:	b2c6      	uxtb	r6, r0
 8013e30:	d1b6      	bne.n	8013da0 <GUI__ConvertColor2Index+0x38>
 8013e32:	341c      	adds	r4, #28
 8013e34:	e04f      	b.n	8013ed6 <GUI__ConvertColor2Index+0x16e>
 8013e36:	68e0      	ldr	r0, [r4, #12]
 8013e38:	f104 0910 	add.w	r9, r4, #16
 8013e3c:	47c0      	blx	r8
 8013e3e:	4330      	orrs	r0, r6
 8013e40:	3d04      	subs	r5, #4
 8013e42:	464c      	mov	r4, r9
 8013e44:	b2c6      	uxtb	r6, r0
 8013e46:	f807 6b01 	strb.w	r6, [r7], #1
 8013e4a:	2d00      	cmp	r5, #0
 8013e4c:	d03f      	beq.n	8013ece <GUI__ConvertColor2Index+0x166>
 8013e4e:	6820      	ldr	r0, [r4, #0]
 8013e50:	47c0      	blx	r8
 8013e52:	2d01      	cmp	r5, #1
 8013e54:	ea4f 1080 	mov.w	r0, r0, lsl #6
 8013e58:	b2c6      	uxtb	r6, r0
 8013e5a:	d03e      	beq.n	8013eda <GUI__ConvertColor2Index+0x172>
 8013e5c:	6860      	ldr	r0, [r4, #4]
 8013e5e:	47c0      	blx	r8
 8013e60:	2d02      	cmp	r5, #2
 8013e62:	ea46 1000 	orr.w	r0, r6, r0, lsl #4
 8013e66:	b2c6      	uxtb	r6, r0
 8013e68:	d101      	bne.n	8013e6e <GUI__ConvertColor2Index+0x106>
 8013e6a:	3408      	adds	r4, #8
 8013e6c:	e036      	b.n	8013edc <GUI__ConvertColor2Index+0x174>
 8013e6e:	68a0      	ldr	r0, [r4, #8]
 8013e70:	47c0      	blx	r8
 8013e72:	2d03      	cmp	r5, #3
 8013e74:	ea46 0080 	orr.w	r0, r6, r0, lsl #2
 8013e78:	b2c6      	uxtb	r6, r0
 8013e7a:	d1dc      	bne.n	8013e36 <GUI__ConvertColor2Index+0xce>
 8013e7c:	340c      	adds	r4, #12
 8013e7e:	e02d      	b.n	8013edc <GUI__ConvertColor2Index+0x174>
 8013e80:	6860      	ldr	r0, [r4, #4]
 8013e82:	f104 0908 	add.w	r9, r4, #8
 8013e86:	47c0      	blx	r8
 8013e88:	4330      	orrs	r0, r6
 8013e8a:	3d02      	subs	r5, #2
 8013e8c:	464c      	mov	r4, r9
 8013e8e:	b2c6      	uxtb	r6, r0
 8013e90:	f807 6b01 	strb.w	r6, [r7], #1
 8013e94:	b1dd      	cbz	r5, 8013ece <GUI__ConvertColor2Index+0x166>
 8013e96:	6820      	ldr	r0, [r4, #0]
 8013e98:	47c0      	blx	r8
 8013e9a:	2d01      	cmp	r5, #1
 8013e9c:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8013ea0:	b2c6      	uxtb	r6, r0
 8013ea2:	d1ed      	bne.n	8013e80 <GUI__ConvertColor2Index+0x118>
 8013ea4:	3404      	adds	r4, #4
 8013ea6:	2500      	movs	r5, #0
 8013ea8:	e7f2      	b.n	8013e90 <GUI__ConvertColor2Index+0x128>
 8013eaa:	691e      	ldr	r6, [r3, #16]
 8013eac:	b12e      	cbz	r6, 8013eba <GUI__ConvertColor2Index+0x152>
 8013eae:	2301      	movs	r3, #1
 8013eb0:	462a      	mov	r2, r5
 8013eb2:	4639      	mov	r1, r7
 8013eb4:	4620      	mov	r0, r4
 8013eb6:	47b0      	blx	r6
 8013eb8:	e009      	b.n	8013ece <GUI__ConvertColor2Index+0x166>
 8013eba:	1e7e      	subs	r6, r7, #1
 8013ebc:	f854 0b04 	ldr.w	r0, [r4], #4
 8013ec0:	47c0      	blx	r8
 8013ec2:	f806 0f01 	strb.w	r0, [r6, #1]!
 8013ec6:	43f3      	mvns	r3, r6
 8013ec8:	442b      	add	r3, r5
 8013eca:	42df      	cmn	r7, r3
 8013ecc:	d1f6      	bne.n	8013ebc <GUI__ConvertColor2Index+0x154>
 8013ece:	2001      	movs	r0, #1
 8013ed0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013ed4:	3404      	adds	r4, #4
 8013ed6:	2500      	movs	r5, #0
 8013ed8:	e76a      	b.n	8013db0 <GUI__ConvertColor2Index+0x48>
 8013eda:	3404      	adds	r4, #4
 8013edc:	2500      	movs	r5, #0
 8013ede:	e7b2      	b.n	8013e46 <GUI__ConvertColor2Index+0xde>
 8013ee0:	691e      	ldr	r6, [r3, #16]
 8013ee2:	b11e      	cbz	r6, 8013eec <GUI__ConvertColor2Index+0x184>
 8013ee4:	2302      	movs	r3, #2
 8013ee6:	462a      	mov	r2, r5
 8013ee8:	4639      	mov	r1, r7
 8013eea:	e7e4      	b.n	8013eb6 <GUI__ConvertColor2Index+0x14e>
 8013eec:	3f02      	subs	r7, #2
 8013eee:	f854 0b04 	ldr.w	r0, [r4], #4
 8013ef2:	47c0      	blx	r8
 8013ef4:	3d01      	subs	r5, #1
 8013ef6:	f827 0f02 	strh.w	r0, [r7, #2]!
 8013efa:	d1f8      	bne.n	8013eee <GUI__ConvertColor2Index+0x186>
 8013efc:	e7e7      	b.n	8013ece <GUI__ConvertColor2Index+0x166>

08013efe <GUI__CompactPixelIndicesEx>:
 8013efe:	b513      	push	{r0, r1, r4, lr}
 8013f00:	2400      	movs	r4, #0
 8013f02:	9400      	str	r4, [sp, #0]
 8013f04:	f7ff ff30 	bl	8013d68 <GUI__ConvertColor2Index>
 8013f08:	b002      	add	sp, #8
 8013f0a:	bd10      	pop	{r4, pc}

08013f0c <GUI__ManageCacheEx>:
 8013f0c:	2801      	cmp	r0, #1
 8013f0e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013f10:	4606      	mov	r6, r0
 8013f12:	460c      	mov	r4, r1
 8013f14:	dc62      	bgt.n	8013fdc <GUI__ManageCacheEx+0xd0>
 8013f16:	4d33      	ldr	r5, [pc, #204]	; (8013fe4 <GUI__ManageCacheEx+0xd8>)
 8013f18:	686b      	ldr	r3, [r5, #4]
 8013f1a:	b103      	cbz	r3, 8013f1e <GUI__ManageCacheEx+0x12>
 8013f1c:	4798      	blx	r3
 8013f1e:	2c01      	cmp	r4, #1
 8013f20:	d004      	beq.n	8013f2c <GUI__ManageCacheEx+0x20>
 8013f22:	2c02      	cmp	r4, #2
 8013f24:	d020      	beq.n	8013f68 <GUI__ManageCacheEx+0x5c>
 8013f26:	2c00      	cmp	r4, #0
 8013f28:	d158      	bne.n	8013fdc <GUI__ManageCacheEx+0xd0>
 8013f2a:	e033      	b.n	8013f94 <GUI__ManageCacheEx+0x88>
 8013f2c:	eb05 0586 	add.w	r5, r5, r6, lsl #2
 8013f30:	68af      	ldr	r7, [r5, #8]
 8013f32:	b9af      	cbnz	r7, 8013f60 <GUI__ManageCacheEx+0x54>
 8013f34:	4630      	mov	r0, r6
 8013f36:	f7f7 fb45 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 8013f3a:	9001      	str	r0, [sp, #4]
 8013f3c:	2800      	cmp	r0, #0
 8013f3e:	d04d      	beq.n	8013fdc <GUI__ManageCacheEx+0xd0>
 8013f40:	68c3      	ldr	r3, [r0, #12]
 8013f42:	210d      	movs	r1, #13
 8013f44:	a801      	add	r0, sp, #4
 8013f46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013f48:	4798      	blx	r3
 8013f4a:	4603      	mov	r3, r0
 8013f4c:	2800      	cmp	r0, #0
 8013f4e:	d045      	beq.n	8013fdc <GUI__ManageCacheEx+0xd0>
 8013f50:	4621      	mov	r1, r4
 8013f52:	9801      	ldr	r0, [sp, #4]
 8013f54:	4798      	blx	r3
 8013f56:	68ab      	ldr	r3, [r5, #8]
 8013f58:	4638      	mov	r0, r7
 8013f5a:	3301      	adds	r3, #1
 8013f5c:	60ab      	str	r3, [r5, #8]
 8013f5e:	e03e      	b.n	8013fde <GUI__ManageCacheEx+0xd2>
 8013f60:	1c78      	adds	r0, r7, #1
 8013f62:	60a8      	str	r0, [r5, #8]
 8013f64:	4620      	mov	r0, r4
 8013f66:	e03a      	b.n	8013fde <GUI__ManageCacheEx+0xd2>
 8013f68:	4630      	mov	r0, r6
 8013f6a:	f7f7 fb2b 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 8013f6e:	9001      	str	r0, [sp, #4]
 8013f70:	2800      	cmp	r0, #0
 8013f72:	d033      	beq.n	8013fdc <GUI__ManageCacheEx+0xd0>
 8013f74:	68c3      	ldr	r3, [r0, #12]
 8013f76:	210d      	movs	r1, #13
 8013f78:	a801      	add	r0, sp, #4
 8013f7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013f7c:	4798      	blx	r3
 8013f7e:	4604      	mov	r4, r0
 8013f80:	2800      	cmp	r0, #0
 8013f82:	d02b      	beq.n	8013fdc <GUI__ManageCacheEx+0xd0>
 8013f84:	682b      	ldr	r3, [r5, #0]
 8013f86:	b103      	cbz	r3, 8013f8a <GUI__ManageCacheEx+0x7e>
 8013f88:	4798      	blx	r3
 8013f8a:	2102      	movs	r1, #2
 8013f8c:	9801      	ldr	r0, [sp, #4]
 8013f8e:	47a0      	blx	r4
 8013f90:	2000      	movs	r0, #0
 8013f92:	e024      	b.n	8013fde <GUI__ManageCacheEx+0xd2>
 8013f94:	00b4      	lsls	r4, r6, #2
 8013f96:	192b      	adds	r3, r5, r4
 8013f98:	689b      	ldr	r3, [r3, #8]
 8013f9a:	2b01      	cmp	r3, #1
 8013f9c:	d001      	beq.n	8013fa2 <GUI__ManageCacheEx+0x96>
 8013f9e:	2001      	movs	r0, #1
 8013fa0:	e015      	b.n	8013fce <GUI__ManageCacheEx+0xc2>
 8013fa2:	4630      	mov	r0, r6
 8013fa4:	f7f7 fb0e 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 8013fa8:	9001      	str	r0, [sp, #4]
 8013faa:	2800      	cmp	r0, #0
 8013fac:	d0f7      	beq.n	8013f9e <GUI__ManageCacheEx+0x92>
 8013fae:	68c3      	ldr	r3, [r0, #12]
 8013fb0:	210d      	movs	r1, #13
 8013fb2:	a801      	add	r0, sp, #4
 8013fb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013fb6:	4798      	blx	r3
 8013fb8:	4606      	mov	r6, r0
 8013fba:	2800      	cmp	r0, #0
 8013fbc:	d0ef      	beq.n	8013f9e <GUI__ManageCacheEx+0x92>
 8013fbe:	4b09      	ldr	r3, [pc, #36]	; (8013fe4 <GUI__ManageCacheEx+0xd8>)
 8013fc0:	681b      	ldr	r3, [r3, #0]
 8013fc2:	b103      	cbz	r3, 8013fc6 <GUI__ManageCacheEx+0xba>
 8013fc4:	4798      	blx	r3
 8013fc6:	2100      	movs	r1, #0
 8013fc8:	9801      	ldr	r0, [sp, #4]
 8013fca:	47b0      	blx	r6
 8013fcc:	2000      	movs	r0, #0
 8013fce:	4425      	add	r5, r4
 8013fd0:	68ab      	ldr	r3, [r5, #8]
 8013fd2:	2b00      	cmp	r3, #0
 8013fd4:	bf18      	it	ne
 8013fd6:	3b01      	subne	r3, #1
 8013fd8:	60ab      	str	r3, [r5, #8]
 8013fda:	e000      	b.n	8013fde <GUI__ManageCacheEx+0xd2>
 8013fdc:	2001      	movs	r0, #1
 8013fde:	b003      	add	sp, #12
 8013fe0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013fe2:	bf00      	nop
 8013fe4:	20000e48 	.word	0x20000e48

08013fe8 <GUI__ManageCache>:
 8013fe8:	4b02      	ldr	r3, [pc, #8]	; (8013ff4 <GUI__ManageCache+0xc>)
 8013fea:	4601      	mov	r1, r0
 8013fec:	681b      	ldr	r3, [r3, #0]
 8013fee:	7c58      	ldrb	r0, [r3, #17]
 8013ff0:	f7ff bf8c 	b.w	8013f0c <GUI__ManageCacheEx>
 8013ff4:	2000003c 	.word	0x2000003c

08013ff8 <LCD_SetClipRectEx>:
 8013ff8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013ffa:	4c09      	ldr	r4, [pc, #36]	; (8014020 <LCD_SetClipRectEx+0x28>)
 8013ffc:	4605      	mov	r5, r0
 8013ffe:	4669      	mov	r1, sp
 8014000:	6823      	ldr	r3, [r4, #0]
 8014002:	7c5a      	ldrb	r2, [r3, #17]
 8014004:	4b07      	ldr	r3, [pc, #28]	; (8014024 <LCD_SetClipRectEx+0x2c>)
 8014006:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801400a:	68c3      	ldr	r3, [r0, #12]
 801400c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801400e:	4798      	blx	r3
 8014010:	6820      	ldr	r0, [r4, #0]
 8014012:	466a      	mov	r2, sp
 8014014:	4629      	mov	r1, r5
 8014016:	3008      	adds	r0, #8
 8014018:	f7f8 f855 	bl	800c0c6 <GUI__IntersectRects>
 801401c:	b003      	add	sp, #12
 801401e:	bd30      	pop	{r4, r5, pc}
 8014020:	2000003c 	.word	0x2000003c
 8014024:	2002db08 	.word	0x2002db08

08014028 <GUI_MEMDEV__WriteToActiveAt>:
 8014028:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801402c:	460f      	mov	r7, r1
 801402e:	4690      	mov	r8, r2
 8014030:	4606      	mov	r6, r0
 8014032:	f7f6 fc8d 	bl	800a950 <GUI_ALLOC_LockH>
 8014036:	6803      	ldr	r3, [r0, #0]
 8014038:	ac02      	add	r4, sp, #8
 801403a:	2116      	movs	r1, #22
 801403c:	68db      	ldr	r3, [r3, #12]
 801403e:	f844 0d04 	str.w	r0, [r4, #-4]!
 8014042:	2000      	movs	r0, #0
 8014044:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014046:	4798      	blx	r3
 8014048:	4605      	mov	r5, r0
 801404a:	4620      	mov	r0, r4
 801404c:	f7f6 fc8e 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014050:	b11d      	cbz	r5, 801405a <GUI_MEMDEV__WriteToActiveAt+0x32>
 8014052:	4642      	mov	r2, r8
 8014054:	4639      	mov	r1, r7
 8014056:	4630      	mov	r0, r6
 8014058:	47a8      	blx	r5
 801405a:	b002      	add	sp, #8
 801405c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014060 <GUI_MEMDEV__CreateFixed>:
 8014060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014064:	4d46      	ldr	r5, [pc, #280]	; (8014180 <GUI_MEMDEV__CreateFixed+0x120>)
 8014066:	b087      	sub	sp, #28
 8014068:	461c      	mov	r4, r3
 801406a:	4681      	mov	r9, r0
 801406c:	682b      	ldr	r3, [r5, #0]
 801406e:	468a      	mov	sl, r1
 8014070:	4690      	mov	r8, r2
 8014072:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014074:	7c5b      	ldrb	r3, [r3, #17]
 8014076:	2200      	movs	r2, #0
 8014078:	9811      	ldr	r0, [sp, #68]	; 0x44
 801407a:	9f10      	ldr	r7, [sp, #64]	; 0x40
 801407c:	f7f7 fab4 	bl	800b5e8 <GUI_DEVICE_Create>
 8014080:	9503      	str	r5, [sp, #12]
 8014082:	4606      	mov	r6, r0
 8014084:	b380      	cbz	r0, 80140e8 <GUI_MEMDEV__CreateFixed+0x88>
 8014086:	6903      	ldr	r3, [r0, #16]
 8014088:	689b      	ldr	r3, [r3, #8]
 801408a:	4798      	blx	r3
 801408c:	f7f8 fff1 	bl	800d072 <LCD__GetBPPDevice>
 8014090:	fb00 f508 	mul.w	r5, r0, r8
 8014094:	9002      	str	r0, [sp, #8]
 8014096:	f7f6 fd9b 	bl	800abd0 <GUI_ALLOC_RequestSize>
 801409a:	f017 0701 	ands.w	r7, r7, #1
 801409e:	f105 0507 	add.w	r5, r5, #7
 80140a2:	bf08      	it	eq
 80140a4:	2304      	moveq	r3, #4
 80140a6:	ea4f 05d5 	mov.w	r5, r5, lsr #3
 80140aa:	bf04      	itt	eq
 80140ac:	fb90 f0f3 	sdiveq	r0, r0, r3
 80140b0:	eb00 0040 	addeq.w	r0, r0, r0, lsl #1
 80140b4:	2c00      	cmp	r4, #0
 80140b6:	dc44      	bgt.n	8014142 <GUI_MEMDEV__CreateFixed+0xe2>
 80140b8:	b11d      	cbz	r5, 80140c2 <GUI_MEMDEV__CreateFixed+0x62>
 80140ba:	3818      	subs	r0, #24
 80140bc:	fbb0 f0f5 	udiv	r0, r0, r5
 80140c0:	e000      	b.n	80140c4 <GUI_MEMDEV__CreateFixed+0x64>
 80140c2:	4628      	mov	r0, r5
 80140c4:	4264      	negs	r4, r4
 80140c6:	4284      	cmp	r4, r0
 80140c8:	bfa8      	it	ge
 80140ca:	4604      	movge	r4, r0
 80140cc:	b977      	cbnz	r7, 80140ec <GUI_MEMDEV__CreateFixed+0x8c>
 80140ce:	9700      	str	r7, [sp, #0]
 80140d0:	4623      	mov	r3, r4
 80140d2:	4642      	mov	r2, r8
 80140d4:	4651      	mov	r1, sl
 80140d6:	4648      	mov	r0, r9
 80140d8:	f000 fbe8 	bl	80148ac <GUI_USAGE_BM_Create>
 80140dc:	2c00      	cmp	r4, #0
 80140de:	4683      	mov	fp, r0
 80140e0:	dc39      	bgt.n	8014156 <GUI_MEMDEV__CreateFixed+0xf6>
 80140e2:	4630      	mov	r0, r6
 80140e4:	f7f7 fa7e 	bl	800b5e4 <GUI_DEVICE_Delete>
 80140e8:	2000      	movs	r0, #0
 80140ea:	e046      	b.n	801417a <GUI_MEMDEV__CreateFixed+0x11a>
 80140ec:	2c00      	cmp	r4, #0
 80140ee:	ddf8      	ble.n	80140e2 <GUI_MEMDEV__CreateFixed+0x82>
 80140f0:	fb05 f004 	mul.w	r0, r5, r4
 80140f4:	3018      	adds	r0, #24
 80140f6:	f7f6 fdf7 	bl	800ace8 <GUI_ALLOC_AllocNoInit>
 80140fa:	4607      	mov	r7, r0
 80140fc:	2800      	cmp	r0, #0
 80140fe:	d0f0      	beq.n	80140e2 <GUI_MEMDEV__CreateFixed+0x82>
 8014100:	f04f 0b00 	mov.w	fp, #0
 8014104:	4638      	mov	r0, r7
 8014106:	f7f6 fc23 	bl	800a950 <GUI_ALLOC_LockH>
 801410a:	9a02      	ldr	r2, [sp, #8]
 801410c:	4603      	mov	r3, r0
 801410e:	a806      	add	r0, sp, #24
 8014110:	f8a3 9004 	strh.w	r9, [r3, #4]
 8014114:	f840 3d04 	str.w	r3, [r0, #-4]!
 8014118:	f8a3 a006 	strh.w	sl, [r3, #6]
 801411c:	601e      	str	r6, [r3, #0]
 801411e:	f8a3 8008 	strh.w	r8, [r3, #8]
 8014122:	815c      	strh	r4, [r3, #10]
 8014124:	60dd      	str	r5, [r3, #12]
 8014126:	611a      	str	r2, [r3, #16]
 8014128:	f8c3 b014 	str.w	fp, [r3, #20]
 801412c:	f7f6 fc1e 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014130:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014132:	60b7      	str	r7, [r6, #8]
 8014134:	6133      	str	r3, [r6, #16]
 8014136:	9b03      	ldr	r3, [sp, #12]
 8014138:	681b      	ldr	r3, [r3, #0]
 801413a:	7c5b      	ldrb	r3, [r3, #17]
 801413c:	61b3      	str	r3, [r6, #24]
 801413e:	4638      	mov	r0, r7
 8014140:	e01b      	b.n	801417a <GUI_MEMDEV__CreateFixed+0x11a>
 8014142:	2f00      	cmp	r7, #0
 8014144:	d1d4      	bne.n	80140f0 <GUI_MEMDEV__CreateFixed+0x90>
 8014146:	9700      	str	r7, [sp, #0]
 8014148:	4623      	mov	r3, r4
 801414a:	4642      	mov	r2, r8
 801414c:	4651      	mov	r1, sl
 801414e:	4648      	mov	r0, r9
 8014150:	f000 fbac 	bl	80148ac <GUI_USAGE_BM_Create>
 8014154:	4683      	mov	fp, r0
 8014156:	fb05 f004 	mul.w	r0, r5, r4
 801415a:	3018      	adds	r0, #24
 801415c:	f7f6 fdd0 	bl	800ad00 <GUI_ALLOC_AllocZero>
 8014160:	4607      	mov	r7, r0
 8014162:	2800      	cmp	r0, #0
 8014164:	d1ce      	bne.n	8014104 <GUI_MEMDEV__CreateFixed+0xa4>
 8014166:	4630      	mov	r0, r6
 8014168:	f7f7 fa3c 	bl	800b5e4 <GUI_DEVICE_Delete>
 801416c:	f1bb 0f00 	cmp.w	fp, #0
 8014170:	d0ba      	beq.n	80140e8 <GUI_MEMDEV__CreateFixed+0x88>
 8014172:	4658      	mov	r0, fp
 8014174:	f7f6 fc26 	bl	800a9c4 <GUI_ALLOC_Free>
 8014178:	e7e1      	b.n	801413e <GUI_MEMDEV__CreateFixed+0xde>
 801417a:	b007      	add	sp, #28
 801417c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014180:	2000003c 	.word	0x2000003c

08014184 <GUI_MEMDEV_GetBitsPerPixel>:
 8014184:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014186:	4604      	mov	r4, r0
 8014188:	b170      	cbz	r0, 80141a8 <GUI_MEMDEV_GetBitsPerPixel+0x24>
 801418a:	f7f6 fbe1 	bl	800a950 <GUI_ALLOC_LockH>
 801418e:	6803      	ldr	r3, [r0, #0]
 8014190:	ad02      	add	r5, sp, #8
 8014192:	691b      	ldr	r3, [r3, #16]
 8014194:	f845 0d04 	str.w	r0, [r5, #-4]!
 8014198:	689b      	ldr	r3, [r3, #8]
 801419a:	4798      	blx	r3
 801419c:	f7f8 ff69 	bl	800d072 <LCD__GetBPPDevice>
 80141a0:	4604      	mov	r4, r0
 80141a2:	4628      	mov	r0, r5
 80141a4:	f7f6 fbe2 	bl	800a96c <GUI_ALLOC_UnlockH>
 80141a8:	4620      	mov	r0, r4
 80141aa:	b003      	add	sp, #12
 80141ac:	bd30      	pop	{r4, r5, pc}
	...

080141b0 <GUI_MEMDEV_Delete>:
 80141b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80141b2:	4604      	mov	r4, r0
 80141b4:	b1d0      	cbz	r0, 80141ec <GUI_MEMDEV_Delete+0x3c>
 80141b6:	4b0e      	ldr	r3, [pc, #56]	; (80141f0 <GUI_MEMDEV_Delete+0x40>)
 80141b8:	681b      	ldr	r3, [r3, #0]
 80141ba:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80141bc:	4298      	cmp	r0, r3
 80141be:	d101      	bne.n	80141c4 <GUI_MEMDEV_Delete+0x14>
 80141c0:	f7f6 ffac 	bl	800b11c <GUI_SelectLCD>
 80141c4:	4620      	mov	r0, r4
 80141c6:	f7f6 fbc3 	bl	800a950 <GUI_ALLOC_LockH>
 80141ca:	9001      	str	r0, [sp, #4]
 80141cc:	6940      	ldr	r0, [r0, #20]
 80141ce:	b108      	cbz	r0, 80141d4 <GUI_MEMDEV_Delete+0x24>
 80141d0:	f7fb fbd0 	bl	800f974 <GUI_USAGE_DecUseCnt>
 80141d4:	ad02      	add	r5, sp, #8
 80141d6:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 80141da:	6818      	ldr	r0, [r3, #0]
 80141dc:	f7f7 fa02 	bl	800b5e4 <GUI_DEVICE_Delete>
 80141e0:	4628      	mov	r0, r5
 80141e2:	f7f6 fbc3 	bl	800a96c <GUI_ALLOC_UnlockH>
 80141e6:	4620      	mov	r0, r4
 80141e8:	f7f6 fbec 	bl	800a9c4 <GUI_ALLOC_Free>
 80141ec:	b003      	add	sp, #12
 80141ee:	bd30      	pop	{r4, r5, pc}
 80141f0:	2000003c 	.word	0x2000003c

080141f4 <GUI_MEMDEV_CreateEx>:
 80141f4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80141f8:	4699      	mov	r9, r3
 80141fa:	4b19      	ldr	r3, [pc, #100]	; (8014260 <GUI_MEMDEV_CreateEx+0x6c>)
 80141fc:	4606      	mov	r6, r0
 80141fe:	460f      	mov	r7, r1
 8014200:	681b      	ldr	r3, [r3, #0]
 8014202:	4690      	mov	r8, r2
 8014204:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8014206:	7c58      	ldrb	r0, [r3, #17]
 8014208:	4b16      	ldr	r3, [pc, #88]	; (8014264 <GUI_MEMDEV_CreateEx+0x70>)
 801420a:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 801420e:	68e3      	ldr	r3, [r4, #12]
 8014210:	681b      	ldr	r3, [r3, #0]
 8014212:	2b04      	cmp	r3, #4
 8014214:	d006      	beq.n	8014224 <GUI_MEMDEV_CreateEx+0x30>
 8014216:	6824      	ldr	r4, [r4, #0]
 8014218:	2c00      	cmp	r4, #0
 801421a:	d1f8      	bne.n	801420e <GUI_MEMDEV_CreateEx+0x1a>
 801421c:	f7f7 f9d2 	bl	800b5c4 <GUI_DEVICE__GetpDriver>
 8014220:	4604      	mov	r4, r0
 8014222:	b130      	cbz	r0, 8014232 <GUI_MEMDEV_CreateEx+0x3e>
 8014224:	68e3      	ldr	r3, [r4, #12]
 8014226:	2101      	movs	r1, #1
 8014228:	4620      	mov	r0, r4
 801422a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801422c:	4798      	blx	r3
 801422e:	4682      	mov	sl, r0
 8014230:	b908      	cbnz	r0, 8014236 <GUI_MEMDEV_CreateEx+0x42>
 8014232:	2000      	movs	r0, #0
 8014234:	e010      	b.n	8014258 <GUI_MEMDEV_CreateEx+0x64>
 8014236:	6924      	ldr	r4, [r4, #16]
 8014238:	68a3      	ldr	r3, [r4, #8]
 801423a:	4798      	blx	r3
 801423c:	3001      	adds	r0, #1
 801423e:	464b      	mov	r3, r9
 8014240:	4642      	mov	r2, r8
 8014242:	bf04      	itt	eq
 8014244:	f045 0501 	orreq.w	r5, r5, #1
 8014248:	4c07      	ldreq	r4, [pc, #28]	; (8014268 <GUI_MEMDEV_CreateEx+0x74>)
 801424a:	4639      	mov	r1, r7
 801424c:	4630      	mov	r0, r6
 801424e:	9402      	str	r4, [sp, #8]
 8014250:	e88d 0420 	stmia.w	sp, {r5, sl}
 8014254:	f7ff ff04 	bl	8014060 <GUI_MEMDEV__CreateFixed>
 8014258:	b004      	add	sp, #16
 801425a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801425e:	bf00      	nop
 8014260:	2000003c 	.word	0x2000003c
 8014264:	2002db08 	.word	0x2002db08
 8014268:	0801895c 	.word	0x0801895c

0801426c <GUI_MEMDEV_Select>:
 801426c:	4b11      	ldr	r3, [pc, #68]	; (80142b4 <GUI_MEMDEV_Select+0x48>)
 801426e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014270:	681a      	ldr	r2, [r3, #0]
 8014272:	4606      	mov	r6, r0
 8014274:	461c      	mov	r4, r3
 8014276:	6e17      	ldr	r7, [r2, #96]	; 0x60
 8014278:	b910      	cbnz	r0, 8014280 <GUI_MEMDEV_Select+0x14>
 801427a:	f7f6 ff4f 	bl	800b11c <GUI_SelectLCD>
 801427e:	e016      	b.n	80142ae <GUI_MEMDEV_Select+0x42>
 8014280:	b10f      	cbz	r7, 8014286 <GUI_MEMDEV_Select+0x1a>
 8014282:	f7f6 ff4b 	bl	800b11c <GUI_SelectLCD>
 8014286:	f7fd f88d 	bl	80113a4 <WM_Deactivate>
 801428a:	4630      	mov	r0, r6
 801428c:	f7f6 fb60 	bl	800a950 <GUI_ALLOC_LockH>
 8014290:	ad02      	add	r5, sp, #8
 8014292:	6823      	ldr	r3, [r4, #0]
 8014294:	f845 0d04 	str.w	r0, [r5, #-4]!
 8014298:	661e      	str	r6, [r3, #96]	; 0x60
 801429a:	6800      	ldr	r0, [r0, #0]
 801429c:	f7f7 f9e2 	bl	800b664 <GUI_DEVICE_Link>
 80142a0:	4628      	mov	r0, r5
 80142a2:	f7f6 fb63 	bl	800a96c <GUI_ALLOC_UnlockH>
 80142a6:	f7f9 f909 	bl	800d4bc <LCD_UpdateColorIndices>
 80142aa:	f7f8 fc07 	bl	800cabc <LCD_SetClipRectMax>
 80142ae:	4638      	mov	r0, r7
 80142b0:	b003      	add	sp, #12
 80142b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80142b4:	2000003c 	.word	0x2000003c

080142b8 <GUI_MEMDEV_CopyToLCDAt>:
 80142b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80142bc:	460c      	mov	r4, r1
 80142be:	b085      	sub	sp, #20
 80142c0:	4615      	mov	r5, r2
 80142c2:	4606      	mov	r6, r0
 80142c4:	2800      	cmp	r0, #0
 80142c6:	d043      	beq.n	8014350 <GUI_MEMDEV_CopyToLCDAt+0x98>
 80142c8:	2000      	movs	r0, #0
 80142ca:	f7f6 ff34 	bl	800b136 <GUI_SetDrawMode>
 80142ce:	4b22      	ldr	r3, [pc, #136]	; (8014358 <GUI_MEMDEV_CopyToLCDAt+0xa0>)
 80142d0:	4607      	mov	r7, r0
 80142d2:	4630      	mov	r0, r6
 80142d4:	681b      	ldr	r3, [r3, #0]
 80142d6:	f8d3 8060 	ldr.w	r8, [r3, #96]	; 0x60
 80142da:	f7f6 fb39 	bl	800a950 <GUI_ALLOC_LockH>
 80142de:	6803      	ldr	r3, [r0, #0]
 80142e0:	9001      	str	r0, [sp, #4]
 80142e2:	6998      	ldr	r0, [r3, #24]
 80142e4:	f7f7 fbb2 	bl	800ba4c <GUI_SelectLayer>
 80142e8:	9a01      	ldr	r2, [sp, #4]
 80142ea:	4b1c      	ldr	r3, [pc, #112]	; (801435c <GUI_MEMDEV_CopyToLCDAt+0xa4>)
 80142ec:	4681      	mov	r9, r0
 80142ee:	429c      	cmp	r4, r3
 80142f0:	8913      	ldrh	r3, [r2, #8]
 80142f2:	bf08      	it	eq
 80142f4:	f9b2 4004 	ldrsheq.w	r4, [r2, #4]
 80142f8:	f103 33ff 	add.w	r3, r3, #4294967295
 80142fc:	bf08      	it	eq
 80142fe:	f9b2 5006 	ldrsheq.w	r5, [r2, #6]
 8014302:	4423      	add	r3, r4
 8014304:	f8ad 4008 	strh.w	r4, [sp, #8]
 8014308:	f8ad 500a 	strh.w	r5, [sp, #10]
 801430c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8014310:	8953      	ldrh	r3, [r2, #10]
 8014312:	3b01      	subs	r3, #1
 8014314:	442b      	add	r3, r5
 8014316:	f8ad 300e 	strh.w	r3, [sp, #14]
 801431a:	f7fd f83b 	bl	8011394 <WM_Activate>
 801431e:	a801      	add	r0, sp, #4
 8014320:	f7f6 fb24 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014324:	a802      	add	r0, sp, #8
 8014326:	f7fc fe85 	bl	8011034 <WM__InitIVRSearch>
 801432a:	b948      	cbnz	r0, 8014340 <GUI_MEMDEV_CopyToLCDAt+0x88>
 801432c:	4648      	mov	r0, r9
 801432e:	f7f7 fb8d 	bl	800ba4c <GUI_SelectLayer>
 8014332:	4640      	mov	r0, r8
 8014334:	f7ff ff9a 	bl	801426c <GUI_MEMDEV_Select>
 8014338:	4638      	mov	r0, r7
 801433a:	f7f6 fefc 	bl	800b136 <GUI_SetDrawMode>
 801433e:	e007      	b.n	8014350 <GUI_MEMDEV_CopyToLCDAt+0x98>
 8014340:	462a      	mov	r2, r5
 8014342:	4621      	mov	r1, r4
 8014344:	4630      	mov	r0, r6
 8014346:	f7fb fb7d 	bl	800fa44 <GUI_MEMDEV__WriteToActiveOpaque>
 801434a:	f7fc fdb1 	bl	8010eb0 <WM__GetNextIVR>
 801434e:	e7ec      	b.n	801432a <GUI_MEMDEV_CopyToLCDAt+0x72>
 8014350:	b005      	add	sp, #20
 8014352:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014356:	bf00      	nop
 8014358:	2000003c 	.word	0x2000003c
 801435c:	fffff001 	.word	0xfffff001

08014360 <GUI_MEMDEV_CopyToLCD>:
 8014360:	4a01      	ldr	r2, [pc, #4]	; (8014368 <GUI_MEMDEV_CopyToLCD+0x8>)
 8014362:	4611      	mov	r1, r2
 8014364:	f7ff bfa8 	b.w	80142b8 <GUI_MEMDEV_CopyToLCDAt>
 8014368:	fffff001 	.word	0xfffff001

0801436c <GUI_MEMDEV_Draw>:
 801436c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014370:	4698      	mov	r8, r3
 8014372:	b087      	sub	sp, #28
 8014374:	4b51      	ldr	r3, [pc, #324]	; (80144bc <GUI_MEMDEV_Draw+0x150>)
 8014376:	4606      	mov	r6, r0
 8014378:	9203      	str	r2, [sp, #12]
 801437a:	681a      	ldr	r2, [r3, #0]
 801437c:	469b      	mov	fp, r3
 801437e:	9102      	str	r1, [sp, #8]
 8014380:	7c54      	ldrb	r4, [r2, #17]
 8014382:	4a4f      	ldr	r2, [pc, #316]	; (80144c0 <GUI_MEMDEV_Draw+0x154>)
 8014384:	4620      	mov	r0, r4
 8014386:	5712      	ldrsb	r2, [r2, r4]
 8014388:	2a01      	cmp	r2, #1
 801438a:	dd06      	ble.n	801439a <GUI_MEMDEV_Draw+0x2e>
 801438c:	f7f8 fdaa 	bl	800cee4 <LCD_GetXSizeEx>
 8014390:	4681      	mov	r9, r0
 8014392:	4620      	mov	r0, r4
 8014394:	f7f8 fda9 	bl	800ceea <LCD_GetYSizeEx>
 8014398:	e005      	b.n	80143a6 <GUI_MEMDEV_Draw+0x3a>
 801439a:	f7f8 fda9 	bl	800cef0 <LCD_GetVXSizeEx>
 801439e:	4681      	mov	r9, r0
 80143a0:	4620      	mov	r0, r4
 80143a2:	f7f8 fda8 	bl	800cef6 <LCD_GetVYSizeEx>
 80143a6:	4604      	mov	r4, r0
 80143a8:	b336      	cbz	r6, 80143f8 <GUI_MEMDEV_Draw+0x8c>
 80143aa:	a905      	add	r1, sp, #20
 80143ac:	a804      	add	r0, sp, #16
 80143ae:	f7f6 fda3 	bl	800aef8 <GUI_GetOrg>
 80143b2:	9a04      	ldr	r2, [sp, #16]
 80143b4:	9b05      	ldr	r3, [sp, #20]
 80143b6:	4491      	add	r9, r2
 80143b8:	f9b6 7000 	ldrsh.w	r7, [r6]
 80143bc:	441c      	add	r4, r3
 80143be:	f9b6 5002 	ldrsh.w	r5, [r6, #2]
 80143c2:	f109 32ff 	add.w	r2, r9, #4294967295
 80143c6:	ea27 77e7 	bic.w	r7, r7, r7, asr #31
 80143ca:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80143ce:	f9b6 9004 	ldrsh.w	r9, [r6, #4]
 80143d2:	3c01      	subs	r4, #1
 80143d4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80143d8:	454a      	cmp	r2, r9
 80143da:	bfd4      	ite	le
 80143dc:	ebc7 0902 	rsble	r9, r7, r2
 80143e0:	ebc7 0909 	rsbgt	r9, r7, r9
 80143e4:	429c      	cmp	r4, r3
 80143e6:	bfd4      	ite	le
 80143e8:	ebc5 0404 	rsble	r4, r5, r4
 80143ec:	ebc5 0403 	rsbgt	r4, r5, r3
 80143f0:	f109 0901 	add.w	r9, r9, #1
 80143f4:	3401      	adds	r4, #1
 80143f6:	e001      	b.n	80143fc <GUI_MEMDEV_Draw+0x90>
 80143f8:	4635      	mov	r5, r6
 80143fa:	4637      	mov	r7, r6
 80143fc:	f1b8 0f00 	cmp.w	r8, #0
 8014400:	d101      	bne.n	8014406 <GUI_MEMDEV_Draw+0x9a>
 8014402:	f1c4 0800 	rsb	r8, r4, #0
 8014406:	f1b9 0f00 	cmp.w	r9, #0
 801440a:	dd53      	ble.n	80144b4 <GUI_MEMDEV_Draw+0x148>
 801440c:	2c00      	cmp	r4, #0
 801440e:	dd51      	ble.n	80144b4 <GUI_MEMDEV_Draw+0x148>
 8014410:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014412:	464a      	mov	r2, r9
 8014414:	4629      	mov	r1, r5
 8014416:	4638      	mov	r0, r7
 8014418:	9300      	str	r3, [sp, #0]
 801441a:	4643      	mov	r3, r8
 801441c:	f7ff feea 	bl	80141f4 <GUI_MEMDEV_CreateEx>
 8014420:	4606      	mov	r6, r0
 8014422:	b920      	cbnz	r0, 801442e <GUI_MEMDEV_Draw+0xc2>
 8014424:	9803      	ldr	r0, [sp, #12]
 8014426:	9b02      	ldr	r3, [sp, #8]
 8014428:	4798      	blx	r3
 801442a:	2001      	movs	r0, #1
 801442c:	e043      	b.n	80144b6 <GUI_MEMDEV_Draw+0x14a>
 801442e:	f000 f87b 	bl	8014528 <GUI_MEMDEV_GetYSize>
 8014432:	4284      	cmp	r4, r0
 8014434:	4680      	mov	r8, r0
 8014436:	d006      	beq.n	8014446 <GUI_MEMDEV_Draw+0xda>
 8014438:	f8db 3000 	ldr.w	r3, [fp]
 801443c:	6c98      	ldr	r0, [r3, #72]	; 0x48
 801443e:	b110      	cbz	r0, 8014446 <GUI_MEMDEV_Draw+0xda>
 8014440:	2132      	movs	r1, #50	; 0x32
 8014442:	f7fd ffc2 	bl	80123ca <WM__SendMessageNoPara>
 8014446:	46a2      	mov	sl, r4
 8014448:	f04f 0900 	mov.w	r9, #0
 801444c:	4630      	mov	r0, r6
 801444e:	f7ff ff0d 	bl	801426c <GUI_MEMDEV_Select>
 8014452:	45d0      	cmp	r8, sl
 8014454:	dd03      	ble.n	801445e <GUI_MEMDEV_Draw+0xf2>
 8014456:	4651      	mov	r1, sl
 8014458:	4630      	mov	r0, r6
 801445a:	f000 f87d 	bl	8014558 <GUI_MEMDEV_ReduceYSize>
 801445e:	f1b9 0f00 	cmp.w	r9, #0
 8014462:	d008      	beq.n	8014476 <GUI_MEMDEV_Draw+0x10a>
 8014464:	4630      	mov	r0, r6
 8014466:	eb09 0205 	add.w	r2, r9, r5
 801446a:	4639      	mov	r1, r7
 801446c:	f000 f88a 	bl	8014584 <GUI_MEMDEV_SetOrg>
 8014470:	4630      	mov	r0, r6
 8014472:	f000 f829 	bl	80144c8 <GUI_MEMDEV_Clear>
 8014476:	9b02      	ldr	r3, [sp, #8]
 8014478:	9803      	ldr	r0, [sp, #12]
 801447a:	4798      	blx	r3
 801447c:	4b11      	ldr	r3, [pc, #68]	; (80144c4 <GUI_MEMDEV_Draw+0x158>)
 801447e:	681b      	ldr	r3, [r3, #0]
 8014480:	b10b      	cbz	r3, 8014486 <GUI_MEMDEV_Draw+0x11a>
 8014482:	20ff      	movs	r0, #255	; 0xff
 8014484:	4798      	blx	r3
 8014486:	44c1      	add	r9, r8
 8014488:	4630      	mov	r0, r6
 801448a:	f7ff ff69 	bl	8014360 <GUI_MEMDEV_CopyToLCD>
 801448e:	ebc8 0a0a 	rsb	sl, r8, sl
 8014492:	454c      	cmp	r4, r9
 8014494:	dcdd      	bgt.n	8014452 <GUI_MEMDEV_Draw+0xe6>
 8014496:	4630      	mov	r0, r6
 8014498:	f7ff fe8a 	bl	80141b0 <GUI_MEMDEV_Delete>
 801449c:	2000      	movs	r0, #0
 801449e:	f7ff fee5 	bl	801426c <GUI_MEMDEV_Select>
 80144a2:	4544      	cmp	r4, r8
 80144a4:	d006      	beq.n	80144b4 <GUI_MEMDEV_Draw+0x148>
 80144a6:	f8db 3000 	ldr.w	r3, [fp]
 80144aa:	6c98      	ldr	r0, [r3, #72]	; 0x48
 80144ac:	b110      	cbz	r0, 80144b4 <GUI_MEMDEV_Draw+0x148>
 80144ae:	2133      	movs	r1, #51	; 0x33
 80144b0:	f7fd ff8b 	bl	80123ca <WM__SendMessageNoPara>
 80144b4:	2000      	movs	r0, #0
 80144b6:	b007      	add	sp, #28
 80144b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144bc:	2000003c 	.word	0x2000003c
 80144c0:	2002dab8 	.word	0x2002dab8
 80144c4:	20000e60 	.word	0x20000e60

080144c8 <GUI_MEMDEV_Clear>:
 80144c8:	b513      	push	{r0, r1, r4, lr}
 80144ca:	b918      	cbnz	r0, 80144d4 <GUI_MEMDEV_Clear+0xc>
 80144cc:	4b0d      	ldr	r3, [pc, #52]	; (8014504 <GUI_MEMDEV_Clear+0x3c>)
 80144ce:	681b      	ldr	r3, [r3, #0]
 80144d0:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80144d2:	b1a8      	cbz	r0, 8014500 <GUI_MEMDEV_Clear+0x38>
 80144d4:	f7f6 fa3c 	bl	800a950 <GUI_ALLOC_LockH>
 80144d8:	ab02      	add	r3, sp, #8
 80144da:	6944      	ldr	r4, [r0, #20]
 80144dc:	f843 0d08 	str.w	r0, [r3, #-8]!
 80144e0:	4618      	mov	r0, r3
 80144e2:	f7f6 fa43 	bl	800a96c <GUI_ALLOC_UnlockH>
 80144e6:	b15c      	cbz	r4, 8014500 <GUI_MEMDEV_Clear+0x38>
 80144e8:	4620      	mov	r0, r4
 80144ea:	ac02      	add	r4, sp, #8
 80144ec:	f7f6 fa30 	bl	800a950 <GUI_ALLOC_LockH>
 80144f0:	6883      	ldr	r3, [r0, #8]
 80144f2:	f844 0d04 	str.w	r0, [r4, #-4]!
 80144f6:	689b      	ldr	r3, [r3, #8]
 80144f8:	4798      	blx	r3
 80144fa:	4620      	mov	r0, r4
 80144fc:	f7f6 fa36 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014500:	b002      	add	sp, #8
 8014502:	bd10      	pop	{r4, pc}
 8014504:	2000003c 	.word	0x2000003c

08014508 <GUI_MEMDEV_GetDataPtr>:
 8014508:	b513      	push	{r0, r1, r4, lr}
 801450a:	b158      	cbz	r0, 8014524 <GUI_MEMDEV_GetDataPtr+0x1c>
 801450c:	f7f6 fa20 	bl	800a950 <GUI_ALLOC_LockH>
 8014510:	ab02      	add	r3, sp, #8
 8014512:	f100 0418 	add.w	r4, r0, #24
 8014516:	f843 0d04 	str.w	r0, [r3, #-4]!
 801451a:	4618      	mov	r0, r3
 801451c:	f7f6 fa26 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014520:	4620      	mov	r0, r4
 8014522:	e7ff      	b.n	8014524 <GUI_MEMDEV_GetDataPtr+0x1c>
 8014524:	b002      	add	sp, #8
 8014526:	bd10      	pop	{r4, pc}

08014528 <GUI_MEMDEV_GetYSize>:
 8014528:	b513      	push	{r0, r1, r4, lr}
 801452a:	b918      	cbnz	r0, 8014534 <GUI_MEMDEV_GetYSize+0xc>
 801452c:	4b09      	ldr	r3, [pc, #36]	; (8014554 <GUI_MEMDEV_GetYSize+0x2c>)
 801452e:	681b      	ldr	r3, [r3, #0]
 8014530:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014532:	b150      	cbz	r0, 801454a <GUI_MEMDEV_GetYSize+0x22>
 8014534:	f7f6 fa0c 	bl	800a950 <GUI_ALLOC_LockH>
 8014538:	ab02      	add	r3, sp, #8
 801453a:	f9b0 400a 	ldrsh.w	r4, [r0, #10]
 801453e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8014542:	4618      	mov	r0, r3
 8014544:	f7f6 fa12 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014548:	e000      	b.n	801454c <GUI_MEMDEV_GetYSize+0x24>
 801454a:	4604      	mov	r4, r0
 801454c:	4620      	mov	r0, r4
 801454e:	b002      	add	sp, #8
 8014550:	bd10      	pop	{r4, pc}
 8014552:	bf00      	nop
 8014554:	2000003c 	.word	0x2000003c

08014558 <GUI_MEMDEV_ReduceYSize>:
 8014558:	b513      	push	{r0, r1, r4, lr}
 801455a:	460c      	mov	r4, r1
 801455c:	b918      	cbnz	r0, 8014566 <GUI_MEMDEV_ReduceYSize+0xe>
 801455e:	4b08      	ldr	r3, [pc, #32]	; (8014580 <GUI_MEMDEV_ReduceYSize+0x28>)
 8014560:	681b      	ldr	r3, [r3, #0]
 8014562:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014564:	b150      	cbz	r0, 801457c <GUI_MEMDEV_ReduceYSize+0x24>
 8014566:	f7f6 f9f3 	bl	800a950 <GUI_ALLOC_LockH>
 801456a:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801456e:	9001      	str	r0, [sp, #4]
 8014570:	42a3      	cmp	r3, r4
 8014572:	bfc8      	it	gt
 8014574:	8144      	strhgt	r4, [r0, #10]
 8014576:	a801      	add	r0, sp, #4
 8014578:	f7f6 f9f8 	bl	800a96c <GUI_ALLOC_UnlockH>
 801457c:	b002      	add	sp, #8
 801457e:	bd10      	pop	{r4, pc}
 8014580:	2000003c 	.word	0x2000003c

08014584 <GUI_MEMDEV_SetOrg>:
 8014584:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014586:	460d      	mov	r5, r1
 8014588:	4614      	mov	r4, r2
 801458a:	b918      	cbnz	r0, 8014594 <GUI_MEMDEV_SetOrg+0x10>
 801458c:	4b12      	ldr	r3, [pc, #72]	; (80145d8 <GUI_MEMDEV_SetOrg+0x54>)
 801458e:	681b      	ldr	r3, [r3, #0]
 8014590:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014592:	b1f8      	cbz	r0, 80145d4 <GUI_MEMDEV_SetOrg+0x50>
 8014594:	b224      	sxth	r4, r4
 8014596:	b22d      	sxth	r5, r5
 8014598:	f7f6 f9da 	bl	800a950 <GUI_ALLOC_LockH>
 801459c:	80c4      	strh	r4, [r0, #6]
 801459e:	8085      	strh	r5, [r0, #4]
 80145a0:	9000      	str	r0, [sp, #0]
 80145a2:	f7f8 fa8b 	bl	800cabc <LCD_SetClipRectMax>
 80145a6:	9b00      	ldr	r3, [sp, #0]
 80145a8:	6958      	ldr	r0, [r3, #20]
 80145aa:	b180      	cbz	r0, 80145ce <GUI_MEMDEV_SetOrg+0x4a>
 80145ac:	f7f6 f9d0 	bl	800a950 <GUI_ALLOC_LockH>
 80145b0:	9b00      	ldr	r3, [sp, #0]
 80145b2:	9001      	str	r0, [sp, #4]
 80145b4:	f9b3 2008 	ldrsh.w	r2, [r3, #8]
 80145b8:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 80145bc:	8082      	strh	r2, [r0, #4]
 80145be:	80c3      	strh	r3, [r0, #6]
 80145c0:	b112      	cbz	r2, 80145c8 <GUI_MEMDEV_SetOrg+0x44>
 80145c2:	b10b      	cbz	r3, 80145c8 <GUI_MEMDEV_SetOrg+0x44>
 80145c4:	8005      	strh	r5, [r0, #0]
 80145c6:	8044      	strh	r4, [r0, #2]
 80145c8:	a801      	add	r0, sp, #4
 80145ca:	f7f6 f9cf 	bl	800a96c <GUI_ALLOC_UnlockH>
 80145ce:	4668      	mov	r0, sp
 80145d0:	f7f6 f9cc 	bl	800a96c <GUI_ALLOC_UnlockH>
 80145d4:	b003      	add	sp, #12
 80145d6:	bd30      	pop	{r4, r5, pc}
 80145d8:	2000003c 	.word	0x2000003c

080145dc <_CreateStaticDevice>:
 80145dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145e0:	b087      	sub	sp, #28
 80145e2:	4607      	mov	r7, r0
 80145e4:	f7f6 f9b4 	bl	800a950 <GUI_ALLOC_LockH>
 80145e8:	f9b0 9000 	ldrsh.w	r9, [r0]
 80145ec:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 80145f0:	f10d 0818 	add.w	r8, sp, #24
 80145f4:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 80145f8:	ebc9 0606 	rsb	r6, r9, r6
 80145fc:	f9b0 b006 	ldrsh.w	fp, [r0, #6]
 8014600:	f848 0d04 	str.w	r0, [r8, #-4]!
 8014604:	3601      	adds	r6, #1
 8014606:	f8d0 a024 	ldr.w	sl, [r0, #36]	; 0x24
 801460a:	4640      	mov	r0, r8
 801460c:	ebc5 040b 	rsb	r4, r5, fp
 8014610:	f7f6 f9ac 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014614:	2e00      	cmp	r6, #0
 8014616:	f104 0401 	add.w	r4, r4, #1
 801461a:	dd4c      	ble.n	80146b6 <_CreateStaticDevice+0xda>
 801461c:	2c00      	cmp	r4, #0
 801461e:	dd4a      	ble.n	80146b6 <_CreateStaticDevice+0xda>
 8014620:	f1ba 0f00 	cmp.w	sl, #0
 8014624:	d049      	beq.n	80146ba <_CreateStaticDevice+0xde>
 8014626:	4650      	mov	r0, sl
 8014628:	f7f6 f992 	bl	800a950 <GUI_ALLOC_LockH>
 801462c:	ab06      	add	r3, sp, #24
 801462e:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8014632:	f843 0d08 	str.w	r0, [r3, #-8]!
 8014636:	f9b0 4006 	ldrsh.w	r4, [r0, #6]
 801463a:	4618      	mov	r0, r3
 801463c:	f7f6 f996 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014640:	454e      	cmp	r6, r9
 8014642:	d101      	bne.n	8014648 <_CreateStaticDevice+0x6c>
 8014644:	42ac      	cmp	r4, r5
 8014646:	d031      	beq.n	80146ac <_CreateStaticDevice+0xd0>
 8014648:	462a      	mov	r2, r5
 801464a:	4649      	mov	r1, r9
 801464c:	4650      	mov	r0, sl
 801464e:	f7ff ff99 	bl	8014584 <GUI_MEMDEV_SetOrg>
 8014652:	e02b      	b.n	80146ac <_CreateStaticDevice+0xd0>
 8014654:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8014656:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 801465a:	6283      	str	r3, [r0, #40]	; 0x28
 801465c:	4640      	mov	r0, r8
 801465e:	f7f6 f985 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014662:	4628      	mov	r0, r5
 8014664:	f7ff fe02 	bl	801426c <GUI_MEMDEV_Select>
 8014668:	4680      	mov	r8, r0
 801466a:	4650      	mov	r0, sl
 801466c:	f000 fa52 	bl	8014b14 <GUI__AlphaPreserveTrans>
 8014670:	4628      	mov	r0, r5
 8014672:	f7ff ff49 	bl	8014508 <GUI_MEMDEV_GetDataPtr>
 8014676:	fb04 f206 	mul.w	r2, r4, r6
 801467a:	4b2b      	ldr	r3, [pc, #172]	; (8014728 <_CreateStaticDevice+0x14c>)
 801467c:	492b      	ldr	r1, [pc, #172]	; (801472c <_CreateStaticDevice+0x150>)
 801467e:	0092      	lsls	r2, r2, #2
 8014680:	681b      	ldr	r3, [r3, #0]
 8014682:	7809      	ldrb	r1, [r1, #0]
 8014684:	4c2a      	ldr	r4, [pc, #168]	; (8014730 <_CreateStaticDevice+0x154>)
 8014686:	4798      	blx	r3
 8014688:	4d2a      	ldr	r5, [pc, #168]	; (8014734 <_CreateStaticDevice+0x158>)
 801468a:	4638      	mov	r0, r7
 801468c:	6826      	ldr	r6, [r4, #0]
 801468e:	602f      	str	r7, [r5, #0]
 8014690:	f7fd f826 	bl	80116e0 <WM_GetWindowOrgX>
 8014694:	6020      	str	r0, [r4, #0]
 8014696:	4638      	mov	r0, r7
 8014698:	f7fc fd56 	bl	8011148 <WM__Paint1>
 801469c:	2000      	movs	r0, #0
 801469e:	6026      	str	r6, [r4, #0]
 80146a0:	6028      	str	r0, [r5, #0]
 80146a2:	f000 fa37 	bl	8014b14 <GUI__AlphaPreserveTrans>
 80146a6:	4640      	mov	r0, r8
 80146a8:	f7ff fde0 	bl	801426c <GUI_MEMDEV_Select>
 80146ac:	4638      	mov	r0, r7
 80146ae:	f7f6 f945 	bl	800a93c <GUI_ALLOC_h2p>
 80146b2:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80146b4:	e035      	b.n	8014722 <_CreateStaticDevice+0x146>
 80146b6:	2000      	movs	r0, #0
 80146b8:	e033      	b.n	8014722 <_CreateStaticDevice+0x146>
 80146ba:	f7fc ff95 	bl	80115e8 <WM_GetDesktopWindow>
 80146be:	4287      	cmp	r7, r0
 80146c0:	d112      	bne.n	80146e8 <_CreateStaticDevice+0x10c>
 80146c2:	f7f8 fc2b 	bl	800cf1c <LCD_GetXSize>
 80146c6:	4682      	mov	sl, r0
 80146c8:	f7f8 fc30 	bl	800cf2c <LCD_GetYSize>
 80146cc:	4556      	cmp	r6, sl
 80146ce:	dc02      	bgt.n	80146d6 <_CreateStaticDevice+0xfa>
 80146d0:	4284      	cmp	r4, r0
 80146d2:	dd09      	ble.n	80146e8 <_CreateStaticDevice+0x10c>
 80146d4:	e000      	b.n	80146d8 <_CreateStaticDevice+0xfc>
 80146d6:	4656      	mov	r6, sl
 80146d8:	4284      	cmp	r4, r0
 80146da:	4631      	mov	r1, r6
 80146dc:	bfa8      	it	ge
 80146de:	4604      	movge	r4, r0
 80146e0:	4638      	mov	r0, r7
 80146e2:	4622      	mov	r2, r4
 80146e4:	f7fd f9a4 	bl	8011a30 <WM_SetSize>
 80146e8:	4b13      	ldr	r3, [pc, #76]	; (8014738 <_CreateStaticDevice+0x15c>)
 80146ea:	f04f 0a01 	mov.w	sl, #1
 80146ee:	4629      	mov	r1, r5
 80146f0:	4632      	mov	r2, r6
 80146f2:	9302      	str	r3, [sp, #8]
 80146f4:	4648      	mov	r0, r9
 80146f6:	4b11      	ldr	r3, [pc, #68]	; (801473c <_CreateStaticDevice+0x160>)
 80146f8:	f8cd a000 	str.w	sl, [sp]
 80146fc:	9301      	str	r3, [sp, #4]
 80146fe:	4623      	mov	r3, r4
 8014700:	f7ff fcae 	bl	8014060 <GUI_MEMDEV__CreateFixed>
 8014704:	4605      	mov	r5, r0
 8014706:	4638      	mov	r0, r7
 8014708:	f7f6 f922 	bl	800a950 <GUI_ALLOC_LockH>
 801470c:	9005      	str	r0, [sp, #20]
 801470e:	6245      	str	r5, [r0, #36]	; 0x24
 8014710:	2d00      	cmp	r5, #0
 8014712:	d19f      	bne.n	8014654 <_CreateStaticDevice+0x78>
 8014714:	4640      	mov	r0, r8
 8014716:	f7f6 f929 	bl	800a96c <GUI_ALLOC_UnlockH>
 801471a:	4638      	mov	r0, r7
 801471c:	f7fc fd14 	bl	8011148 <WM__Paint1>
 8014720:	4628      	mov	r0, r5
 8014722:	b007      	add	sp, #28
 8014724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014728:	20000054 	.word	0x20000054
 801472c:	20000e64 	.word	0x20000e64
 8014730:	2002dac8 	.word	0x2002dac8
 8014734:	2002db78 	.word	0x2002db78
 8014738:	0801895c 	.word	0x0801895c
 801473c:	0801e6ec 	.word	0x0801e6ec

08014740 <GUI_MEMDEV_Paint1Static>:
 8014740:	b538      	push	{r3, r4, r5, lr}
 8014742:	4605      	mov	r5, r0
 8014744:	2405      	movs	r4, #5
 8014746:	4628      	mov	r0, r5
 8014748:	f7ff ff48 	bl	80145dc <_CreateStaticDevice>
 801474c:	b910      	cbnz	r0, 8014754 <GUI_MEMDEV_Paint1Static+0x14>
 801474e:	3c01      	subs	r4, #1
 8014750:	d1f9      	bne.n	8014746 <GUI_MEMDEV_Paint1Static+0x6>
 8014752:	bd38      	pop	{r3, r4, r5, pc}
 8014754:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8014758:	f000 b904 	b.w	8014964 <GUI_MEMDEV_Write>

0801475c <GUI_USAGE_BM_AddPixel>:
 801475c:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014760:	1ac9      	subs	r1, r1, r3
 8014762:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8014766:	1ad2      	subs	r2, r2, r3
 8014768:	6903      	ldr	r3, [r0, #16]
 801476a:	435a      	muls	r2, r3
 801476c:	2380      	movs	r3, #128	; 0x80
 801476e:	3214      	adds	r2, #20
 8014770:	eb02 02e1 	add.w	r2, r2, r1, asr #3
 8014774:	f001 0107 	and.w	r1, r1, #7
 8014778:	fa43 f101 	asr.w	r1, r3, r1
 801477c:	5c83      	ldrb	r3, [r0, r2]
 801477e:	4319      	orrs	r1, r3
 8014780:	5481      	strb	r1, [r0, r2]
 8014782:	4770      	bx	lr

08014784 <GUI_USAGE_BM_GetNextDirty>:
 8014784:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014788:	4293      	cmp	r3, r2
 801478a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801478c:	dd44      	ble.n	8014818 <GUI_USAGE_BM_GetNextDirty+0x94>
 801478e:	680c      	ldr	r4, [r1, #0]
 8014790:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
 8014794:	42b4      	cmp	r4, r6
 8014796:	da3f      	bge.n	8014818 <GUI_USAGE_BM_GetNextDirty+0x94>
 8014798:	10e3      	asrs	r3, r4, #3
 801479a:	6907      	ldr	r7, [r0, #16]
 801479c:	461d      	mov	r5, r3
 801479e:	fb07 3202 	mla	r2, r7, r2, r3
 80147a2:	1e73      	subs	r3, r6, #1
 80147a4:	ebc5 03e3 	rsb	r3, r5, r3, asr #3
 80147a8:	f102 0515 	add.w	r5, r2, #21
 80147ac:	3214      	adds	r2, #20
 80147ae:	4405      	add	r5, r0
 80147b0:	5c82      	ldrb	r2, [r0, r2]
 80147b2:	f004 0007 	and.w	r0, r4, #7
 80147b6:	4082      	lsls	r2, r0
 80147b8:	b2d2      	uxtb	r2, r2
 80147ba:	b93a      	cbnz	r2, 80147cc <GUI_USAGE_BM_GetNextDirty+0x48>
 80147bc:	b373      	cbz	r3, 801481c <GUI_USAGE_BM_GetNextDirty+0x98>
 80147be:	3408      	adds	r4, #8
 80147c0:	f815 2b01 	ldrb.w	r2, [r5], #1
 80147c4:	3b01      	subs	r3, #1
 80147c6:	f024 0407 	bic.w	r4, r4, #7
 80147ca:	e7f6      	b.n	80147ba <GUI_USAGE_BM_GetNextDirty+0x36>
 80147cc:	0617      	lsls	r7, r2, #24
 80147ce:	d403      	bmi.n	80147d8 <GUI_USAGE_BM_GetNextDirty+0x54>
 80147d0:	0052      	lsls	r2, r2, #1
 80147d2:	3401      	adds	r4, #1
 80147d4:	b2d2      	uxtb	r2, r2
 80147d6:	e7f9      	b.n	80147cc <GUI_USAGE_BM_GetNextDirty+0x48>
 80147d8:	2aff      	cmp	r2, #255	; 0xff
 80147da:	d006      	beq.n	80147ea <GUI_USAGE_BM_GetNextDirty+0x66>
 80147dc:	4620      	mov	r0, r4
 80147de:	0656      	lsls	r6, r2, #25
 80147e0:	d504      	bpl.n	80147ec <GUI_USAGE_BM_GetNextDirty+0x68>
 80147e2:	0052      	lsls	r2, r2, #1
 80147e4:	3001      	adds	r0, #1
 80147e6:	b2d2      	uxtb	r2, r2
 80147e8:	e7f9      	b.n	80147de <GUI_USAGE_BM_GetNextDirty+0x5a>
 80147ea:	1de0      	adds	r0, r4, #7
 80147ec:	f000 0207 	and.w	r2, r0, #7
 80147f0:	2a07      	cmp	r2, #7
 80147f2:	d10d      	bne.n	8014810 <GUI_USAGE_BM_GetNextDirty+0x8c>
 80147f4:	3b01      	subs	r3, #1
 80147f6:	d40b      	bmi.n	8014810 <GUI_USAGE_BM_GetNextDirty+0x8c>
 80147f8:	f815 2b01 	ldrb.w	r2, [r5], #1
 80147fc:	2aff      	cmp	r2, #255	; 0xff
 80147fe:	d101      	bne.n	8014804 <GUI_USAGE_BM_GetNextDirty+0x80>
 8014800:	3008      	adds	r0, #8
 8014802:	e7f7      	b.n	80147f4 <GUI_USAGE_BM_GetNextDirty+0x70>
 8014804:	0613      	lsls	r3, r2, #24
 8014806:	d503      	bpl.n	8014810 <GUI_USAGE_BM_GetNextDirty+0x8c>
 8014808:	0052      	lsls	r2, r2, #1
 801480a:	3001      	adds	r0, #1
 801480c:	b2d2      	uxtb	r2, r2
 801480e:	e7f9      	b.n	8014804 <GUI_USAGE_BM_GetNextDirty+0x80>
 8014810:	1b00      	subs	r0, r0, r4
 8014812:	600c      	str	r4, [r1, #0]
 8014814:	3001      	adds	r0, #1
 8014816:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014818:	2000      	movs	r0, #0
 801481a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801481c:	4618      	mov	r0, r3
 801481e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014820 <_GUI_USAGE_BM_Delete>:
 8014820:	f7f6 b8d0 	b.w	800a9c4 <GUI_ALLOC_Free>

08014824 <GUI_USAGE_BM_Clear>:
 8014824:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014828:	2100      	movs	r1, #0
 801482a:	6902      	ldr	r2, [r0, #16]
 801482c:	3014      	adds	r0, #20
 801482e:	435a      	muls	r2, r3
 8014830:	f001 b860 	b.w	80158f4 <memset>

08014834 <GUI_USAGE_BM_AddHLine>:
 8014834:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014836:	f9b0 4000 	ldrsh.w	r4, [r0]
 801483a:	1b09      	subs	r1, r1, r4
 801483c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014840:	42a1      	cmp	r1, r4
 8014842:	da32      	bge.n	80148aa <GUI_USAGE_BM_AddHLine+0x76>
 8014844:	440b      	add	r3, r1
 8014846:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 801484a:	10ce      	asrs	r6, r1, #3
 801484c:	f001 0407 	and.w	r4, r1, #7
 8014850:	3b01      	subs	r3, #1
 8014852:	1b52      	subs	r2, r2, r5
 8014854:	6905      	ldr	r5, [r0, #16]
 8014856:	21ff      	movs	r1, #255	; 0xff
 8014858:	43df      	mvns	r7, r3
 801485a:	fb05 6502 	mla	r5, r5, r2, r6
 801485e:	fa41 f404 	asr.w	r4, r1, r4
 8014862:	f007 0707 	and.w	r7, r7, #7
 8014866:	ebd6 06e3 	rsbs	r6, r6, r3, asr #3
 801486a:	f105 0514 	add.w	r5, r5, #20
 801486e:	b2e4      	uxtb	r4, r4
 8014870:	fa01 f707 	lsl.w	r7, r1, r7
 8014874:	eb00 0205 	add.w	r2, r0, r5
 8014878:	f810 e005 	ldrb.w	lr, [r0, r5]
 801487c:	b2ff      	uxtb	r7, r7
 801487e:	d104      	bne.n	801488a <GUI_USAGE_BM_AddHLine+0x56>
 8014880:	403c      	ands	r4, r7
 8014882:	ea4e 0404 	orr.w	r4, lr, r4
 8014886:	5544      	strb	r4, [r0, r5]
 8014888:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801488a:	ea44 040e 	orr.w	r4, r4, lr
 801488e:	1c53      	adds	r3, r2, #1
 8014890:	5544      	strb	r4, [r0, r5]
 8014892:	1e75      	subs	r5, r6, #1
 8014894:	2d00      	cmp	r5, #0
 8014896:	dd05      	ble.n	80148a4 <GUI_USAGE_BM_AddHLine+0x70>
 8014898:	4618      	mov	r0, r3
 801489a:	462a      	mov	r2, r5
 801489c:	f001 f82a 	bl	80158f4 <memset>
 80148a0:	4603      	mov	r3, r0
 80148a2:	442b      	add	r3, r5
 80148a4:	781c      	ldrb	r4, [r3, #0]
 80148a6:	433c      	orrs	r4, r7
 80148a8:	701c      	strb	r4, [r3, #0]
 80148aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080148ac <GUI_USAGE_BM_Create>:
 80148ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80148b0:	f102 040f 	add.w	r4, r2, #15
 80148b4:	4680      	mov	r8, r0
 80148b6:	460f      	mov	r7, r1
 80148b8:	4616      	mov	r6, r2
 80148ba:	1124      	asrs	r4, r4, #4
 80148bc:	461d      	mov	r5, r3
 80148be:	0064      	lsls	r4, r4, #1
 80148c0:	fb03 f004 	mul.w	r0, r3, r4
 80148c4:	3014      	adds	r0, #20
 80148c6:	f7f6 fa1b 	bl	800ad00 <GUI_ALLOC_AllocZero>
 80148ca:	4681      	mov	r9, r0
 80148cc:	b188      	cbz	r0, 80148f2 <GUI_USAGE_BM_Create+0x46>
 80148ce:	f7f6 f83f 	bl	800a950 <GUI_ALLOC_LockH>
 80148d2:	4a0a      	ldr	r2, [pc, #40]	; (80148fc <GUI_USAGE_BM_Create+0x50>)
 80148d4:	4603      	mov	r3, r0
 80148d6:	a802      	add	r0, sp, #8
 80148d8:	609a      	str	r2, [r3, #8]
 80148da:	2201      	movs	r2, #1
 80148dc:	f840 3d04 	str.w	r3, [r0, #-4]!
 80148e0:	809e      	strh	r6, [r3, #4]
 80148e2:	f8a3 8000 	strh.w	r8, [r3]
 80148e6:	805f      	strh	r7, [r3, #2]
 80148e8:	80dd      	strh	r5, [r3, #6]
 80148ea:	819a      	strh	r2, [r3, #12]
 80148ec:	611c      	str	r4, [r3, #16]
 80148ee:	f7f6 f83d 	bl	800a96c <GUI_ALLOC_UnlockH>
 80148f2:	4648      	mov	r0, r9
 80148f4:	b003      	add	sp, #12
 80148f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80148fa:	bf00      	nop
 80148fc:	0801e6d4 	.word	0x0801e6d4

08014900 <GUI_MEMDEV_WriteAt>:
 8014900:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014902:	460c      	mov	r4, r1
 8014904:	4615      	mov	r5, r2
 8014906:	4606      	mov	r6, r0
 8014908:	b340      	cbz	r0, 801495c <GUI_MEMDEV_WriteAt+0x5c>
 801490a:	f7f6 f821 	bl	800a950 <GUI_ALLOC_LockH>
 801490e:	4b14      	ldr	r3, [pc, #80]	; (8014960 <GUI_MEMDEV_WriteAt+0x60>)
 8014910:	9001      	str	r0, [sp, #4]
 8014912:	429c      	cmp	r4, r3
 8014914:	8903      	ldrh	r3, [r0, #8]
 8014916:	bf08      	it	eq
 8014918:	f9b0 4004 	ldrsheq.w	r4, [r0, #4]
 801491c:	f103 33ff 	add.w	r3, r3, #4294967295
 8014920:	bf08      	it	eq
 8014922:	f9b0 5006 	ldrsheq.w	r5, [r0, #6]
 8014926:	4423      	add	r3, r4
 8014928:	f8ad 4008 	strh.w	r4, [sp, #8]
 801492c:	f8ad 500a 	strh.w	r5, [sp, #10]
 8014930:	f8ad 300c 	strh.w	r3, [sp, #12]
 8014934:	8943      	ldrh	r3, [r0, #10]
 8014936:	a801      	add	r0, sp, #4
 8014938:	3b01      	subs	r3, #1
 801493a:	442b      	add	r3, r5
 801493c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8014940:	f7f6 f814 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014944:	a802      	add	r0, sp, #8
 8014946:	f7fc fb75 	bl	8011034 <WM__InitIVRSearch>
 801494a:	b138      	cbz	r0, 801495c <GUI_MEMDEV_WriteAt+0x5c>
 801494c:	462a      	mov	r2, r5
 801494e:	4621      	mov	r1, r4
 8014950:	4630      	mov	r0, r6
 8014952:	f7ff fb69 	bl	8014028 <GUI_MEMDEV__WriteToActiveAt>
 8014956:	f7fc faab 	bl	8010eb0 <WM__GetNextIVR>
 801495a:	e7f6      	b.n	801494a <GUI_MEMDEV_WriteAt+0x4a>
 801495c:	b004      	add	sp, #16
 801495e:	bd70      	pop	{r4, r5, r6, pc}
 8014960:	fffff001 	.word	0xfffff001

08014964 <GUI_MEMDEV_Write>:
 8014964:	4a01      	ldr	r2, [pc, #4]	; (801496c <GUI_MEMDEV_Write+0x8>)
 8014966:	4611      	mov	r1, r2
 8014968:	f7ff bfca 	b.w	8014900 <GUI_MEMDEV_WriteAt>
 801496c:	fffff001 	.word	0xfffff001

08014970 <_cbInvalidateOne>:
 8014970:	f7fc b8ed 	b.w	8010b4e <WM_InvalidateWindow>

08014974 <WM_BringToTop>:
 8014974:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014976:	4605      	mov	r5, r0
 8014978:	b390      	cbz	r0, 80149e0 <WM_BringToTop+0x6c>
 801497a:	ac02      	add	r4, sp, #8
 801497c:	f7f5 ffe8 	bl	800a950 <GUI_ALLOC_LockH>
 8014980:	4603      	mov	r3, r0
 8014982:	f844 0d08 	str.w	r0, [r4, #-8]!
 8014986:	6a00      	ldr	r0, [r0, #32]
 8014988:	b908      	cbnz	r0, 801498e <WM_BringToTop+0x1a>
 801498a:	4620      	mov	r0, r4
 801498c:	e00e      	b.n	80149ac <WM_BringToTop+0x38>
 801498e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014990:	071a      	lsls	r2, r3, #28
 8014992:	d411      	bmi.n	80149b8 <WM_BringToTop+0x44>
 8014994:	f7f5 ffdc 	bl	800a950 <GUI_ALLOC_LockH>
 8014998:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801499a:	ae02      	add	r6, sp, #8
 801499c:	071b      	lsls	r3, r3, #28
 801499e:	f846 0d04 	str.w	r0, [r6, #-4]!
 80149a2:	d506      	bpl.n	80149b2 <WM_BringToTop+0x3e>
 80149a4:	4620      	mov	r0, r4
 80149a6:	f7f5 ffe1 	bl	800a96c <GUI_ALLOC_UnlockH>
 80149aa:	4630      	mov	r0, r6
 80149ac:	f7f5 ffde 	bl	800a96c <GUI_ALLOC_UnlockH>
 80149b0:	e016      	b.n	80149e0 <WM_BringToTop+0x6c>
 80149b2:	4630      	mov	r0, r6
 80149b4:	f7f5 ffda 	bl	800a96c <GUI_ALLOC_UnlockH>
 80149b8:	9b00      	ldr	r3, [sp, #0]
 80149ba:	4620      	mov	r0, r4
 80149bc:	699e      	ldr	r6, [r3, #24]
 80149be:	f7f5 ffd5 	bl	800a96c <GUI_ALLOC_UnlockH>
 80149c2:	4628      	mov	r0, r5
 80149c4:	f7fb feb0 	bl	8010728 <WM__RemoveWindowFromList>
 80149c8:	4631      	mov	r1, r6
 80149ca:	4628      	mov	r0, r5
 80149cc:	f7fb fe56 	bl	801067c <WM__InsertWindowIntoList>
 80149d0:	4628      	mov	r0, r5
 80149d2:	f7fc f8bc 	bl	8010b4e <WM_InvalidateWindow>
 80149d6:	2200      	movs	r2, #0
 80149d8:	4902      	ldr	r1, [pc, #8]	; (80149e4 <WM_BringToTop+0x70>)
 80149da:	4628      	mov	r0, r5
 80149dc:	f7fc fde6 	bl	80115ac <WM_ForEachDesc>
 80149e0:	b002      	add	sp, #8
 80149e2:	bd70      	pop	{r4, r5, r6, pc}
 80149e4:	08014971 	.word	0x08014971

080149e8 <WM_PID__SetPrevState>:
 80149e8:	4a03      	ldr	r2, [pc, #12]	; (80149f8 <WM_PID__SetPrevState+0x10>)
 80149ea:	230c      	movs	r3, #12
 80149ec:	fb03 2301 	mla	r3, r3, r1, r2
 80149f0:	c807      	ldmia	r0, {r0, r1, r2}
 80149f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80149f6:	4770      	bx	lr
 80149f8:	20000e68 	.word	0x20000e68

080149fc <WM__ReleaseCapture>:
 80149fc:	b530      	push	{r4, r5, lr}
 80149fe:	4d09      	ldr	r5, [pc, #36]	; (8014a24 <WM__ReleaseCapture+0x28>)
 8014a00:	b085      	sub	sp, #20
 8014a02:	4c09      	ldr	r4, [pc, #36]	; (8014a28 <WM__ReleaseCapture+0x2c>)
 8014a04:	682b      	ldr	r3, [r5, #0]
 8014a06:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014a0a:	b148      	cbz	r0, 8014a20 <WM__ReleaseCapture+0x24>
 8014a0c:	2318      	movs	r3, #24
 8014a0e:	a904      	add	r1, sp, #16
 8014a10:	f841 3d10 	str.w	r3, [r1, #-16]!
 8014a14:	f7fd fcae 	bl	8012374 <WM__SendMessage>
 8014a18:	682b      	ldr	r3, [r5, #0]
 8014a1a:	2200      	movs	r2, #0
 8014a1c:	f844 2023 	str.w	r2, [r4, r3, lsl #2]
 8014a20:	b005      	add	sp, #20
 8014a22:	bd30      	pop	{r4, r5, pc}
 8014a24:	2002db4c 	.word	0x2002db4c
 8014a28:	2002db70 	.word	0x2002db70

08014a2c <WM_ReleaseCapture>:
 8014a2c:	f7ff bfe6 	b.w	80149fc <WM__ReleaseCapture>

08014a30 <_GetNextChild>:
 8014a30:	b538      	push	{r3, r4, r5, lr}
 8014a32:	4605      	mov	r5, r0
 8014a34:	460c      	mov	r4, r1
 8014a36:	b921      	cbnz	r1, 8014a42 <_GetNextChild+0x12>
 8014a38:	4628      	mov	r0, r5
 8014a3a:	f7f5 ff7f 	bl	800a93c <GUI_ALLOC_h2p>
 8014a3e:	69c0      	ldr	r0, [r0, #28]
 8014a40:	e005      	b.n	8014a4e <_GetNextChild+0x1e>
 8014a42:	4608      	mov	r0, r1
 8014a44:	f7f5 ff7a 	bl	800a93c <GUI_ALLOC_h2p>
 8014a48:	6a00      	ldr	r0, [r0, #32]
 8014a4a:	2800      	cmp	r0, #0
 8014a4c:	d0f4      	beq.n	8014a38 <_GetNextChild+0x8>
 8014a4e:	42a0      	cmp	r0, r4
 8014a50:	bf08      	it	eq
 8014a52:	2000      	moveq	r0, #0
 8014a54:	bd38      	pop	{r3, r4, r5, pc}
	...

08014a58 <WM_SetFocusOnNextChild>:
 8014a58:	b570      	push	{r4, r5, r6, lr}
 8014a5a:	4606      	mov	r6, r0
 8014a5c:	b308      	cbz	r0, 8014aa2 <WM_SetFocusOnNextChild+0x4a>
 8014a5e:	f7fd fc6d 	bl	801233c <WM__GetFocusedChild>
 8014a62:	4601      	mov	r1, r0
 8014a64:	4630      	mov	r0, r6
 8014a66:	f7ff ffe3 	bl	8014a30 <_GetNextChild>
 8014a6a:	4605      	mov	r5, r0
 8014a6c:	4604      	mov	r4, r0
 8014a6e:	4620      	mov	r0, r4
 8014a70:	f7fc fea0 	bl	80117b4 <WM_IsFocusable>
 8014a74:	b938      	cbnz	r0, 8014a86 <WM_SetFocusOnNextChild+0x2e>
 8014a76:	b1a4      	cbz	r4, 8014aa2 <WM_SetFocusOnNextChild+0x4a>
 8014a78:	4621      	mov	r1, r4
 8014a7a:	4630      	mov	r0, r6
 8014a7c:	f7ff ffd8 	bl	8014a30 <_GetNextChild>
 8014a80:	4285      	cmp	r5, r0
 8014a82:	4604      	mov	r4, r0
 8014a84:	d1f3      	bne.n	8014a6e <WM_SetFocusOnNextChild+0x16>
 8014a86:	b164      	cbz	r4, 8014aa2 <WM_SetFocusOnNextChild+0x4a>
 8014a88:	4d07      	ldr	r5, [pc, #28]	; (8014aa8 <WM_SetFocusOnNextChild+0x50>)
 8014a8a:	4620      	mov	r0, r4
 8014a8c:	682e      	ldr	r6, [r5, #0]
 8014a8e:	f7fb ff21 	bl	80108d4 <WM__GetTopLevelLayer>
 8014a92:	1c43      	adds	r3, r0, #1
 8014a94:	d006      	beq.n	8014aa4 <WM_SetFocusOnNextChild+0x4c>
 8014a96:	6028      	str	r0, [r5, #0]
 8014a98:	4620      	mov	r0, r4
 8014a9a:	f7fc ff7b 	bl	8011994 <WM_SetFocus>
 8014a9e:	602e      	str	r6, [r5, #0]
 8014aa0:	b100      	cbz	r0, 8014aa4 <WM_SetFocusOnNextChild+0x4c>
 8014aa2:	2400      	movs	r4, #0
 8014aa4:	4620      	mov	r0, r4
 8014aa6:	bd70      	pop	{r4, r5, r6, pc}
 8014aa8:	2002db4c 	.word	0x2002db4c

08014aac <_GetPrevChild>:
 8014aac:	b510      	push	{r4, lr}
 8014aae:	4604      	mov	r4, r0
 8014ab0:	b918      	cbnz	r0, 8014aba <_GetPrevChild+0xe>
 8014ab2:	4620      	mov	r0, r4
 8014ab4:	f7fd fbf8 	bl	80122a8 <WM__GetLastSibling>
 8014ab8:	e003      	b.n	8014ac2 <_GetPrevChild+0x16>
 8014aba:	f7fd fc01 	bl	80122c0 <WM__GetPrevSibling>
 8014abe:	2800      	cmp	r0, #0
 8014ac0:	d0f7      	beq.n	8014ab2 <_GetPrevChild+0x6>
 8014ac2:	42a0      	cmp	r0, r4
 8014ac4:	bf08      	it	eq
 8014ac6:	2000      	moveq	r0, #0
 8014ac8:	bd10      	pop	{r4, pc}

08014aca <WM_SetFocusOnPrevChild>:
 8014aca:	b538      	push	{r3, r4, r5, lr}
 8014acc:	b908      	cbnz	r0, 8014ad2 <WM_SetFocusOnPrevChild+0x8>
 8014ace:	2400      	movs	r4, #0
 8014ad0:	e015      	b.n	8014afe <WM_SetFocusOnPrevChild+0x34>
 8014ad2:	f7fd fc33 	bl	801233c <WM__GetFocusedChild>
 8014ad6:	f7ff ffe9 	bl	8014aac <_GetPrevChild>
 8014ada:	4605      	mov	r5, r0
 8014adc:	4604      	mov	r4, r0
 8014ade:	4620      	mov	r0, r4
 8014ae0:	f7fc fe68 	bl	80117b4 <WM_IsFocusable>
 8014ae4:	b930      	cbnz	r0, 8014af4 <WM_SetFocusOnPrevChild+0x2a>
 8014ae6:	b12c      	cbz	r4, 8014af4 <WM_SetFocusOnPrevChild+0x2a>
 8014ae8:	4620      	mov	r0, r4
 8014aea:	f7ff ffdf 	bl	8014aac <_GetPrevChild>
 8014aee:	4285      	cmp	r5, r0
 8014af0:	4604      	mov	r4, r0
 8014af2:	d1f4      	bne.n	8014ade <WM_SetFocusOnPrevChild+0x14>
 8014af4:	4620      	mov	r0, r4
 8014af6:	f7fc ff4d 	bl	8011994 <WM_SetFocus>
 8014afa:	2800      	cmp	r0, #0
 8014afc:	d1e7      	bne.n	8014ace <WM_SetFocusOnPrevChild+0x4>
 8014afe:	4620      	mov	r0, r4
 8014b00:	bd38      	pop	{r3, r4, r5, pc}

08014b02 <WM_GetHasTrans>:
 8014b02:	b508      	push	{r3, lr}
 8014b04:	b128      	cbz	r0, 8014b12 <WM_GetHasTrans+0x10>
 8014b06:	f7f5 ff19 	bl	800a93c <GUI_ALLOC_h2p>
 8014b0a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8014b0c:	f000 0001 	and.w	r0, r0, #1
 8014b10:	bd08      	pop	{r3, pc}
 8014b12:	bd08      	pop	{r3, pc}

08014b14 <GUI__AlphaPreserveTrans>:
 8014b14:	4b07      	ldr	r3, [pc, #28]	; (8014b34 <GUI__AlphaPreserveTrans+0x20>)
 8014b16:	b510      	push	{r4, lr}
 8014b18:	781c      	ldrb	r4, [r3, #0]
 8014b1a:	b118      	cbz	r0, 8014b24 <GUI__AlphaPreserveTrans+0x10>
 8014b1c:	2201      	movs	r2, #1
 8014b1e:	2000      	movs	r0, #0
 8014b20:	701a      	strb	r2, [r3, #0]
 8014b22:	e002      	b.n	8014b2a <GUI__AlphaPreserveTrans+0x16>
 8014b24:	7018      	strb	r0, [r3, #0]
 8014b26:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8014b2a:	f7f8 f8f9 	bl	800cd20 <LCD_AA_SetOrMask>
 8014b2e:	4620      	mov	r0, r4
 8014b30:	bd10      	pop	{r4, pc}
 8014b32:	bf00      	nop
 8014b34:	2002daf0 	.word	0x2002daf0

08014b38 <_GetDevData>:
 8014b38:	2901      	cmp	r1, #1
 8014b3a:	4802      	ldr	r0, [pc, #8]	; (8014b44 <_GetDevData+0xc>)
 8014b3c:	bf18      	it	ne
 8014b3e:	2000      	movne	r0, #0
 8014b40:	4770      	bx	lr
 8014b42:	bf00      	nop
 8014b44:	0801e6ec 	.word	0x0801e6ec

08014b48 <_GetDevFunc>:
 8014b48:	2916      	cmp	r1, #22
 8014b4a:	4802      	ldr	r0, [pc, #8]	; (8014b54 <_GetDevFunc+0xc>)
 8014b4c:	bf18      	it	ne
 8014b4e:	2000      	movne	r0, #0
 8014b50:	4770      	bx	lr
 8014b52:	bf00      	nop
 8014b54:	08015705 	.word	0x08015705

08014b58 <_GetDevProp>:
 8014b58:	2908      	cmp	r1, #8
 8014b5a:	bf0c      	ite	eq
 8014b5c:	2020      	moveq	r0, #32
 8014b5e:	2000      	movne	r0, #0
 8014b60:	4770      	bx	lr

08014b62 <_SetOrg>:
 8014b62:	6800      	ldr	r0, [r0, #0]
 8014b64:	68c3      	ldr	r3, [r0, #12]
 8014b66:	6a1b      	ldr	r3, [r3, #32]
 8014b68:	4718      	bx	r3

08014b6a <_GetRect>:
 8014b6a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014b6c:	6880      	ldr	r0, [r0, #8]
 8014b6e:	460d      	mov	r5, r1
 8014b70:	f7f5 feee 	bl	800a950 <GUI_ALLOC_LockH>
 8014b74:	4602      	mov	r2, r0
 8014b76:	a802      	add	r0, sp, #8
 8014b78:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8014b7c:	8914      	ldrh	r4, [r2, #8]
 8014b7e:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
 8014b82:	802b      	strh	r3, [r5, #0]
 8014b84:	441c      	add	r4, r3
 8014b86:	8953      	ldrh	r3, [r2, #10]
 8014b88:	3c01      	subs	r4, #1
 8014b8a:	f840 2d04 	str.w	r2, [r0, #-4]!
 8014b8e:	440b      	add	r3, r1
 8014b90:	8069      	strh	r1, [r5, #2]
 8014b92:	80ac      	strh	r4, [r5, #4]
 8014b94:	3b01      	subs	r3, #1
 8014b96:	80eb      	strh	r3, [r5, #6]
 8014b98:	f7f5 fee8 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014b9c:	b003      	add	sp, #12
 8014b9e:	bd30      	pop	{r4, r5, pc}

08014ba0 <_XY2PTR>:
 8014ba0:	4b0e      	ldr	r3, [pc, #56]	; (8014bdc <_XY2PTR+0x3c>)
 8014ba2:	681b      	ldr	r3, [r3, #0]
 8014ba4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014ba6:	4606      	mov	r6, r0
 8014ba8:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014baa:	460d      	mov	r5, r1
 8014bac:	f7f5 fed0 	bl	800a950 <GUI_ALLOC_LockH>
 8014bb0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014bb4:	ab02      	add	r3, sp, #8
 8014bb6:	68c4      	ldr	r4, [r0, #12]
 8014bb8:	1a69      	subs	r1, r5, r1
 8014bba:	f9b0 5004 	ldrsh.w	r5, [r0, #4]
 8014bbe:	f843 0d04 	str.w	r0, [r3, #-4]!
 8014bc2:	1b76      	subs	r6, r6, r5
 8014bc4:	00b6      	lsls	r6, r6, #2
 8014bc6:	3618      	adds	r6, #24
 8014bc8:	fb04 6501 	mla	r5, r4, r1, r6
 8014bcc:	1944      	adds	r4, r0, r5
 8014bce:	4618      	mov	r0, r3
 8014bd0:	f7f5 fecc 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014bd4:	4620      	mov	r0, r4
 8014bd6:	b002      	add	sp, #8
 8014bd8:	bd70      	pop	{r4, r5, r6, pc}
 8014bda:	bf00      	nop
 8014bdc:	2000003c 	.word	0x2000003c

08014be0 <_GetPixelIndex>:
 8014be0:	b508      	push	{r3, lr}
 8014be2:	4608      	mov	r0, r1
 8014be4:	4611      	mov	r1, r2
 8014be6:	f7ff ffdb 	bl	8014ba0 <_XY2PTR>
 8014bea:	6800      	ldr	r0, [r0, #0]
 8014bec:	bd08      	pop	{r3, pc}
	...

08014bf0 <_XorPixel>:
 8014bf0:	4b15      	ldr	r3, [pc, #84]	; (8014c48 <_XorPixel+0x58>)
 8014bf2:	681b      	ldr	r3, [r3, #0]
 8014bf4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014bf6:	4616      	mov	r6, r2
 8014bf8:	460d      	mov	r5, r1
 8014bfa:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014bfc:	f7f5 fea8 	bl	800a950 <GUI_ALLOC_LockH>
 8014c00:	4631      	mov	r1, r6
 8014c02:	9000      	str	r0, [sp, #0]
 8014c04:	4628      	mov	r0, r5
 8014c06:	f7ff ffcb 	bl	8014ba0 <_XY2PTR>
 8014c0a:	9b00      	ldr	r3, [sp, #0]
 8014c0c:	4604      	mov	r4, r0
 8014c0e:	681b      	ldr	r3, [r3, #0]
 8014c10:	691b      	ldr	r3, [r3, #16]
 8014c12:	689b      	ldr	r3, [r3, #8]
 8014c14:	4798      	blx	r3
 8014c16:	6823      	ldr	r3, [r4, #0]
 8014c18:	4058      	eors	r0, r3
 8014c1a:	9b00      	ldr	r3, [sp, #0]
 8014c1c:	6020      	str	r0, [r4, #0]
 8014c1e:	6958      	ldr	r0, [r3, #20]
 8014c20:	b160      	cbz	r0, 8014c3c <_XorPixel+0x4c>
 8014c22:	f7f5 fe95 	bl	800a950 <GUI_ALLOC_LockH>
 8014c26:	ac02      	add	r4, sp, #8
 8014c28:	6883      	ldr	r3, [r0, #8]
 8014c2a:	4632      	mov	r2, r6
 8014c2c:	f844 0d04 	str.w	r0, [r4, #-4]!
 8014c30:	4629      	mov	r1, r5
 8014c32:	681b      	ldr	r3, [r3, #0]
 8014c34:	4798      	blx	r3
 8014c36:	4620      	mov	r0, r4
 8014c38:	f7f5 fe98 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014c3c:	4668      	mov	r0, sp
 8014c3e:	f7f5 fe95 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014c42:	b002      	add	sp, #8
 8014c44:	bd70      	pop	{r4, r5, r6, pc}
 8014c46:	bf00      	nop
 8014c48:	2000003c 	.word	0x2000003c

08014c4c <_SetPixelIndex>:
 8014c4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8014c4e:	461c      	mov	r4, r3
 8014c50:	4b10      	ldr	r3, [pc, #64]	; (8014c94 <_SetPixelIndex+0x48>)
 8014c52:	460d      	mov	r5, r1
 8014c54:	4616      	mov	r6, r2
 8014c56:	681b      	ldr	r3, [r3, #0]
 8014c58:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014c5a:	f7f5 fe79 	bl	800a950 <GUI_ALLOC_LockH>
 8014c5e:	4631      	mov	r1, r6
 8014c60:	9000      	str	r0, [sp, #0]
 8014c62:	4628      	mov	r0, r5
 8014c64:	f7ff ff9c 	bl	8014ba0 <_XY2PTR>
 8014c68:	9b00      	ldr	r3, [sp, #0]
 8014c6a:	6004      	str	r4, [r0, #0]
 8014c6c:	6958      	ldr	r0, [r3, #20]
 8014c6e:	b160      	cbz	r0, 8014c8a <_SetPixelIndex+0x3e>
 8014c70:	f7f5 fe6e 	bl	800a950 <GUI_ALLOC_LockH>
 8014c74:	ac02      	add	r4, sp, #8
 8014c76:	6883      	ldr	r3, [r0, #8]
 8014c78:	4632      	mov	r2, r6
 8014c7a:	f844 0d04 	str.w	r0, [r4, #-4]!
 8014c7e:	4629      	mov	r1, r5
 8014c80:	681b      	ldr	r3, [r3, #0]
 8014c82:	4798      	blx	r3
 8014c84:	4620      	mov	r0, r4
 8014c86:	f7f5 fe71 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014c8a:	4668      	mov	r0, sp
 8014c8c:	f7f5 fe6e 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014c90:	b002      	add	sp, #8
 8014c92:	bd70      	pop	{r4, r5, r6, pc}
 8014c94:	2000003c 	.word	0x2000003c

08014c98 <_DrawVLine>:
 8014c98:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8014c9c:	4c2a      	ldr	r4, [pc, #168]	; (8014d48 <_DrawVLine+0xb0>)
 8014c9e:	461e      	mov	r6, r3
 8014ca0:	4688      	mov	r8, r1
 8014ca2:	4615      	mov	r5, r2
 8014ca4:	6823      	ldr	r3, [r4, #0]
 8014ca6:	4627      	mov	r7, r4
 8014ca8:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014caa:	f7f5 fe51 	bl	800a950 <GUI_ALLOC_LockH>
 8014cae:	9000      	str	r0, [sp, #0]
 8014cb0:	6940      	ldr	r0, [r0, #20]
 8014cb2:	b108      	cbz	r0, 8014cb8 <_DrawVLine+0x20>
 8014cb4:	f7f5 fe4c 	bl	800a950 <GUI_ALLOC_LockH>
 8014cb8:	9001      	str	r0, [sp, #4]
 8014cba:	4629      	mov	r1, r5
 8014cbc:	4640      	mov	r0, r8
 8014cbe:	f7ff ff6f 	bl	8014ba0 <_XY2PTR>
 8014cc2:	683b      	ldr	r3, [r7, #0]
 8014cc4:	4604      	mov	r4, r0
 8014cc6:	9a00      	ldr	r2, [sp, #0]
 8014cc8:	7c19      	ldrb	r1, [r3, #16]
 8014cca:	07c9      	lsls	r1, r1, #31
 8014ccc:	d51d      	bpl.n	8014d0a <_DrawVLine+0x72>
 8014cce:	6813      	ldr	r3, [r2, #0]
 8014cd0:	691b      	ldr	r3, [r3, #16]
 8014cd2:	689b      	ldr	r3, [r3, #8]
 8014cd4:	4798      	blx	r3
 8014cd6:	4607      	mov	r7, r0
 8014cd8:	9801      	ldr	r0, [sp, #4]
 8014cda:	b120      	cbz	r0, 8014ce6 <_DrawVLine+0x4e>
 8014cdc:	6883      	ldr	r3, [r0, #8]
 8014cde:	462a      	mov	r2, r5
 8014ce0:	4641      	mov	r1, r8
 8014ce2:	681b      	ldr	r3, [r3, #0]
 8014ce4:	4798      	blx	r3
 8014ce6:	6823      	ldr	r3, [r4, #0]
 8014ce8:	3501      	adds	r5, #1
 8014cea:	407b      	eors	r3, r7
 8014cec:	42b5      	cmp	r5, r6
 8014cee:	6023      	str	r3, [r4, #0]
 8014cf0:	9b00      	ldr	r3, [sp, #0]
 8014cf2:	68db      	ldr	r3, [r3, #12]
 8014cf4:	441c      	add	r4, r3
 8014cf6:	ddef      	ble.n	8014cd8 <_DrawVLine+0x40>
 8014cf8:	4668      	mov	r0, sp
 8014cfa:	f7f5 fe37 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014cfe:	9b01      	ldr	r3, [sp, #4]
 8014d00:	b1f3      	cbz	r3, 8014d40 <_DrawVLine+0xa8>
 8014d02:	a801      	add	r0, sp, #4
 8014d04:	f7f5 fe32 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014d08:	e01a      	b.n	8014d40 <_DrawVLine+0xa8>
 8014d0a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8014d0c:	68d7      	ldr	r7, [r2, #12]
 8014d0e:	f8d3 9000 	ldr.w	r9, [r3]
 8014d12:	9b01      	ldr	r3, [sp, #4]
 8014d14:	b163      	cbz	r3, 8014d30 <_DrawVLine+0x98>
 8014d16:	9801      	ldr	r0, [sp, #4]
 8014d18:	462a      	mov	r2, r5
 8014d1a:	3501      	adds	r5, #1
 8014d1c:	4641      	mov	r1, r8
 8014d1e:	6883      	ldr	r3, [r0, #8]
 8014d20:	681b      	ldr	r3, [r3, #0]
 8014d22:	4798      	blx	r3
 8014d24:	42ae      	cmp	r6, r5
 8014d26:	f8c4 9000 	str.w	r9, [r4]
 8014d2a:	443c      	add	r4, r7
 8014d2c:	daf3      	bge.n	8014d16 <_DrawVLine+0x7e>
 8014d2e:	e7e3      	b.n	8014cf8 <_DrawVLine+0x60>
 8014d30:	1b75      	subs	r5, r6, r5
 8014d32:	3501      	adds	r5, #1
 8014d34:	3d01      	subs	r5, #1
 8014d36:	f8c4 9000 	str.w	r9, [r4]
 8014d3a:	443c      	add	r4, r7
 8014d3c:	d1fa      	bne.n	8014d34 <_DrawVLine+0x9c>
 8014d3e:	e7db      	b.n	8014cf8 <_DrawVLine+0x60>
 8014d40:	b003      	add	sp, #12
 8014d42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014d46:	bf00      	nop
 8014d48:	2000003c 	.word	0x2000003c

08014d4c <_FillRect>:
 8014d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d50:	4e2a      	ldr	r6, [pc, #168]	; (8014dfc <_FillRect+0xb0>)
 8014d52:	461c      	mov	r4, r3
 8014d54:	b085      	sub	sp, #20
 8014d56:	4689      	mov	r9, r1
 8014d58:	6833      	ldr	r3, [r6, #0]
 8014d5a:	4615      	mov	r5, r2
 8014d5c:	ebc9 0404 	rsb	r4, r9, r4
 8014d60:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014d62:	f7f5 fdf5 	bl	800a950 <GUI_ALLOC_LockH>
 8014d66:	4629      	mov	r1, r5
 8014d68:	9002      	str	r0, [sp, #8]
 8014d6a:	4648      	mov	r0, r9
 8014d6c:	f7ff ff18 	bl	8014ba0 <_XY2PTR>
 8014d70:	9b02      	ldr	r3, [sp, #8]
 8014d72:	6832      	ldr	r2, [r6, #0]
 8014d74:	4607      	mov	r7, r0
 8014d76:	6958      	ldr	r0, [r3, #20]
 8014d78:	3401      	adds	r4, #1
 8014d7a:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8014d7c:	f8d3 a00c 	ldr.w	sl, [r3, #12]
 8014d80:	f8d2 b000 	ldr.w	fp, [r2]
 8014d84:	b330      	cbz	r0, 8014dd4 <_FillRect+0x88>
 8014d86:	f7f5 fde3 	bl	800a950 <GUI_ALLOC_LockH>
 8014d8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d8c:	f10d 0810 	add.w	r8, sp, #16
 8014d90:	462a      	mov	r2, r5
 8014d92:	1b5b      	subs	r3, r3, r5
 8014d94:	4649      	mov	r1, r9
 8014d96:	f848 0d04 	str.w	r0, [r8, #-4]!
 8014d9a:	3301      	adds	r3, #1
 8014d9c:	9300      	str	r3, [sp, #0]
 8014d9e:	4623      	mov	r3, r4
 8014da0:	f7fa fdfc 	bl	800f99c <GUI_USAGE_AddRect>
 8014da4:	4640      	mov	r0, r8
 8014da6:	f7f5 fde1 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014daa:	e013      	b.n	8014dd4 <_FillRect+0x88>
 8014dac:	6833      	ldr	r3, [r6, #0]
 8014dae:	7c1b      	ldrb	r3, [r3, #16]
 8014db0:	07db      	lsls	r3, r3, #31
 8014db2:	d513      	bpl.n	8014ddc <_FillRect+0x90>
 8014db4:	9b02      	ldr	r3, [sp, #8]
 8014db6:	681b      	ldr	r3, [r3, #0]
 8014db8:	691b      	ldr	r3, [r3, #16]
 8014dba:	689b      	ldr	r3, [r3, #8]
 8014dbc:	4798      	blx	r3
 8014dbe:	463a      	mov	r2, r7
 8014dc0:	4623      	mov	r3, r4
 8014dc2:	6811      	ldr	r1, [r2, #0]
 8014dc4:	3b01      	subs	r3, #1
 8014dc6:	ea81 0100 	eor.w	r1, r1, r0
 8014dca:	f842 1b04 	str.w	r1, [r2], #4
 8014dce:	d1f8      	bne.n	8014dc2 <_FillRect+0x76>
 8014dd0:	4457      	add	r7, sl
 8014dd2:	3501      	adds	r5, #1
 8014dd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014dd6:	429d      	cmp	r5, r3
 8014dd8:	dde8      	ble.n	8014dac <_FillRect+0x60>
 8014dda:	e008      	b.n	8014dee <_FillRect+0xa2>
 8014ddc:	2c00      	cmp	r4, #0
 8014dde:	ddf7      	ble.n	8014dd0 <_FillRect+0x84>
 8014de0:	4623      	mov	r3, r4
 8014de2:	463a      	mov	r2, r7
 8014de4:	3b01      	subs	r3, #1
 8014de6:	f842 bb04 	str.w	fp, [r2], #4
 8014dea:	d1fb      	bne.n	8014de4 <_FillRect+0x98>
 8014dec:	e7f0      	b.n	8014dd0 <_FillRect+0x84>
 8014dee:	a802      	add	r0, sp, #8
 8014df0:	f7f5 fdbc 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014df4:	b005      	add	sp, #20
 8014df6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014dfa:	bf00      	nop
 8014dfc:	2000003c 	.word	0x2000003c

08014e00 <_DrawHLine>:
 8014e00:	b507      	push	{r0, r1, r2, lr}
 8014e02:	9200      	str	r2, [sp, #0]
 8014e04:	f7ff ffa2 	bl	8014d4c <_FillRect>
 8014e08:	b003      	add	sp, #12
 8014e0a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08014e10 <_DrawBitmap>:
 8014e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e14:	4da7      	ldr	r5, [pc, #668]	; (80150b4 <_DrawBitmap+0x2a4>)
 8014e16:	b091      	sub	sp, #68	; 0x44
 8014e18:	460e      	mov	r6, r1
 8014e1a:	9302      	str	r3, [sp, #8]
 8014e1c:	682b      	ldr	r3, [r5, #0]
 8014e1e:	9005      	str	r0, [sp, #20]
 8014e20:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8014e22:	9206      	str	r2, [sp, #24]
 8014e24:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 8014e26:	f8dd b07c 	ldr.w	fp, [sp, #124]	; 0x7c
 8014e2a:	2800      	cmp	r0, #0
 8014e2c:	f000 837f 	beq.w	801552e <_DrawBitmap+0x71e>
 8014e30:	f7f5 fd8e 	bl	800a950 <GUI_ALLOC_LockH>
 8014e34:	900e      	str	r0, [sp, #56]	; 0x38
 8014e36:	6940      	ldr	r0, [r0, #20]
 8014e38:	b108      	cbz	r0, 8014e3e <_DrawBitmap+0x2e>
 8014e3a:	f7f5 fd89 	bl	800a950 <GUI_ALLOC_LockH>
 8014e3e:	900f      	str	r0, [sp, #60]	; 0x3c
 8014e40:	a810      	add	r0, sp, #64	; 0x40
 8014e42:	f850 3d08 	ldr.w	r3, [r0, #-8]!
 8014e46:	68db      	ldr	r3, [r3, #12]
 8014e48:	9308      	str	r3, [sp, #32]
 8014e4a:	f7f5 fd8f 	bl	800a96c <GUI_ALLOC_UnlockH>
 8014e4e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8014e50:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014e52:	18f3      	adds	r3, r6, r3
 8014e54:	9303      	str	r3, [sp, #12]
 8014e56:	b150      	cbz	r0, 8014e6e <_DrawBitmap+0x5e>
 8014e58:	682b      	ldr	r3, [r5, #0]
 8014e5a:	7c1b      	ldrb	r3, [r3, #16]
 8014e5c:	079d      	lsls	r5, r3, #30
 8014e5e:	d406      	bmi.n	8014e6e <_DrawBitmap+0x5e>
 8014e60:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8014e62:	9a06      	ldr	r2, [sp, #24]
 8014e64:	9300      	str	r3, [sp, #0]
 8014e66:	9903      	ldr	r1, [sp, #12]
 8014e68:	9b02      	ldr	r3, [sp, #8]
 8014e6a:	f7fa fd97 	bl	800f99c <GUI_USAGE_AddRect>
 8014e6e:	9906      	ldr	r1, [sp, #24]
 8014e70:	9803      	ldr	r0, [sp, #12]
 8014e72:	f7ff fe95 	bl	8014ba0 <_XY2PTR>
 8014e76:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8014e78:	4605      	mov	r5, r0
 8014e7a:	2b17      	cmp	r3, #23
 8014e7c:	dd66      	ble.n	8014f4c <_DrawBitmap+0x13c>
 8014e7e:	9b02      	ldr	r3, [sp, #8]
 8014e80:	f04f 0b00 	mov.w	fp, #0
 8014e84:	f8df 9234 	ldr.w	r9, [pc, #564]	; 80150bc <_DrawBitmap+0x2ac>
 8014e88:	009b      	lsls	r3, r3, #2
 8014e8a:	9307      	str	r3, [sp, #28]
 8014e8c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8014e8e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014e90:	459b      	cmp	fp, r3
 8014e92:	da57      	bge.n	8014f44 <_DrawBitmap+0x134>
 8014e94:	b130      	cbz	r0, 8014ea4 <_DrawBitmap+0x94>
 8014e96:	6883      	ldr	r3, [r0, #8]
 8014e98:	9a06      	ldr	r2, [sp, #24]
 8014e9a:	685e      	ldr	r6, [r3, #4]
 8014e9c:	445a      	add	r2, fp
 8014e9e:	9b02      	ldr	r3, [sp, #8]
 8014ea0:	9903      	ldr	r1, [sp, #12]
 8014ea2:	47b0      	blx	r6
 8014ea4:	9b05      	ldr	r3, [sp, #20]
 8014ea6:	691b      	ldr	r3, [r3, #16]
 8014ea8:	68da      	ldr	r2, [r3, #12]
 8014eaa:	b132      	cbz	r2, 8014eba <_DrawBitmap+0xaa>
 8014eac:	f8d9 3000 	ldr.w	r3, [r9]
 8014eb0:	4621      	mov	r1, r4
 8014eb2:	9a07      	ldr	r2, [sp, #28]
 8014eb4:	4628      	mov	r0, r5
 8014eb6:	4798      	blx	r3
 8014eb8:	e03d      	b.n	8014f36 <_DrawBitmap+0x126>
 8014eba:	685b      	ldr	r3, [r3, #4]
 8014ebc:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8014ec0:	4798      	blx	r3
 8014ec2:	462f      	mov	r7, r5
 8014ec4:	0e03      	lsrs	r3, r0, #24
 8014ec6:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8014eca:	4626      	mov	r6, r4
 8014ecc:	9304      	str	r3, [sp, #16]
 8014ece:	4642      	mov	r2, r8
 8014ed0:	4631      	mov	r1, r6
 8014ed2:	f04f 0a00 	mov.w	sl, #0
 8014ed6:	f851 3b04 	ldr.w	r3, [r1], #4
 8014eda:	3a01      	subs	r2, #1
 8014edc:	9804      	ldr	r0, [sp, #16]
 8014ede:	0e1b      	lsrs	r3, r3, #24
 8014ee0:	4298      	cmp	r0, r3
 8014ee2:	9804      	ldr	r0, [sp, #16]
 8014ee4:	bf08      	it	eq
 8014ee6:	f10a 0a01 	addeq.w	sl, sl, #1
 8014eea:	4298      	cmp	r0, r3
 8014eec:	d011      	beq.n	8014f12 <_DrawBitmap+0x102>
 8014eee:	f1ba 0f00 	cmp.w	sl, #0
 8014ef2:	d011      	beq.n	8014f18 <_DrawBitmap+0x108>
 8014ef4:	ea4f 038a 	mov.w	r3, sl, lsl #2
 8014ef8:	4631      	mov	r1, r6
 8014efa:	4638      	mov	r0, r7
 8014efc:	ebca 0808 	rsb	r8, sl, r8
 8014f00:	461a      	mov	r2, r3
 8014f02:	9309      	str	r3, [sp, #36]	; 0x24
 8014f04:	f8d9 3000 	ldr.w	r3, [r9]
 8014f08:	4798      	blx	r3
 8014f0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014f0c:	441f      	add	r7, r3
 8014f0e:	441e      	add	r6, r3
 8014f10:	e00e      	b.n	8014f30 <_DrawBitmap+0x120>
 8014f12:	2a00      	cmp	r2, #0
 8014f14:	d1df      	bne.n	8014ed6 <_DrawBitmap+0xc6>
 8014f16:	e7ea      	b.n	8014eee <_DrawBitmap+0xde>
 8014f18:	6830      	ldr	r0, [r6, #0]
 8014f1a:	0e02      	lsrs	r2, r0, #24
 8014f1c:	d004      	beq.n	8014f28 <_DrawBitmap+0x118>
 8014f1e:	4b66      	ldr	r3, [pc, #408]	; (80150b8 <_DrawBitmap+0x2a8>)
 8014f20:	6839      	ldr	r1, [r7, #0]
 8014f22:	681b      	ldr	r3, [r3, #0]
 8014f24:	4798      	blx	r3
 8014f26:	6038      	str	r0, [r7, #0]
 8014f28:	3704      	adds	r7, #4
 8014f2a:	3604      	adds	r6, #4
 8014f2c:	f108 38ff 	add.w	r8, r8, #4294967295
 8014f30:	f1b8 0f00 	cmp.w	r8, #0
 8014f34:	d1cb      	bne.n	8014ece <_DrawBitmap+0xbe>
 8014f36:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014f38:	f10b 0b01 	add.w	fp, fp, #1
 8014f3c:	441c      	add	r4, r3
 8014f3e:	9b08      	ldr	r3, [sp, #32]
 8014f40:	441d      	add	r5, r3
 8014f42:	e7a3      	b.n	8014e8c <_DrawBitmap+0x7c>
 8014f44:	2800      	cmp	r0, #0
 8014f46:	f040 82ef 	bne.w	8015528 <_DrawBitmap+0x718>
 8014f4a:	e2f0      	b.n	801552e <_DrawBitmap+0x71e>
 8014f4c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8014f4e:	2b10      	cmp	r3, #16
 8014f50:	d137      	bne.n	8014fc2 <_DrawBitmap+0x1b2>
 8014f52:	9b03      	ldr	r3, [sp, #12]
 8014f54:	f04f 0800 	mov.w	r8, #0
 8014f58:	9a03      	ldr	r2, [sp, #12]
 8014f5a:	eba4 0443 	sub.w	r4, r4, r3, lsl #1
 8014f5e:	eba0 0583 	sub.w	r5, r0, r3, lsl #2
 8014f62:	9b02      	ldr	r3, [sp, #8]
 8014f64:	eb03 0a02 	add.w	sl, r3, r2
 8014f68:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8014f6a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8014f6c:	4598      	cmp	r8, r3
 8014f6e:	da24      	bge.n	8014fba <_DrawBitmap+0x1aa>
 8014f70:	9b06      	ldr	r3, [sp, #24]
 8014f72:	eb03 0908 	add.w	r9, r3, r8
 8014f76:	b136      	cbz	r6, 8014f86 <_DrawBitmap+0x176>
 8014f78:	68b3      	ldr	r3, [r6, #8]
 8014f7a:	464a      	mov	r2, r9
 8014f7c:	9903      	ldr	r1, [sp, #12]
 8014f7e:	4630      	mov	r0, r6
 8014f80:	685f      	ldr	r7, [r3, #4]
 8014f82:	9b02      	ldr	r3, [sp, #8]
 8014f84:	47b8      	blx	r7
 8014f86:	9f03      	ldr	r7, [sp, #12]
 8014f88:	9b05      	ldr	r3, [sp, #20]
 8014f8a:	f834 0017 	ldrh.w	r0, [r4, r7, lsl #1]
 8014f8e:	691b      	ldr	r3, [r3, #16]
 8014f90:	685b      	ldr	r3, [r3, #4]
 8014f92:	4798      	blx	r3
 8014f94:	f845 0027 	str.w	r0, [r5, r7, lsl #2]
 8014f98:	b12e      	cbz	r6, 8014fa6 <_DrawBitmap+0x196>
 8014f9a:	68b3      	ldr	r3, [r6, #8]
 8014f9c:	464a      	mov	r2, r9
 8014f9e:	4639      	mov	r1, r7
 8014fa0:	4630      	mov	r0, r6
 8014fa2:	681b      	ldr	r3, [r3, #0]
 8014fa4:	4798      	blx	r3
 8014fa6:	3701      	adds	r7, #1
 8014fa8:	4557      	cmp	r7, sl
 8014faa:	d1ed      	bne.n	8014f88 <_DrawBitmap+0x178>
 8014fac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014fae:	f108 0801 	add.w	r8, r8, #1
 8014fb2:	441c      	add	r4, r3
 8014fb4:	9b08      	ldr	r3, [sp, #32]
 8014fb6:	441d      	add	r5, r3
 8014fb8:	e7d6      	b.n	8014f68 <_DrawBitmap+0x158>
 8014fba:	2e00      	cmp	r6, #0
 8014fbc:	f040 82b4 	bne.w	8015528 <_DrawBitmap+0x718>
 8014fc0:	e2b5      	b.n	801552e <_DrawBitmap+0x71e>
 8014fc2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8014fc4:	2b08      	cmp	r3, #8
 8014fc6:	f040 8081 	bne.w	80150cc <_DrawBitmap+0x2bc>
 8014fca:	9a03      	ldr	r2, [sp, #12]
 8014fcc:	f06f 0303 	mvn.w	r3, #3
 8014fd0:	9e06      	ldr	r6, [sp, #24]
 8014fd2:	4353      	muls	r3, r2
 8014fd4:	f8df 90dc 	ldr.w	r9, [pc, #220]	; 80150b4 <_DrawBitmap+0x2a4>
 8014fd8:	9304      	str	r3, [sp, #16]
 8014fda:	9b02      	ldr	r3, [sp, #8]
 8014fdc:	4413      	add	r3, r2
 8014fde:	9305      	str	r3, [sp, #20]
 8014fe0:	9b06      	ldr	r3, [sp, #24]
 8014fe2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8014fe4:	1af3      	subs	r3, r6, r3
 8014fe6:	429a      	cmp	r2, r3
 8014fe8:	f340 829c 	ble.w	8015524 <_DrawBitmap+0x714>
 8014fec:	f8d9 3000 	ldr.w	r3, [r9]
 8014ff0:	7c1b      	ldrb	r3, [r3, #16]
 8014ff2:	f1bb 0f00 	cmp.w	fp, #0
 8014ff6:	d032      	beq.n	801505e <_DrawBitmap+0x24e>
 8014ff8:	f013 0303 	ands.w	r3, r3, #3
 8014ffc:	d00a      	beq.n	8015014 <_DrawBitmap+0x204>
 8014ffe:	2b02      	cmp	r3, #2
 8015000:	d15e      	bne.n	80150c0 <_DrawBitmap+0x2b0>
 8015002:	9b04      	ldr	r3, [sp, #16]
 8015004:	f104 3aff 	add.w	sl, r4, #4294967295
 8015008:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
 801500c:	18eb      	adds	r3, r5, r3
 801500e:	9f03      	ldr	r7, [sp, #12]
 8015010:	9307      	str	r3, [sp, #28]
 8015012:	e01f      	b.n	8015054 <_DrawBitmap+0x244>
 8015014:	9a02      	ldr	r2, [sp, #8]
 8015016:	4623      	mov	r3, r4
 8015018:	18a1      	adds	r1, r4, r2
 801501a:	462a      	mov	r2, r5
 801501c:	f813 0b01 	ldrb.w	r0, [r3], #1
 8015020:	f85b 0020 	ldr.w	r0, [fp, r0, lsl #2]
 8015024:	428b      	cmp	r3, r1
 8015026:	f842 0b04 	str.w	r0, [r2], #4
 801502a:	d1f7      	bne.n	801501c <_DrawBitmap+0x20c>
 801502c:	e048      	b.n	80150c0 <_DrawBitmap+0x2b0>
 801502e:	f85b 3023 	ldr.w	r3, [fp, r3, lsl #2]
 8015032:	9a07      	ldr	r2, [sp, #28]
 8015034:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 8015038:	f1b8 0f00 	cmp.w	r8, #0
 801503c:	d006      	beq.n	801504c <_DrawBitmap+0x23c>
 801503e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8015042:	4632      	mov	r2, r6
 8015044:	4639      	mov	r1, r7
 8015046:	4640      	mov	r0, r8
 8015048:	681b      	ldr	r3, [r3, #0]
 801504a:	4798      	blx	r3
 801504c:	3701      	adds	r7, #1
 801504e:	9b05      	ldr	r3, [sp, #20]
 8015050:	42bb      	cmp	r3, r7
 8015052:	d035      	beq.n	80150c0 <_DrawBitmap+0x2b0>
 8015054:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 8015058:	2b00      	cmp	r3, #0
 801505a:	d0f7      	beq.n	801504c <_DrawBitmap+0x23c>
 801505c:	e7e7      	b.n	801502e <_DrawBitmap+0x21e>
 801505e:	f013 0303 	ands.w	r3, r3, #3
 8015062:	d00a      	beq.n	801507a <_DrawBitmap+0x26a>
 8015064:	2b02      	cmp	r3, #2
 8015066:	d12b      	bne.n	80150c0 <_DrawBitmap+0x2b0>
 8015068:	9b04      	ldr	r3, [sp, #16]
 801506a:	f104 3aff 	add.w	sl, r4, #4294967295
 801506e:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
 8015072:	18eb      	adds	r3, r5, r3
 8015074:	9f03      	ldr	r7, [sp, #12]
 8015076:	9307      	str	r3, [sp, #28]
 8015078:	e017      	b.n	80150aa <_DrawBitmap+0x29a>
 801507a:	4b10      	ldr	r3, [pc, #64]	; (80150bc <_DrawBitmap+0x2ac>)
 801507c:	4621      	mov	r1, r4
 801507e:	9a02      	ldr	r2, [sp, #8]
 8015080:	4628      	mov	r0, r5
 8015082:	681b      	ldr	r3, [r3, #0]
 8015084:	4798      	blx	r3
 8015086:	e01b      	b.n	80150c0 <_DrawBitmap+0x2b0>
 8015088:	9a07      	ldr	r2, [sp, #28]
 801508a:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 801508e:	f1b8 0f00 	cmp.w	r8, #0
 8015092:	d006      	beq.n	80150a2 <_DrawBitmap+0x292>
 8015094:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8015098:	4632      	mov	r2, r6
 801509a:	4639      	mov	r1, r7
 801509c:	4640      	mov	r0, r8
 801509e:	681b      	ldr	r3, [r3, #0]
 80150a0:	4798      	blx	r3
 80150a2:	3701      	adds	r7, #1
 80150a4:	9b05      	ldr	r3, [sp, #20]
 80150a6:	42bb      	cmp	r3, r7
 80150a8:	d00a      	beq.n	80150c0 <_DrawBitmap+0x2b0>
 80150aa:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 80150ae:	2b00      	cmp	r3, #0
 80150b0:	d0f7      	beq.n	80150a2 <_DrawBitmap+0x292>
 80150b2:	e7e9      	b.n	8015088 <_DrawBitmap+0x278>
 80150b4:	2000003c 	.word	0x2000003c
 80150b8:	20000048 	.word	0x20000048
 80150bc:	20000050 	.word	0x20000050
 80150c0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80150c2:	3601      	adds	r6, #1
 80150c4:	441c      	add	r4, r3
 80150c6:	9b08      	ldr	r3, [sp, #32]
 80150c8:	441d      	add	r5, r3
 80150ca:	e789      	b.n	8014fe0 <_DrawBitmap+0x1d0>
 80150cc:	4bb3      	ldr	r3, [pc, #716]	; (801539c <_DrawBitmap+0x58c>)
 80150ce:	f1bb 0f00 	cmp.w	fp, #0
 80150d2:	bf08      	it	eq
 80150d4:	469b      	moveq	fp, r3
 80150d6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80150d8:	005b      	lsls	r3, r3, #1
 80150da:	930a      	str	r3, [sp, #40]	; 0x28
 80150dc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80150de:	009b      	lsls	r3, r3, #2
 80150e0:	930b      	str	r3, [sp, #44]	; 0x2c
 80150e2:	1c63      	adds	r3, r4, #1
 80150e4:	9304      	str	r3, [sp, #16]
 80150e6:	1d03      	adds	r3, r0, #4
 80150e8:	9307      	str	r3, [sp, #28]
 80150ea:	9b06      	ldr	r3, [sp, #24]
 80150ec:	9305      	str	r3, [sp, #20]
 80150ee:	9b07      	ldr	r3, [sp, #28]
 80150f0:	9a06      	ldr	r2, [sp, #24]
 80150f2:	1f1c      	subs	r4, r3, #4
 80150f4:	9b04      	ldr	r3, [sp, #16]
 80150f6:	f103 3aff 	add.w	sl, r3, #4294967295
 80150fa:	9b05      	ldr	r3, [sp, #20]
 80150fc:	1a9b      	subs	r3, r3, r2
 80150fe:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8015100:	429a      	cmp	r2, r3
 8015102:	f340 820f 	ble.w	8015524 <_DrawBitmap+0x714>
 8015106:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8015108:	2b02      	cmp	r3, #2
 801510a:	f000 809b 	beq.w	8015244 <_DrawBitmap+0x434>
 801510e:	2b04      	cmp	r3, #4
 8015110:	f000 8132 	beq.w	8015378 <_DrawBitmap+0x568>
 8015114:	2b01      	cmp	r3, #1
 8015116:	f040 81f9 	bne.w	801550c <_DrawBitmap+0x6fc>
 801511a:	4ba1      	ldr	r3, [pc, #644]	; (80153a0 <_DrawBitmap+0x590>)
 801511c:	681b      	ldr	r3, [r3, #0]
 801511e:	6e18      	ldr	r0, [r3, #96]	; 0x60
 8015120:	f7f5 fc16 	bl	800a950 <GUI_ALLOC_LockH>
 8015124:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8015126:	4a9f      	ldr	r2, [pc, #636]	; (80153a4 <_DrawBitmap+0x594>)
 8015128:	f1c3 0508 	rsb	r5, r3, #8
 801512c:	9b04      	ldr	r3, [sp, #16]
 801512e:	900e      	str	r0, [sp, #56]	; 0x38
 8015130:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8015134:	9f02      	ldr	r7, [sp, #8]
 8015136:	5cd6      	ldrb	r6, [r2, r3]
 8015138:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801513a:	411e      	asrs	r6, r3
 801513c:	4b98      	ldr	r3, [pc, #608]	; (80153a0 <_DrawBitmap+0x590>)
 801513e:	681b      	ldr	r3, [r3, #0]
 8015140:	7c1b      	ldrb	r3, [r3, #16]
 8015142:	f003 0303 	and.w	r3, r3, #3
 8015146:	2b02      	cmp	r3, #2
 8015148:	d01d      	beq.n	8015186 <_DrawBitmap+0x376>
 801514a:	2b03      	cmp	r3, #3
 801514c:	d056      	beq.n	80151fc <_DrawBitmap+0x3ec>
 801514e:	2b01      	cmp	r3, #1
 8015150:	d054      	beq.n	80151fc <_DrawBitmap+0x3ec>
 8015152:	42bd      	cmp	r5, r7
 8015154:	4622      	mov	r2, r4
 8015156:	bf28      	it	cs
 8015158:	463d      	movcs	r5, r7
 801515a:	1b7f      	subs	r7, r7, r5
 801515c:	462b      	mov	r3, r5
 801515e:	f006 0101 	and.w	r1, r6, #1
 8015162:	3b01      	subs	r3, #1
 8015164:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8015168:	f85b 1021 	ldr.w	r1, [fp, r1, lsl #2]
 801516c:	f842 1b04 	str.w	r1, [r2], #4
 8015170:	d1f5      	bne.n	801515e <_DrawBitmap+0x34e>
 8015172:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 8015176:	2f00      	cmp	r7, #0
 8015178:	d060      	beq.n	801523c <_DrawBitmap+0x42c>
 801517a:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 801517e:	2508      	movs	r5, #8
 8015180:	4a88      	ldr	r2, [pc, #544]	; (80153a4 <_DrawBitmap+0x594>)
 8015182:	5cd6      	ldrb	r6, [r2, r3]
 8015184:	e7e5      	b.n	8015152 <_DrawBitmap+0x342>
 8015186:	f8db 3004 	ldr.w	r3, [fp, #4]
 801518a:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
 801518e:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8015192:	9309      	str	r3, [sp, #36]	; 0x24
 8015194:	42bd      	cmp	r5, r7
 8015196:	bf28      	it	cs
 8015198:	463d      	movcs	r5, r7
 801519a:	1b7f      	subs	r7, r7, r5
 801519c:	f1b9 0f00 	cmp.w	r9, #0
 80151a0:	d021      	beq.n	80151e6 <_DrawBitmap+0x3d6>
 80151a2:	b91e      	cbnz	r6, 80151ac <_DrawBitmap+0x39c>
 80151a4:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 80151a8:	44a8      	add	r8, r5
 80151aa:	e020      	b.n	80151ee <_DrawBitmap+0x3de>
 80151ac:	07f0      	lsls	r0, r6, #31
 80151ae:	d508      	bpl.n	80151c2 <_DrawBitmap+0x3b2>
 80151b0:	f8d9 3008 	ldr.w	r3, [r9, #8]
 80151b4:	4641      	mov	r1, r8
 80151b6:	9a05      	ldr	r2, [sp, #20]
 80151b8:	4648      	mov	r0, r9
 80151ba:	681b      	ldr	r3, [r3, #0]
 80151bc:	4798      	blx	r3
 80151be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80151c0:	6023      	str	r3, [r4, #0]
 80151c2:	3d01      	subs	r5, #1
 80151c4:	f108 0801 	add.w	r8, r8, #1
 80151c8:	f104 0404 	add.w	r4, r4, #4
 80151cc:	d00f      	beq.n	80151ee <_DrawBitmap+0x3de>
 80151ce:	0876      	lsrs	r6, r6, #1
 80151d0:	e7e7      	b.n	80151a2 <_DrawBitmap+0x392>
 80151d2:	07f1      	lsls	r1, r6, #31
 80151d4:	f104 0404 	add.w	r4, r4, #4
 80151d8:	bf44      	itt	mi
 80151da:	9b09      	ldrmi	r3, [sp, #36]	; 0x24
 80151dc:	f844 3c04 	strmi.w	r3, [r4, #-4]
 80151e0:	3d01      	subs	r5, #1
 80151e2:	d004      	beq.n	80151ee <_DrawBitmap+0x3de>
 80151e4:	0876      	lsrs	r6, r6, #1
 80151e6:	2e00      	cmp	r6, #0
 80151e8:	d1f3      	bne.n	80151d2 <_DrawBitmap+0x3c2>
 80151ea:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 80151ee:	b32f      	cbz	r7, 801523c <_DrawBitmap+0x42c>
 80151f0:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 80151f4:	2508      	movs	r5, #8
 80151f6:	4a6b      	ldr	r2, [pc, #428]	; (80153a4 <_DrawBitmap+0x594>)
 80151f8:	5cd6      	ldrb	r6, [r2, r3]
 80151fa:	e7cb      	b.n	8015194 <_DrawBitmap+0x384>
 80151fc:	6803      	ldr	r3, [r0, #0]
 80151fe:	691b      	ldr	r3, [r3, #16]
 8015200:	689b      	ldr	r3, [r3, #8]
 8015202:	4798      	blx	r3
 8015204:	42bd      	cmp	r5, r7
 8015206:	4623      	mov	r3, r4
 8015208:	bf28      	it	cs
 801520a:	463d      	movcs	r5, r7
 801520c:	1b7f      	subs	r7, r7, r5
 801520e:	4629      	mov	r1, r5
 8015210:	07f2      	lsls	r2, r6, #31
 8015212:	f103 0304 	add.w	r3, r3, #4
 8015216:	ea4f 0656 	mov.w	r6, r6, lsr #1
 801521a:	bf42      	ittt	mi
 801521c:	f853 2c04 	ldrmi.w	r2, [r3, #-4]
 8015220:	4042      	eormi	r2, r0
 8015222:	f843 2c04 	strmi.w	r2, [r3, #-4]
 8015226:	3901      	subs	r1, #1
 8015228:	d1f2      	bne.n	8015210 <_DrawBitmap+0x400>
 801522a:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 801522e:	b12f      	cbz	r7, 801523c <_DrawBitmap+0x42c>
 8015230:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
 8015234:	2508      	movs	r5, #8
 8015236:	4a5b      	ldr	r2, [pc, #364]	; (80153a4 <_DrawBitmap+0x594>)
 8015238:	5cd6      	ldrb	r6, [r2, r3]
 801523a:	e7e3      	b.n	8015204 <_DrawBitmap+0x3f4>
 801523c:	a80e      	add	r0, sp, #56	; 0x38
 801523e:	f7f5 fb95 	bl	800a96c <GUI_ALLOC_UnlockH>
 8015242:	e163      	b.n	801550c <_DrawBitmap+0x6fc>
 8015244:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8015246:	f1c3 0504 	rsb	r5, r3, #4
 801524a:	9b04      	ldr	r3, [sp, #16]
 801524c:	f813 6c01 	ldrb.w	r6, [r3, #-1]
 8015250:	b2ed      	uxtb	r5, r5
 8015252:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015254:	409e      	lsls	r6, r3
 8015256:	4b52      	ldr	r3, [pc, #328]	; (80153a0 <_DrawBitmap+0x590>)
 8015258:	681b      	ldr	r3, [r3, #0]
 801525a:	b2f6      	uxtb	r6, r6
 801525c:	7c1b      	ldrb	r3, [r3, #16]
 801525e:	f003 0303 	and.w	r3, r3, #3
 8015262:	2b01      	cmp	r3, #1
 8015264:	d009      	beq.n	801527a <_DrawBitmap+0x46a>
 8015266:	d30a      	bcc.n	801527e <_DrawBitmap+0x46e>
 8015268:	2b02      	cmp	r3, #2
 801526a:	f040 814f 	bne.w	801550c <_DrawBitmap+0x6fc>
 801526e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015270:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8015274:	9309      	str	r3, [sp, #36]	; 0x24
 8015276:	9f03      	ldr	r7, [sp, #12]
 8015278:	e035      	b.n	80152e6 <_DrawBitmap+0x4d6>
 801527a:	9b02      	ldr	r3, [sp, #8]
 801527c:	e075      	b.n	801536a <_DrawBitmap+0x55a>
 801527e:	9b02      	ldr	r3, [sp, #8]
 8015280:	429d      	cmp	r5, r3
 8015282:	4621      	mov	r1, r4
 8015284:	bfc8      	it	gt
 8015286:	b2dd      	uxtbgt	r5, r3
 8015288:	1b5b      	subs	r3, r3, r5
 801528a:	462a      	mov	r2, r5
 801528c:	09b0      	lsrs	r0, r6, #6
 801528e:	3a01      	subs	r2, #1
 8015290:	00b6      	lsls	r6, r6, #2
 8015292:	f85b 0020 	ldr.w	r0, [fp, r0, lsl #2]
 8015296:	f012 02ff 	ands.w	r2, r2, #255	; 0xff
 801529a:	b2f6      	uxtb	r6, r6
 801529c:	f841 0b04 	str.w	r0, [r1], #4
 80152a0:	d1f4      	bne.n	801528c <_DrawBitmap+0x47c>
 80152a2:	3d01      	subs	r5, #1
 80152a4:	b2ed      	uxtb	r5, r5
 80152a6:	3501      	adds	r5, #1
 80152a8:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 80152ac:	2b00      	cmp	r3, #0
 80152ae:	f000 812d 	beq.w	801550c <_DrawBitmap+0x6fc>
 80152b2:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
 80152b6:	2504      	movs	r5, #4
 80152b8:	e7e2      	b.n	8015280 <_DrawBitmap+0x470>
 80152ba:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 80152be:	d125      	bne.n	801530c <_DrawBitmap+0x4fc>
 80152c0:	f109 0901 	add.w	r9, r9, #1
 80152c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80152c6:	00b6      	lsls	r6, r6, #2
 80152c8:	4599      	cmp	r9, r3
 80152ca:	b2f6      	uxtb	r6, r6
 80152cc:	d1f5      	bne.n	80152ba <_DrawBitmap+0x4aa>
 80152ce:	1c6b      	adds	r3, r5, #1
 80152d0:	3701      	adds	r7, #1
 80152d2:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 80152d6:	442f      	add	r7, r5
 80152d8:	f1b8 0f00 	cmp.w	r8, #0
 80152dc:	f000 8116 	beq.w	801550c <_DrawBitmap+0x6fc>
 80152e0:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
 80152e4:	2504      	movs	r5, #4
 80152e6:	4545      	cmp	r5, r8
 80152e8:	f107 0301 	add.w	r3, r7, #1
 80152ec:	46b9      	mov	r9, r7
 80152ee:	bfc8      	it	gt
 80152f0:	fa5f f588 	uxtbgt.w	r5, r8
 80152f4:	ebc5 0808 	rsb	r8, r5, r8
 80152f8:	3d01      	subs	r5, #1
 80152fa:	b2ed      	uxtb	r5, r5
 80152fc:	442b      	add	r3, r5
 80152fe:	930d      	str	r3, [sp, #52]	; 0x34
 8015300:	f06f 0303 	mvn.w	r3, #3
 8015304:	fb03 4307 	mla	r3, r3, r7, r4
 8015308:	930c      	str	r3, [sp, #48]	; 0x30
 801530a:	e7d6      	b.n	80152ba <_DrawBitmap+0x4aa>
 801530c:	09b3      	lsrs	r3, r6, #6
 801530e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015310:	f85b 3023 	ldr.w	r3, [fp, r3, lsl #2]
 8015314:	f842 3029 	str.w	r3, [r2, r9, lsl #2]
 8015318:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801531a:	2b00      	cmp	r3, #0
 801531c:	d0d0      	beq.n	80152c0 <_DrawBitmap+0x4b0>
 801531e:	689b      	ldr	r3, [r3, #8]
 8015320:	4649      	mov	r1, r9
 8015322:	9a05      	ldr	r2, [sp, #20]
 8015324:	681b      	ldr	r3, [r3, #0]
 8015326:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015328:	4798      	blx	r3
 801532a:	e7c9      	b.n	80152c0 <_DrawBitmap+0x4b0>
 801532c:	f016 0fc0 	tst.w	r6, #192	; 0xc0
 8015330:	f102 32ff 	add.w	r2, r2, #4294967295
 8015334:	ea4f 0686 	mov.w	r6, r6, lsl #2
 8015338:	f100 0004 	add.w	r0, r0, #4
 801533c:	bf18      	it	ne
 801533e:	f850 1c04 	ldrne.w	r1, [r0, #-4]
 8015342:	b2f6      	uxtb	r6, r6
 8015344:	bf1c      	itt	ne
 8015346:	f081 01ff 	eorne.w	r1, r1, #255	; 0xff
 801534a:	f840 1c04 	strne.w	r1, [r0, #-4]
 801534e:	f012 02ff 	ands.w	r2, r2, #255	; 0xff
 8015352:	d1eb      	bne.n	801532c <_DrawBitmap+0x51c>
 8015354:	3d01      	subs	r5, #1
 8015356:	b2ed      	uxtb	r5, r5
 8015358:	3501      	adds	r5, #1
 801535a:	eb04 0485 	add.w	r4, r4, r5, lsl #2
 801535e:	2b00      	cmp	r3, #0
 8015360:	f000 80d4 	beq.w	801550c <_DrawBitmap+0x6fc>
 8015364:	f81a 6f01 	ldrb.w	r6, [sl, #1]!
 8015368:	2504      	movs	r5, #4
 801536a:	429d      	cmp	r5, r3
 801536c:	4620      	mov	r0, r4
 801536e:	bfc8      	it	gt
 8015370:	b2dd      	uxtbgt	r5, r3
 8015372:	1b5b      	subs	r3, r3, r5
 8015374:	462a      	mov	r2, r5
 8015376:	e7d9      	b.n	801532c <_DrawBitmap+0x51c>
 8015378:	9b04      	ldr	r3, [sp, #16]
 801537a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801537c:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8015380:	4093      	lsls	r3, r2
 8015382:	4a07      	ldr	r2, [pc, #28]	; (80153a0 <_DrawBitmap+0x590>)
 8015384:	6812      	ldr	r2, [r2, #0]
 8015386:	b2dd      	uxtb	r5, r3
 8015388:	7c12      	ldrb	r2, [r2, #16]
 801538a:	f002 0203 	and.w	r2, r2, #3
 801538e:	2a01      	cmp	r2, #1
 8015390:	f000 8093 	beq.w	80154ba <_DrawBitmap+0x6aa>
 8015394:	d308      	bcc.n	80153a8 <_DrawBitmap+0x598>
 8015396:	2a02      	cmp	r2, #2
 8015398:	d037      	beq.n	801540a <_DrawBitmap+0x5fa>
 801539a:	e0b7      	b.n	801550c <_DrawBitmap+0x6fc>
 801539c:	0801e720 	.word	0x0801e720
 80153a0:	2000003c 	.word	0x2000003c
 80153a4:	0801dd68 	.word	0x0801dd68
 80153a8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80153aa:	b153      	cbz	r3, 80153c2 <_DrawBitmap+0x5b2>
 80153ac:	092d      	lsrs	r5, r5, #4
 80153ae:	9a04      	ldr	r2, [sp, #16]
 80153b0:	f85b 3025 	ldr.w	r3, [fp, r5, lsl #2]
 80153b4:	4692      	mov	sl, r2
 80153b6:	6023      	str	r3, [r4, #0]
 80153b8:	9b02      	ldr	r3, [sp, #8]
 80153ba:	9c07      	ldr	r4, [sp, #28]
 80153bc:	3b01      	subs	r3, #1
 80153be:	7815      	ldrb	r5, [r2, #0]
 80153c0:	e000      	b.n	80153c4 <_DrawBitmap+0x5b4>
 80153c2:	9b02      	ldr	r3, [sp, #8]
 80153c4:	2b01      	cmp	r3, #1
 80153c6:	dd18      	ble.n	80153fa <_DrawBitmap+0x5ea>
 80153c8:	1058      	asrs	r0, r3, #1
 80153ca:	f104 0208 	add.w	r2, r4, #8
 80153ce:	f003 0301 	and.w	r3, r3, #1
 80153d2:	eb0a 0600 	add.w	r6, sl, r0
 80153d6:	0929      	lsrs	r1, r5, #4
 80153d8:	f005 050f 	and.w	r5, r5, #15
 80153dc:	3208      	adds	r2, #8
 80153de:	f85b 1021 	ldr.w	r1, [fp, r1, lsl #2]
 80153e2:	f842 1c10 	str.w	r1, [r2, #-16]
 80153e6:	f85b 1025 	ldr.w	r1, [fp, r5, lsl #2]
 80153ea:	f842 1c0c 	str.w	r1, [r2, #-12]
 80153ee:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
 80153f2:	45b2      	cmp	sl, r6
 80153f4:	d1ef      	bne.n	80153d6 <_DrawBitmap+0x5c6>
 80153f6:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
 80153fa:	2b00      	cmp	r3, #0
 80153fc:	f000 8086 	beq.w	801550c <_DrawBitmap+0x6fc>
 8015400:	092d      	lsrs	r5, r5, #4
 8015402:	f85b 3025 	ldr.w	r3, [fp, r5, lsl #2]
 8015406:	6023      	str	r3, [r4, #0]
 8015408:	e080      	b.n	801550c <_DrawBitmap+0x6fc>
 801540a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801540c:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801540e:	b1ba      	cbz	r2, 8015440 <_DrawBitmap+0x630>
 8015410:	f013 0ff0 	tst.w	r3, #240	; 0xf0
 8015414:	d00a      	beq.n	801542c <_DrawBitmap+0x61c>
 8015416:	092d      	lsrs	r5, r5, #4
 8015418:	f85b 3025 	ldr.w	r3, [fp, r5, lsl #2]
 801541c:	6023      	str	r3, [r4, #0]
 801541e:	b12e      	cbz	r6, 801542c <_DrawBitmap+0x61c>
 8015420:	68b3      	ldr	r3, [r6, #8]
 8015422:	4630      	mov	r0, r6
 8015424:	9a05      	ldr	r2, [sp, #20]
 8015426:	681b      	ldr	r3, [r3, #0]
 8015428:	9903      	ldr	r1, [sp, #12]
 801542a:	4798      	blx	r3
 801542c:	9b03      	ldr	r3, [sp, #12]
 801542e:	9c07      	ldr	r4, [sp, #28]
 8015430:	1c5f      	adds	r7, r3, #1
 8015432:	9b02      	ldr	r3, [sp, #8]
 8015434:	f103 38ff 	add.w	r8, r3, #4294967295
 8015438:	9b04      	ldr	r3, [sp, #16]
 801543a:	781d      	ldrb	r5, [r3, #0]
 801543c:	469a      	mov	sl, r3
 801543e:	e00f      	b.n	8015460 <_DrawBitmap+0x650>
 8015440:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8015444:	9f03      	ldr	r7, [sp, #12]
 8015446:	e00b      	b.n	8015460 <_DrawBitmap+0x650>
 8015448:	f015 0ff0 	tst.w	r5, #240	; 0xf0
 801544c:	d10c      	bne.n	8015468 <_DrawBitmap+0x658>
 801544e:	f015 050f 	ands.w	r5, r5, #15
 8015452:	d116      	bne.n	8015482 <_DrawBitmap+0x672>
 8015454:	3408      	adds	r4, #8
 8015456:	3702      	adds	r7, #2
 8015458:	f1a8 0802 	sub.w	r8, r8, #2
 801545c:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
 8015460:	f1b8 0f01 	cmp.w	r8, #1
 8015464:	dcf0      	bgt.n	8015448 <_DrawBitmap+0x638>
 8015466:	e018      	b.n	801549a <_DrawBitmap+0x68a>
 8015468:	092b      	lsrs	r3, r5, #4
 801546a:	f85b 3023 	ldr.w	r3, [fp, r3, lsl #2]
 801546e:	6023      	str	r3, [r4, #0]
 8015470:	2e00      	cmp	r6, #0
 8015472:	d0ec      	beq.n	801544e <_DrawBitmap+0x63e>
 8015474:	68b3      	ldr	r3, [r6, #8]
 8015476:	4639      	mov	r1, r7
 8015478:	9a05      	ldr	r2, [sp, #20]
 801547a:	4630      	mov	r0, r6
 801547c:	681b      	ldr	r3, [r3, #0]
 801547e:	4798      	blx	r3
 8015480:	e7e5      	b.n	801544e <_DrawBitmap+0x63e>
 8015482:	f85b 3025 	ldr.w	r3, [fp, r5, lsl #2]
 8015486:	6063      	str	r3, [r4, #4]
 8015488:	2e00      	cmp	r6, #0
 801548a:	d0e3      	beq.n	8015454 <_DrawBitmap+0x644>
 801548c:	68b3      	ldr	r3, [r6, #8]
 801548e:	1c79      	adds	r1, r7, #1
 8015490:	9a05      	ldr	r2, [sp, #20]
 8015492:	4630      	mov	r0, r6
 8015494:	681b      	ldr	r3, [r3, #0]
 8015496:	4798      	blx	r3
 8015498:	e7dc      	b.n	8015454 <_DrawBitmap+0x644>
 801549a:	f1b8 0f00 	cmp.w	r8, #0
 801549e:	d035      	beq.n	801550c <_DrawBitmap+0x6fc>
 80154a0:	092d      	lsrs	r5, r5, #4
 80154a2:	d033      	beq.n	801550c <_DrawBitmap+0x6fc>
 80154a4:	f85b 3025 	ldr.w	r3, [fp, r5, lsl #2]
 80154a8:	6023      	str	r3, [r4, #0]
 80154aa:	b37e      	cbz	r6, 801550c <_DrawBitmap+0x6fc>
 80154ac:	68b3      	ldr	r3, [r6, #8]
 80154ae:	4639      	mov	r1, r7
 80154b0:	9a05      	ldr	r2, [sp, #20]
 80154b2:	4630      	mov	r0, r6
 80154b4:	681b      	ldr	r3, [r3, #0]
 80154b6:	4798      	blx	r3
 80154b8:	e028      	b.n	801550c <_DrawBitmap+0x6fc>
 80154ba:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80154bc:	9a02      	ldr	r2, [sp, #8]
 80154be:	f1c3 0302 	rsb	r3, r3, #2
 80154c2:	b2db      	uxtb	r3, r3
 80154c4:	4293      	cmp	r3, r2
 80154c6:	4626      	mov	r6, r4
 80154c8:	bfc8      	it	gt
 80154ca:	b2d3      	uxtbgt	r3, r2
 80154cc:	1ad2      	subs	r2, r2, r3
 80154ce:	4619      	mov	r1, r3
 80154d0:	f015 0fc0 	tst.w	r5, #192	; 0xc0
 80154d4:	f101 31ff 	add.w	r1, r1, #4294967295
 80154d8:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80154dc:	f106 0604 	add.w	r6, r6, #4
 80154e0:	bf18      	it	ne
 80154e2:	f856 0c04 	ldrne.w	r0, [r6, #-4]
 80154e6:	b2ed      	uxtb	r5, r5
 80154e8:	bf1c      	itt	ne
 80154ea:	f080 00ff 	eorne.w	r0, r0, #255	; 0xff
 80154ee:	f846 0c04 	strne.w	r0, [r6, #-4]
 80154f2:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 80154f6:	d1eb      	bne.n	80154d0 <_DrawBitmap+0x6c0>
 80154f8:	3b01      	subs	r3, #1
 80154fa:	b2db      	uxtb	r3, r3
 80154fc:	3301      	adds	r3, #1
 80154fe:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8015502:	b11a      	cbz	r2, 801550c <_DrawBitmap+0x6fc>
 8015504:	f81a 5f01 	ldrb.w	r5, [sl, #1]!
 8015508:	2302      	movs	r3, #2
 801550a:	e7db      	b.n	80154c4 <_DrawBitmap+0x6b4>
 801550c:	9b05      	ldr	r3, [sp, #20]
 801550e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015510:	3301      	adds	r3, #1
 8015512:	9305      	str	r3, [sp, #20]
 8015514:	9b04      	ldr	r3, [sp, #16]
 8015516:	4413      	add	r3, r2
 8015518:	9a08      	ldr	r2, [sp, #32]
 801551a:	9304      	str	r3, [sp, #16]
 801551c:	9b07      	ldr	r3, [sp, #28]
 801551e:	4413      	add	r3, r2
 8015520:	9307      	str	r3, [sp, #28]
 8015522:	e5e4      	b.n	80150ee <_DrawBitmap+0x2de>
 8015524:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015526:	b113      	cbz	r3, 801552e <_DrawBitmap+0x71e>
 8015528:	a80f      	add	r0, sp, #60	; 0x3c
 801552a:	f7f5 fa1f 	bl	800a96c <GUI_ALLOC_UnlockH>
 801552e:	b011      	add	sp, #68	; 0x44
 8015530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015534 <_ClipX>:
 8015534:	b570      	push	{r4, r5, r6, lr}
 8015536:	4c0f      	ldr	r4, [pc, #60]	; (8015574 <_ClipX+0x40>)
 8015538:	680d      	ldr	r5, [r1, #0]
 801553a:	6826      	ldr	r6, [r4, #0]
 801553c:	4405      	add	r5, r0
 801553e:	f9b6 400c 	ldrsh.w	r4, [r6, #12]
 8015542:	3d01      	subs	r5, #1
 8015544:	1b2c      	subs	r4, r5, r4
 8015546:	2c00      	cmp	r4, #0
 8015548:	bfc8      	it	gt
 801554a:	1b00      	subgt	r0, r0, r4
 801554c:	6010      	str	r0, [r2, #0]
 801554e:	f9b6 0008 	ldrsh.w	r0, [r6, #8]
 8015552:	680c      	ldr	r4, [r1, #0]
 8015554:	42a0      	cmp	r0, r4
 8015556:	dd09      	ble.n	801556c <_ClipX+0x38>
 8015558:	1b00      	subs	r0, r0, r4
 801555a:	6018      	str	r0, [r3, #0]
 801555c:	680c      	ldr	r4, [r1, #0]
 801555e:	4420      	add	r0, r4
 8015560:	6008      	str	r0, [r1, #0]
 8015562:	6811      	ldr	r1, [r2, #0]
 8015564:	681b      	ldr	r3, [r3, #0]
 8015566:	1ac9      	subs	r1, r1, r3
 8015568:	6011      	str	r1, [r2, #0]
 801556a:	bd70      	pop	{r4, r5, r6, pc}
 801556c:	2200      	movs	r2, #0
 801556e:	601a      	str	r2, [r3, #0]
 8015570:	bd70      	pop	{r4, r5, r6, pc}
 8015572:	bf00      	nop
 8015574:	2000003c 	.word	0x2000003c

08015578 <_ClipY>:
 8015578:	b570      	push	{r4, r5, r6, lr}
 801557a:	4c0f      	ldr	r4, [pc, #60]	; (80155b8 <_ClipY+0x40>)
 801557c:	680d      	ldr	r5, [r1, #0]
 801557e:	6826      	ldr	r6, [r4, #0]
 8015580:	4405      	add	r5, r0
 8015582:	f9b6 400e 	ldrsh.w	r4, [r6, #14]
 8015586:	3d01      	subs	r5, #1
 8015588:	1b2c      	subs	r4, r5, r4
 801558a:	2c00      	cmp	r4, #0
 801558c:	bfc8      	it	gt
 801558e:	1b00      	subgt	r0, r0, r4
 8015590:	6010      	str	r0, [r2, #0]
 8015592:	f9b6 000a 	ldrsh.w	r0, [r6, #10]
 8015596:	680c      	ldr	r4, [r1, #0]
 8015598:	4284      	cmp	r4, r0
 801559a:	da09      	bge.n	80155b0 <_ClipY+0x38>
 801559c:	1b00      	subs	r0, r0, r4
 801559e:	6018      	str	r0, [r3, #0]
 80155a0:	680c      	ldr	r4, [r1, #0]
 80155a2:	4420      	add	r0, r4
 80155a4:	6008      	str	r0, [r1, #0]
 80155a6:	6811      	ldr	r1, [r2, #0]
 80155a8:	681b      	ldr	r3, [r3, #0]
 80155aa:	1ac9      	subs	r1, r1, r3
 80155ac:	6011      	str	r1, [r2, #0]
 80155ae:	bd70      	pop	{r4, r5, r6, pc}
 80155b0:	2200      	movs	r2, #0
 80155b2:	601a      	str	r2, [r3, #0]
 80155b4:	bd70      	pop	{r4, r5, r6, pc}
 80155b6:	bf00      	nop
 80155b8:	2000003c 	.word	0x2000003c

080155bc <_WriteToActiveAlpha>:
 80155bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155c0:	b095      	sub	sp, #84	; 0x54
 80155c2:	461f      	mov	r7, r3
 80155c4:	4680      	mov	r8, r0
 80155c6:	910d      	str	r1, [sp, #52]	; 0x34
 80155c8:	920c      	str	r2, [sp, #48]	; 0x30
 80155ca:	f7f5 f9c1 	bl	800a950 <GUI_ALLOC_LockH>
 80155ce:	4603      	mov	r3, r0
 80155d0:	a814      	add	r0, sp, #80	; 0x50
 80155d2:	f9b3 6008 	ldrsh.w	r6, [r3, #8]
 80155d6:	f840 3d18 	str.w	r3, [r0, #-24]!
 80155da:	f9b3 500a 	ldrsh.w	r5, [r3, #10]
 80155de:	681b      	ldr	r3, [r3, #0]
 80155e0:	691b      	ldr	r3, [r3, #16]
 80155e2:	685b      	ldr	r3, [r3, #4]
 80155e4:	9307      	str	r3, [sp, #28]
 80155e6:	f7f5 f9c1 	bl	800a96c <GUI_ALLOC_UnlockH>
 80155ea:	4b43      	ldr	r3, [pc, #268]	; (80156f8 <_WriteToActiveAlpha+0x13c>)
 80155ec:	2108      	movs	r1, #8
 80155ee:	681b      	ldr	r3, [r3, #0]
 80155f0:	7c5a      	ldrb	r2, [r3, #17]
 80155f2:	4b42      	ldr	r3, [pc, #264]	; (80156fc <_WriteToActiveAlpha+0x140>)
 80155f4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80155f8:	68c3      	ldr	r3, [r0, #12]
 80155fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80155fc:	4798      	blx	r3
 80155fe:	2817      	cmp	r0, #23
 8015600:	4604      	mov	r4, r0
 8015602:	d804      	bhi.n	801560e <_WriteToActiveAlpha+0x52>
 8015604:	2803      	cmp	r0, #3
 8015606:	bf14      	ite	ne
 8015608:	4604      	movne	r4, r0
 801560a:	2408      	moveq	r4, #8
 801560c:	e000      	b.n	8015610 <_WriteToActiveAlpha+0x54>
 801560e:	2420      	movs	r4, #32
 8015610:	687b      	ldr	r3, [r7, #4]
 8015612:	2000      	movs	r0, #0
 8015614:	9308      	str	r3, [sp, #32]
 8015616:	683b      	ldr	r3, [r7, #0]
 8015618:	9309      	str	r3, [sp, #36]	; 0x24
 801561a:	f7f6 fc49 	bl	800beb0 <GUI__AllocAlphaBuffer>
 801561e:	2800      	cmp	r0, #0
 8015620:	d166      	bne.n	80156f0 <_WriteToActiveAlpha+0x134>
 8015622:	ab0f      	add	r3, sp, #60	; 0x3c
 8015624:	aa11      	add	r2, sp, #68	; 0x44
 8015626:	a90d      	add	r1, sp, #52	; 0x34
 8015628:	4630      	mov	r0, r6
 801562a:	f7ff ff83 	bl	8015534 <_ClipX>
 801562e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015630:	2b00      	cmp	r3, #0
 8015632:	dd5d      	ble.n	80156f0 <_WriteToActiveAlpha+0x134>
 8015634:	ab10      	add	r3, sp, #64	; 0x40
 8015636:	aa12      	add	r2, sp, #72	; 0x48
 8015638:	a90c      	add	r1, sp, #48	; 0x30
 801563a:	4628      	mov	r0, r5
 801563c:	f7ff ff9c 	bl	8015578 <_ClipY>
 8015640:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015642:	2b00      	cmp	r3, #0
 8015644:	dd54      	ble.n	80156f0 <_WriteToActiveAlpha+0x134>
 8015646:	f8df a0b8 	ldr.w	sl, [pc, #184]	; 8015700 <_WriteToActiveAlpha+0x144>
 801564a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801564c:	4640      	mov	r0, r8
 801564e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015650:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8015652:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
 8015656:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801565a:	920b      	str	r2, [sp, #44]	; 0x2c
 801565c:	930a      	str	r3, [sp, #40]	; 0x28
 801565e:	f7fe ff53 	bl	8014508 <GUI_MEMDEV_GetDataPtr>
 8015662:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015664:	ab13      	add	r3, sp, #76	; 0x4c
 8015666:	4649      	mov	r1, r9
 8015668:	fb05 2206 	mla	r2, r5, r6, r2
 801566c:	9301      	str	r3, [sp, #4]
 801566e:	9b07      	ldr	r3, [sp, #28]
 8015670:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8015674:	4658      	mov	r0, fp
 8015676:	9300      	str	r3, [sp, #0]
 8015678:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801567a:	f7f6 fb37 	bl	800bcec <GUI__DoAlphaBlending>
 801567e:	4605      	mov	r5, r0
 8015680:	2800      	cmp	r0, #0
 8015682:	d035      	beq.n	80156f0 <_WriteToActiveAlpha+0x134>
 8015684:	9b08      	ldr	r3, [sp, #32]
 8015686:	4553      	cmp	r3, sl
 8015688:	d01b      	beq.n	80156c2 <_WriteToActiveAlpha+0x106>
 801568a:	463b      	mov	r3, r7
 801568c:	4622      	mov	r2, r4
 801568e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8015690:	f7fe fc35 	bl	8013efe <GUI__CompactPixelIndicesEx>
 8015694:	b9a8      	cbnz	r0, 80156c2 <_WriteToActiveAlpha+0x106>
 8015696:	f8d7 b010 	ldr.w	fp, [r7, #16]
 801569a:	f1bb 0f00 	cmp.w	fp, #0
 801569e:	d005      	beq.n	80156ac <_WriteToActiveAlpha+0xf0>
 80156a0:	2304      	movs	r3, #4
 80156a2:	4632      	mov	r2, r6
 80156a4:	4629      	mov	r1, r5
 80156a6:	4628      	mov	r0, r5
 80156a8:	47d8      	blx	fp
 80156aa:	e00a      	b.n	80156c2 <_WriteToActiveAlpha+0x106>
 80156ac:	46a9      	mov	r9, r5
 80156ae:	46b3      	mov	fp, r6
 80156b0:	f8d9 0000 	ldr.w	r0, [r9]
 80156b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80156b6:	4798      	blx	r3
 80156b8:	f1bb 0b01 	subs.w	fp, fp, #1
 80156bc:	f849 0b04 	str.w	r0, [r9], #4
 80156c0:	d1f6      	bne.n	80156b0 <_WriteToActiveAlpha+0xf4>
 80156c2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80156c4:	9504      	str	r5, [sp, #16]
 80156c6:	1c4b      	adds	r3, r1, #1
 80156c8:	9402      	str	r4, [sp, #8]
 80156ca:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80156cc:	930c      	str	r3, [sp, #48]	; 0x30
 80156ce:	2300      	movs	r3, #0
 80156d0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80156d2:	9305      	str	r3, [sp, #20]
 80156d4:	9303      	str	r3, [sp, #12]
 80156d6:	2301      	movs	r3, #1
 80156d8:	9301      	str	r3, [sp, #4]
 80156da:	9300      	str	r3, [sp, #0]
 80156dc:	f7f7 f8dc 	bl	800c898 <LCD_DrawBitmap>
 80156e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80156e2:	3301      	adds	r3, #1
 80156e4:	9310      	str	r3, [sp, #64]	; 0x40
 80156e6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80156e8:	3b01      	subs	r3, #1
 80156ea:	9312      	str	r3, [sp, #72]	; 0x48
 80156ec:	2b00      	cmp	r3, #0
 80156ee:	d1ac      	bne.n	801564a <_WriteToActiveAlpha+0x8e>
 80156f0:	b015      	add	sp, #84	; 0x54
 80156f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80156f6:	bf00      	nop
 80156f8:	2000003c 	.word	0x2000003c
 80156fc:	2002db08 	.word	0x2002db08
 8015700:	0800a77f 	.word	0x0800a77f

08015704 <GUI_MEMDEV__WriteToActiveAlpha>:
 8015704:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015708:	4d45      	ldr	r5, [pc, #276]	; (8015820 <GUI_MEMDEV__WriteToActiveAlpha+0x11c>)
 801570a:	b08c      	sub	sp, #48	; 0x30
 801570c:	4b45      	ldr	r3, [pc, #276]	; (8015824 <GUI_MEMDEV__WriteToActiveAlpha+0x120>)
 801570e:	4607      	mov	r7, r0
 8015710:	f8d5 e000 	ldr.w	lr, [r5]
 8015714:	4e44      	ldr	r6, [pc, #272]	; (8015828 <GUI_MEMDEV__WriteToActiveAlpha+0x124>)
 8015716:	f89e 4011 	ldrb.w	r4, [lr, #17]
 801571a:	f8d6 c000 	ldr.w	ip, [r6]
 801571e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8015722:	9105      	str	r1, [sp, #20]
 8015724:	9204      	str	r2, [sp, #16]
 8015726:	6923      	ldr	r3, [r4, #16]
 8015728:	f1bc 0f00 	cmp.w	ip, #0
 801572c:	d012      	beq.n	8015754 <GUI_MEMDEV__WriteToActiveAlpha+0x50>
 801572e:	68e2      	ldr	r2, [r4, #12]
 8015730:	f8de 1060 	ldr.w	r1, [lr, #96]	; 0x60
 8015734:	6812      	ldr	r2, [r2, #0]
 8015736:	b919      	cbnz	r1, 8015740 <GUI_MEMDEV__WriteToActiveAlpha+0x3c>
 8015738:	fab2 f282 	clz	r2, r2
 801573c:	0952      	lsrs	r2, r2, #5
 801573e:	e005      	b.n	801574c <GUI_MEMDEV__WriteToActiveAlpha+0x48>
 8015740:	2a07      	cmp	r2, #7
 8015742:	d004      	beq.n	801574e <GUI_MEMDEV__WriteToActiveAlpha+0x4a>
 8015744:	4a39      	ldr	r2, [pc, #228]	; (801582c <GUI_MEMDEV__WriteToActiveAlpha+0x128>)
 8015746:	1a99      	subs	r1, r3, r2
 8015748:	424a      	negs	r2, r1
 801574a:	414a      	adcs	r2, r1
 801574c:	b92a      	cbnz	r2, 801575a <GUI_MEMDEV__WriteToActiveAlpha+0x56>
 801574e:	9a04      	ldr	r2, [sp, #16]
 8015750:	4638      	mov	r0, r7
 8015752:	9905      	ldr	r1, [sp, #20]
 8015754:	f7ff ff32 	bl	80155bc <_WriteToActiveAlpha>
 8015758:	e05f      	b.n	801581a <GUI_MEMDEV__WriteToActiveAlpha+0x116>
 801575a:	4638      	mov	r0, r7
 801575c:	f7f5 f8f8 	bl	800a950 <GUI_ALLOC_LockH>
 8015760:	4603      	mov	r3, r0
 8015762:	a80c      	add	r0, sp, #48	; 0x30
 8015764:	f9b3 4008 	ldrsh.w	r4, [r3, #8]
 8015768:	f840 3d08 	str.w	r3, [r0, #-8]!
 801576c:	f9b3 900a 	ldrsh.w	r9, [r3, #10]
 8015770:	f8d3 800c 	ldr.w	r8, [r3, #12]
 8015774:	f7f5 f8fa 	bl	800a96c <GUI_ALLOC_UnlockH>
 8015778:	ab08      	add	r3, sp, #32
 801577a:	aa06      	add	r2, sp, #24
 801577c:	a905      	add	r1, sp, #20
 801577e:	4620      	mov	r0, r4
 8015780:	f7ff fed8 	bl	8015534 <_ClipX>
 8015784:	9b06      	ldr	r3, [sp, #24]
 8015786:	2b00      	cmp	r3, #0
 8015788:	dd47      	ble.n	801581a <GUI_MEMDEV__WriteToActiveAlpha+0x116>
 801578a:	ab09      	add	r3, sp, #36	; 0x24
 801578c:	aa07      	add	r2, sp, #28
 801578e:	a904      	add	r1, sp, #16
 8015790:	4648      	mov	r0, r9
 8015792:	f7ff fef1 	bl	8015578 <_ClipY>
 8015796:	9b07      	ldr	r3, [sp, #28]
 8015798:	2b00      	cmp	r3, #0
 801579a:	dd3e      	ble.n	801581a <GUI_MEMDEV__WriteToActiveAlpha+0x116>
 801579c:	4638      	mov	r0, r7
 801579e:	f7fe feb3 	bl	8014508 <GUI_MEMDEV_GetDataPtr>
 80157a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80157a4:	9f08      	ldr	r7, [sp, #32]
 80157a6:	fb03 7704 	mla	r7, r3, r4, r7
 80157aa:	682b      	ldr	r3, [r5, #0]
 80157ac:	eb00 0787 	add.w	r7, r0, r7, lsl #2
 80157b0:	6e18      	ldr	r0, [r3, #96]	; 0x60
 80157b2:	b328      	cbz	r0, 8015800 <GUI_MEMDEV__WriteToActiveAlpha+0xfc>
 80157b4:	f8dd 9014 	ldr.w	r9, [sp, #20]
 80157b8:	9d04      	ldr	r5, [sp, #16]
 80157ba:	f7f5 f8c9 	bl	800a950 <GUI_ALLOC_LockH>
 80157be:	4604      	mov	r4, r0
 80157c0:	a80c      	add	r0, sp, #48	; 0x30
 80157c2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80157c6:	f8d4 a00c 	ldr.w	sl, [r4, #12]
 80157ca:	1aed      	subs	r5, r5, r3
 80157cc:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80157d0:	f840 4d04 	str.w	r4, [r0, #-4]!
 80157d4:	ebc3 0909 	rsb	r9, r3, r9
 80157d8:	ea4f 0989 	mov.w	r9, r9, lsl #2
 80157dc:	fb0a 9505 	mla	r5, sl, r5, r9
 80157e0:	3518      	adds	r5, #24
 80157e2:	442c      	add	r4, r5
 80157e4:	f7f5 f8c2 	bl	800a96c <GUI_ALLOC_UnlockH>
 80157e8:	b1bc      	cbz	r4, 801581a <GUI_MEMDEV__WriteToActiveAlpha+0x116>
 80157ea:	f8cd 8004 	str.w	r8, [sp, #4]
 80157ee:	4639      	mov	r1, r7
 80157f0:	f8cd a000 	str.w	sl, [sp]
 80157f4:	4620      	mov	r0, r4
 80157f6:	6835      	ldr	r5, [r6, #0]
 80157f8:	9b07      	ldr	r3, [sp, #28]
 80157fa:	9a06      	ldr	r2, [sp, #24]
 80157fc:	47a8      	blx	r5
 80157fe:	e00c      	b.n	801581a <GUI_MEMDEV__WriteToActiveAlpha+0x116>
 8015800:	7c58      	ldrb	r0, [r3, #17]
 8015802:	00a4      	lsls	r4, r4, #2
 8015804:	9b07      	ldr	r3, [sp, #28]
 8015806:	9402      	str	r4, [sp, #8]
 8015808:	9301      	str	r3, [sp, #4]
 801580a:	9b06      	ldr	r3, [sp, #24]
 801580c:	9a04      	ldr	r2, [sp, #16]
 801580e:	9300      	str	r3, [sp, #0]
 8015810:	4b07      	ldr	r3, [pc, #28]	; (8015830 <GUI_MEMDEV__WriteToActiveAlpha+0x12c>)
 8015812:	9905      	ldr	r1, [sp, #20]
 8015814:	681c      	ldr	r4, [r3, #0]
 8015816:	463b      	mov	r3, r7
 8015818:	47a0      	blx	r4
 801581a:	b00c      	add	sp, #48	; 0x30
 801581c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015820:	2000003c 	.word	0x2000003c
 8015824:	2002db08 	.word	0x2002db08
 8015828:	2002db1c 	.word	0x2002db1c
 801582c:	0801895c 	.word	0x0801895c
 8015830:	2002db18 	.word	0x2002db18

08015834 <__errno>:
 8015834:	4b01      	ldr	r3, [pc, #4]	; (801583c <__errno+0x8>)
 8015836:	6818      	ldr	r0, [r3, #0]
 8015838:	4770      	bx	lr
 801583a:	bf00      	nop
 801583c:	20000108 	.word	0x20000108

08015840 <__libc_init_array>:
 8015840:	b570      	push	{r4, r5, r6, lr}
 8015842:	4d0d      	ldr	r5, [pc, #52]	; (8015878 <__libc_init_array+0x38>)
 8015844:	4c0d      	ldr	r4, [pc, #52]	; (801587c <__libc_init_array+0x3c>)
 8015846:	1b64      	subs	r4, r4, r5
 8015848:	10a4      	asrs	r4, r4, #2
 801584a:	2600      	movs	r6, #0
 801584c:	42a6      	cmp	r6, r4
 801584e:	d109      	bne.n	8015864 <__libc_init_array+0x24>
 8015850:	4d0b      	ldr	r5, [pc, #44]	; (8015880 <__libc_init_array+0x40>)
 8015852:	4c0c      	ldr	r4, [pc, #48]	; (8015884 <__libc_init_array+0x44>)
 8015854:	f002 ffb2 	bl	80187bc <_init>
 8015858:	1b64      	subs	r4, r4, r5
 801585a:	10a4      	asrs	r4, r4, #2
 801585c:	2600      	movs	r6, #0
 801585e:	42a6      	cmp	r6, r4
 8015860:	d105      	bne.n	801586e <__libc_init_array+0x2e>
 8015862:	bd70      	pop	{r4, r5, r6, pc}
 8015864:	f855 3b04 	ldr.w	r3, [r5], #4
 8015868:	4798      	blx	r3
 801586a:	3601      	adds	r6, #1
 801586c:	e7ee      	b.n	801584c <__libc_init_array+0xc>
 801586e:	f855 3b04 	ldr.w	r3, [r5], #4
 8015872:	4798      	blx	r3
 8015874:	3601      	adds	r6, #1
 8015876:	e7f2      	b.n	801585e <__libc_init_array+0x1e>
 8015878:	0801ecf4 	.word	0x0801ecf4
 801587c:	0801ecf4 	.word	0x0801ecf4
 8015880:	0801ecf4 	.word	0x0801ecf4
 8015884:	0801ecf8 	.word	0x0801ecf8

08015888 <memcmp>:
 8015888:	b530      	push	{r4, r5, lr}
 801588a:	3901      	subs	r1, #1
 801588c:	2400      	movs	r4, #0
 801588e:	42a2      	cmp	r2, r4
 8015890:	d101      	bne.n	8015896 <memcmp+0xe>
 8015892:	2000      	movs	r0, #0
 8015894:	e005      	b.n	80158a2 <memcmp+0x1a>
 8015896:	5d03      	ldrb	r3, [r0, r4]
 8015898:	3401      	adds	r4, #1
 801589a:	5d0d      	ldrb	r5, [r1, r4]
 801589c:	42ab      	cmp	r3, r5
 801589e:	d0f6      	beq.n	801588e <memcmp+0x6>
 80158a0:	1b58      	subs	r0, r3, r5
 80158a2:	bd30      	pop	{r4, r5, pc}

080158a4 <memcpy>:
 80158a4:	440a      	add	r2, r1
 80158a6:	4291      	cmp	r1, r2
 80158a8:	f100 33ff 	add.w	r3, r0, #4294967295
 80158ac:	d100      	bne.n	80158b0 <memcpy+0xc>
 80158ae:	4770      	bx	lr
 80158b0:	b510      	push	{r4, lr}
 80158b2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80158b6:	f803 4f01 	strb.w	r4, [r3, #1]!
 80158ba:	4291      	cmp	r1, r2
 80158bc:	d1f9      	bne.n	80158b2 <memcpy+0xe>
 80158be:	bd10      	pop	{r4, pc}

080158c0 <memmove>:
 80158c0:	4288      	cmp	r0, r1
 80158c2:	b510      	push	{r4, lr}
 80158c4:	eb01 0402 	add.w	r4, r1, r2
 80158c8:	d902      	bls.n	80158d0 <memmove+0x10>
 80158ca:	4284      	cmp	r4, r0
 80158cc:	4623      	mov	r3, r4
 80158ce:	d807      	bhi.n	80158e0 <memmove+0x20>
 80158d0:	1e43      	subs	r3, r0, #1
 80158d2:	42a1      	cmp	r1, r4
 80158d4:	d008      	beq.n	80158e8 <memmove+0x28>
 80158d6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80158da:	f803 2f01 	strb.w	r2, [r3, #1]!
 80158de:	e7f8      	b.n	80158d2 <memmove+0x12>
 80158e0:	4402      	add	r2, r0
 80158e2:	4601      	mov	r1, r0
 80158e4:	428a      	cmp	r2, r1
 80158e6:	d100      	bne.n	80158ea <memmove+0x2a>
 80158e8:	bd10      	pop	{r4, pc}
 80158ea:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80158ee:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80158f2:	e7f7      	b.n	80158e4 <memmove+0x24>

080158f4 <memset>:
 80158f4:	4402      	add	r2, r0
 80158f6:	4603      	mov	r3, r0
 80158f8:	4293      	cmp	r3, r2
 80158fa:	d100      	bne.n	80158fe <memset+0xa>
 80158fc:	4770      	bx	lr
 80158fe:	f803 1b01 	strb.w	r1, [r3], #1
 8015902:	e7f9      	b.n	80158f8 <memset+0x4>

08015904 <__cvt>:
 8015904:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8015908:	ec55 4b10 	vmov	r4, r5, d0
 801590c:	2d00      	cmp	r5, #0
 801590e:	460e      	mov	r6, r1
 8015910:	4619      	mov	r1, r3
 8015912:	462b      	mov	r3, r5
 8015914:	bfbb      	ittet	lt
 8015916:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 801591a:	461d      	movlt	r5, r3
 801591c:	2300      	movge	r3, #0
 801591e:	232d      	movlt	r3, #45	; 0x2d
 8015920:	700b      	strb	r3, [r1, #0]
 8015922:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015924:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8015928:	4691      	mov	r9, r2
 801592a:	f023 0820 	bic.w	r8, r3, #32
 801592e:	bfbc      	itt	lt
 8015930:	4622      	movlt	r2, r4
 8015932:	4614      	movlt	r4, r2
 8015934:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8015938:	d005      	beq.n	8015946 <__cvt+0x42>
 801593a:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 801593e:	d100      	bne.n	8015942 <__cvt+0x3e>
 8015940:	3601      	adds	r6, #1
 8015942:	2102      	movs	r1, #2
 8015944:	e000      	b.n	8015948 <__cvt+0x44>
 8015946:	2103      	movs	r1, #3
 8015948:	ab03      	add	r3, sp, #12
 801594a:	9301      	str	r3, [sp, #4]
 801594c:	ab02      	add	r3, sp, #8
 801594e:	9300      	str	r3, [sp, #0]
 8015950:	ec45 4b10 	vmov	d0, r4, r5
 8015954:	4653      	mov	r3, sl
 8015956:	4632      	mov	r2, r6
 8015958:	f000 fcf2 	bl	8016340 <_dtoa_r>
 801595c:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8015960:	4607      	mov	r7, r0
 8015962:	d102      	bne.n	801596a <__cvt+0x66>
 8015964:	f019 0f01 	tst.w	r9, #1
 8015968:	d022      	beq.n	80159b0 <__cvt+0xac>
 801596a:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 801596e:	eb07 0906 	add.w	r9, r7, r6
 8015972:	d110      	bne.n	8015996 <__cvt+0x92>
 8015974:	783b      	ldrb	r3, [r7, #0]
 8015976:	2b30      	cmp	r3, #48	; 0x30
 8015978:	d10a      	bne.n	8015990 <__cvt+0x8c>
 801597a:	2200      	movs	r2, #0
 801597c:	2300      	movs	r3, #0
 801597e:	4620      	mov	r0, r4
 8015980:	4629      	mov	r1, r5
 8015982:	f7eb f8c1 	bl	8000b08 <__aeabi_dcmpeq>
 8015986:	b918      	cbnz	r0, 8015990 <__cvt+0x8c>
 8015988:	f1c6 0601 	rsb	r6, r6, #1
 801598c:	f8ca 6000 	str.w	r6, [sl]
 8015990:	f8da 3000 	ldr.w	r3, [sl]
 8015994:	4499      	add	r9, r3
 8015996:	2200      	movs	r2, #0
 8015998:	2300      	movs	r3, #0
 801599a:	4620      	mov	r0, r4
 801599c:	4629      	mov	r1, r5
 801599e:	f7eb f8b3 	bl	8000b08 <__aeabi_dcmpeq>
 80159a2:	b108      	cbz	r0, 80159a8 <__cvt+0xa4>
 80159a4:	f8cd 900c 	str.w	r9, [sp, #12]
 80159a8:	2230      	movs	r2, #48	; 0x30
 80159aa:	9b03      	ldr	r3, [sp, #12]
 80159ac:	454b      	cmp	r3, r9
 80159ae:	d307      	bcc.n	80159c0 <__cvt+0xbc>
 80159b0:	9b03      	ldr	r3, [sp, #12]
 80159b2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80159b4:	1bdb      	subs	r3, r3, r7
 80159b6:	4638      	mov	r0, r7
 80159b8:	6013      	str	r3, [r2, #0]
 80159ba:	b004      	add	sp, #16
 80159bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80159c0:	1c59      	adds	r1, r3, #1
 80159c2:	9103      	str	r1, [sp, #12]
 80159c4:	701a      	strb	r2, [r3, #0]
 80159c6:	e7f0      	b.n	80159aa <__cvt+0xa6>

080159c8 <__exponent>:
 80159c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80159ca:	4603      	mov	r3, r0
 80159cc:	2900      	cmp	r1, #0
 80159ce:	bfb8      	it	lt
 80159d0:	4249      	neglt	r1, r1
 80159d2:	f803 2b02 	strb.w	r2, [r3], #2
 80159d6:	bfb4      	ite	lt
 80159d8:	222d      	movlt	r2, #45	; 0x2d
 80159da:	222b      	movge	r2, #43	; 0x2b
 80159dc:	2909      	cmp	r1, #9
 80159de:	7042      	strb	r2, [r0, #1]
 80159e0:	dd2a      	ble.n	8015a38 <__exponent+0x70>
 80159e2:	f10d 0407 	add.w	r4, sp, #7
 80159e6:	46a4      	mov	ip, r4
 80159e8:	270a      	movs	r7, #10
 80159ea:	46a6      	mov	lr, r4
 80159ec:	460a      	mov	r2, r1
 80159ee:	fb91 f6f7 	sdiv	r6, r1, r7
 80159f2:	fb07 1516 	mls	r5, r7, r6, r1
 80159f6:	3530      	adds	r5, #48	; 0x30
 80159f8:	2a63      	cmp	r2, #99	; 0x63
 80159fa:	f104 34ff 	add.w	r4, r4, #4294967295
 80159fe:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8015a02:	4631      	mov	r1, r6
 8015a04:	dcf1      	bgt.n	80159ea <__exponent+0x22>
 8015a06:	3130      	adds	r1, #48	; 0x30
 8015a08:	f1ae 0502 	sub.w	r5, lr, #2
 8015a0c:	f804 1c01 	strb.w	r1, [r4, #-1]
 8015a10:	1c44      	adds	r4, r0, #1
 8015a12:	4629      	mov	r1, r5
 8015a14:	4561      	cmp	r1, ip
 8015a16:	d30a      	bcc.n	8015a2e <__exponent+0x66>
 8015a18:	f10d 0209 	add.w	r2, sp, #9
 8015a1c:	eba2 020e 	sub.w	r2, r2, lr
 8015a20:	4565      	cmp	r5, ip
 8015a22:	bf88      	it	hi
 8015a24:	2200      	movhi	r2, #0
 8015a26:	4413      	add	r3, r2
 8015a28:	1a18      	subs	r0, r3, r0
 8015a2a:	b003      	add	sp, #12
 8015a2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015a2e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8015a32:	f804 2f01 	strb.w	r2, [r4, #1]!
 8015a36:	e7ed      	b.n	8015a14 <__exponent+0x4c>
 8015a38:	2330      	movs	r3, #48	; 0x30
 8015a3a:	3130      	adds	r1, #48	; 0x30
 8015a3c:	7083      	strb	r3, [r0, #2]
 8015a3e:	70c1      	strb	r1, [r0, #3]
 8015a40:	1d03      	adds	r3, r0, #4
 8015a42:	e7f1      	b.n	8015a28 <__exponent+0x60>

08015a44 <_printf_float>:
 8015a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a48:	ed2d 8b02 	vpush	{d8}
 8015a4c:	b08d      	sub	sp, #52	; 0x34
 8015a4e:	460c      	mov	r4, r1
 8015a50:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8015a54:	4616      	mov	r6, r2
 8015a56:	461f      	mov	r7, r3
 8015a58:	4605      	mov	r5, r0
 8015a5a:	f001 fa5d 	bl	8016f18 <_localeconv_r>
 8015a5e:	f8d0 a000 	ldr.w	sl, [r0]
 8015a62:	4650      	mov	r0, sl
 8015a64:	f7ea fbd4 	bl	8000210 <strlen>
 8015a68:	2300      	movs	r3, #0
 8015a6a:	930a      	str	r3, [sp, #40]	; 0x28
 8015a6c:	6823      	ldr	r3, [r4, #0]
 8015a6e:	9305      	str	r3, [sp, #20]
 8015a70:	f8d8 3000 	ldr.w	r3, [r8]
 8015a74:	f894 b018 	ldrb.w	fp, [r4, #24]
 8015a78:	3307      	adds	r3, #7
 8015a7a:	f023 0307 	bic.w	r3, r3, #7
 8015a7e:	f103 0208 	add.w	r2, r3, #8
 8015a82:	f8c8 2000 	str.w	r2, [r8]
 8015a86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015a8a:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8015a8e:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8015a92:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8015a96:	9307      	str	r3, [sp, #28]
 8015a98:	f8cd 8018 	str.w	r8, [sp, #24]
 8015a9c:	ee08 0a10 	vmov	s16, r0
 8015aa0:	4b9f      	ldr	r3, [pc, #636]	; (8015d20 <_printf_float+0x2dc>)
 8015aa2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8015aa6:	f04f 32ff 	mov.w	r2, #4294967295
 8015aaa:	f7eb f85f 	bl	8000b6c <__aeabi_dcmpun>
 8015aae:	bb88      	cbnz	r0, 8015b14 <_printf_float+0xd0>
 8015ab0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8015ab4:	4b9a      	ldr	r3, [pc, #616]	; (8015d20 <_printf_float+0x2dc>)
 8015ab6:	f04f 32ff 	mov.w	r2, #4294967295
 8015aba:	f7eb f839 	bl	8000b30 <__aeabi_dcmple>
 8015abe:	bb48      	cbnz	r0, 8015b14 <_printf_float+0xd0>
 8015ac0:	2200      	movs	r2, #0
 8015ac2:	2300      	movs	r3, #0
 8015ac4:	4640      	mov	r0, r8
 8015ac6:	4649      	mov	r1, r9
 8015ac8:	f7eb f828 	bl	8000b1c <__aeabi_dcmplt>
 8015acc:	b110      	cbz	r0, 8015ad4 <_printf_float+0x90>
 8015ace:	232d      	movs	r3, #45	; 0x2d
 8015ad0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8015ad4:	4b93      	ldr	r3, [pc, #588]	; (8015d24 <_printf_float+0x2e0>)
 8015ad6:	4894      	ldr	r0, [pc, #592]	; (8015d28 <_printf_float+0x2e4>)
 8015ad8:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8015adc:	bf94      	ite	ls
 8015ade:	4698      	movls	r8, r3
 8015ae0:	4680      	movhi	r8, r0
 8015ae2:	2303      	movs	r3, #3
 8015ae4:	6123      	str	r3, [r4, #16]
 8015ae6:	9b05      	ldr	r3, [sp, #20]
 8015ae8:	f023 0204 	bic.w	r2, r3, #4
 8015aec:	6022      	str	r2, [r4, #0]
 8015aee:	f04f 0900 	mov.w	r9, #0
 8015af2:	9700      	str	r7, [sp, #0]
 8015af4:	4633      	mov	r3, r6
 8015af6:	aa0b      	add	r2, sp, #44	; 0x2c
 8015af8:	4621      	mov	r1, r4
 8015afa:	4628      	mov	r0, r5
 8015afc:	f000 f9d8 	bl	8015eb0 <_printf_common>
 8015b00:	3001      	adds	r0, #1
 8015b02:	f040 8090 	bne.w	8015c26 <_printf_float+0x1e2>
 8015b06:	f04f 30ff 	mov.w	r0, #4294967295
 8015b0a:	b00d      	add	sp, #52	; 0x34
 8015b0c:	ecbd 8b02 	vpop	{d8}
 8015b10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b14:	4642      	mov	r2, r8
 8015b16:	464b      	mov	r3, r9
 8015b18:	4640      	mov	r0, r8
 8015b1a:	4649      	mov	r1, r9
 8015b1c:	f7eb f826 	bl	8000b6c <__aeabi_dcmpun>
 8015b20:	b140      	cbz	r0, 8015b34 <_printf_float+0xf0>
 8015b22:	464b      	mov	r3, r9
 8015b24:	2b00      	cmp	r3, #0
 8015b26:	bfbc      	itt	lt
 8015b28:	232d      	movlt	r3, #45	; 0x2d
 8015b2a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8015b2e:	487f      	ldr	r0, [pc, #508]	; (8015d2c <_printf_float+0x2e8>)
 8015b30:	4b7f      	ldr	r3, [pc, #508]	; (8015d30 <_printf_float+0x2ec>)
 8015b32:	e7d1      	b.n	8015ad8 <_printf_float+0x94>
 8015b34:	6863      	ldr	r3, [r4, #4]
 8015b36:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8015b3a:	9206      	str	r2, [sp, #24]
 8015b3c:	1c5a      	adds	r2, r3, #1
 8015b3e:	d13f      	bne.n	8015bc0 <_printf_float+0x17c>
 8015b40:	2306      	movs	r3, #6
 8015b42:	6063      	str	r3, [r4, #4]
 8015b44:	9b05      	ldr	r3, [sp, #20]
 8015b46:	6861      	ldr	r1, [r4, #4]
 8015b48:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8015b4c:	2300      	movs	r3, #0
 8015b4e:	9303      	str	r3, [sp, #12]
 8015b50:	ab0a      	add	r3, sp, #40	; 0x28
 8015b52:	e9cd b301 	strd	fp, r3, [sp, #4]
 8015b56:	ab09      	add	r3, sp, #36	; 0x24
 8015b58:	ec49 8b10 	vmov	d0, r8, r9
 8015b5c:	9300      	str	r3, [sp, #0]
 8015b5e:	6022      	str	r2, [r4, #0]
 8015b60:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8015b64:	4628      	mov	r0, r5
 8015b66:	f7ff fecd 	bl	8015904 <__cvt>
 8015b6a:	9b06      	ldr	r3, [sp, #24]
 8015b6c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8015b6e:	2b47      	cmp	r3, #71	; 0x47
 8015b70:	4680      	mov	r8, r0
 8015b72:	d108      	bne.n	8015b86 <_printf_float+0x142>
 8015b74:	1cc8      	adds	r0, r1, #3
 8015b76:	db02      	blt.n	8015b7e <_printf_float+0x13a>
 8015b78:	6863      	ldr	r3, [r4, #4]
 8015b7a:	4299      	cmp	r1, r3
 8015b7c:	dd41      	ble.n	8015c02 <_printf_float+0x1be>
 8015b7e:	f1ab 0b02 	sub.w	fp, fp, #2
 8015b82:	fa5f fb8b 	uxtb.w	fp, fp
 8015b86:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8015b8a:	d820      	bhi.n	8015bce <_printf_float+0x18a>
 8015b8c:	3901      	subs	r1, #1
 8015b8e:	465a      	mov	r2, fp
 8015b90:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8015b94:	9109      	str	r1, [sp, #36]	; 0x24
 8015b96:	f7ff ff17 	bl	80159c8 <__exponent>
 8015b9a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015b9c:	1813      	adds	r3, r2, r0
 8015b9e:	2a01      	cmp	r2, #1
 8015ba0:	4681      	mov	r9, r0
 8015ba2:	6123      	str	r3, [r4, #16]
 8015ba4:	dc02      	bgt.n	8015bac <_printf_float+0x168>
 8015ba6:	6822      	ldr	r2, [r4, #0]
 8015ba8:	07d2      	lsls	r2, r2, #31
 8015baa:	d501      	bpl.n	8015bb0 <_printf_float+0x16c>
 8015bac:	3301      	adds	r3, #1
 8015bae:	6123      	str	r3, [r4, #16]
 8015bb0:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8015bb4:	2b00      	cmp	r3, #0
 8015bb6:	d09c      	beq.n	8015af2 <_printf_float+0xae>
 8015bb8:	232d      	movs	r3, #45	; 0x2d
 8015bba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8015bbe:	e798      	b.n	8015af2 <_printf_float+0xae>
 8015bc0:	9a06      	ldr	r2, [sp, #24]
 8015bc2:	2a47      	cmp	r2, #71	; 0x47
 8015bc4:	d1be      	bne.n	8015b44 <_printf_float+0x100>
 8015bc6:	2b00      	cmp	r3, #0
 8015bc8:	d1bc      	bne.n	8015b44 <_printf_float+0x100>
 8015bca:	2301      	movs	r3, #1
 8015bcc:	e7b9      	b.n	8015b42 <_printf_float+0xfe>
 8015bce:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8015bd2:	d118      	bne.n	8015c06 <_printf_float+0x1c2>
 8015bd4:	2900      	cmp	r1, #0
 8015bd6:	6863      	ldr	r3, [r4, #4]
 8015bd8:	dd0b      	ble.n	8015bf2 <_printf_float+0x1ae>
 8015bda:	6121      	str	r1, [r4, #16]
 8015bdc:	b913      	cbnz	r3, 8015be4 <_printf_float+0x1a0>
 8015bde:	6822      	ldr	r2, [r4, #0]
 8015be0:	07d0      	lsls	r0, r2, #31
 8015be2:	d502      	bpl.n	8015bea <_printf_float+0x1a6>
 8015be4:	3301      	adds	r3, #1
 8015be6:	440b      	add	r3, r1
 8015be8:	6123      	str	r3, [r4, #16]
 8015bea:	65a1      	str	r1, [r4, #88]	; 0x58
 8015bec:	f04f 0900 	mov.w	r9, #0
 8015bf0:	e7de      	b.n	8015bb0 <_printf_float+0x16c>
 8015bf2:	b913      	cbnz	r3, 8015bfa <_printf_float+0x1b6>
 8015bf4:	6822      	ldr	r2, [r4, #0]
 8015bf6:	07d2      	lsls	r2, r2, #31
 8015bf8:	d501      	bpl.n	8015bfe <_printf_float+0x1ba>
 8015bfa:	3302      	adds	r3, #2
 8015bfc:	e7f4      	b.n	8015be8 <_printf_float+0x1a4>
 8015bfe:	2301      	movs	r3, #1
 8015c00:	e7f2      	b.n	8015be8 <_printf_float+0x1a4>
 8015c02:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8015c06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015c08:	4299      	cmp	r1, r3
 8015c0a:	db05      	blt.n	8015c18 <_printf_float+0x1d4>
 8015c0c:	6823      	ldr	r3, [r4, #0]
 8015c0e:	6121      	str	r1, [r4, #16]
 8015c10:	07d8      	lsls	r0, r3, #31
 8015c12:	d5ea      	bpl.n	8015bea <_printf_float+0x1a6>
 8015c14:	1c4b      	adds	r3, r1, #1
 8015c16:	e7e7      	b.n	8015be8 <_printf_float+0x1a4>
 8015c18:	2900      	cmp	r1, #0
 8015c1a:	bfd4      	ite	le
 8015c1c:	f1c1 0202 	rsble	r2, r1, #2
 8015c20:	2201      	movgt	r2, #1
 8015c22:	4413      	add	r3, r2
 8015c24:	e7e0      	b.n	8015be8 <_printf_float+0x1a4>
 8015c26:	6823      	ldr	r3, [r4, #0]
 8015c28:	055a      	lsls	r2, r3, #21
 8015c2a:	d407      	bmi.n	8015c3c <_printf_float+0x1f8>
 8015c2c:	6923      	ldr	r3, [r4, #16]
 8015c2e:	4642      	mov	r2, r8
 8015c30:	4631      	mov	r1, r6
 8015c32:	4628      	mov	r0, r5
 8015c34:	47b8      	blx	r7
 8015c36:	3001      	adds	r0, #1
 8015c38:	d12c      	bne.n	8015c94 <_printf_float+0x250>
 8015c3a:	e764      	b.n	8015b06 <_printf_float+0xc2>
 8015c3c:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8015c40:	f240 80e0 	bls.w	8015e04 <_printf_float+0x3c0>
 8015c44:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8015c48:	2200      	movs	r2, #0
 8015c4a:	2300      	movs	r3, #0
 8015c4c:	f7ea ff5c 	bl	8000b08 <__aeabi_dcmpeq>
 8015c50:	2800      	cmp	r0, #0
 8015c52:	d034      	beq.n	8015cbe <_printf_float+0x27a>
 8015c54:	4a37      	ldr	r2, [pc, #220]	; (8015d34 <_printf_float+0x2f0>)
 8015c56:	2301      	movs	r3, #1
 8015c58:	4631      	mov	r1, r6
 8015c5a:	4628      	mov	r0, r5
 8015c5c:	47b8      	blx	r7
 8015c5e:	3001      	adds	r0, #1
 8015c60:	f43f af51 	beq.w	8015b06 <_printf_float+0xc2>
 8015c64:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8015c68:	429a      	cmp	r2, r3
 8015c6a:	db02      	blt.n	8015c72 <_printf_float+0x22e>
 8015c6c:	6823      	ldr	r3, [r4, #0]
 8015c6e:	07d8      	lsls	r0, r3, #31
 8015c70:	d510      	bpl.n	8015c94 <_printf_float+0x250>
 8015c72:	ee18 3a10 	vmov	r3, s16
 8015c76:	4652      	mov	r2, sl
 8015c78:	4631      	mov	r1, r6
 8015c7a:	4628      	mov	r0, r5
 8015c7c:	47b8      	blx	r7
 8015c7e:	3001      	adds	r0, #1
 8015c80:	f43f af41 	beq.w	8015b06 <_printf_float+0xc2>
 8015c84:	f04f 0800 	mov.w	r8, #0
 8015c88:	f104 091a 	add.w	r9, r4, #26
 8015c8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015c8e:	3b01      	subs	r3, #1
 8015c90:	4543      	cmp	r3, r8
 8015c92:	dc09      	bgt.n	8015ca8 <_printf_float+0x264>
 8015c94:	6823      	ldr	r3, [r4, #0]
 8015c96:	079b      	lsls	r3, r3, #30
 8015c98:	f100 8105 	bmi.w	8015ea6 <_printf_float+0x462>
 8015c9c:	68e0      	ldr	r0, [r4, #12]
 8015c9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015ca0:	4298      	cmp	r0, r3
 8015ca2:	bfb8      	it	lt
 8015ca4:	4618      	movlt	r0, r3
 8015ca6:	e730      	b.n	8015b0a <_printf_float+0xc6>
 8015ca8:	2301      	movs	r3, #1
 8015caa:	464a      	mov	r2, r9
 8015cac:	4631      	mov	r1, r6
 8015cae:	4628      	mov	r0, r5
 8015cb0:	47b8      	blx	r7
 8015cb2:	3001      	adds	r0, #1
 8015cb4:	f43f af27 	beq.w	8015b06 <_printf_float+0xc2>
 8015cb8:	f108 0801 	add.w	r8, r8, #1
 8015cbc:	e7e6      	b.n	8015c8c <_printf_float+0x248>
 8015cbe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015cc0:	2b00      	cmp	r3, #0
 8015cc2:	dc39      	bgt.n	8015d38 <_printf_float+0x2f4>
 8015cc4:	4a1b      	ldr	r2, [pc, #108]	; (8015d34 <_printf_float+0x2f0>)
 8015cc6:	2301      	movs	r3, #1
 8015cc8:	4631      	mov	r1, r6
 8015cca:	4628      	mov	r0, r5
 8015ccc:	47b8      	blx	r7
 8015cce:	3001      	adds	r0, #1
 8015cd0:	f43f af19 	beq.w	8015b06 <_printf_float+0xc2>
 8015cd4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8015cd8:	4313      	orrs	r3, r2
 8015cda:	d102      	bne.n	8015ce2 <_printf_float+0x29e>
 8015cdc:	6823      	ldr	r3, [r4, #0]
 8015cde:	07d9      	lsls	r1, r3, #31
 8015ce0:	d5d8      	bpl.n	8015c94 <_printf_float+0x250>
 8015ce2:	ee18 3a10 	vmov	r3, s16
 8015ce6:	4652      	mov	r2, sl
 8015ce8:	4631      	mov	r1, r6
 8015cea:	4628      	mov	r0, r5
 8015cec:	47b8      	blx	r7
 8015cee:	3001      	adds	r0, #1
 8015cf0:	f43f af09 	beq.w	8015b06 <_printf_float+0xc2>
 8015cf4:	f04f 0900 	mov.w	r9, #0
 8015cf8:	f104 0a1a 	add.w	sl, r4, #26
 8015cfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015cfe:	425b      	negs	r3, r3
 8015d00:	454b      	cmp	r3, r9
 8015d02:	dc01      	bgt.n	8015d08 <_printf_float+0x2c4>
 8015d04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015d06:	e792      	b.n	8015c2e <_printf_float+0x1ea>
 8015d08:	2301      	movs	r3, #1
 8015d0a:	4652      	mov	r2, sl
 8015d0c:	4631      	mov	r1, r6
 8015d0e:	4628      	mov	r0, r5
 8015d10:	47b8      	blx	r7
 8015d12:	3001      	adds	r0, #1
 8015d14:	f43f aef7 	beq.w	8015b06 <_printf_float+0xc2>
 8015d18:	f109 0901 	add.w	r9, r9, #1
 8015d1c:	e7ee      	b.n	8015cfc <_printf_float+0x2b8>
 8015d1e:	bf00      	nop
 8015d20:	7fefffff 	.word	0x7fefffff
 8015d24:	0801e910 	.word	0x0801e910
 8015d28:	0801e914 	.word	0x0801e914
 8015d2c:	0801e91c 	.word	0x0801e91c
 8015d30:	0801e918 	.word	0x0801e918
 8015d34:	0801e920 	.word	0x0801e920
 8015d38:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015d3a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8015d3c:	429a      	cmp	r2, r3
 8015d3e:	bfa8      	it	ge
 8015d40:	461a      	movge	r2, r3
 8015d42:	2a00      	cmp	r2, #0
 8015d44:	4691      	mov	r9, r2
 8015d46:	dc37      	bgt.n	8015db8 <_printf_float+0x374>
 8015d48:	f04f 0b00 	mov.w	fp, #0
 8015d4c:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8015d50:	f104 021a 	add.w	r2, r4, #26
 8015d54:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8015d56:	9305      	str	r3, [sp, #20]
 8015d58:	eba3 0309 	sub.w	r3, r3, r9
 8015d5c:	455b      	cmp	r3, fp
 8015d5e:	dc33      	bgt.n	8015dc8 <_printf_float+0x384>
 8015d60:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8015d64:	429a      	cmp	r2, r3
 8015d66:	db3b      	blt.n	8015de0 <_printf_float+0x39c>
 8015d68:	6823      	ldr	r3, [r4, #0]
 8015d6a:	07da      	lsls	r2, r3, #31
 8015d6c:	d438      	bmi.n	8015de0 <_printf_float+0x39c>
 8015d6e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015d70:	9b05      	ldr	r3, [sp, #20]
 8015d72:	9909      	ldr	r1, [sp, #36]	; 0x24
 8015d74:	1ad3      	subs	r3, r2, r3
 8015d76:	eba2 0901 	sub.w	r9, r2, r1
 8015d7a:	4599      	cmp	r9, r3
 8015d7c:	bfa8      	it	ge
 8015d7e:	4699      	movge	r9, r3
 8015d80:	f1b9 0f00 	cmp.w	r9, #0
 8015d84:	dc35      	bgt.n	8015df2 <_printf_float+0x3ae>
 8015d86:	f04f 0800 	mov.w	r8, #0
 8015d8a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8015d8e:	f104 0a1a 	add.w	sl, r4, #26
 8015d92:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8015d96:	1a9b      	subs	r3, r3, r2
 8015d98:	eba3 0309 	sub.w	r3, r3, r9
 8015d9c:	4543      	cmp	r3, r8
 8015d9e:	f77f af79 	ble.w	8015c94 <_printf_float+0x250>
 8015da2:	2301      	movs	r3, #1
 8015da4:	4652      	mov	r2, sl
 8015da6:	4631      	mov	r1, r6
 8015da8:	4628      	mov	r0, r5
 8015daa:	47b8      	blx	r7
 8015dac:	3001      	adds	r0, #1
 8015dae:	f43f aeaa 	beq.w	8015b06 <_printf_float+0xc2>
 8015db2:	f108 0801 	add.w	r8, r8, #1
 8015db6:	e7ec      	b.n	8015d92 <_printf_float+0x34e>
 8015db8:	4613      	mov	r3, r2
 8015dba:	4631      	mov	r1, r6
 8015dbc:	4642      	mov	r2, r8
 8015dbe:	4628      	mov	r0, r5
 8015dc0:	47b8      	blx	r7
 8015dc2:	3001      	adds	r0, #1
 8015dc4:	d1c0      	bne.n	8015d48 <_printf_float+0x304>
 8015dc6:	e69e      	b.n	8015b06 <_printf_float+0xc2>
 8015dc8:	2301      	movs	r3, #1
 8015dca:	4631      	mov	r1, r6
 8015dcc:	4628      	mov	r0, r5
 8015dce:	9205      	str	r2, [sp, #20]
 8015dd0:	47b8      	blx	r7
 8015dd2:	3001      	adds	r0, #1
 8015dd4:	f43f ae97 	beq.w	8015b06 <_printf_float+0xc2>
 8015dd8:	9a05      	ldr	r2, [sp, #20]
 8015dda:	f10b 0b01 	add.w	fp, fp, #1
 8015dde:	e7b9      	b.n	8015d54 <_printf_float+0x310>
 8015de0:	ee18 3a10 	vmov	r3, s16
 8015de4:	4652      	mov	r2, sl
 8015de6:	4631      	mov	r1, r6
 8015de8:	4628      	mov	r0, r5
 8015dea:	47b8      	blx	r7
 8015dec:	3001      	adds	r0, #1
 8015dee:	d1be      	bne.n	8015d6e <_printf_float+0x32a>
 8015df0:	e689      	b.n	8015b06 <_printf_float+0xc2>
 8015df2:	9a05      	ldr	r2, [sp, #20]
 8015df4:	464b      	mov	r3, r9
 8015df6:	4442      	add	r2, r8
 8015df8:	4631      	mov	r1, r6
 8015dfa:	4628      	mov	r0, r5
 8015dfc:	47b8      	blx	r7
 8015dfe:	3001      	adds	r0, #1
 8015e00:	d1c1      	bne.n	8015d86 <_printf_float+0x342>
 8015e02:	e680      	b.n	8015b06 <_printf_float+0xc2>
 8015e04:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015e06:	2a01      	cmp	r2, #1
 8015e08:	dc01      	bgt.n	8015e0e <_printf_float+0x3ca>
 8015e0a:	07db      	lsls	r3, r3, #31
 8015e0c:	d538      	bpl.n	8015e80 <_printf_float+0x43c>
 8015e0e:	2301      	movs	r3, #1
 8015e10:	4642      	mov	r2, r8
 8015e12:	4631      	mov	r1, r6
 8015e14:	4628      	mov	r0, r5
 8015e16:	47b8      	blx	r7
 8015e18:	3001      	adds	r0, #1
 8015e1a:	f43f ae74 	beq.w	8015b06 <_printf_float+0xc2>
 8015e1e:	ee18 3a10 	vmov	r3, s16
 8015e22:	4652      	mov	r2, sl
 8015e24:	4631      	mov	r1, r6
 8015e26:	4628      	mov	r0, r5
 8015e28:	47b8      	blx	r7
 8015e2a:	3001      	adds	r0, #1
 8015e2c:	f43f ae6b 	beq.w	8015b06 <_printf_float+0xc2>
 8015e30:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8015e34:	2200      	movs	r2, #0
 8015e36:	2300      	movs	r3, #0
 8015e38:	f7ea fe66 	bl	8000b08 <__aeabi_dcmpeq>
 8015e3c:	b9d8      	cbnz	r0, 8015e76 <_printf_float+0x432>
 8015e3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015e40:	f108 0201 	add.w	r2, r8, #1
 8015e44:	3b01      	subs	r3, #1
 8015e46:	4631      	mov	r1, r6
 8015e48:	4628      	mov	r0, r5
 8015e4a:	47b8      	blx	r7
 8015e4c:	3001      	adds	r0, #1
 8015e4e:	d10e      	bne.n	8015e6e <_printf_float+0x42a>
 8015e50:	e659      	b.n	8015b06 <_printf_float+0xc2>
 8015e52:	2301      	movs	r3, #1
 8015e54:	4652      	mov	r2, sl
 8015e56:	4631      	mov	r1, r6
 8015e58:	4628      	mov	r0, r5
 8015e5a:	47b8      	blx	r7
 8015e5c:	3001      	adds	r0, #1
 8015e5e:	f43f ae52 	beq.w	8015b06 <_printf_float+0xc2>
 8015e62:	f108 0801 	add.w	r8, r8, #1
 8015e66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015e68:	3b01      	subs	r3, #1
 8015e6a:	4543      	cmp	r3, r8
 8015e6c:	dcf1      	bgt.n	8015e52 <_printf_float+0x40e>
 8015e6e:	464b      	mov	r3, r9
 8015e70:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8015e74:	e6dc      	b.n	8015c30 <_printf_float+0x1ec>
 8015e76:	f04f 0800 	mov.w	r8, #0
 8015e7a:	f104 0a1a 	add.w	sl, r4, #26
 8015e7e:	e7f2      	b.n	8015e66 <_printf_float+0x422>
 8015e80:	2301      	movs	r3, #1
 8015e82:	4642      	mov	r2, r8
 8015e84:	e7df      	b.n	8015e46 <_printf_float+0x402>
 8015e86:	2301      	movs	r3, #1
 8015e88:	464a      	mov	r2, r9
 8015e8a:	4631      	mov	r1, r6
 8015e8c:	4628      	mov	r0, r5
 8015e8e:	47b8      	blx	r7
 8015e90:	3001      	adds	r0, #1
 8015e92:	f43f ae38 	beq.w	8015b06 <_printf_float+0xc2>
 8015e96:	f108 0801 	add.w	r8, r8, #1
 8015e9a:	68e3      	ldr	r3, [r4, #12]
 8015e9c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8015e9e:	1a5b      	subs	r3, r3, r1
 8015ea0:	4543      	cmp	r3, r8
 8015ea2:	dcf0      	bgt.n	8015e86 <_printf_float+0x442>
 8015ea4:	e6fa      	b.n	8015c9c <_printf_float+0x258>
 8015ea6:	f04f 0800 	mov.w	r8, #0
 8015eaa:	f104 0919 	add.w	r9, r4, #25
 8015eae:	e7f4      	b.n	8015e9a <_printf_float+0x456>

08015eb0 <_printf_common>:
 8015eb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015eb4:	4616      	mov	r6, r2
 8015eb6:	4699      	mov	r9, r3
 8015eb8:	688a      	ldr	r2, [r1, #8]
 8015eba:	690b      	ldr	r3, [r1, #16]
 8015ebc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8015ec0:	4293      	cmp	r3, r2
 8015ec2:	bfb8      	it	lt
 8015ec4:	4613      	movlt	r3, r2
 8015ec6:	6033      	str	r3, [r6, #0]
 8015ec8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8015ecc:	4607      	mov	r7, r0
 8015ece:	460c      	mov	r4, r1
 8015ed0:	b10a      	cbz	r2, 8015ed6 <_printf_common+0x26>
 8015ed2:	3301      	adds	r3, #1
 8015ed4:	6033      	str	r3, [r6, #0]
 8015ed6:	6823      	ldr	r3, [r4, #0]
 8015ed8:	0699      	lsls	r1, r3, #26
 8015eda:	bf42      	ittt	mi
 8015edc:	6833      	ldrmi	r3, [r6, #0]
 8015ede:	3302      	addmi	r3, #2
 8015ee0:	6033      	strmi	r3, [r6, #0]
 8015ee2:	6825      	ldr	r5, [r4, #0]
 8015ee4:	f015 0506 	ands.w	r5, r5, #6
 8015ee8:	d106      	bne.n	8015ef8 <_printf_common+0x48>
 8015eea:	f104 0a19 	add.w	sl, r4, #25
 8015eee:	68e3      	ldr	r3, [r4, #12]
 8015ef0:	6832      	ldr	r2, [r6, #0]
 8015ef2:	1a9b      	subs	r3, r3, r2
 8015ef4:	42ab      	cmp	r3, r5
 8015ef6:	dc26      	bgt.n	8015f46 <_printf_common+0x96>
 8015ef8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8015efc:	1e13      	subs	r3, r2, #0
 8015efe:	6822      	ldr	r2, [r4, #0]
 8015f00:	bf18      	it	ne
 8015f02:	2301      	movne	r3, #1
 8015f04:	0692      	lsls	r2, r2, #26
 8015f06:	d42b      	bmi.n	8015f60 <_printf_common+0xb0>
 8015f08:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8015f0c:	4649      	mov	r1, r9
 8015f0e:	4638      	mov	r0, r7
 8015f10:	47c0      	blx	r8
 8015f12:	3001      	adds	r0, #1
 8015f14:	d01e      	beq.n	8015f54 <_printf_common+0xa4>
 8015f16:	6823      	ldr	r3, [r4, #0]
 8015f18:	68e5      	ldr	r5, [r4, #12]
 8015f1a:	6832      	ldr	r2, [r6, #0]
 8015f1c:	f003 0306 	and.w	r3, r3, #6
 8015f20:	2b04      	cmp	r3, #4
 8015f22:	bf08      	it	eq
 8015f24:	1aad      	subeq	r5, r5, r2
 8015f26:	68a3      	ldr	r3, [r4, #8]
 8015f28:	6922      	ldr	r2, [r4, #16]
 8015f2a:	bf0c      	ite	eq
 8015f2c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8015f30:	2500      	movne	r5, #0
 8015f32:	4293      	cmp	r3, r2
 8015f34:	bfc4      	itt	gt
 8015f36:	1a9b      	subgt	r3, r3, r2
 8015f38:	18ed      	addgt	r5, r5, r3
 8015f3a:	2600      	movs	r6, #0
 8015f3c:	341a      	adds	r4, #26
 8015f3e:	42b5      	cmp	r5, r6
 8015f40:	d11a      	bne.n	8015f78 <_printf_common+0xc8>
 8015f42:	2000      	movs	r0, #0
 8015f44:	e008      	b.n	8015f58 <_printf_common+0xa8>
 8015f46:	2301      	movs	r3, #1
 8015f48:	4652      	mov	r2, sl
 8015f4a:	4649      	mov	r1, r9
 8015f4c:	4638      	mov	r0, r7
 8015f4e:	47c0      	blx	r8
 8015f50:	3001      	adds	r0, #1
 8015f52:	d103      	bne.n	8015f5c <_printf_common+0xac>
 8015f54:	f04f 30ff 	mov.w	r0, #4294967295
 8015f58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015f5c:	3501      	adds	r5, #1
 8015f5e:	e7c6      	b.n	8015eee <_printf_common+0x3e>
 8015f60:	18e1      	adds	r1, r4, r3
 8015f62:	1c5a      	adds	r2, r3, #1
 8015f64:	2030      	movs	r0, #48	; 0x30
 8015f66:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8015f6a:	4422      	add	r2, r4
 8015f6c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8015f70:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8015f74:	3302      	adds	r3, #2
 8015f76:	e7c7      	b.n	8015f08 <_printf_common+0x58>
 8015f78:	2301      	movs	r3, #1
 8015f7a:	4622      	mov	r2, r4
 8015f7c:	4649      	mov	r1, r9
 8015f7e:	4638      	mov	r0, r7
 8015f80:	47c0      	blx	r8
 8015f82:	3001      	adds	r0, #1
 8015f84:	d0e6      	beq.n	8015f54 <_printf_common+0xa4>
 8015f86:	3601      	adds	r6, #1
 8015f88:	e7d9      	b.n	8015f3e <_printf_common+0x8e>
	...

08015f8c <_printf_i>:
 8015f8c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8015f90:	460c      	mov	r4, r1
 8015f92:	4691      	mov	r9, r2
 8015f94:	7e27      	ldrb	r7, [r4, #24]
 8015f96:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015f98:	2f78      	cmp	r7, #120	; 0x78
 8015f9a:	4680      	mov	r8, r0
 8015f9c:	469a      	mov	sl, r3
 8015f9e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8015fa2:	d807      	bhi.n	8015fb4 <_printf_i+0x28>
 8015fa4:	2f62      	cmp	r7, #98	; 0x62
 8015fa6:	d80a      	bhi.n	8015fbe <_printf_i+0x32>
 8015fa8:	2f00      	cmp	r7, #0
 8015faa:	f000 80d8 	beq.w	801615e <_printf_i+0x1d2>
 8015fae:	2f58      	cmp	r7, #88	; 0x58
 8015fb0:	f000 80a3 	beq.w	80160fa <_printf_i+0x16e>
 8015fb4:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8015fb8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8015fbc:	e03a      	b.n	8016034 <_printf_i+0xa8>
 8015fbe:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8015fc2:	2b15      	cmp	r3, #21
 8015fc4:	d8f6      	bhi.n	8015fb4 <_printf_i+0x28>
 8015fc6:	a001      	add	r0, pc, #4	; (adr r0, 8015fcc <_printf_i+0x40>)
 8015fc8:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8015fcc:	08016025 	.word	0x08016025
 8015fd0:	08016039 	.word	0x08016039
 8015fd4:	08015fb5 	.word	0x08015fb5
 8015fd8:	08015fb5 	.word	0x08015fb5
 8015fdc:	08015fb5 	.word	0x08015fb5
 8015fe0:	08015fb5 	.word	0x08015fb5
 8015fe4:	08016039 	.word	0x08016039
 8015fe8:	08015fb5 	.word	0x08015fb5
 8015fec:	08015fb5 	.word	0x08015fb5
 8015ff0:	08015fb5 	.word	0x08015fb5
 8015ff4:	08015fb5 	.word	0x08015fb5
 8015ff8:	08016145 	.word	0x08016145
 8015ffc:	08016069 	.word	0x08016069
 8016000:	08016127 	.word	0x08016127
 8016004:	08015fb5 	.word	0x08015fb5
 8016008:	08015fb5 	.word	0x08015fb5
 801600c:	08016167 	.word	0x08016167
 8016010:	08015fb5 	.word	0x08015fb5
 8016014:	08016069 	.word	0x08016069
 8016018:	08015fb5 	.word	0x08015fb5
 801601c:	08015fb5 	.word	0x08015fb5
 8016020:	0801612f 	.word	0x0801612f
 8016024:	680b      	ldr	r3, [r1, #0]
 8016026:	1d1a      	adds	r2, r3, #4
 8016028:	681b      	ldr	r3, [r3, #0]
 801602a:	600a      	str	r2, [r1, #0]
 801602c:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8016030:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8016034:	2301      	movs	r3, #1
 8016036:	e0a3      	b.n	8016180 <_printf_i+0x1f4>
 8016038:	6825      	ldr	r5, [r4, #0]
 801603a:	6808      	ldr	r0, [r1, #0]
 801603c:	062e      	lsls	r6, r5, #24
 801603e:	f100 0304 	add.w	r3, r0, #4
 8016042:	d50a      	bpl.n	801605a <_printf_i+0xce>
 8016044:	6805      	ldr	r5, [r0, #0]
 8016046:	600b      	str	r3, [r1, #0]
 8016048:	2d00      	cmp	r5, #0
 801604a:	da03      	bge.n	8016054 <_printf_i+0xc8>
 801604c:	232d      	movs	r3, #45	; 0x2d
 801604e:	426d      	negs	r5, r5
 8016050:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8016054:	485e      	ldr	r0, [pc, #376]	; (80161d0 <_printf_i+0x244>)
 8016056:	230a      	movs	r3, #10
 8016058:	e019      	b.n	801608e <_printf_i+0x102>
 801605a:	f015 0f40 	tst.w	r5, #64	; 0x40
 801605e:	6805      	ldr	r5, [r0, #0]
 8016060:	600b      	str	r3, [r1, #0]
 8016062:	bf18      	it	ne
 8016064:	b22d      	sxthne	r5, r5
 8016066:	e7ef      	b.n	8016048 <_printf_i+0xbc>
 8016068:	680b      	ldr	r3, [r1, #0]
 801606a:	6825      	ldr	r5, [r4, #0]
 801606c:	1d18      	adds	r0, r3, #4
 801606e:	6008      	str	r0, [r1, #0]
 8016070:	0628      	lsls	r0, r5, #24
 8016072:	d501      	bpl.n	8016078 <_printf_i+0xec>
 8016074:	681d      	ldr	r5, [r3, #0]
 8016076:	e002      	b.n	801607e <_printf_i+0xf2>
 8016078:	0669      	lsls	r1, r5, #25
 801607a:	d5fb      	bpl.n	8016074 <_printf_i+0xe8>
 801607c:	881d      	ldrh	r5, [r3, #0]
 801607e:	4854      	ldr	r0, [pc, #336]	; (80161d0 <_printf_i+0x244>)
 8016080:	2f6f      	cmp	r7, #111	; 0x6f
 8016082:	bf0c      	ite	eq
 8016084:	2308      	moveq	r3, #8
 8016086:	230a      	movne	r3, #10
 8016088:	2100      	movs	r1, #0
 801608a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801608e:	6866      	ldr	r6, [r4, #4]
 8016090:	60a6      	str	r6, [r4, #8]
 8016092:	2e00      	cmp	r6, #0
 8016094:	bfa2      	ittt	ge
 8016096:	6821      	ldrge	r1, [r4, #0]
 8016098:	f021 0104 	bicge.w	r1, r1, #4
 801609c:	6021      	strge	r1, [r4, #0]
 801609e:	b90d      	cbnz	r5, 80160a4 <_printf_i+0x118>
 80160a0:	2e00      	cmp	r6, #0
 80160a2:	d04d      	beq.n	8016140 <_printf_i+0x1b4>
 80160a4:	4616      	mov	r6, r2
 80160a6:	fbb5 f1f3 	udiv	r1, r5, r3
 80160aa:	fb03 5711 	mls	r7, r3, r1, r5
 80160ae:	5dc7      	ldrb	r7, [r0, r7]
 80160b0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80160b4:	462f      	mov	r7, r5
 80160b6:	42bb      	cmp	r3, r7
 80160b8:	460d      	mov	r5, r1
 80160ba:	d9f4      	bls.n	80160a6 <_printf_i+0x11a>
 80160bc:	2b08      	cmp	r3, #8
 80160be:	d10b      	bne.n	80160d8 <_printf_i+0x14c>
 80160c0:	6823      	ldr	r3, [r4, #0]
 80160c2:	07df      	lsls	r7, r3, #31
 80160c4:	d508      	bpl.n	80160d8 <_printf_i+0x14c>
 80160c6:	6923      	ldr	r3, [r4, #16]
 80160c8:	6861      	ldr	r1, [r4, #4]
 80160ca:	4299      	cmp	r1, r3
 80160cc:	bfde      	ittt	le
 80160ce:	2330      	movle	r3, #48	; 0x30
 80160d0:	f806 3c01 	strble.w	r3, [r6, #-1]
 80160d4:	f106 36ff 	addle.w	r6, r6, #4294967295
 80160d8:	1b92      	subs	r2, r2, r6
 80160da:	6122      	str	r2, [r4, #16]
 80160dc:	f8cd a000 	str.w	sl, [sp]
 80160e0:	464b      	mov	r3, r9
 80160e2:	aa03      	add	r2, sp, #12
 80160e4:	4621      	mov	r1, r4
 80160e6:	4640      	mov	r0, r8
 80160e8:	f7ff fee2 	bl	8015eb0 <_printf_common>
 80160ec:	3001      	adds	r0, #1
 80160ee:	d14c      	bne.n	801618a <_printf_i+0x1fe>
 80160f0:	f04f 30ff 	mov.w	r0, #4294967295
 80160f4:	b004      	add	sp, #16
 80160f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80160fa:	4835      	ldr	r0, [pc, #212]	; (80161d0 <_printf_i+0x244>)
 80160fc:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8016100:	6823      	ldr	r3, [r4, #0]
 8016102:	680e      	ldr	r6, [r1, #0]
 8016104:	061f      	lsls	r7, r3, #24
 8016106:	f856 5b04 	ldr.w	r5, [r6], #4
 801610a:	600e      	str	r6, [r1, #0]
 801610c:	d514      	bpl.n	8016138 <_printf_i+0x1ac>
 801610e:	07d9      	lsls	r1, r3, #31
 8016110:	bf44      	itt	mi
 8016112:	f043 0320 	orrmi.w	r3, r3, #32
 8016116:	6023      	strmi	r3, [r4, #0]
 8016118:	b91d      	cbnz	r5, 8016122 <_printf_i+0x196>
 801611a:	6823      	ldr	r3, [r4, #0]
 801611c:	f023 0320 	bic.w	r3, r3, #32
 8016120:	6023      	str	r3, [r4, #0]
 8016122:	2310      	movs	r3, #16
 8016124:	e7b0      	b.n	8016088 <_printf_i+0xfc>
 8016126:	6823      	ldr	r3, [r4, #0]
 8016128:	f043 0320 	orr.w	r3, r3, #32
 801612c:	6023      	str	r3, [r4, #0]
 801612e:	2378      	movs	r3, #120	; 0x78
 8016130:	4828      	ldr	r0, [pc, #160]	; (80161d4 <_printf_i+0x248>)
 8016132:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8016136:	e7e3      	b.n	8016100 <_printf_i+0x174>
 8016138:	065e      	lsls	r6, r3, #25
 801613a:	bf48      	it	mi
 801613c:	b2ad      	uxthmi	r5, r5
 801613e:	e7e6      	b.n	801610e <_printf_i+0x182>
 8016140:	4616      	mov	r6, r2
 8016142:	e7bb      	b.n	80160bc <_printf_i+0x130>
 8016144:	680b      	ldr	r3, [r1, #0]
 8016146:	6826      	ldr	r6, [r4, #0]
 8016148:	6960      	ldr	r0, [r4, #20]
 801614a:	1d1d      	adds	r5, r3, #4
 801614c:	600d      	str	r5, [r1, #0]
 801614e:	0635      	lsls	r5, r6, #24
 8016150:	681b      	ldr	r3, [r3, #0]
 8016152:	d501      	bpl.n	8016158 <_printf_i+0x1cc>
 8016154:	6018      	str	r0, [r3, #0]
 8016156:	e002      	b.n	801615e <_printf_i+0x1d2>
 8016158:	0671      	lsls	r1, r6, #25
 801615a:	d5fb      	bpl.n	8016154 <_printf_i+0x1c8>
 801615c:	8018      	strh	r0, [r3, #0]
 801615e:	2300      	movs	r3, #0
 8016160:	6123      	str	r3, [r4, #16]
 8016162:	4616      	mov	r6, r2
 8016164:	e7ba      	b.n	80160dc <_printf_i+0x150>
 8016166:	680b      	ldr	r3, [r1, #0]
 8016168:	1d1a      	adds	r2, r3, #4
 801616a:	600a      	str	r2, [r1, #0]
 801616c:	681e      	ldr	r6, [r3, #0]
 801616e:	6862      	ldr	r2, [r4, #4]
 8016170:	2100      	movs	r1, #0
 8016172:	4630      	mov	r0, r6
 8016174:	f7ea f854 	bl	8000220 <memchr>
 8016178:	b108      	cbz	r0, 801617e <_printf_i+0x1f2>
 801617a:	1b80      	subs	r0, r0, r6
 801617c:	6060      	str	r0, [r4, #4]
 801617e:	6863      	ldr	r3, [r4, #4]
 8016180:	6123      	str	r3, [r4, #16]
 8016182:	2300      	movs	r3, #0
 8016184:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8016188:	e7a8      	b.n	80160dc <_printf_i+0x150>
 801618a:	6923      	ldr	r3, [r4, #16]
 801618c:	4632      	mov	r2, r6
 801618e:	4649      	mov	r1, r9
 8016190:	4640      	mov	r0, r8
 8016192:	47d0      	blx	sl
 8016194:	3001      	adds	r0, #1
 8016196:	d0ab      	beq.n	80160f0 <_printf_i+0x164>
 8016198:	6823      	ldr	r3, [r4, #0]
 801619a:	079b      	lsls	r3, r3, #30
 801619c:	d413      	bmi.n	80161c6 <_printf_i+0x23a>
 801619e:	68e0      	ldr	r0, [r4, #12]
 80161a0:	9b03      	ldr	r3, [sp, #12]
 80161a2:	4298      	cmp	r0, r3
 80161a4:	bfb8      	it	lt
 80161a6:	4618      	movlt	r0, r3
 80161a8:	e7a4      	b.n	80160f4 <_printf_i+0x168>
 80161aa:	2301      	movs	r3, #1
 80161ac:	4632      	mov	r2, r6
 80161ae:	4649      	mov	r1, r9
 80161b0:	4640      	mov	r0, r8
 80161b2:	47d0      	blx	sl
 80161b4:	3001      	adds	r0, #1
 80161b6:	d09b      	beq.n	80160f0 <_printf_i+0x164>
 80161b8:	3501      	adds	r5, #1
 80161ba:	68e3      	ldr	r3, [r4, #12]
 80161bc:	9903      	ldr	r1, [sp, #12]
 80161be:	1a5b      	subs	r3, r3, r1
 80161c0:	42ab      	cmp	r3, r5
 80161c2:	dcf2      	bgt.n	80161aa <_printf_i+0x21e>
 80161c4:	e7eb      	b.n	801619e <_printf_i+0x212>
 80161c6:	2500      	movs	r5, #0
 80161c8:	f104 0619 	add.w	r6, r4, #25
 80161cc:	e7f5      	b.n	80161ba <_printf_i+0x22e>
 80161ce:	bf00      	nop
 80161d0:	0801e922 	.word	0x0801e922
 80161d4:	0801e933 	.word	0x0801e933

080161d8 <siprintf>:
 80161d8:	b40e      	push	{r1, r2, r3}
 80161da:	b500      	push	{lr}
 80161dc:	b09c      	sub	sp, #112	; 0x70
 80161de:	ab1d      	add	r3, sp, #116	; 0x74
 80161e0:	9002      	str	r0, [sp, #8]
 80161e2:	9006      	str	r0, [sp, #24]
 80161e4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80161e8:	4809      	ldr	r0, [pc, #36]	; (8016210 <siprintf+0x38>)
 80161ea:	9107      	str	r1, [sp, #28]
 80161ec:	9104      	str	r1, [sp, #16]
 80161ee:	4909      	ldr	r1, [pc, #36]	; (8016214 <siprintf+0x3c>)
 80161f0:	f853 2b04 	ldr.w	r2, [r3], #4
 80161f4:	9105      	str	r1, [sp, #20]
 80161f6:	6800      	ldr	r0, [r0, #0]
 80161f8:	9301      	str	r3, [sp, #4]
 80161fa:	a902      	add	r1, sp, #8
 80161fc:	f001 fb2c 	bl	8017858 <_svfiprintf_r>
 8016200:	9b02      	ldr	r3, [sp, #8]
 8016202:	2200      	movs	r2, #0
 8016204:	701a      	strb	r2, [r3, #0]
 8016206:	b01c      	add	sp, #112	; 0x70
 8016208:	f85d eb04 	ldr.w	lr, [sp], #4
 801620c:	b003      	add	sp, #12
 801620e:	4770      	bx	lr
 8016210:	20000108 	.word	0x20000108
 8016214:	ffff0208 	.word	0xffff0208

08016218 <strcpy>:
 8016218:	4603      	mov	r3, r0
 801621a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801621e:	f803 2b01 	strb.w	r2, [r3], #1
 8016222:	2a00      	cmp	r2, #0
 8016224:	d1f9      	bne.n	801621a <strcpy+0x2>
 8016226:	4770      	bx	lr

08016228 <quorem>:
 8016228:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801622c:	6903      	ldr	r3, [r0, #16]
 801622e:	690c      	ldr	r4, [r1, #16]
 8016230:	42a3      	cmp	r3, r4
 8016232:	4607      	mov	r7, r0
 8016234:	f2c0 8081 	blt.w	801633a <quorem+0x112>
 8016238:	3c01      	subs	r4, #1
 801623a:	f101 0814 	add.w	r8, r1, #20
 801623e:	f100 0514 	add.w	r5, r0, #20
 8016242:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8016246:	9301      	str	r3, [sp, #4]
 8016248:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 801624c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8016250:	3301      	adds	r3, #1
 8016252:	429a      	cmp	r2, r3
 8016254:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8016258:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 801625c:	fbb2 f6f3 	udiv	r6, r2, r3
 8016260:	d331      	bcc.n	80162c6 <quorem+0x9e>
 8016262:	f04f 0e00 	mov.w	lr, #0
 8016266:	4640      	mov	r0, r8
 8016268:	46ac      	mov	ip, r5
 801626a:	46f2      	mov	sl, lr
 801626c:	f850 2b04 	ldr.w	r2, [r0], #4
 8016270:	b293      	uxth	r3, r2
 8016272:	fb06 e303 	mla	r3, r6, r3, lr
 8016276:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 801627a:	b29b      	uxth	r3, r3
 801627c:	ebaa 0303 	sub.w	r3, sl, r3
 8016280:	0c12      	lsrs	r2, r2, #16
 8016282:	f8dc a000 	ldr.w	sl, [ip]
 8016286:	fb06 e202 	mla	r2, r6, r2, lr
 801628a:	fa13 f38a 	uxtah	r3, r3, sl
 801628e:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8016292:	fa1f fa82 	uxth.w	sl, r2
 8016296:	f8dc 2000 	ldr.w	r2, [ip]
 801629a:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 801629e:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80162a2:	b29b      	uxth	r3, r3
 80162a4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80162a8:	4581      	cmp	r9, r0
 80162aa:	f84c 3b04 	str.w	r3, [ip], #4
 80162ae:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80162b2:	d2db      	bcs.n	801626c <quorem+0x44>
 80162b4:	f855 300b 	ldr.w	r3, [r5, fp]
 80162b8:	b92b      	cbnz	r3, 80162c6 <quorem+0x9e>
 80162ba:	9b01      	ldr	r3, [sp, #4]
 80162bc:	3b04      	subs	r3, #4
 80162be:	429d      	cmp	r5, r3
 80162c0:	461a      	mov	r2, r3
 80162c2:	d32e      	bcc.n	8016322 <quorem+0xfa>
 80162c4:	613c      	str	r4, [r7, #16]
 80162c6:	4638      	mov	r0, r7
 80162c8:	f001 f8b0 	bl	801742c <__mcmp>
 80162cc:	2800      	cmp	r0, #0
 80162ce:	db24      	blt.n	801631a <quorem+0xf2>
 80162d0:	3601      	adds	r6, #1
 80162d2:	4628      	mov	r0, r5
 80162d4:	f04f 0c00 	mov.w	ip, #0
 80162d8:	f858 2b04 	ldr.w	r2, [r8], #4
 80162dc:	f8d0 e000 	ldr.w	lr, [r0]
 80162e0:	b293      	uxth	r3, r2
 80162e2:	ebac 0303 	sub.w	r3, ip, r3
 80162e6:	0c12      	lsrs	r2, r2, #16
 80162e8:	fa13 f38e 	uxtah	r3, r3, lr
 80162ec:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 80162f0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80162f4:	b29b      	uxth	r3, r3
 80162f6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80162fa:	45c1      	cmp	r9, r8
 80162fc:	f840 3b04 	str.w	r3, [r0], #4
 8016300:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8016304:	d2e8      	bcs.n	80162d8 <quorem+0xb0>
 8016306:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801630a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801630e:	b922      	cbnz	r2, 801631a <quorem+0xf2>
 8016310:	3b04      	subs	r3, #4
 8016312:	429d      	cmp	r5, r3
 8016314:	461a      	mov	r2, r3
 8016316:	d30a      	bcc.n	801632e <quorem+0x106>
 8016318:	613c      	str	r4, [r7, #16]
 801631a:	4630      	mov	r0, r6
 801631c:	b003      	add	sp, #12
 801631e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016322:	6812      	ldr	r2, [r2, #0]
 8016324:	3b04      	subs	r3, #4
 8016326:	2a00      	cmp	r2, #0
 8016328:	d1cc      	bne.n	80162c4 <quorem+0x9c>
 801632a:	3c01      	subs	r4, #1
 801632c:	e7c7      	b.n	80162be <quorem+0x96>
 801632e:	6812      	ldr	r2, [r2, #0]
 8016330:	3b04      	subs	r3, #4
 8016332:	2a00      	cmp	r2, #0
 8016334:	d1f0      	bne.n	8016318 <quorem+0xf0>
 8016336:	3c01      	subs	r4, #1
 8016338:	e7eb      	b.n	8016312 <quorem+0xea>
 801633a:	2000      	movs	r0, #0
 801633c:	e7ee      	b.n	801631c <quorem+0xf4>
	...

08016340 <_dtoa_r>:
 8016340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016344:	ed2d 8b02 	vpush	{d8}
 8016348:	ec57 6b10 	vmov	r6, r7, d0
 801634c:	b095      	sub	sp, #84	; 0x54
 801634e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8016350:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8016354:	9105      	str	r1, [sp, #20]
 8016356:	e9cd 6702 	strd	r6, r7, [sp, #8]
 801635a:	4604      	mov	r4, r0
 801635c:	9209      	str	r2, [sp, #36]	; 0x24
 801635e:	930f      	str	r3, [sp, #60]	; 0x3c
 8016360:	b975      	cbnz	r5, 8016380 <_dtoa_r+0x40>
 8016362:	2010      	movs	r0, #16
 8016364:	f000 fddc 	bl	8016f20 <malloc>
 8016368:	4602      	mov	r2, r0
 801636a:	6260      	str	r0, [r4, #36]	; 0x24
 801636c:	b920      	cbnz	r0, 8016378 <_dtoa_r+0x38>
 801636e:	4bb2      	ldr	r3, [pc, #712]	; (8016638 <_dtoa_r+0x2f8>)
 8016370:	21ea      	movs	r1, #234	; 0xea
 8016372:	48b2      	ldr	r0, [pc, #712]	; (801663c <_dtoa_r+0x2fc>)
 8016374:	f001 fb80 	bl	8017a78 <__assert_func>
 8016378:	e9c0 5501 	strd	r5, r5, [r0, #4]
 801637c:	6005      	str	r5, [r0, #0]
 801637e:	60c5      	str	r5, [r0, #12]
 8016380:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016382:	6819      	ldr	r1, [r3, #0]
 8016384:	b151      	cbz	r1, 801639c <_dtoa_r+0x5c>
 8016386:	685a      	ldr	r2, [r3, #4]
 8016388:	604a      	str	r2, [r1, #4]
 801638a:	2301      	movs	r3, #1
 801638c:	4093      	lsls	r3, r2
 801638e:	608b      	str	r3, [r1, #8]
 8016390:	4620      	mov	r0, r4
 8016392:	f000 fe0d 	bl	8016fb0 <_Bfree>
 8016396:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016398:	2200      	movs	r2, #0
 801639a:	601a      	str	r2, [r3, #0]
 801639c:	1e3b      	subs	r3, r7, #0
 801639e:	bfb9      	ittee	lt
 80163a0:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80163a4:	9303      	strlt	r3, [sp, #12]
 80163a6:	2300      	movge	r3, #0
 80163a8:	f8c8 3000 	strge.w	r3, [r8]
 80163ac:	f8dd 900c 	ldr.w	r9, [sp, #12]
 80163b0:	4ba3      	ldr	r3, [pc, #652]	; (8016640 <_dtoa_r+0x300>)
 80163b2:	bfbc      	itt	lt
 80163b4:	2201      	movlt	r2, #1
 80163b6:	f8c8 2000 	strlt.w	r2, [r8]
 80163ba:	ea33 0309 	bics.w	r3, r3, r9
 80163be:	d11b      	bne.n	80163f8 <_dtoa_r+0xb8>
 80163c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80163c2:	f242 730f 	movw	r3, #9999	; 0x270f
 80163c6:	6013      	str	r3, [r2, #0]
 80163c8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80163cc:	4333      	orrs	r3, r6
 80163ce:	f000 857a 	beq.w	8016ec6 <_dtoa_r+0xb86>
 80163d2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80163d4:	b963      	cbnz	r3, 80163f0 <_dtoa_r+0xb0>
 80163d6:	4b9b      	ldr	r3, [pc, #620]	; (8016644 <_dtoa_r+0x304>)
 80163d8:	e024      	b.n	8016424 <_dtoa_r+0xe4>
 80163da:	4b9b      	ldr	r3, [pc, #620]	; (8016648 <_dtoa_r+0x308>)
 80163dc:	9300      	str	r3, [sp, #0]
 80163de:	3308      	adds	r3, #8
 80163e0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80163e2:	6013      	str	r3, [r2, #0]
 80163e4:	9800      	ldr	r0, [sp, #0]
 80163e6:	b015      	add	sp, #84	; 0x54
 80163e8:	ecbd 8b02 	vpop	{d8}
 80163ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163f0:	4b94      	ldr	r3, [pc, #592]	; (8016644 <_dtoa_r+0x304>)
 80163f2:	9300      	str	r3, [sp, #0]
 80163f4:	3303      	adds	r3, #3
 80163f6:	e7f3      	b.n	80163e0 <_dtoa_r+0xa0>
 80163f8:	ed9d 7b02 	vldr	d7, [sp, #8]
 80163fc:	2200      	movs	r2, #0
 80163fe:	ec51 0b17 	vmov	r0, r1, d7
 8016402:	2300      	movs	r3, #0
 8016404:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
 8016408:	f7ea fb7e 	bl	8000b08 <__aeabi_dcmpeq>
 801640c:	4680      	mov	r8, r0
 801640e:	b158      	cbz	r0, 8016428 <_dtoa_r+0xe8>
 8016410:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016412:	2301      	movs	r3, #1
 8016414:	6013      	str	r3, [r2, #0]
 8016416:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8016418:	2b00      	cmp	r3, #0
 801641a:	f000 8551 	beq.w	8016ec0 <_dtoa_r+0xb80>
 801641e:	488b      	ldr	r0, [pc, #556]	; (801664c <_dtoa_r+0x30c>)
 8016420:	6018      	str	r0, [r3, #0]
 8016422:	1e43      	subs	r3, r0, #1
 8016424:	9300      	str	r3, [sp, #0]
 8016426:	e7dd      	b.n	80163e4 <_dtoa_r+0xa4>
 8016428:	ed9d 0b0a 	vldr	d0, [sp, #40]	; 0x28
 801642c:	aa12      	add	r2, sp, #72	; 0x48
 801642e:	a913      	add	r1, sp, #76	; 0x4c
 8016430:	4620      	mov	r0, r4
 8016432:	f001 f89f 	bl	8017574 <__d2b>
 8016436:	f3c9 550a 	ubfx	r5, r9, #20, #11
 801643a:	4683      	mov	fp, r0
 801643c:	2d00      	cmp	r5, #0
 801643e:	d07c      	beq.n	801653a <_dtoa_r+0x1fa>
 8016440:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016442:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8016446:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801644a:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	; 0x28
 801644e:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8016452:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 8016456:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 801645a:	4b7d      	ldr	r3, [pc, #500]	; (8016650 <_dtoa_r+0x310>)
 801645c:	2200      	movs	r2, #0
 801645e:	4630      	mov	r0, r6
 8016460:	4639      	mov	r1, r7
 8016462:	f7e9 ff31 	bl	80002c8 <__aeabi_dsub>
 8016466:	a36e      	add	r3, pc, #440	; (adr r3, 8016620 <_dtoa_r+0x2e0>)
 8016468:	e9d3 2300 	ldrd	r2, r3, [r3]
 801646c:	f7ea f8e4 	bl	8000638 <__aeabi_dmul>
 8016470:	a36d      	add	r3, pc, #436	; (adr r3, 8016628 <_dtoa_r+0x2e8>)
 8016472:	e9d3 2300 	ldrd	r2, r3, [r3]
 8016476:	f7e9 ff29 	bl	80002cc <__adddf3>
 801647a:	4606      	mov	r6, r0
 801647c:	4628      	mov	r0, r5
 801647e:	460f      	mov	r7, r1
 8016480:	f7ea f870 	bl	8000564 <__aeabi_i2d>
 8016484:	a36a      	add	r3, pc, #424	; (adr r3, 8016630 <_dtoa_r+0x2f0>)
 8016486:	e9d3 2300 	ldrd	r2, r3, [r3]
 801648a:	f7ea f8d5 	bl	8000638 <__aeabi_dmul>
 801648e:	4602      	mov	r2, r0
 8016490:	460b      	mov	r3, r1
 8016492:	4630      	mov	r0, r6
 8016494:	4639      	mov	r1, r7
 8016496:	f7e9 ff19 	bl	80002cc <__adddf3>
 801649a:	4606      	mov	r6, r0
 801649c:	460f      	mov	r7, r1
 801649e:	f7ea fb7b 	bl	8000b98 <__aeabi_d2iz>
 80164a2:	2200      	movs	r2, #0
 80164a4:	4682      	mov	sl, r0
 80164a6:	2300      	movs	r3, #0
 80164a8:	4630      	mov	r0, r6
 80164aa:	4639      	mov	r1, r7
 80164ac:	f7ea fb36 	bl	8000b1c <__aeabi_dcmplt>
 80164b0:	b148      	cbz	r0, 80164c6 <_dtoa_r+0x186>
 80164b2:	4650      	mov	r0, sl
 80164b4:	f7ea f856 	bl	8000564 <__aeabi_i2d>
 80164b8:	4632      	mov	r2, r6
 80164ba:	463b      	mov	r3, r7
 80164bc:	f7ea fb24 	bl	8000b08 <__aeabi_dcmpeq>
 80164c0:	b908      	cbnz	r0, 80164c6 <_dtoa_r+0x186>
 80164c2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80164c6:	f1ba 0f16 	cmp.w	sl, #22
 80164ca:	d854      	bhi.n	8016576 <_dtoa_r+0x236>
 80164cc:	4b61      	ldr	r3, [pc, #388]	; (8016654 <_dtoa_r+0x314>)
 80164ce:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80164d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80164d6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80164da:	f7ea fb1f 	bl	8000b1c <__aeabi_dcmplt>
 80164de:	2800      	cmp	r0, #0
 80164e0:	d04b      	beq.n	801657a <_dtoa_r+0x23a>
 80164e2:	f10a 3aff 	add.w	sl, sl, #4294967295
 80164e6:	2300      	movs	r3, #0
 80164e8:	930e      	str	r3, [sp, #56]	; 0x38
 80164ea:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80164ec:	1b5d      	subs	r5, r3, r5
 80164ee:	1e6b      	subs	r3, r5, #1
 80164f0:	9304      	str	r3, [sp, #16]
 80164f2:	bf43      	ittte	mi
 80164f4:	2300      	movmi	r3, #0
 80164f6:	f1c5 0801 	rsbmi	r8, r5, #1
 80164fa:	9304      	strmi	r3, [sp, #16]
 80164fc:	f04f 0800 	movpl.w	r8, #0
 8016500:	f1ba 0f00 	cmp.w	sl, #0
 8016504:	db3b      	blt.n	801657e <_dtoa_r+0x23e>
 8016506:	9b04      	ldr	r3, [sp, #16]
 8016508:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 801650c:	4453      	add	r3, sl
 801650e:	9304      	str	r3, [sp, #16]
 8016510:	2300      	movs	r3, #0
 8016512:	9306      	str	r3, [sp, #24]
 8016514:	9b05      	ldr	r3, [sp, #20]
 8016516:	2b09      	cmp	r3, #9
 8016518:	d869      	bhi.n	80165ee <_dtoa_r+0x2ae>
 801651a:	2b05      	cmp	r3, #5
 801651c:	bfc4      	itt	gt
 801651e:	3b04      	subgt	r3, #4
 8016520:	9305      	strgt	r3, [sp, #20]
 8016522:	9b05      	ldr	r3, [sp, #20]
 8016524:	f1a3 0302 	sub.w	r3, r3, #2
 8016528:	bfcc      	ite	gt
 801652a:	2500      	movgt	r5, #0
 801652c:	2501      	movle	r5, #1
 801652e:	2b03      	cmp	r3, #3
 8016530:	d869      	bhi.n	8016606 <_dtoa_r+0x2c6>
 8016532:	e8df f003 	tbb	[pc, r3]
 8016536:	4e2c      	.short	0x4e2c
 8016538:	5a4c      	.short	0x5a4c
 801653a:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 801653e:	441d      	add	r5, r3
 8016540:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8016544:	2b20      	cmp	r3, #32
 8016546:	bfc1      	itttt	gt
 8016548:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 801654c:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 8016550:	fa09 f303 	lslgt.w	r3, r9, r3
 8016554:	fa26 f000 	lsrgt.w	r0, r6, r0
 8016558:	bfda      	itte	le
 801655a:	f1c3 0320 	rsble	r3, r3, #32
 801655e:	fa06 f003 	lslle.w	r0, r6, r3
 8016562:	4318      	orrgt	r0, r3
 8016564:	f7e9 ffee 	bl	8000544 <__aeabi_ui2d>
 8016568:	2301      	movs	r3, #1
 801656a:	4606      	mov	r6, r0
 801656c:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8016570:	3d01      	subs	r5, #1
 8016572:	9310      	str	r3, [sp, #64]	; 0x40
 8016574:	e771      	b.n	801645a <_dtoa_r+0x11a>
 8016576:	2301      	movs	r3, #1
 8016578:	e7b6      	b.n	80164e8 <_dtoa_r+0x1a8>
 801657a:	900e      	str	r0, [sp, #56]	; 0x38
 801657c:	e7b5      	b.n	80164ea <_dtoa_r+0x1aa>
 801657e:	f1ca 0300 	rsb	r3, sl, #0
 8016582:	9306      	str	r3, [sp, #24]
 8016584:	2300      	movs	r3, #0
 8016586:	eba8 080a 	sub.w	r8, r8, sl
 801658a:	930d      	str	r3, [sp, #52]	; 0x34
 801658c:	e7c2      	b.n	8016514 <_dtoa_r+0x1d4>
 801658e:	2300      	movs	r3, #0
 8016590:	9308      	str	r3, [sp, #32]
 8016592:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016594:	2b00      	cmp	r3, #0
 8016596:	dc39      	bgt.n	801660c <_dtoa_r+0x2cc>
 8016598:	f04f 0901 	mov.w	r9, #1
 801659c:	f8cd 9004 	str.w	r9, [sp, #4]
 80165a0:	464b      	mov	r3, r9
 80165a2:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 80165a6:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80165a8:	2200      	movs	r2, #0
 80165aa:	6042      	str	r2, [r0, #4]
 80165ac:	2204      	movs	r2, #4
 80165ae:	f102 0614 	add.w	r6, r2, #20
 80165b2:	429e      	cmp	r6, r3
 80165b4:	6841      	ldr	r1, [r0, #4]
 80165b6:	d92f      	bls.n	8016618 <_dtoa_r+0x2d8>
 80165b8:	4620      	mov	r0, r4
 80165ba:	f000 fcb9 	bl	8016f30 <_Balloc>
 80165be:	9000      	str	r0, [sp, #0]
 80165c0:	2800      	cmp	r0, #0
 80165c2:	d14b      	bne.n	801665c <_dtoa_r+0x31c>
 80165c4:	4b24      	ldr	r3, [pc, #144]	; (8016658 <_dtoa_r+0x318>)
 80165c6:	4602      	mov	r2, r0
 80165c8:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 80165cc:	e6d1      	b.n	8016372 <_dtoa_r+0x32>
 80165ce:	2301      	movs	r3, #1
 80165d0:	e7de      	b.n	8016590 <_dtoa_r+0x250>
 80165d2:	2300      	movs	r3, #0
 80165d4:	9308      	str	r3, [sp, #32]
 80165d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80165d8:	eb0a 0903 	add.w	r9, sl, r3
 80165dc:	f109 0301 	add.w	r3, r9, #1
 80165e0:	2b01      	cmp	r3, #1
 80165e2:	9301      	str	r3, [sp, #4]
 80165e4:	bfb8      	it	lt
 80165e6:	2301      	movlt	r3, #1
 80165e8:	e7dd      	b.n	80165a6 <_dtoa_r+0x266>
 80165ea:	2301      	movs	r3, #1
 80165ec:	e7f2      	b.n	80165d4 <_dtoa_r+0x294>
 80165ee:	2501      	movs	r5, #1
 80165f0:	2300      	movs	r3, #0
 80165f2:	9305      	str	r3, [sp, #20]
 80165f4:	9508      	str	r5, [sp, #32]
 80165f6:	f04f 39ff 	mov.w	r9, #4294967295
 80165fa:	2200      	movs	r2, #0
 80165fc:	f8cd 9004 	str.w	r9, [sp, #4]
 8016600:	2312      	movs	r3, #18
 8016602:	9209      	str	r2, [sp, #36]	; 0x24
 8016604:	e7cf      	b.n	80165a6 <_dtoa_r+0x266>
 8016606:	2301      	movs	r3, #1
 8016608:	9308      	str	r3, [sp, #32]
 801660a:	e7f4      	b.n	80165f6 <_dtoa_r+0x2b6>
 801660c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8016610:	f8cd 9004 	str.w	r9, [sp, #4]
 8016614:	464b      	mov	r3, r9
 8016616:	e7c6      	b.n	80165a6 <_dtoa_r+0x266>
 8016618:	3101      	adds	r1, #1
 801661a:	6041      	str	r1, [r0, #4]
 801661c:	0052      	lsls	r2, r2, #1
 801661e:	e7c6      	b.n	80165ae <_dtoa_r+0x26e>
 8016620:	636f4361 	.word	0x636f4361
 8016624:	3fd287a7 	.word	0x3fd287a7
 8016628:	8b60c8b3 	.word	0x8b60c8b3
 801662c:	3fc68a28 	.word	0x3fc68a28
 8016630:	509f79fb 	.word	0x509f79fb
 8016634:	3fd34413 	.word	0x3fd34413
 8016638:	0801e951 	.word	0x0801e951
 801663c:	0801e968 	.word	0x0801e968
 8016640:	7ff00000 	.word	0x7ff00000
 8016644:	0801e94d 	.word	0x0801e94d
 8016648:	0801e944 	.word	0x0801e944
 801664c:	0801e921 	.word	0x0801e921
 8016650:	3ff80000 	.word	0x3ff80000
 8016654:	0801ea60 	.word	0x0801ea60
 8016658:	0801e9c7 	.word	0x0801e9c7
 801665c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801665e:	9a00      	ldr	r2, [sp, #0]
 8016660:	601a      	str	r2, [r3, #0]
 8016662:	9b01      	ldr	r3, [sp, #4]
 8016664:	2b0e      	cmp	r3, #14
 8016666:	f200 80ad 	bhi.w	80167c4 <_dtoa_r+0x484>
 801666a:	2d00      	cmp	r5, #0
 801666c:	f000 80aa 	beq.w	80167c4 <_dtoa_r+0x484>
 8016670:	f1ba 0f00 	cmp.w	sl, #0
 8016674:	dd36      	ble.n	80166e4 <_dtoa_r+0x3a4>
 8016676:	4ac3      	ldr	r2, [pc, #780]	; (8016984 <_dtoa_r+0x644>)
 8016678:	f00a 030f 	and.w	r3, sl, #15
 801667c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8016680:	ed93 7b00 	vldr	d7, [r3]
 8016684:	f41a 7f80 	tst.w	sl, #256	; 0x100
 8016688:	ea4f 172a 	mov.w	r7, sl, asr #4
 801668c:	eeb0 8a47 	vmov.f32	s16, s14
 8016690:	eef0 8a67 	vmov.f32	s17, s15
 8016694:	d016      	beq.n	80166c4 <_dtoa_r+0x384>
 8016696:	4bbc      	ldr	r3, [pc, #752]	; (8016988 <_dtoa_r+0x648>)
 8016698:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 801669c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80166a0:	f7ea f8f4 	bl	800088c <__aeabi_ddiv>
 80166a4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80166a8:	f007 070f 	and.w	r7, r7, #15
 80166ac:	2503      	movs	r5, #3
 80166ae:	4eb6      	ldr	r6, [pc, #728]	; (8016988 <_dtoa_r+0x648>)
 80166b0:	b957      	cbnz	r7, 80166c8 <_dtoa_r+0x388>
 80166b2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80166b6:	ec53 2b18 	vmov	r2, r3, d8
 80166ba:	f7ea f8e7 	bl	800088c <__aeabi_ddiv>
 80166be:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80166c2:	e029      	b.n	8016718 <_dtoa_r+0x3d8>
 80166c4:	2502      	movs	r5, #2
 80166c6:	e7f2      	b.n	80166ae <_dtoa_r+0x36e>
 80166c8:	07f9      	lsls	r1, r7, #31
 80166ca:	d508      	bpl.n	80166de <_dtoa_r+0x39e>
 80166cc:	ec51 0b18 	vmov	r0, r1, d8
 80166d0:	e9d6 2300 	ldrd	r2, r3, [r6]
 80166d4:	f7e9 ffb0 	bl	8000638 <__aeabi_dmul>
 80166d8:	ec41 0b18 	vmov	d8, r0, r1
 80166dc:	3501      	adds	r5, #1
 80166de:	107f      	asrs	r7, r7, #1
 80166e0:	3608      	adds	r6, #8
 80166e2:	e7e5      	b.n	80166b0 <_dtoa_r+0x370>
 80166e4:	f000 80a6 	beq.w	8016834 <_dtoa_r+0x4f4>
 80166e8:	f1ca 0600 	rsb	r6, sl, #0
 80166ec:	4ba5      	ldr	r3, [pc, #660]	; (8016984 <_dtoa_r+0x644>)
 80166ee:	4fa6      	ldr	r7, [pc, #664]	; (8016988 <_dtoa_r+0x648>)
 80166f0:	f006 020f 	and.w	r2, r6, #15
 80166f4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80166f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80166fc:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8016700:	f7e9 ff9a 	bl	8000638 <__aeabi_dmul>
 8016704:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8016708:	1136      	asrs	r6, r6, #4
 801670a:	2300      	movs	r3, #0
 801670c:	2502      	movs	r5, #2
 801670e:	2e00      	cmp	r6, #0
 8016710:	f040 8085 	bne.w	801681e <_dtoa_r+0x4de>
 8016714:	2b00      	cmp	r3, #0
 8016716:	d1d2      	bne.n	80166be <_dtoa_r+0x37e>
 8016718:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801671a:	2b00      	cmp	r3, #0
 801671c:	f000 808c 	beq.w	8016838 <_dtoa_r+0x4f8>
 8016720:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8016724:	4b99      	ldr	r3, [pc, #612]	; (801698c <_dtoa_r+0x64c>)
 8016726:	2200      	movs	r2, #0
 8016728:	4630      	mov	r0, r6
 801672a:	4639      	mov	r1, r7
 801672c:	f7ea f9f6 	bl	8000b1c <__aeabi_dcmplt>
 8016730:	2800      	cmp	r0, #0
 8016732:	f000 8081 	beq.w	8016838 <_dtoa_r+0x4f8>
 8016736:	9b01      	ldr	r3, [sp, #4]
 8016738:	2b00      	cmp	r3, #0
 801673a:	d07d      	beq.n	8016838 <_dtoa_r+0x4f8>
 801673c:	f1b9 0f00 	cmp.w	r9, #0
 8016740:	dd3c      	ble.n	80167bc <_dtoa_r+0x47c>
 8016742:	f10a 33ff 	add.w	r3, sl, #4294967295
 8016746:	9307      	str	r3, [sp, #28]
 8016748:	2200      	movs	r2, #0
 801674a:	4b91      	ldr	r3, [pc, #580]	; (8016990 <_dtoa_r+0x650>)
 801674c:	4630      	mov	r0, r6
 801674e:	4639      	mov	r1, r7
 8016750:	f7e9 ff72 	bl	8000638 <__aeabi_dmul>
 8016754:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8016758:	3501      	adds	r5, #1
 801675a:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
 801675e:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8016762:	4628      	mov	r0, r5
 8016764:	f7e9 fefe 	bl	8000564 <__aeabi_i2d>
 8016768:	4632      	mov	r2, r6
 801676a:	463b      	mov	r3, r7
 801676c:	f7e9 ff64 	bl	8000638 <__aeabi_dmul>
 8016770:	4b88      	ldr	r3, [pc, #544]	; (8016994 <_dtoa_r+0x654>)
 8016772:	2200      	movs	r2, #0
 8016774:	f7e9 fdaa 	bl	80002cc <__adddf3>
 8016778:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 801677c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8016780:	9303      	str	r3, [sp, #12]
 8016782:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016784:	2b00      	cmp	r3, #0
 8016786:	d15c      	bne.n	8016842 <_dtoa_r+0x502>
 8016788:	4b83      	ldr	r3, [pc, #524]	; (8016998 <_dtoa_r+0x658>)
 801678a:	2200      	movs	r2, #0
 801678c:	4630      	mov	r0, r6
 801678e:	4639      	mov	r1, r7
 8016790:	f7e9 fd9a 	bl	80002c8 <__aeabi_dsub>
 8016794:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8016798:	4606      	mov	r6, r0
 801679a:	460f      	mov	r7, r1
 801679c:	f7ea f9dc 	bl	8000b58 <__aeabi_dcmpgt>
 80167a0:	2800      	cmp	r0, #0
 80167a2:	f040 8296 	bne.w	8016cd2 <_dtoa_r+0x992>
 80167a6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80167aa:	4630      	mov	r0, r6
 80167ac:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80167b0:	4639      	mov	r1, r7
 80167b2:	f7ea f9b3 	bl	8000b1c <__aeabi_dcmplt>
 80167b6:	2800      	cmp	r0, #0
 80167b8:	f040 8288 	bne.w	8016ccc <_dtoa_r+0x98c>
 80167bc:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80167c0:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80167c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80167c6:	2b00      	cmp	r3, #0
 80167c8:	f2c0 8158 	blt.w	8016a7c <_dtoa_r+0x73c>
 80167cc:	f1ba 0f0e 	cmp.w	sl, #14
 80167d0:	f300 8154 	bgt.w	8016a7c <_dtoa_r+0x73c>
 80167d4:	4b6b      	ldr	r3, [pc, #428]	; (8016984 <_dtoa_r+0x644>)
 80167d6:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80167da:	e9d3 8900 	ldrd	r8, r9, [r3]
 80167de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80167e0:	2b00      	cmp	r3, #0
 80167e2:	f280 80e3 	bge.w	80169ac <_dtoa_r+0x66c>
 80167e6:	9b01      	ldr	r3, [sp, #4]
 80167e8:	2b00      	cmp	r3, #0
 80167ea:	f300 80df 	bgt.w	80169ac <_dtoa_r+0x66c>
 80167ee:	f040 826d 	bne.w	8016ccc <_dtoa_r+0x98c>
 80167f2:	4b69      	ldr	r3, [pc, #420]	; (8016998 <_dtoa_r+0x658>)
 80167f4:	2200      	movs	r2, #0
 80167f6:	4640      	mov	r0, r8
 80167f8:	4649      	mov	r1, r9
 80167fa:	f7e9 ff1d 	bl	8000638 <__aeabi_dmul>
 80167fe:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8016802:	f7ea f99f 	bl	8000b44 <__aeabi_dcmpge>
 8016806:	9e01      	ldr	r6, [sp, #4]
 8016808:	4637      	mov	r7, r6
 801680a:	2800      	cmp	r0, #0
 801680c:	f040 8243 	bne.w	8016c96 <_dtoa_r+0x956>
 8016810:	9d00      	ldr	r5, [sp, #0]
 8016812:	2331      	movs	r3, #49	; 0x31
 8016814:	f805 3b01 	strb.w	r3, [r5], #1
 8016818:	f10a 0a01 	add.w	sl, sl, #1
 801681c:	e23f      	b.n	8016c9e <_dtoa_r+0x95e>
 801681e:	07f2      	lsls	r2, r6, #31
 8016820:	d505      	bpl.n	801682e <_dtoa_r+0x4ee>
 8016822:	e9d7 2300 	ldrd	r2, r3, [r7]
 8016826:	f7e9 ff07 	bl	8000638 <__aeabi_dmul>
 801682a:	3501      	adds	r5, #1
 801682c:	2301      	movs	r3, #1
 801682e:	1076      	asrs	r6, r6, #1
 8016830:	3708      	adds	r7, #8
 8016832:	e76c      	b.n	801670e <_dtoa_r+0x3ce>
 8016834:	2502      	movs	r5, #2
 8016836:	e76f      	b.n	8016718 <_dtoa_r+0x3d8>
 8016838:	9b01      	ldr	r3, [sp, #4]
 801683a:	f8cd a01c 	str.w	sl, [sp, #28]
 801683e:	930c      	str	r3, [sp, #48]	; 0x30
 8016840:	e78d      	b.n	801675e <_dtoa_r+0x41e>
 8016842:	9900      	ldr	r1, [sp, #0]
 8016844:	980c      	ldr	r0, [sp, #48]	; 0x30
 8016846:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016848:	4b4e      	ldr	r3, [pc, #312]	; (8016984 <_dtoa_r+0x644>)
 801684a:	ed9d 7b02 	vldr	d7, [sp, #8]
 801684e:	4401      	add	r1, r0
 8016850:	9102      	str	r1, [sp, #8]
 8016852:	9908      	ldr	r1, [sp, #32]
 8016854:	eeb0 8a47 	vmov.f32	s16, s14
 8016858:	eef0 8a67 	vmov.f32	s17, s15
 801685c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8016860:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8016864:	2900      	cmp	r1, #0
 8016866:	d045      	beq.n	80168f4 <_dtoa_r+0x5b4>
 8016868:	494c      	ldr	r1, [pc, #304]	; (801699c <_dtoa_r+0x65c>)
 801686a:	2000      	movs	r0, #0
 801686c:	f7ea f80e 	bl	800088c <__aeabi_ddiv>
 8016870:	ec53 2b18 	vmov	r2, r3, d8
 8016874:	f7e9 fd28 	bl	80002c8 <__aeabi_dsub>
 8016878:	9d00      	ldr	r5, [sp, #0]
 801687a:	ec41 0b18 	vmov	d8, r0, r1
 801687e:	4639      	mov	r1, r7
 8016880:	4630      	mov	r0, r6
 8016882:	f7ea f989 	bl	8000b98 <__aeabi_d2iz>
 8016886:	900c      	str	r0, [sp, #48]	; 0x30
 8016888:	f7e9 fe6c 	bl	8000564 <__aeabi_i2d>
 801688c:	4602      	mov	r2, r0
 801688e:	460b      	mov	r3, r1
 8016890:	4630      	mov	r0, r6
 8016892:	4639      	mov	r1, r7
 8016894:	f7e9 fd18 	bl	80002c8 <__aeabi_dsub>
 8016898:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801689a:	3330      	adds	r3, #48	; 0x30
 801689c:	f805 3b01 	strb.w	r3, [r5], #1
 80168a0:	ec53 2b18 	vmov	r2, r3, d8
 80168a4:	4606      	mov	r6, r0
 80168a6:	460f      	mov	r7, r1
 80168a8:	f7ea f938 	bl	8000b1c <__aeabi_dcmplt>
 80168ac:	2800      	cmp	r0, #0
 80168ae:	d165      	bne.n	801697c <_dtoa_r+0x63c>
 80168b0:	4632      	mov	r2, r6
 80168b2:	463b      	mov	r3, r7
 80168b4:	4935      	ldr	r1, [pc, #212]	; (801698c <_dtoa_r+0x64c>)
 80168b6:	2000      	movs	r0, #0
 80168b8:	f7e9 fd06 	bl	80002c8 <__aeabi_dsub>
 80168bc:	ec53 2b18 	vmov	r2, r3, d8
 80168c0:	f7ea f92c 	bl	8000b1c <__aeabi_dcmplt>
 80168c4:	2800      	cmp	r0, #0
 80168c6:	f040 80b9 	bne.w	8016a3c <_dtoa_r+0x6fc>
 80168ca:	9b02      	ldr	r3, [sp, #8]
 80168cc:	429d      	cmp	r5, r3
 80168ce:	f43f af75 	beq.w	80167bc <_dtoa_r+0x47c>
 80168d2:	4b2f      	ldr	r3, [pc, #188]	; (8016990 <_dtoa_r+0x650>)
 80168d4:	ec51 0b18 	vmov	r0, r1, d8
 80168d8:	2200      	movs	r2, #0
 80168da:	f7e9 fead 	bl	8000638 <__aeabi_dmul>
 80168de:	4b2c      	ldr	r3, [pc, #176]	; (8016990 <_dtoa_r+0x650>)
 80168e0:	ec41 0b18 	vmov	d8, r0, r1
 80168e4:	2200      	movs	r2, #0
 80168e6:	4630      	mov	r0, r6
 80168e8:	4639      	mov	r1, r7
 80168ea:	f7e9 fea5 	bl	8000638 <__aeabi_dmul>
 80168ee:	4606      	mov	r6, r0
 80168f0:	460f      	mov	r7, r1
 80168f2:	e7c4      	b.n	801687e <_dtoa_r+0x53e>
 80168f4:	ec51 0b17 	vmov	r0, r1, d7
 80168f8:	f7e9 fe9e 	bl	8000638 <__aeabi_dmul>
 80168fc:	9b02      	ldr	r3, [sp, #8]
 80168fe:	9d00      	ldr	r5, [sp, #0]
 8016900:	930c      	str	r3, [sp, #48]	; 0x30
 8016902:	ec41 0b18 	vmov	d8, r0, r1
 8016906:	4639      	mov	r1, r7
 8016908:	4630      	mov	r0, r6
 801690a:	f7ea f945 	bl	8000b98 <__aeabi_d2iz>
 801690e:	9011      	str	r0, [sp, #68]	; 0x44
 8016910:	f7e9 fe28 	bl	8000564 <__aeabi_i2d>
 8016914:	4602      	mov	r2, r0
 8016916:	460b      	mov	r3, r1
 8016918:	4630      	mov	r0, r6
 801691a:	4639      	mov	r1, r7
 801691c:	f7e9 fcd4 	bl	80002c8 <__aeabi_dsub>
 8016920:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016922:	3330      	adds	r3, #48	; 0x30
 8016924:	f805 3b01 	strb.w	r3, [r5], #1
 8016928:	9b02      	ldr	r3, [sp, #8]
 801692a:	429d      	cmp	r5, r3
 801692c:	4606      	mov	r6, r0
 801692e:	460f      	mov	r7, r1
 8016930:	f04f 0200 	mov.w	r2, #0
 8016934:	d134      	bne.n	80169a0 <_dtoa_r+0x660>
 8016936:	4b19      	ldr	r3, [pc, #100]	; (801699c <_dtoa_r+0x65c>)
 8016938:	ec51 0b18 	vmov	r0, r1, d8
 801693c:	f7e9 fcc6 	bl	80002cc <__adddf3>
 8016940:	4602      	mov	r2, r0
 8016942:	460b      	mov	r3, r1
 8016944:	4630      	mov	r0, r6
 8016946:	4639      	mov	r1, r7
 8016948:	f7ea f906 	bl	8000b58 <__aeabi_dcmpgt>
 801694c:	2800      	cmp	r0, #0
 801694e:	d175      	bne.n	8016a3c <_dtoa_r+0x6fc>
 8016950:	ec53 2b18 	vmov	r2, r3, d8
 8016954:	4911      	ldr	r1, [pc, #68]	; (801699c <_dtoa_r+0x65c>)
 8016956:	2000      	movs	r0, #0
 8016958:	f7e9 fcb6 	bl	80002c8 <__aeabi_dsub>
 801695c:	4602      	mov	r2, r0
 801695e:	460b      	mov	r3, r1
 8016960:	4630      	mov	r0, r6
 8016962:	4639      	mov	r1, r7
 8016964:	f7ea f8da 	bl	8000b1c <__aeabi_dcmplt>
 8016968:	2800      	cmp	r0, #0
 801696a:	f43f af27 	beq.w	80167bc <_dtoa_r+0x47c>
 801696e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8016970:	1e6b      	subs	r3, r5, #1
 8016972:	930c      	str	r3, [sp, #48]	; 0x30
 8016974:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8016978:	2b30      	cmp	r3, #48	; 0x30
 801697a:	d0f8      	beq.n	801696e <_dtoa_r+0x62e>
 801697c:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8016980:	e04a      	b.n	8016a18 <_dtoa_r+0x6d8>
 8016982:	bf00      	nop
 8016984:	0801ea60 	.word	0x0801ea60
 8016988:	0801ea38 	.word	0x0801ea38
 801698c:	3ff00000 	.word	0x3ff00000
 8016990:	40240000 	.word	0x40240000
 8016994:	401c0000 	.word	0x401c0000
 8016998:	40140000 	.word	0x40140000
 801699c:	3fe00000 	.word	0x3fe00000
 80169a0:	4baf      	ldr	r3, [pc, #700]	; (8016c60 <_dtoa_r+0x920>)
 80169a2:	f7e9 fe49 	bl	8000638 <__aeabi_dmul>
 80169a6:	4606      	mov	r6, r0
 80169a8:	460f      	mov	r7, r1
 80169aa:	e7ac      	b.n	8016906 <_dtoa_r+0x5c6>
 80169ac:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80169b0:	9d00      	ldr	r5, [sp, #0]
 80169b2:	4642      	mov	r2, r8
 80169b4:	464b      	mov	r3, r9
 80169b6:	4630      	mov	r0, r6
 80169b8:	4639      	mov	r1, r7
 80169ba:	f7e9 ff67 	bl	800088c <__aeabi_ddiv>
 80169be:	f7ea f8eb 	bl	8000b98 <__aeabi_d2iz>
 80169c2:	9002      	str	r0, [sp, #8]
 80169c4:	f7e9 fdce 	bl	8000564 <__aeabi_i2d>
 80169c8:	4642      	mov	r2, r8
 80169ca:	464b      	mov	r3, r9
 80169cc:	f7e9 fe34 	bl	8000638 <__aeabi_dmul>
 80169d0:	4602      	mov	r2, r0
 80169d2:	460b      	mov	r3, r1
 80169d4:	4630      	mov	r0, r6
 80169d6:	4639      	mov	r1, r7
 80169d8:	f7e9 fc76 	bl	80002c8 <__aeabi_dsub>
 80169dc:	9e02      	ldr	r6, [sp, #8]
 80169de:	9f01      	ldr	r7, [sp, #4]
 80169e0:	3630      	adds	r6, #48	; 0x30
 80169e2:	f805 6b01 	strb.w	r6, [r5], #1
 80169e6:	9e00      	ldr	r6, [sp, #0]
 80169e8:	1bae      	subs	r6, r5, r6
 80169ea:	42b7      	cmp	r7, r6
 80169ec:	4602      	mov	r2, r0
 80169ee:	460b      	mov	r3, r1
 80169f0:	d137      	bne.n	8016a62 <_dtoa_r+0x722>
 80169f2:	f7e9 fc6b 	bl	80002cc <__adddf3>
 80169f6:	4642      	mov	r2, r8
 80169f8:	464b      	mov	r3, r9
 80169fa:	4606      	mov	r6, r0
 80169fc:	460f      	mov	r7, r1
 80169fe:	f7ea f8ab 	bl	8000b58 <__aeabi_dcmpgt>
 8016a02:	b9c8      	cbnz	r0, 8016a38 <_dtoa_r+0x6f8>
 8016a04:	4642      	mov	r2, r8
 8016a06:	464b      	mov	r3, r9
 8016a08:	4630      	mov	r0, r6
 8016a0a:	4639      	mov	r1, r7
 8016a0c:	f7ea f87c 	bl	8000b08 <__aeabi_dcmpeq>
 8016a10:	b110      	cbz	r0, 8016a18 <_dtoa_r+0x6d8>
 8016a12:	9b02      	ldr	r3, [sp, #8]
 8016a14:	07d9      	lsls	r1, r3, #31
 8016a16:	d40f      	bmi.n	8016a38 <_dtoa_r+0x6f8>
 8016a18:	4620      	mov	r0, r4
 8016a1a:	4659      	mov	r1, fp
 8016a1c:	f000 fac8 	bl	8016fb0 <_Bfree>
 8016a20:	2300      	movs	r3, #0
 8016a22:	702b      	strb	r3, [r5, #0]
 8016a24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016a26:	f10a 0001 	add.w	r0, sl, #1
 8016a2a:	6018      	str	r0, [r3, #0]
 8016a2c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8016a2e:	2b00      	cmp	r3, #0
 8016a30:	f43f acd8 	beq.w	80163e4 <_dtoa_r+0xa4>
 8016a34:	601d      	str	r5, [r3, #0]
 8016a36:	e4d5      	b.n	80163e4 <_dtoa_r+0xa4>
 8016a38:	f8cd a01c 	str.w	sl, [sp, #28]
 8016a3c:	462b      	mov	r3, r5
 8016a3e:	461d      	mov	r5, r3
 8016a40:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8016a44:	2a39      	cmp	r2, #57	; 0x39
 8016a46:	d108      	bne.n	8016a5a <_dtoa_r+0x71a>
 8016a48:	9a00      	ldr	r2, [sp, #0]
 8016a4a:	429a      	cmp	r2, r3
 8016a4c:	d1f7      	bne.n	8016a3e <_dtoa_r+0x6fe>
 8016a4e:	9a07      	ldr	r2, [sp, #28]
 8016a50:	9900      	ldr	r1, [sp, #0]
 8016a52:	3201      	adds	r2, #1
 8016a54:	9207      	str	r2, [sp, #28]
 8016a56:	2230      	movs	r2, #48	; 0x30
 8016a58:	700a      	strb	r2, [r1, #0]
 8016a5a:	781a      	ldrb	r2, [r3, #0]
 8016a5c:	3201      	adds	r2, #1
 8016a5e:	701a      	strb	r2, [r3, #0]
 8016a60:	e78c      	b.n	801697c <_dtoa_r+0x63c>
 8016a62:	4b7f      	ldr	r3, [pc, #508]	; (8016c60 <_dtoa_r+0x920>)
 8016a64:	2200      	movs	r2, #0
 8016a66:	f7e9 fde7 	bl	8000638 <__aeabi_dmul>
 8016a6a:	2200      	movs	r2, #0
 8016a6c:	2300      	movs	r3, #0
 8016a6e:	4606      	mov	r6, r0
 8016a70:	460f      	mov	r7, r1
 8016a72:	f7ea f849 	bl	8000b08 <__aeabi_dcmpeq>
 8016a76:	2800      	cmp	r0, #0
 8016a78:	d09b      	beq.n	80169b2 <_dtoa_r+0x672>
 8016a7a:	e7cd      	b.n	8016a18 <_dtoa_r+0x6d8>
 8016a7c:	9a08      	ldr	r2, [sp, #32]
 8016a7e:	2a00      	cmp	r2, #0
 8016a80:	f000 80c4 	beq.w	8016c0c <_dtoa_r+0x8cc>
 8016a84:	9a05      	ldr	r2, [sp, #20]
 8016a86:	2a01      	cmp	r2, #1
 8016a88:	f300 80a8 	bgt.w	8016bdc <_dtoa_r+0x89c>
 8016a8c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016a8e:	2a00      	cmp	r2, #0
 8016a90:	f000 80a0 	beq.w	8016bd4 <_dtoa_r+0x894>
 8016a94:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8016a98:	9e06      	ldr	r6, [sp, #24]
 8016a9a:	4645      	mov	r5, r8
 8016a9c:	9a04      	ldr	r2, [sp, #16]
 8016a9e:	2101      	movs	r1, #1
 8016aa0:	441a      	add	r2, r3
 8016aa2:	4620      	mov	r0, r4
 8016aa4:	4498      	add	r8, r3
 8016aa6:	9204      	str	r2, [sp, #16]
 8016aa8:	f000 fb3e 	bl	8017128 <__i2b>
 8016aac:	4607      	mov	r7, r0
 8016aae:	2d00      	cmp	r5, #0
 8016ab0:	dd0b      	ble.n	8016aca <_dtoa_r+0x78a>
 8016ab2:	9b04      	ldr	r3, [sp, #16]
 8016ab4:	2b00      	cmp	r3, #0
 8016ab6:	dd08      	ble.n	8016aca <_dtoa_r+0x78a>
 8016ab8:	42ab      	cmp	r3, r5
 8016aba:	9a04      	ldr	r2, [sp, #16]
 8016abc:	bfa8      	it	ge
 8016abe:	462b      	movge	r3, r5
 8016ac0:	eba8 0803 	sub.w	r8, r8, r3
 8016ac4:	1aed      	subs	r5, r5, r3
 8016ac6:	1ad3      	subs	r3, r2, r3
 8016ac8:	9304      	str	r3, [sp, #16]
 8016aca:	9b06      	ldr	r3, [sp, #24]
 8016acc:	b1fb      	cbz	r3, 8016b0e <_dtoa_r+0x7ce>
 8016ace:	9b08      	ldr	r3, [sp, #32]
 8016ad0:	2b00      	cmp	r3, #0
 8016ad2:	f000 809f 	beq.w	8016c14 <_dtoa_r+0x8d4>
 8016ad6:	2e00      	cmp	r6, #0
 8016ad8:	dd11      	ble.n	8016afe <_dtoa_r+0x7be>
 8016ada:	4639      	mov	r1, r7
 8016adc:	4632      	mov	r2, r6
 8016ade:	4620      	mov	r0, r4
 8016ae0:	f000 fbde 	bl	80172a0 <__pow5mult>
 8016ae4:	465a      	mov	r2, fp
 8016ae6:	4601      	mov	r1, r0
 8016ae8:	4607      	mov	r7, r0
 8016aea:	4620      	mov	r0, r4
 8016aec:	f000 fb32 	bl	8017154 <__multiply>
 8016af0:	4659      	mov	r1, fp
 8016af2:	9007      	str	r0, [sp, #28]
 8016af4:	4620      	mov	r0, r4
 8016af6:	f000 fa5b 	bl	8016fb0 <_Bfree>
 8016afa:	9b07      	ldr	r3, [sp, #28]
 8016afc:	469b      	mov	fp, r3
 8016afe:	9b06      	ldr	r3, [sp, #24]
 8016b00:	1b9a      	subs	r2, r3, r6
 8016b02:	d004      	beq.n	8016b0e <_dtoa_r+0x7ce>
 8016b04:	4659      	mov	r1, fp
 8016b06:	4620      	mov	r0, r4
 8016b08:	f000 fbca 	bl	80172a0 <__pow5mult>
 8016b0c:	4683      	mov	fp, r0
 8016b0e:	2101      	movs	r1, #1
 8016b10:	4620      	mov	r0, r4
 8016b12:	f000 fb09 	bl	8017128 <__i2b>
 8016b16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016b18:	2b00      	cmp	r3, #0
 8016b1a:	4606      	mov	r6, r0
 8016b1c:	dd7c      	ble.n	8016c18 <_dtoa_r+0x8d8>
 8016b1e:	461a      	mov	r2, r3
 8016b20:	4601      	mov	r1, r0
 8016b22:	4620      	mov	r0, r4
 8016b24:	f000 fbbc 	bl	80172a0 <__pow5mult>
 8016b28:	9b05      	ldr	r3, [sp, #20]
 8016b2a:	2b01      	cmp	r3, #1
 8016b2c:	4606      	mov	r6, r0
 8016b2e:	dd76      	ble.n	8016c1e <_dtoa_r+0x8de>
 8016b30:	2300      	movs	r3, #0
 8016b32:	9306      	str	r3, [sp, #24]
 8016b34:	6933      	ldr	r3, [r6, #16]
 8016b36:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8016b3a:	6918      	ldr	r0, [r3, #16]
 8016b3c:	f000 faa4 	bl	8017088 <__hi0bits>
 8016b40:	f1c0 0020 	rsb	r0, r0, #32
 8016b44:	9b04      	ldr	r3, [sp, #16]
 8016b46:	4418      	add	r0, r3
 8016b48:	f010 001f 	ands.w	r0, r0, #31
 8016b4c:	f000 8086 	beq.w	8016c5c <_dtoa_r+0x91c>
 8016b50:	f1c0 0320 	rsb	r3, r0, #32
 8016b54:	2b04      	cmp	r3, #4
 8016b56:	dd7f      	ble.n	8016c58 <_dtoa_r+0x918>
 8016b58:	f1c0 001c 	rsb	r0, r0, #28
 8016b5c:	9b04      	ldr	r3, [sp, #16]
 8016b5e:	4403      	add	r3, r0
 8016b60:	4480      	add	r8, r0
 8016b62:	4405      	add	r5, r0
 8016b64:	9304      	str	r3, [sp, #16]
 8016b66:	f1b8 0f00 	cmp.w	r8, #0
 8016b6a:	dd05      	ble.n	8016b78 <_dtoa_r+0x838>
 8016b6c:	4659      	mov	r1, fp
 8016b6e:	4642      	mov	r2, r8
 8016b70:	4620      	mov	r0, r4
 8016b72:	f000 fbef 	bl	8017354 <__lshift>
 8016b76:	4683      	mov	fp, r0
 8016b78:	9b04      	ldr	r3, [sp, #16]
 8016b7a:	2b00      	cmp	r3, #0
 8016b7c:	dd05      	ble.n	8016b8a <_dtoa_r+0x84a>
 8016b7e:	4631      	mov	r1, r6
 8016b80:	461a      	mov	r2, r3
 8016b82:	4620      	mov	r0, r4
 8016b84:	f000 fbe6 	bl	8017354 <__lshift>
 8016b88:	4606      	mov	r6, r0
 8016b8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016b8c:	2b00      	cmp	r3, #0
 8016b8e:	d069      	beq.n	8016c64 <_dtoa_r+0x924>
 8016b90:	4631      	mov	r1, r6
 8016b92:	4658      	mov	r0, fp
 8016b94:	f000 fc4a 	bl	801742c <__mcmp>
 8016b98:	2800      	cmp	r0, #0
 8016b9a:	da63      	bge.n	8016c64 <_dtoa_r+0x924>
 8016b9c:	2300      	movs	r3, #0
 8016b9e:	4659      	mov	r1, fp
 8016ba0:	220a      	movs	r2, #10
 8016ba2:	4620      	mov	r0, r4
 8016ba4:	f000 fa26 	bl	8016ff4 <__multadd>
 8016ba8:	9b08      	ldr	r3, [sp, #32]
 8016baa:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016bae:	4683      	mov	fp, r0
 8016bb0:	2b00      	cmp	r3, #0
 8016bb2:	f000 818f 	beq.w	8016ed4 <_dtoa_r+0xb94>
 8016bb6:	4639      	mov	r1, r7
 8016bb8:	2300      	movs	r3, #0
 8016bba:	220a      	movs	r2, #10
 8016bbc:	4620      	mov	r0, r4
 8016bbe:	f000 fa19 	bl	8016ff4 <__multadd>
 8016bc2:	f1b9 0f00 	cmp.w	r9, #0
 8016bc6:	4607      	mov	r7, r0
 8016bc8:	f300 808e 	bgt.w	8016ce8 <_dtoa_r+0x9a8>
 8016bcc:	9b05      	ldr	r3, [sp, #20]
 8016bce:	2b02      	cmp	r3, #2
 8016bd0:	dc50      	bgt.n	8016c74 <_dtoa_r+0x934>
 8016bd2:	e089      	b.n	8016ce8 <_dtoa_r+0x9a8>
 8016bd4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016bd6:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8016bda:	e75d      	b.n	8016a98 <_dtoa_r+0x758>
 8016bdc:	9b01      	ldr	r3, [sp, #4]
 8016bde:	1e5e      	subs	r6, r3, #1
 8016be0:	9b06      	ldr	r3, [sp, #24]
 8016be2:	42b3      	cmp	r3, r6
 8016be4:	bfbf      	itttt	lt
 8016be6:	9b06      	ldrlt	r3, [sp, #24]
 8016be8:	9606      	strlt	r6, [sp, #24]
 8016bea:	1af2      	sublt	r2, r6, r3
 8016bec:	9b0d      	ldrlt	r3, [sp, #52]	; 0x34
 8016bee:	bfb6      	itet	lt
 8016bf0:	189b      	addlt	r3, r3, r2
 8016bf2:	1b9e      	subge	r6, r3, r6
 8016bf4:	930d      	strlt	r3, [sp, #52]	; 0x34
 8016bf6:	9b01      	ldr	r3, [sp, #4]
 8016bf8:	bfb8      	it	lt
 8016bfa:	2600      	movlt	r6, #0
 8016bfc:	2b00      	cmp	r3, #0
 8016bfe:	bfb5      	itete	lt
 8016c00:	eba8 0503 	sublt.w	r5, r8, r3
 8016c04:	9b01      	ldrge	r3, [sp, #4]
 8016c06:	2300      	movlt	r3, #0
 8016c08:	4645      	movge	r5, r8
 8016c0a:	e747      	b.n	8016a9c <_dtoa_r+0x75c>
 8016c0c:	9e06      	ldr	r6, [sp, #24]
 8016c0e:	9f08      	ldr	r7, [sp, #32]
 8016c10:	4645      	mov	r5, r8
 8016c12:	e74c      	b.n	8016aae <_dtoa_r+0x76e>
 8016c14:	9a06      	ldr	r2, [sp, #24]
 8016c16:	e775      	b.n	8016b04 <_dtoa_r+0x7c4>
 8016c18:	9b05      	ldr	r3, [sp, #20]
 8016c1a:	2b01      	cmp	r3, #1
 8016c1c:	dc18      	bgt.n	8016c50 <_dtoa_r+0x910>
 8016c1e:	9b02      	ldr	r3, [sp, #8]
 8016c20:	b9b3      	cbnz	r3, 8016c50 <_dtoa_r+0x910>
 8016c22:	9b03      	ldr	r3, [sp, #12]
 8016c24:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8016c28:	b9a3      	cbnz	r3, 8016c54 <_dtoa_r+0x914>
 8016c2a:	9b03      	ldr	r3, [sp, #12]
 8016c2c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8016c30:	0d1b      	lsrs	r3, r3, #20
 8016c32:	051b      	lsls	r3, r3, #20
 8016c34:	b12b      	cbz	r3, 8016c42 <_dtoa_r+0x902>
 8016c36:	9b04      	ldr	r3, [sp, #16]
 8016c38:	3301      	adds	r3, #1
 8016c3a:	9304      	str	r3, [sp, #16]
 8016c3c:	f108 0801 	add.w	r8, r8, #1
 8016c40:	2301      	movs	r3, #1
 8016c42:	9306      	str	r3, [sp, #24]
 8016c44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016c46:	2b00      	cmp	r3, #0
 8016c48:	f47f af74 	bne.w	8016b34 <_dtoa_r+0x7f4>
 8016c4c:	2001      	movs	r0, #1
 8016c4e:	e779      	b.n	8016b44 <_dtoa_r+0x804>
 8016c50:	2300      	movs	r3, #0
 8016c52:	e7f6      	b.n	8016c42 <_dtoa_r+0x902>
 8016c54:	9b02      	ldr	r3, [sp, #8]
 8016c56:	e7f4      	b.n	8016c42 <_dtoa_r+0x902>
 8016c58:	d085      	beq.n	8016b66 <_dtoa_r+0x826>
 8016c5a:	4618      	mov	r0, r3
 8016c5c:	301c      	adds	r0, #28
 8016c5e:	e77d      	b.n	8016b5c <_dtoa_r+0x81c>
 8016c60:	40240000 	.word	0x40240000
 8016c64:	9b01      	ldr	r3, [sp, #4]
 8016c66:	2b00      	cmp	r3, #0
 8016c68:	dc38      	bgt.n	8016cdc <_dtoa_r+0x99c>
 8016c6a:	9b05      	ldr	r3, [sp, #20]
 8016c6c:	2b02      	cmp	r3, #2
 8016c6e:	dd35      	ble.n	8016cdc <_dtoa_r+0x99c>
 8016c70:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8016c74:	f1b9 0f00 	cmp.w	r9, #0
 8016c78:	d10d      	bne.n	8016c96 <_dtoa_r+0x956>
 8016c7a:	4631      	mov	r1, r6
 8016c7c:	464b      	mov	r3, r9
 8016c7e:	2205      	movs	r2, #5
 8016c80:	4620      	mov	r0, r4
 8016c82:	f000 f9b7 	bl	8016ff4 <__multadd>
 8016c86:	4601      	mov	r1, r0
 8016c88:	4606      	mov	r6, r0
 8016c8a:	4658      	mov	r0, fp
 8016c8c:	f000 fbce 	bl	801742c <__mcmp>
 8016c90:	2800      	cmp	r0, #0
 8016c92:	f73f adbd 	bgt.w	8016810 <_dtoa_r+0x4d0>
 8016c96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016c98:	9d00      	ldr	r5, [sp, #0]
 8016c9a:	ea6f 0a03 	mvn.w	sl, r3
 8016c9e:	f04f 0800 	mov.w	r8, #0
 8016ca2:	4631      	mov	r1, r6
 8016ca4:	4620      	mov	r0, r4
 8016ca6:	f000 f983 	bl	8016fb0 <_Bfree>
 8016caa:	2f00      	cmp	r7, #0
 8016cac:	f43f aeb4 	beq.w	8016a18 <_dtoa_r+0x6d8>
 8016cb0:	f1b8 0f00 	cmp.w	r8, #0
 8016cb4:	d005      	beq.n	8016cc2 <_dtoa_r+0x982>
 8016cb6:	45b8      	cmp	r8, r7
 8016cb8:	d003      	beq.n	8016cc2 <_dtoa_r+0x982>
 8016cba:	4641      	mov	r1, r8
 8016cbc:	4620      	mov	r0, r4
 8016cbe:	f000 f977 	bl	8016fb0 <_Bfree>
 8016cc2:	4639      	mov	r1, r7
 8016cc4:	4620      	mov	r0, r4
 8016cc6:	f000 f973 	bl	8016fb0 <_Bfree>
 8016cca:	e6a5      	b.n	8016a18 <_dtoa_r+0x6d8>
 8016ccc:	2600      	movs	r6, #0
 8016cce:	4637      	mov	r7, r6
 8016cd0:	e7e1      	b.n	8016c96 <_dtoa_r+0x956>
 8016cd2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8016cd4:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8016cd8:	4637      	mov	r7, r6
 8016cda:	e599      	b.n	8016810 <_dtoa_r+0x4d0>
 8016cdc:	9b08      	ldr	r3, [sp, #32]
 8016cde:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8016ce2:	2b00      	cmp	r3, #0
 8016ce4:	f000 80fd 	beq.w	8016ee2 <_dtoa_r+0xba2>
 8016ce8:	2d00      	cmp	r5, #0
 8016cea:	dd05      	ble.n	8016cf8 <_dtoa_r+0x9b8>
 8016cec:	4639      	mov	r1, r7
 8016cee:	462a      	mov	r2, r5
 8016cf0:	4620      	mov	r0, r4
 8016cf2:	f000 fb2f 	bl	8017354 <__lshift>
 8016cf6:	4607      	mov	r7, r0
 8016cf8:	9b06      	ldr	r3, [sp, #24]
 8016cfa:	2b00      	cmp	r3, #0
 8016cfc:	d05c      	beq.n	8016db8 <_dtoa_r+0xa78>
 8016cfe:	6879      	ldr	r1, [r7, #4]
 8016d00:	4620      	mov	r0, r4
 8016d02:	f000 f915 	bl	8016f30 <_Balloc>
 8016d06:	4605      	mov	r5, r0
 8016d08:	b928      	cbnz	r0, 8016d16 <_dtoa_r+0x9d6>
 8016d0a:	4b80      	ldr	r3, [pc, #512]	; (8016f0c <_dtoa_r+0xbcc>)
 8016d0c:	4602      	mov	r2, r0
 8016d0e:	f240 21ea 	movw	r1, #746	; 0x2ea
 8016d12:	f7ff bb2e 	b.w	8016372 <_dtoa_r+0x32>
 8016d16:	693a      	ldr	r2, [r7, #16]
 8016d18:	3202      	adds	r2, #2
 8016d1a:	0092      	lsls	r2, r2, #2
 8016d1c:	f107 010c 	add.w	r1, r7, #12
 8016d20:	300c      	adds	r0, #12
 8016d22:	f7fe fdbf 	bl	80158a4 <memcpy>
 8016d26:	2201      	movs	r2, #1
 8016d28:	4629      	mov	r1, r5
 8016d2a:	4620      	mov	r0, r4
 8016d2c:	f000 fb12 	bl	8017354 <__lshift>
 8016d30:	9b00      	ldr	r3, [sp, #0]
 8016d32:	3301      	adds	r3, #1
 8016d34:	9301      	str	r3, [sp, #4]
 8016d36:	9b00      	ldr	r3, [sp, #0]
 8016d38:	444b      	add	r3, r9
 8016d3a:	9307      	str	r3, [sp, #28]
 8016d3c:	9b02      	ldr	r3, [sp, #8]
 8016d3e:	f003 0301 	and.w	r3, r3, #1
 8016d42:	46b8      	mov	r8, r7
 8016d44:	9306      	str	r3, [sp, #24]
 8016d46:	4607      	mov	r7, r0
 8016d48:	9b01      	ldr	r3, [sp, #4]
 8016d4a:	4631      	mov	r1, r6
 8016d4c:	3b01      	subs	r3, #1
 8016d4e:	4658      	mov	r0, fp
 8016d50:	9302      	str	r3, [sp, #8]
 8016d52:	f7ff fa69 	bl	8016228 <quorem>
 8016d56:	4603      	mov	r3, r0
 8016d58:	3330      	adds	r3, #48	; 0x30
 8016d5a:	9004      	str	r0, [sp, #16]
 8016d5c:	4641      	mov	r1, r8
 8016d5e:	4658      	mov	r0, fp
 8016d60:	9308      	str	r3, [sp, #32]
 8016d62:	f000 fb63 	bl	801742c <__mcmp>
 8016d66:	463a      	mov	r2, r7
 8016d68:	4681      	mov	r9, r0
 8016d6a:	4631      	mov	r1, r6
 8016d6c:	4620      	mov	r0, r4
 8016d6e:	f000 fb79 	bl	8017464 <__mdiff>
 8016d72:	68c2      	ldr	r2, [r0, #12]
 8016d74:	9b08      	ldr	r3, [sp, #32]
 8016d76:	4605      	mov	r5, r0
 8016d78:	bb02      	cbnz	r2, 8016dbc <_dtoa_r+0xa7c>
 8016d7a:	4601      	mov	r1, r0
 8016d7c:	4658      	mov	r0, fp
 8016d7e:	f000 fb55 	bl	801742c <__mcmp>
 8016d82:	9b08      	ldr	r3, [sp, #32]
 8016d84:	4602      	mov	r2, r0
 8016d86:	4629      	mov	r1, r5
 8016d88:	4620      	mov	r0, r4
 8016d8a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8016d8e:	f000 f90f 	bl	8016fb0 <_Bfree>
 8016d92:	9b05      	ldr	r3, [sp, #20]
 8016d94:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016d96:	9d01      	ldr	r5, [sp, #4]
 8016d98:	ea43 0102 	orr.w	r1, r3, r2
 8016d9c:	9b06      	ldr	r3, [sp, #24]
 8016d9e:	430b      	orrs	r3, r1
 8016da0:	9b08      	ldr	r3, [sp, #32]
 8016da2:	d10d      	bne.n	8016dc0 <_dtoa_r+0xa80>
 8016da4:	2b39      	cmp	r3, #57	; 0x39
 8016da6:	d029      	beq.n	8016dfc <_dtoa_r+0xabc>
 8016da8:	f1b9 0f00 	cmp.w	r9, #0
 8016dac:	dd01      	ble.n	8016db2 <_dtoa_r+0xa72>
 8016dae:	9b04      	ldr	r3, [sp, #16]
 8016db0:	3331      	adds	r3, #49	; 0x31
 8016db2:	9a02      	ldr	r2, [sp, #8]
 8016db4:	7013      	strb	r3, [r2, #0]
 8016db6:	e774      	b.n	8016ca2 <_dtoa_r+0x962>
 8016db8:	4638      	mov	r0, r7
 8016dba:	e7b9      	b.n	8016d30 <_dtoa_r+0x9f0>
 8016dbc:	2201      	movs	r2, #1
 8016dbe:	e7e2      	b.n	8016d86 <_dtoa_r+0xa46>
 8016dc0:	f1b9 0f00 	cmp.w	r9, #0
 8016dc4:	db06      	blt.n	8016dd4 <_dtoa_r+0xa94>
 8016dc6:	9905      	ldr	r1, [sp, #20]
 8016dc8:	ea41 0909 	orr.w	r9, r1, r9
 8016dcc:	9906      	ldr	r1, [sp, #24]
 8016dce:	ea59 0101 	orrs.w	r1, r9, r1
 8016dd2:	d120      	bne.n	8016e16 <_dtoa_r+0xad6>
 8016dd4:	2a00      	cmp	r2, #0
 8016dd6:	ddec      	ble.n	8016db2 <_dtoa_r+0xa72>
 8016dd8:	4659      	mov	r1, fp
 8016dda:	2201      	movs	r2, #1
 8016ddc:	4620      	mov	r0, r4
 8016dde:	9301      	str	r3, [sp, #4]
 8016de0:	f000 fab8 	bl	8017354 <__lshift>
 8016de4:	4631      	mov	r1, r6
 8016de6:	4683      	mov	fp, r0
 8016de8:	f000 fb20 	bl	801742c <__mcmp>
 8016dec:	2800      	cmp	r0, #0
 8016dee:	9b01      	ldr	r3, [sp, #4]
 8016df0:	dc02      	bgt.n	8016df8 <_dtoa_r+0xab8>
 8016df2:	d1de      	bne.n	8016db2 <_dtoa_r+0xa72>
 8016df4:	07da      	lsls	r2, r3, #31
 8016df6:	d5dc      	bpl.n	8016db2 <_dtoa_r+0xa72>
 8016df8:	2b39      	cmp	r3, #57	; 0x39
 8016dfa:	d1d8      	bne.n	8016dae <_dtoa_r+0xa6e>
 8016dfc:	9a02      	ldr	r2, [sp, #8]
 8016dfe:	2339      	movs	r3, #57	; 0x39
 8016e00:	7013      	strb	r3, [r2, #0]
 8016e02:	462b      	mov	r3, r5
 8016e04:	461d      	mov	r5, r3
 8016e06:	3b01      	subs	r3, #1
 8016e08:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8016e0c:	2a39      	cmp	r2, #57	; 0x39
 8016e0e:	d050      	beq.n	8016eb2 <_dtoa_r+0xb72>
 8016e10:	3201      	adds	r2, #1
 8016e12:	701a      	strb	r2, [r3, #0]
 8016e14:	e745      	b.n	8016ca2 <_dtoa_r+0x962>
 8016e16:	2a00      	cmp	r2, #0
 8016e18:	dd03      	ble.n	8016e22 <_dtoa_r+0xae2>
 8016e1a:	2b39      	cmp	r3, #57	; 0x39
 8016e1c:	d0ee      	beq.n	8016dfc <_dtoa_r+0xabc>
 8016e1e:	3301      	adds	r3, #1
 8016e20:	e7c7      	b.n	8016db2 <_dtoa_r+0xa72>
 8016e22:	9a01      	ldr	r2, [sp, #4]
 8016e24:	9907      	ldr	r1, [sp, #28]
 8016e26:	f802 3c01 	strb.w	r3, [r2, #-1]
 8016e2a:	428a      	cmp	r2, r1
 8016e2c:	d02a      	beq.n	8016e84 <_dtoa_r+0xb44>
 8016e2e:	4659      	mov	r1, fp
 8016e30:	2300      	movs	r3, #0
 8016e32:	220a      	movs	r2, #10
 8016e34:	4620      	mov	r0, r4
 8016e36:	f000 f8dd 	bl	8016ff4 <__multadd>
 8016e3a:	45b8      	cmp	r8, r7
 8016e3c:	4683      	mov	fp, r0
 8016e3e:	f04f 0300 	mov.w	r3, #0
 8016e42:	f04f 020a 	mov.w	r2, #10
 8016e46:	4641      	mov	r1, r8
 8016e48:	4620      	mov	r0, r4
 8016e4a:	d107      	bne.n	8016e5c <_dtoa_r+0xb1c>
 8016e4c:	f000 f8d2 	bl	8016ff4 <__multadd>
 8016e50:	4680      	mov	r8, r0
 8016e52:	4607      	mov	r7, r0
 8016e54:	9b01      	ldr	r3, [sp, #4]
 8016e56:	3301      	adds	r3, #1
 8016e58:	9301      	str	r3, [sp, #4]
 8016e5a:	e775      	b.n	8016d48 <_dtoa_r+0xa08>
 8016e5c:	f000 f8ca 	bl	8016ff4 <__multadd>
 8016e60:	4639      	mov	r1, r7
 8016e62:	4680      	mov	r8, r0
 8016e64:	2300      	movs	r3, #0
 8016e66:	220a      	movs	r2, #10
 8016e68:	4620      	mov	r0, r4
 8016e6a:	f000 f8c3 	bl	8016ff4 <__multadd>
 8016e6e:	4607      	mov	r7, r0
 8016e70:	e7f0      	b.n	8016e54 <_dtoa_r+0xb14>
 8016e72:	f1b9 0f00 	cmp.w	r9, #0
 8016e76:	9a00      	ldr	r2, [sp, #0]
 8016e78:	bfcc      	ite	gt
 8016e7a:	464d      	movgt	r5, r9
 8016e7c:	2501      	movle	r5, #1
 8016e7e:	4415      	add	r5, r2
 8016e80:	f04f 0800 	mov.w	r8, #0
 8016e84:	4659      	mov	r1, fp
 8016e86:	2201      	movs	r2, #1
 8016e88:	4620      	mov	r0, r4
 8016e8a:	9301      	str	r3, [sp, #4]
 8016e8c:	f000 fa62 	bl	8017354 <__lshift>
 8016e90:	4631      	mov	r1, r6
 8016e92:	4683      	mov	fp, r0
 8016e94:	f000 faca 	bl	801742c <__mcmp>
 8016e98:	2800      	cmp	r0, #0
 8016e9a:	dcb2      	bgt.n	8016e02 <_dtoa_r+0xac2>
 8016e9c:	d102      	bne.n	8016ea4 <_dtoa_r+0xb64>
 8016e9e:	9b01      	ldr	r3, [sp, #4]
 8016ea0:	07db      	lsls	r3, r3, #31
 8016ea2:	d4ae      	bmi.n	8016e02 <_dtoa_r+0xac2>
 8016ea4:	462b      	mov	r3, r5
 8016ea6:	461d      	mov	r5, r3
 8016ea8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8016eac:	2a30      	cmp	r2, #48	; 0x30
 8016eae:	d0fa      	beq.n	8016ea6 <_dtoa_r+0xb66>
 8016eb0:	e6f7      	b.n	8016ca2 <_dtoa_r+0x962>
 8016eb2:	9a00      	ldr	r2, [sp, #0]
 8016eb4:	429a      	cmp	r2, r3
 8016eb6:	d1a5      	bne.n	8016e04 <_dtoa_r+0xac4>
 8016eb8:	f10a 0a01 	add.w	sl, sl, #1
 8016ebc:	2331      	movs	r3, #49	; 0x31
 8016ebe:	e779      	b.n	8016db4 <_dtoa_r+0xa74>
 8016ec0:	4b13      	ldr	r3, [pc, #76]	; (8016f10 <_dtoa_r+0xbd0>)
 8016ec2:	f7ff baaf 	b.w	8016424 <_dtoa_r+0xe4>
 8016ec6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8016ec8:	2b00      	cmp	r3, #0
 8016eca:	f47f aa86 	bne.w	80163da <_dtoa_r+0x9a>
 8016ece:	4b11      	ldr	r3, [pc, #68]	; (8016f14 <_dtoa_r+0xbd4>)
 8016ed0:	f7ff baa8 	b.w	8016424 <_dtoa_r+0xe4>
 8016ed4:	f1b9 0f00 	cmp.w	r9, #0
 8016ed8:	dc03      	bgt.n	8016ee2 <_dtoa_r+0xba2>
 8016eda:	9b05      	ldr	r3, [sp, #20]
 8016edc:	2b02      	cmp	r3, #2
 8016ede:	f73f aec9 	bgt.w	8016c74 <_dtoa_r+0x934>
 8016ee2:	9d00      	ldr	r5, [sp, #0]
 8016ee4:	4631      	mov	r1, r6
 8016ee6:	4658      	mov	r0, fp
 8016ee8:	f7ff f99e 	bl	8016228 <quorem>
 8016eec:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8016ef0:	f805 3b01 	strb.w	r3, [r5], #1
 8016ef4:	9a00      	ldr	r2, [sp, #0]
 8016ef6:	1aaa      	subs	r2, r5, r2
 8016ef8:	4591      	cmp	r9, r2
 8016efa:	ddba      	ble.n	8016e72 <_dtoa_r+0xb32>
 8016efc:	4659      	mov	r1, fp
 8016efe:	2300      	movs	r3, #0
 8016f00:	220a      	movs	r2, #10
 8016f02:	4620      	mov	r0, r4
 8016f04:	f000 f876 	bl	8016ff4 <__multadd>
 8016f08:	4683      	mov	fp, r0
 8016f0a:	e7eb      	b.n	8016ee4 <_dtoa_r+0xba4>
 8016f0c:	0801e9c7 	.word	0x0801e9c7
 8016f10:	0801e920 	.word	0x0801e920
 8016f14:	0801e944 	.word	0x0801e944

08016f18 <_localeconv_r>:
 8016f18:	4800      	ldr	r0, [pc, #0]	; (8016f1c <_localeconv_r+0x4>)
 8016f1a:	4770      	bx	lr
 8016f1c:	2000025c 	.word	0x2000025c

08016f20 <malloc>:
 8016f20:	4b02      	ldr	r3, [pc, #8]	; (8016f2c <malloc+0xc>)
 8016f22:	4601      	mov	r1, r0
 8016f24:	6818      	ldr	r0, [r3, #0]
 8016f26:	f000 bbe1 	b.w	80176ec <_malloc_r>
 8016f2a:	bf00      	nop
 8016f2c:	20000108 	.word	0x20000108

08016f30 <_Balloc>:
 8016f30:	b570      	push	{r4, r5, r6, lr}
 8016f32:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8016f34:	4604      	mov	r4, r0
 8016f36:	460d      	mov	r5, r1
 8016f38:	b976      	cbnz	r6, 8016f58 <_Balloc+0x28>
 8016f3a:	2010      	movs	r0, #16
 8016f3c:	f7ff fff0 	bl	8016f20 <malloc>
 8016f40:	4602      	mov	r2, r0
 8016f42:	6260      	str	r0, [r4, #36]	; 0x24
 8016f44:	b920      	cbnz	r0, 8016f50 <_Balloc+0x20>
 8016f46:	4b18      	ldr	r3, [pc, #96]	; (8016fa8 <_Balloc+0x78>)
 8016f48:	4818      	ldr	r0, [pc, #96]	; (8016fac <_Balloc+0x7c>)
 8016f4a:	2166      	movs	r1, #102	; 0x66
 8016f4c:	f000 fd94 	bl	8017a78 <__assert_func>
 8016f50:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8016f54:	6006      	str	r6, [r0, #0]
 8016f56:	60c6      	str	r6, [r0, #12]
 8016f58:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8016f5a:	68f3      	ldr	r3, [r6, #12]
 8016f5c:	b183      	cbz	r3, 8016f80 <_Balloc+0x50>
 8016f5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016f60:	68db      	ldr	r3, [r3, #12]
 8016f62:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8016f66:	b9b8      	cbnz	r0, 8016f98 <_Balloc+0x68>
 8016f68:	2101      	movs	r1, #1
 8016f6a:	fa01 f605 	lsl.w	r6, r1, r5
 8016f6e:	1d72      	adds	r2, r6, #5
 8016f70:	0092      	lsls	r2, r2, #2
 8016f72:	4620      	mov	r0, r4
 8016f74:	f000 fb5a 	bl	801762c <_calloc_r>
 8016f78:	b160      	cbz	r0, 8016f94 <_Balloc+0x64>
 8016f7a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8016f7e:	e00e      	b.n	8016f9e <_Balloc+0x6e>
 8016f80:	2221      	movs	r2, #33	; 0x21
 8016f82:	2104      	movs	r1, #4
 8016f84:	4620      	mov	r0, r4
 8016f86:	f000 fb51 	bl	801762c <_calloc_r>
 8016f8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016f8c:	60f0      	str	r0, [r6, #12]
 8016f8e:	68db      	ldr	r3, [r3, #12]
 8016f90:	2b00      	cmp	r3, #0
 8016f92:	d1e4      	bne.n	8016f5e <_Balloc+0x2e>
 8016f94:	2000      	movs	r0, #0
 8016f96:	bd70      	pop	{r4, r5, r6, pc}
 8016f98:	6802      	ldr	r2, [r0, #0]
 8016f9a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8016f9e:	2300      	movs	r3, #0
 8016fa0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8016fa4:	e7f7      	b.n	8016f96 <_Balloc+0x66>
 8016fa6:	bf00      	nop
 8016fa8:	0801e951 	.word	0x0801e951
 8016fac:	0801e9d8 	.word	0x0801e9d8

08016fb0 <_Bfree>:
 8016fb0:	b570      	push	{r4, r5, r6, lr}
 8016fb2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8016fb4:	4605      	mov	r5, r0
 8016fb6:	460c      	mov	r4, r1
 8016fb8:	b976      	cbnz	r6, 8016fd8 <_Bfree+0x28>
 8016fba:	2010      	movs	r0, #16
 8016fbc:	f7ff ffb0 	bl	8016f20 <malloc>
 8016fc0:	4602      	mov	r2, r0
 8016fc2:	6268      	str	r0, [r5, #36]	; 0x24
 8016fc4:	b920      	cbnz	r0, 8016fd0 <_Bfree+0x20>
 8016fc6:	4b09      	ldr	r3, [pc, #36]	; (8016fec <_Bfree+0x3c>)
 8016fc8:	4809      	ldr	r0, [pc, #36]	; (8016ff0 <_Bfree+0x40>)
 8016fca:	218a      	movs	r1, #138	; 0x8a
 8016fcc:	f000 fd54 	bl	8017a78 <__assert_func>
 8016fd0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8016fd4:	6006      	str	r6, [r0, #0]
 8016fd6:	60c6      	str	r6, [r0, #12]
 8016fd8:	b13c      	cbz	r4, 8016fea <_Bfree+0x3a>
 8016fda:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8016fdc:	6862      	ldr	r2, [r4, #4]
 8016fde:	68db      	ldr	r3, [r3, #12]
 8016fe0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8016fe4:	6021      	str	r1, [r4, #0]
 8016fe6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8016fea:	bd70      	pop	{r4, r5, r6, pc}
 8016fec:	0801e951 	.word	0x0801e951
 8016ff0:	0801e9d8 	.word	0x0801e9d8

08016ff4 <__multadd>:
 8016ff4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016ff8:	690e      	ldr	r6, [r1, #16]
 8016ffa:	4607      	mov	r7, r0
 8016ffc:	4698      	mov	r8, r3
 8016ffe:	460c      	mov	r4, r1
 8017000:	f101 0014 	add.w	r0, r1, #20
 8017004:	2300      	movs	r3, #0
 8017006:	6805      	ldr	r5, [r0, #0]
 8017008:	b2a9      	uxth	r1, r5
 801700a:	fb02 8101 	mla	r1, r2, r1, r8
 801700e:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 8017012:	0c2d      	lsrs	r5, r5, #16
 8017014:	fb02 c505 	mla	r5, r2, r5, ip
 8017018:	b289      	uxth	r1, r1
 801701a:	3301      	adds	r3, #1
 801701c:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 8017020:	429e      	cmp	r6, r3
 8017022:	f840 1b04 	str.w	r1, [r0], #4
 8017026:	ea4f 4815 	mov.w	r8, r5, lsr #16
 801702a:	dcec      	bgt.n	8017006 <__multadd+0x12>
 801702c:	f1b8 0f00 	cmp.w	r8, #0
 8017030:	d022      	beq.n	8017078 <__multadd+0x84>
 8017032:	68a3      	ldr	r3, [r4, #8]
 8017034:	42b3      	cmp	r3, r6
 8017036:	dc19      	bgt.n	801706c <__multadd+0x78>
 8017038:	6861      	ldr	r1, [r4, #4]
 801703a:	4638      	mov	r0, r7
 801703c:	3101      	adds	r1, #1
 801703e:	f7ff ff77 	bl	8016f30 <_Balloc>
 8017042:	4605      	mov	r5, r0
 8017044:	b928      	cbnz	r0, 8017052 <__multadd+0x5e>
 8017046:	4602      	mov	r2, r0
 8017048:	4b0d      	ldr	r3, [pc, #52]	; (8017080 <__multadd+0x8c>)
 801704a:	480e      	ldr	r0, [pc, #56]	; (8017084 <__multadd+0x90>)
 801704c:	21b5      	movs	r1, #181	; 0xb5
 801704e:	f000 fd13 	bl	8017a78 <__assert_func>
 8017052:	6922      	ldr	r2, [r4, #16]
 8017054:	3202      	adds	r2, #2
 8017056:	f104 010c 	add.w	r1, r4, #12
 801705a:	0092      	lsls	r2, r2, #2
 801705c:	300c      	adds	r0, #12
 801705e:	f7fe fc21 	bl	80158a4 <memcpy>
 8017062:	4621      	mov	r1, r4
 8017064:	4638      	mov	r0, r7
 8017066:	f7ff ffa3 	bl	8016fb0 <_Bfree>
 801706a:	462c      	mov	r4, r5
 801706c:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8017070:	3601      	adds	r6, #1
 8017072:	f8c3 8014 	str.w	r8, [r3, #20]
 8017076:	6126      	str	r6, [r4, #16]
 8017078:	4620      	mov	r0, r4
 801707a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801707e:	bf00      	nop
 8017080:	0801e9c7 	.word	0x0801e9c7
 8017084:	0801e9d8 	.word	0x0801e9d8

08017088 <__hi0bits>:
 8017088:	0c03      	lsrs	r3, r0, #16
 801708a:	041b      	lsls	r3, r3, #16
 801708c:	b9d3      	cbnz	r3, 80170c4 <__hi0bits+0x3c>
 801708e:	0400      	lsls	r0, r0, #16
 8017090:	2310      	movs	r3, #16
 8017092:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8017096:	bf04      	itt	eq
 8017098:	0200      	lsleq	r0, r0, #8
 801709a:	3308      	addeq	r3, #8
 801709c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 80170a0:	bf04      	itt	eq
 80170a2:	0100      	lsleq	r0, r0, #4
 80170a4:	3304      	addeq	r3, #4
 80170a6:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 80170aa:	bf04      	itt	eq
 80170ac:	0080      	lsleq	r0, r0, #2
 80170ae:	3302      	addeq	r3, #2
 80170b0:	2800      	cmp	r0, #0
 80170b2:	db05      	blt.n	80170c0 <__hi0bits+0x38>
 80170b4:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 80170b8:	f103 0301 	add.w	r3, r3, #1
 80170bc:	bf08      	it	eq
 80170be:	2320      	moveq	r3, #32
 80170c0:	4618      	mov	r0, r3
 80170c2:	4770      	bx	lr
 80170c4:	2300      	movs	r3, #0
 80170c6:	e7e4      	b.n	8017092 <__hi0bits+0xa>

080170c8 <__lo0bits>:
 80170c8:	6803      	ldr	r3, [r0, #0]
 80170ca:	f013 0207 	ands.w	r2, r3, #7
 80170ce:	4601      	mov	r1, r0
 80170d0:	d00b      	beq.n	80170ea <__lo0bits+0x22>
 80170d2:	07da      	lsls	r2, r3, #31
 80170d4:	d424      	bmi.n	8017120 <__lo0bits+0x58>
 80170d6:	0798      	lsls	r0, r3, #30
 80170d8:	bf49      	itett	mi
 80170da:	085b      	lsrmi	r3, r3, #1
 80170dc:	089b      	lsrpl	r3, r3, #2
 80170de:	2001      	movmi	r0, #1
 80170e0:	600b      	strmi	r3, [r1, #0]
 80170e2:	bf5c      	itt	pl
 80170e4:	600b      	strpl	r3, [r1, #0]
 80170e6:	2002      	movpl	r0, #2
 80170e8:	4770      	bx	lr
 80170ea:	b298      	uxth	r0, r3
 80170ec:	b9b0      	cbnz	r0, 801711c <__lo0bits+0x54>
 80170ee:	0c1b      	lsrs	r3, r3, #16
 80170f0:	2010      	movs	r0, #16
 80170f2:	f013 0fff 	tst.w	r3, #255	; 0xff
 80170f6:	bf04      	itt	eq
 80170f8:	0a1b      	lsreq	r3, r3, #8
 80170fa:	3008      	addeq	r0, #8
 80170fc:	071a      	lsls	r2, r3, #28
 80170fe:	bf04      	itt	eq
 8017100:	091b      	lsreq	r3, r3, #4
 8017102:	3004      	addeq	r0, #4
 8017104:	079a      	lsls	r2, r3, #30
 8017106:	bf04      	itt	eq
 8017108:	089b      	lsreq	r3, r3, #2
 801710a:	3002      	addeq	r0, #2
 801710c:	07da      	lsls	r2, r3, #31
 801710e:	d403      	bmi.n	8017118 <__lo0bits+0x50>
 8017110:	085b      	lsrs	r3, r3, #1
 8017112:	f100 0001 	add.w	r0, r0, #1
 8017116:	d005      	beq.n	8017124 <__lo0bits+0x5c>
 8017118:	600b      	str	r3, [r1, #0]
 801711a:	4770      	bx	lr
 801711c:	4610      	mov	r0, r2
 801711e:	e7e8      	b.n	80170f2 <__lo0bits+0x2a>
 8017120:	2000      	movs	r0, #0
 8017122:	4770      	bx	lr
 8017124:	2020      	movs	r0, #32
 8017126:	4770      	bx	lr

08017128 <__i2b>:
 8017128:	b510      	push	{r4, lr}
 801712a:	460c      	mov	r4, r1
 801712c:	2101      	movs	r1, #1
 801712e:	f7ff feff 	bl	8016f30 <_Balloc>
 8017132:	4602      	mov	r2, r0
 8017134:	b928      	cbnz	r0, 8017142 <__i2b+0x1a>
 8017136:	4b05      	ldr	r3, [pc, #20]	; (801714c <__i2b+0x24>)
 8017138:	4805      	ldr	r0, [pc, #20]	; (8017150 <__i2b+0x28>)
 801713a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 801713e:	f000 fc9b 	bl	8017a78 <__assert_func>
 8017142:	2301      	movs	r3, #1
 8017144:	6144      	str	r4, [r0, #20]
 8017146:	6103      	str	r3, [r0, #16]
 8017148:	bd10      	pop	{r4, pc}
 801714a:	bf00      	nop
 801714c:	0801e9c7 	.word	0x0801e9c7
 8017150:	0801e9d8 	.word	0x0801e9d8

08017154 <__multiply>:
 8017154:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017158:	4614      	mov	r4, r2
 801715a:	690a      	ldr	r2, [r1, #16]
 801715c:	6923      	ldr	r3, [r4, #16]
 801715e:	429a      	cmp	r2, r3
 8017160:	bfb8      	it	lt
 8017162:	460b      	movlt	r3, r1
 8017164:	460d      	mov	r5, r1
 8017166:	bfbc      	itt	lt
 8017168:	4625      	movlt	r5, r4
 801716a:	461c      	movlt	r4, r3
 801716c:	f8d5 a010 	ldr.w	sl, [r5, #16]
 8017170:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8017174:	68ab      	ldr	r3, [r5, #8]
 8017176:	6869      	ldr	r1, [r5, #4]
 8017178:	eb0a 0709 	add.w	r7, sl, r9
 801717c:	42bb      	cmp	r3, r7
 801717e:	b085      	sub	sp, #20
 8017180:	bfb8      	it	lt
 8017182:	3101      	addlt	r1, #1
 8017184:	f7ff fed4 	bl	8016f30 <_Balloc>
 8017188:	b930      	cbnz	r0, 8017198 <__multiply+0x44>
 801718a:	4602      	mov	r2, r0
 801718c:	4b42      	ldr	r3, [pc, #264]	; (8017298 <__multiply+0x144>)
 801718e:	4843      	ldr	r0, [pc, #268]	; (801729c <__multiply+0x148>)
 8017190:	f240 115d 	movw	r1, #349	; 0x15d
 8017194:	f000 fc70 	bl	8017a78 <__assert_func>
 8017198:	f100 0614 	add.w	r6, r0, #20
 801719c:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 80171a0:	4633      	mov	r3, r6
 80171a2:	2200      	movs	r2, #0
 80171a4:	4543      	cmp	r3, r8
 80171a6:	d31e      	bcc.n	80171e6 <__multiply+0x92>
 80171a8:	f105 0c14 	add.w	ip, r5, #20
 80171ac:	f104 0314 	add.w	r3, r4, #20
 80171b0:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 80171b4:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 80171b8:	9202      	str	r2, [sp, #8]
 80171ba:	ebac 0205 	sub.w	r2, ip, r5
 80171be:	3a15      	subs	r2, #21
 80171c0:	f022 0203 	bic.w	r2, r2, #3
 80171c4:	3204      	adds	r2, #4
 80171c6:	f105 0115 	add.w	r1, r5, #21
 80171ca:	458c      	cmp	ip, r1
 80171cc:	bf38      	it	cc
 80171ce:	2204      	movcc	r2, #4
 80171d0:	9201      	str	r2, [sp, #4]
 80171d2:	9a02      	ldr	r2, [sp, #8]
 80171d4:	9303      	str	r3, [sp, #12]
 80171d6:	429a      	cmp	r2, r3
 80171d8:	d808      	bhi.n	80171ec <__multiply+0x98>
 80171da:	2f00      	cmp	r7, #0
 80171dc:	dc55      	bgt.n	801728a <__multiply+0x136>
 80171de:	6107      	str	r7, [r0, #16]
 80171e0:	b005      	add	sp, #20
 80171e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80171e6:	f843 2b04 	str.w	r2, [r3], #4
 80171ea:	e7db      	b.n	80171a4 <__multiply+0x50>
 80171ec:	f8b3 a000 	ldrh.w	sl, [r3]
 80171f0:	f1ba 0f00 	cmp.w	sl, #0
 80171f4:	d020      	beq.n	8017238 <__multiply+0xe4>
 80171f6:	f105 0e14 	add.w	lr, r5, #20
 80171fa:	46b1      	mov	r9, r6
 80171fc:	2200      	movs	r2, #0
 80171fe:	f85e 4b04 	ldr.w	r4, [lr], #4
 8017202:	f8d9 b000 	ldr.w	fp, [r9]
 8017206:	b2a1      	uxth	r1, r4
 8017208:	fa1f fb8b 	uxth.w	fp, fp
 801720c:	fb0a b101 	mla	r1, sl, r1, fp
 8017210:	4411      	add	r1, r2
 8017212:	f8d9 2000 	ldr.w	r2, [r9]
 8017216:	0c24      	lsrs	r4, r4, #16
 8017218:	0c12      	lsrs	r2, r2, #16
 801721a:	fb0a 2404 	mla	r4, sl, r4, r2
 801721e:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 8017222:	b289      	uxth	r1, r1
 8017224:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8017228:	45f4      	cmp	ip, lr
 801722a:	f849 1b04 	str.w	r1, [r9], #4
 801722e:	ea4f 4214 	mov.w	r2, r4, lsr #16
 8017232:	d8e4      	bhi.n	80171fe <__multiply+0xaa>
 8017234:	9901      	ldr	r1, [sp, #4]
 8017236:	5072      	str	r2, [r6, r1]
 8017238:	9a03      	ldr	r2, [sp, #12]
 801723a:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 801723e:	3304      	adds	r3, #4
 8017240:	f1b9 0f00 	cmp.w	r9, #0
 8017244:	d01f      	beq.n	8017286 <__multiply+0x132>
 8017246:	6834      	ldr	r4, [r6, #0]
 8017248:	f105 0114 	add.w	r1, r5, #20
 801724c:	46b6      	mov	lr, r6
 801724e:	f04f 0a00 	mov.w	sl, #0
 8017252:	880a      	ldrh	r2, [r1, #0]
 8017254:	f8be b002 	ldrh.w	fp, [lr, #2]
 8017258:	fb09 b202 	mla	r2, r9, r2, fp
 801725c:	4492      	add	sl, r2
 801725e:	b2a4      	uxth	r4, r4
 8017260:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8017264:	f84e 4b04 	str.w	r4, [lr], #4
 8017268:	f851 4b04 	ldr.w	r4, [r1], #4
 801726c:	f8be 2000 	ldrh.w	r2, [lr]
 8017270:	0c24      	lsrs	r4, r4, #16
 8017272:	fb09 2404 	mla	r4, r9, r4, r2
 8017276:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 801727a:	458c      	cmp	ip, r1
 801727c:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8017280:	d8e7      	bhi.n	8017252 <__multiply+0xfe>
 8017282:	9a01      	ldr	r2, [sp, #4]
 8017284:	50b4      	str	r4, [r6, r2]
 8017286:	3604      	adds	r6, #4
 8017288:	e7a3      	b.n	80171d2 <__multiply+0x7e>
 801728a:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 801728e:	2b00      	cmp	r3, #0
 8017290:	d1a5      	bne.n	80171de <__multiply+0x8a>
 8017292:	3f01      	subs	r7, #1
 8017294:	e7a1      	b.n	80171da <__multiply+0x86>
 8017296:	bf00      	nop
 8017298:	0801e9c7 	.word	0x0801e9c7
 801729c:	0801e9d8 	.word	0x0801e9d8

080172a0 <__pow5mult>:
 80172a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80172a4:	4615      	mov	r5, r2
 80172a6:	f012 0203 	ands.w	r2, r2, #3
 80172aa:	4606      	mov	r6, r0
 80172ac:	460f      	mov	r7, r1
 80172ae:	d007      	beq.n	80172c0 <__pow5mult+0x20>
 80172b0:	4c25      	ldr	r4, [pc, #148]	; (8017348 <__pow5mult+0xa8>)
 80172b2:	3a01      	subs	r2, #1
 80172b4:	2300      	movs	r3, #0
 80172b6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80172ba:	f7ff fe9b 	bl	8016ff4 <__multadd>
 80172be:	4607      	mov	r7, r0
 80172c0:	10ad      	asrs	r5, r5, #2
 80172c2:	d03d      	beq.n	8017340 <__pow5mult+0xa0>
 80172c4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80172c6:	b97c      	cbnz	r4, 80172e8 <__pow5mult+0x48>
 80172c8:	2010      	movs	r0, #16
 80172ca:	f7ff fe29 	bl	8016f20 <malloc>
 80172ce:	4602      	mov	r2, r0
 80172d0:	6270      	str	r0, [r6, #36]	; 0x24
 80172d2:	b928      	cbnz	r0, 80172e0 <__pow5mult+0x40>
 80172d4:	4b1d      	ldr	r3, [pc, #116]	; (801734c <__pow5mult+0xac>)
 80172d6:	481e      	ldr	r0, [pc, #120]	; (8017350 <__pow5mult+0xb0>)
 80172d8:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 80172dc:	f000 fbcc 	bl	8017a78 <__assert_func>
 80172e0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80172e4:	6004      	str	r4, [r0, #0]
 80172e6:	60c4      	str	r4, [r0, #12]
 80172e8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80172ec:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80172f0:	b94c      	cbnz	r4, 8017306 <__pow5mult+0x66>
 80172f2:	f240 2171 	movw	r1, #625	; 0x271
 80172f6:	4630      	mov	r0, r6
 80172f8:	f7ff ff16 	bl	8017128 <__i2b>
 80172fc:	2300      	movs	r3, #0
 80172fe:	f8c8 0008 	str.w	r0, [r8, #8]
 8017302:	4604      	mov	r4, r0
 8017304:	6003      	str	r3, [r0, #0]
 8017306:	f04f 0900 	mov.w	r9, #0
 801730a:	07eb      	lsls	r3, r5, #31
 801730c:	d50a      	bpl.n	8017324 <__pow5mult+0x84>
 801730e:	4639      	mov	r1, r7
 8017310:	4622      	mov	r2, r4
 8017312:	4630      	mov	r0, r6
 8017314:	f7ff ff1e 	bl	8017154 <__multiply>
 8017318:	4639      	mov	r1, r7
 801731a:	4680      	mov	r8, r0
 801731c:	4630      	mov	r0, r6
 801731e:	f7ff fe47 	bl	8016fb0 <_Bfree>
 8017322:	4647      	mov	r7, r8
 8017324:	106d      	asrs	r5, r5, #1
 8017326:	d00b      	beq.n	8017340 <__pow5mult+0xa0>
 8017328:	6820      	ldr	r0, [r4, #0]
 801732a:	b938      	cbnz	r0, 801733c <__pow5mult+0x9c>
 801732c:	4622      	mov	r2, r4
 801732e:	4621      	mov	r1, r4
 8017330:	4630      	mov	r0, r6
 8017332:	f7ff ff0f 	bl	8017154 <__multiply>
 8017336:	6020      	str	r0, [r4, #0]
 8017338:	f8c0 9000 	str.w	r9, [r0]
 801733c:	4604      	mov	r4, r0
 801733e:	e7e4      	b.n	801730a <__pow5mult+0x6a>
 8017340:	4638      	mov	r0, r7
 8017342:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017346:	bf00      	nop
 8017348:	0801eb28 	.word	0x0801eb28
 801734c:	0801e951 	.word	0x0801e951
 8017350:	0801e9d8 	.word	0x0801e9d8

08017354 <__lshift>:
 8017354:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017358:	460c      	mov	r4, r1
 801735a:	6849      	ldr	r1, [r1, #4]
 801735c:	6923      	ldr	r3, [r4, #16]
 801735e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8017362:	68a3      	ldr	r3, [r4, #8]
 8017364:	4607      	mov	r7, r0
 8017366:	4691      	mov	r9, r2
 8017368:	ea4f 1a62 	mov.w	sl, r2, asr #5
 801736c:	f108 0601 	add.w	r6, r8, #1
 8017370:	42b3      	cmp	r3, r6
 8017372:	db0b      	blt.n	801738c <__lshift+0x38>
 8017374:	4638      	mov	r0, r7
 8017376:	f7ff fddb 	bl	8016f30 <_Balloc>
 801737a:	4605      	mov	r5, r0
 801737c:	b948      	cbnz	r0, 8017392 <__lshift+0x3e>
 801737e:	4602      	mov	r2, r0
 8017380:	4b28      	ldr	r3, [pc, #160]	; (8017424 <__lshift+0xd0>)
 8017382:	4829      	ldr	r0, [pc, #164]	; (8017428 <__lshift+0xd4>)
 8017384:	f240 11d9 	movw	r1, #473	; 0x1d9
 8017388:	f000 fb76 	bl	8017a78 <__assert_func>
 801738c:	3101      	adds	r1, #1
 801738e:	005b      	lsls	r3, r3, #1
 8017390:	e7ee      	b.n	8017370 <__lshift+0x1c>
 8017392:	2300      	movs	r3, #0
 8017394:	f100 0114 	add.w	r1, r0, #20
 8017398:	f100 0210 	add.w	r2, r0, #16
 801739c:	4618      	mov	r0, r3
 801739e:	4553      	cmp	r3, sl
 80173a0:	db33      	blt.n	801740a <__lshift+0xb6>
 80173a2:	6920      	ldr	r0, [r4, #16]
 80173a4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80173a8:	f104 0314 	add.w	r3, r4, #20
 80173ac:	f019 091f 	ands.w	r9, r9, #31
 80173b0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80173b4:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80173b8:	d02b      	beq.n	8017412 <__lshift+0xbe>
 80173ba:	f1c9 0e20 	rsb	lr, r9, #32
 80173be:	468a      	mov	sl, r1
 80173c0:	2200      	movs	r2, #0
 80173c2:	6818      	ldr	r0, [r3, #0]
 80173c4:	fa00 f009 	lsl.w	r0, r0, r9
 80173c8:	4302      	orrs	r2, r0
 80173ca:	f84a 2b04 	str.w	r2, [sl], #4
 80173ce:	f853 2b04 	ldr.w	r2, [r3], #4
 80173d2:	459c      	cmp	ip, r3
 80173d4:	fa22 f20e 	lsr.w	r2, r2, lr
 80173d8:	d8f3      	bhi.n	80173c2 <__lshift+0x6e>
 80173da:	ebac 0304 	sub.w	r3, ip, r4
 80173de:	3b15      	subs	r3, #21
 80173e0:	f023 0303 	bic.w	r3, r3, #3
 80173e4:	3304      	adds	r3, #4
 80173e6:	f104 0015 	add.w	r0, r4, #21
 80173ea:	4584      	cmp	ip, r0
 80173ec:	bf38      	it	cc
 80173ee:	2304      	movcc	r3, #4
 80173f0:	50ca      	str	r2, [r1, r3]
 80173f2:	b10a      	cbz	r2, 80173f8 <__lshift+0xa4>
 80173f4:	f108 0602 	add.w	r6, r8, #2
 80173f8:	3e01      	subs	r6, #1
 80173fa:	4638      	mov	r0, r7
 80173fc:	612e      	str	r6, [r5, #16]
 80173fe:	4621      	mov	r1, r4
 8017400:	f7ff fdd6 	bl	8016fb0 <_Bfree>
 8017404:	4628      	mov	r0, r5
 8017406:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801740a:	f842 0f04 	str.w	r0, [r2, #4]!
 801740e:	3301      	adds	r3, #1
 8017410:	e7c5      	b.n	801739e <__lshift+0x4a>
 8017412:	3904      	subs	r1, #4
 8017414:	f853 2b04 	ldr.w	r2, [r3], #4
 8017418:	f841 2f04 	str.w	r2, [r1, #4]!
 801741c:	459c      	cmp	ip, r3
 801741e:	d8f9      	bhi.n	8017414 <__lshift+0xc0>
 8017420:	e7ea      	b.n	80173f8 <__lshift+0xa4>
 8017422:	bf00      	nop
 8017424:	0801e9c7 	.word	0x0801e9c7
 8017428:	0801e9d8 	.word	0x0801e9d8

0801742c <__mcmp>:
 801742c:	b530      	push	{r4, r5, lr}
 801742e:	6902      	ldr	r2, [r0, #16]
 8017430:	690c      	ldr	r4, [r1, #16]
 8017432:	1b12      	subs	r2, r2, r4
 8017434:	d10e      	bne.n	8017454 <__mcmp+0x28>
 8017436:	f100 0314 	add.w	r3, r0, #20
 801743a:	3114      	adds	r1, #20
 801743c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8017440:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8017444:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8017448:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 801744c:	42a5      	cmp	r5, r4
 801744e:	d003      	beq.n	8017458 <__mcmp+0x2c>
 8017450:	d305      	bcc.n	801745e <__mcmp+0x32>
 8017452:	2201      	movs	r2, #1
 8017454:	4610      	mov	r0, r2
 8017456:	bd30      	pop	{r4, r5, pc}
 8017458:	4283      	cmp	r3, r0
 801745a:	d3f3      	bcc.n	8017444 <__mcmp+0x18>
 801745c:	e7fa      	b.n	8017454 <__mcmp+0x28>
 801745e:	f04f 32ff 	mov.w	r2, #4294967295
 8017462:	e7f7      	b.n	8017454 <__mcmp+0x28>

08017464 <__mdiff>:
 8017464:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017468:	460c      	mov	r4, r1
 801746a:	4606      	mov	r6, r0
 801746c:	4611      	mov	r1, r2
 801746e:	4620      	mov	r0, r4
 8017470:	4617      	mov	r7, r2
 8017472:	f7ff ffdb 	bl	801742c <__mcmp>
 8017476:	1e05      	subs	r5, r0, #0
 8017478:	d110      	bne.n	801749c <__mdiff+0x38>
 801747a:	4629      	mov	r1, r5
 801747c:	4630      	mov	r0, r6
 801747e:	f7ff fd57 	bl	8016f30 <_Balloc>
 8017482:	b930      	cbnz	r0, 8017492 <__mdiff+0x2e>
 8017484:	4b39      	ldr	r3, [pc, #228]	; (801756c <__mdiff+0x108>)
 8017486:	4602      	mov	r2, r0
 8017488:	f240 2132 	movw	r1, #562	; 0x232
 801748c:	4838      	ldr	r0, [pc, #224]	; (8017570 <__mdiff+0x10c>)
 801748e:	f000 faf3 	bl	8017a78 <__assert_func>
 8017492:	2301      	movs	r3, #1
 8017494:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8017498:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801749c:	bfa4      	itt	ge
 801749e:	463b      	movge	r3, r7
 80174a0:	4627      	movge	r7, r4
 80174a2:	4630      	mov	r0, r6
 80174a4:	6879      	ldr	r1, [r7, #4]
 80174a6:	bfa6      	itte	ge
 80174a8:	461c      	movge	r4, r3
 80174aa:	2500      	movge	r5, #0
 80174ac:	2501      	movlt	r5, #1
 80174ae:	f7ff fd3f 	bl	8016f30 <_Balloc>
 80174b2:	b920      	cbnz	r0, 80174be <__mdiff+0x5a>
 80174b4:	4b2d      	ldr	r3, [pc, #180]	; (801756c <__mdiff+0x108>)
 80174b6:	4602      	mov	r2, r0
 80174b8:	f44f 7110 	mov.w	r1, #576	; 0x240
 80174bc:	e7e6      	b.n	801748c <__mdiff+0x28>
 80174be:	693e      	ldr	r6, [r7, #16]
 80174c0:	60c5      	str	r5, [r0, #12]
 80174c2:	6925      	ldr	r5, [r4, #16]
 80174c4:	f107 0114 	add.w	r1, r7, #20
 80174c8:	f104 0914 	add.w	r9, r4, #20
 80174cc:	f100 0e14 	add.w	lr, r0, #20
 80174d0:	f107 0210 	add.w	r2, r7, #16
 80174d4:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 80174d8:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 80174dc:	46f2      	mov	sl, lr
 80174de:	2700      	movs	r7, #0
 80174e0:	f859 3b04 	ldr.w	r3, [r9], #4
 80174e4:	f852 bf04 	ldr.w	fp, [r2, #4]!
 80174e8:	fa1f f883 	uxth.w	r8, r3
 80174ec:	fa17 f78b 	uxtah	r7, r7, fp
 80174f0:	0c1b      	lsrs	r3, r3, #16
 80174f2:	eba7 0808 	sub.w	r8, r7, r8
 80174f6:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80174fa:	eb03 4328 	add.w	r3, r3, r8, asr #16
 80174fe:	fa1f f888 	uxth.w	r8, r8
 8017502:	141f      	asrs	r7, r3, #16
 8017504:	454d      	cmp	r5, r9
 8017506:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 801750a:	f84a 3b04 	str.w	r3, [sl], #4
 801750e:	d8e7      	bhi.n	80174e0 <__mdiff+0x7c>
 8017510:	1b2b      	subs	r3, r5, r4
 8017512:	3b15      	subs	r3, #21
 8017514:	f023 0303 	bic.w	r3, r3, #3
 8017518:	3304      	adds	r3, #4
 801751a:	3415      	adds	r4, #21
 801751c:	42a5      	cmp	r5, r4
 801751e:	bf38      	it	cc
 8017520:	2304      	movcc	r3, #4
 8017522:	4419      	add	r1, r3
 8017524:	4473      	add	r3, lr
 8017526:	469e      	mov	lr, r3
 8017528:	460d      	mov	r5, r1
 801752a:	4565      	cmp	r5, ip
 801752c:	d30e      	bcc.n	801754c <__mdiff+0xe8>
 801752e:	f10c 0203 	add.w	r2, ip, #3
 8017532:	1a52      	subs	r2, r2, r1
 8017534:	f022 0203 	bic.w	r2, r2, #3
 8017538:	3903      	subs	r1, #3
 801753a:	458c      	cmp	ip, r1
 801753c:	bf38      	it	cc
 801753e:	2200      	movcc	r2, #0
 8017540:	441a      	add	r2, r3
 8017542:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8017546:	b17b      	cbz	r3, 8017568 <__mdiff+0x104>
 8017548:	6106      	str	r6, [r0, #16]
 801754a:	e7a5      	b.n	8017498 <__mdiff+0x34>
 801754c:	f855 8b04 	ldr.w	r8, [r5], #4
 8017550:	fa17 f488 	uxtah	r4, r7, r8
 8017554:	1422      	asrs	r2, r4, #16
 8017556:	eb02 4218 	add.w	r2, r2, r8, lsr #16
 801755a:	b2a4      	uxth	r4, r4
 801755c:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8017560:	f84e 4b04 	str.w	r4, [lr], #4
 8017564:	1417      	asrs	r7, r2, #16
 8017566:	e7e0      	b.n	801752a <__mdiff+0xc6>
 8017568:	3e01      	subs	r6, #1
 801756a:	e7ea      	b.n	8017542 <__mdiff+0xde>
 801756c:	0801e9c7 	.word	0x0801e9c7
 8017570:	0801e9d8 	.word	0x0801e9d8

08017574 <__d2b>:
 8017574:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8017578:	4689      	mov	r9, r1
 801757a:	2101      	movs	r1, #1
 801757c:	ec57 6b10 	vmov	r6, r7, d0
 8017580:	4690      	mov	r8, r2
 8017582:	f7ff fcd5 	bl	8016f30 <_Balloc>
 8017586:	4604      	mov	r4, r0
 8017588:	b930      	cbnz	r0, 8017598 <__d2b+0x24>
 801758a:	4602      	mov	r2, r0
 801758c:	4b25      	ldr	r3, [pc, #148]	; (8017624 <__d2b+0xb0>)
 801758e:	4826      	ldr	r0, [pc, #152]	; (8017628 <__d2b+0xb4>)
 8017590:	f240 310a 	movw	r1, #778	; 0x30a
 8017594:	f000 fa70 	bl	8017a78 <__assert_func>
 8017598:	f3c7 550a 	ubfx	r5, r7, #20, #11
 801759c:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80175a0:	bb35      	cbnz	r5, 80175f0 <__d2b+0x7c>
 80175a2:	2e00      	cmp	r6, #0
 80175a4:	9301      	str	r3, [sp, #4]
 80175a6:	d028      	beq.n	80175fa <__d2b+0x86>
 80175a8:	4668      	mov	r0, sp
 80175aa:	9600      	str	r6, [sp, #0]
 80175ac:	f7ff fd8c 	bl	80170c8 <__lo0bits>
 80175b0:	9900      	ldr	r1, [sp, #0]
 80175b2:	b300      	cbz	r0, 80175f6 <__d2b+0x82>
 80175b4:	9a01      	ldr	r2, [sp, #4]
 80175b6:	f1c0 0320 	rsb	r3, r0, #32
 80175ba:	fa02 f303 	lsl.w	r3, r2, r3
 80175be:	430b      	orrs	r3, r1
 80175c0:	40c2      	lsrs	r2, r0
 80175c2:	6163      	str	r3, [r4, #20]
 80175c4:	9201      	str	r2, [sp, #4]
 80175c6:	9b01      	ldr	r3, [sp, #4]
 80175c8:	61a3      	str	r3, [r4, #24]
 80175ca:	2b00      	cmp	r3, #0
 80175cc:	bf14      	ite	ne
 80175ce:	2202      	movne	r2, #2
 80175d0:	2201      	moveq	r2, #1
 80175d2:	6122      	str	r2, [r4, #16]
 80175d4:	b1d5      	cbz	r5, 801760c <__d2b+0x98>
 80175d6:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80175da:	4405      	add	r5, r0
 80175dc:	f8c9 5000 	str.w	r5, [r9]
 80175e0:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80175e4:	f8c8 0000 	str.w	r0, [r8]
 80175e8:	4620      	mov	r0, r4
 80175ea:	b003      	add	sp, #12
 80175ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80175f0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80175f4:	e7d5      	b.n	80175a2 <__d2b+0x2e>
 80175f6:	6161      	str	r1, [r4, #20]
 80175f8:	e7e5      	b.n	80175c6 <__d2b+0x52>
 80175fa:	a801      	add	r0, sp, #4
 80175fc:	f7ff fd64 	bl	80170c8 <__lo0bits>
 8017600:	9b01      	ldr	r3, [sp, #4]
 8017602:	6163      	str	r3, [r4, #20]
 8017604:	2201      	movs	r2, #1
 8017606:	6122      	str	r2, [r4, #16]
 8017608:	3020      	adds	r0, #32
 801760a:	e7e3      	b.n	80175d4 <__d2b+0x60>
 801760c:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8017610:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8017614:	f8c9 0000 	str.w	r0, [r9]
 8017618:	6918      	ldr	r0, [r3, #16]
 801761a:	f7ff fd35 	bl	8017088 <__hi0bits>
 801761e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8017622:	e7df      	b.n	80175e4 <__d2b+0x70>
 8017624:	0801e9c7 	.word	0x0801e9c7
 8017628:	0801e9d8 	.word	0x0801e9d8

0801762c <_calloc_r>:
 801762c:	b513      	push	{r0, r1, r4, lr}
 801762e:	434a      	muls	r2, r1
 8017630:	4611      	mov	r1, r2
 8017632:	9201      	str	r2, [sp, #4]
 8017634:	f000 f85a 	bl	80176ec <_malloc_r>
 8017638:	4604      	mov	r4, r0
 801763a:	b118      	cbz	r0, 8017644 <_calloc_r+0x18>
 801763c:	9a01      	ldr	r2, [sp, #4]
 801763e:	2100      	movs	r1, #0
 8017640:	f7fe f958 	bl	80158f4 <memset>
 8017644:	4620      	mov	r0, r4
 8017646:	b002      	add	sp, #8
 8017648:	bd10      	pop	{r4, pc}
	...

0801764c <_free_r>:
 801764c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801764e:	2900      	cmp	r1, #0
 8017650:	d048      	beq.n	80176e4 <_free_r+0x98>
 8017652:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8017656:	9001      	str	r0, [sp, #4]
 8017658:	2b00      	cmp	r3, #0
 801765a:	f1a1 0404 	sub.w	r4, r1, #4
 801765e:	bfb8      	it	lt
 8017660:	18e4      	addlt	r4, r4, r3
 8017662:	f000 fa4b 	bl	8017afc <__malloc_lock>
 8017666:	4a20      	ldr	r2, [pc, #128]	; (80176e8 <_free_r+0x9c>)
 8017668:	9801      	ldr	r0, [sp, #4]
 801766a:	6813      	ldr	r3, [r2, #0]
 801766c:	4615      	mov	r5, r2
 801766e:	b933      	cbnz	r3, 801767e <_free_r+0x32>
 8017670:	6063      	str	r3, [r4, #4]
 8017672:	6014      	str	r4, [r2, #0]
 8017674:	b003      	add	sp, #12
 8017676:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801767a:	f000 ba45 	b.w	8017b08 <__malloc_unlock>
 801767e:	42a3      	cmp	r3, r4
 8017680:	d90b      	bls.n	801769a <_free_r+0x4e>
 8017682:	6821      	ldr	r1, [r4, #0]
 8017684:	1862      	adds	r2, r4, r1
 8017686:	4293      	cmp	r3, r2
 8017688:	bf04      	itt	eq
 801768a:	681a      	ldreq	r2, [r3, #0]
 801768c:	685b      	ldreq	r3, [r3, #4]
 801768e:	6063      	str	r3, [r4, #4]
 8017690:	bf04      	itt	eq
 8017692:	1852      	addeq	r2, r2, r1
 8017694:	6022      	streq	r2, [r4, #0]
 8017696:	602c      	str	r4, [r5, #0]
 8017698:	e7ec      	b.n	8017674 <_free_r+0x28>
 801769a:	461a      	mov	r2, r3
 801769c:	685b      	ldr	r3, [r3, #4]
 801769e:	b10b      	cbz	r3, 80176a4 <_free_r+0x58>
 80176a0:	42a3      	cmp	r3, r4
 80176a2:	d9fa      	bls.n	801769a <_free_r+0x4e>
 80176a4:	6811      	ldr	r1, [r2, #0]
 80176a6:	1855      	adds	r5, r2, r1
 80176a8:	42a5      	cmp	r5, r4
 80176aa:	d10b      	bne.n	80176c4 <_free_r+0x78>
 80176ac:	6824      	ldr	r4, [r4, #0]
 80176ae:	4421      	add	r1, r4
 80176b0:	1854      	adds	r4, r2, r1
 80176b2:	42a3      	cmp	r3, r4
 80176b4:	6011      	str	r1, [r2, #0]
 80176b6:	d1dd      	bne.n	8017674 <_free_r+0x28>
 80176b8:	681c      	ldr	r4, [r3, #0]
 80176ba:	685b      	ldr	r3, [r3, #4]
 80176bc:	6053      	str	r3, [r2, #4]
 80176be:	4421      	add	r1, r4
 80176c0:	6011      	str	r1, [r2, #0]
 80176c2:	e7d7      	b.n	8017674 <_free_r+0x28>
 80176c4:	d902      	bls.n	80176cc <_free_r+0x80>
 80176c6:	230c      	movs	r3, #12
 80176c8:	6003      	str	r3, [r0, #0]
 80176ca:	e7d3      	b.n	8017674 <_free_r+0x28>
 80176cc:	6825      	ldr	r5, [r4, #0]
 80176ce:	1961      	adds	r1, r4, r5
 80176d0:	428b      	cmp	r3, r1
 80176d2:	bf04      	itt	eq
 80176d4:	6819      	ldreq	r1, [r3, #0]
 80176d6:	685b      	ldreq	r3, [r3, #4]
 80176d8:	6063      	str	r3, [r4, #4]
 80176da:	bf04      	itt	eq
 80176dc:	1949      	addeq	r1, r1, r5
 80176de:	6021      	streq	r1, [r4, #0]
 80176e0:	6054      	str	r4, [r2, #4]
 80176e2:	e7c7      	b.n	8017674 <_free_r+0x28>
 80176e4:	b003      	add	sp, #12
 80176e6:	bd30      	pop	{r4, r5, pc}
 80176e8:	20006f34 	.word	0x20006f34

080176ec <_malloc_r>:
 80176ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80176ee:	1ccd      	adds	r5, r1, #3
 80176f0:	f025 0503 	bic.w	r5, r5, #3
 80176f4:	3508      	adds	r5, #8
 80176f6:	2d0c      	cmp	r5, #12
 80176f8:	bf38      	it	cc
 80176fa:	250c      	movcc	r5, #12
 80176fc:	2d00      	cmp	r5, #0
 80176fe:	4606      	mov	r6, r0
 8017700:	db01      	blt.n	8017706 <_malloc_r+0x1a>
 8017702:	42a9      	cmp	r1, r5
 8017704:	d903      	bls.n	801770e <_malloc_r+0x22>
 8017706:	230c      	movs	r3, #12
 8017708:	6033      	str	r3, [r6, #0]
 801770a:	2000      	movs	r0, #0
 801770c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801770e:	f000 f9f5 	bl	8017afc <__malloc_lock>
 8017712:	4921      	ldr	r1, [pc, #132]	; (8017798 <_malloc_r+0xac>)
 8017714:	680a      	ldr	r2, [r1, #0]
 8017716:	4614      	mov	r4, r2
 8017718:	b99c      	cbnz	r4, 8017742 <_malloc_r+0x56>
 801771a:	4f20      	ldr	r7, [pc, #128]	; (801779c <_malloc_r+0xb0>)
 801771c:	683b      	ldr	r3, [r7, #0]
 801771e:	b923      	cbnz	r3, 801772a <_malloc_r+0x3e>
 8017720:	4621      	mov	r1, r4
 8017722:	4630      	mov	r0, r6
 8017724:	f000 f998 	bl	8017a58 <_sbrk_r>
 8017728:	6038      	str	r0, [r7, #0]
 801772a:	4629      	mov	r1, r5
 801772c:	4630      	mov	r0, r6
 801772e:	f000 f993 	bl	8017a58 <_sbrk_r>
 8017732:	1c43      	adds	r3, r0, #1
 8017734:	d123      	bne.n	801777e <_malloc_r+0x92>
 8017736:	230c      	movs	r3, #12
 8017738:	6033      	str	r3, [r6, #0]
 801773a:	4630      	mov	r0, r6
 801773c:	f000 f9e4 	bl	8017b08 <__malloc_unlock>
 8017740:	e7e3      	b.n	801770a <_malloc_r+0x1e>
 8017742:	6823      	ldr	r3, [r4, #0]
 8017744:	1b5b      	subs	r3, r3, r5
 8017746:	d417      	bmi.n	8017778 <_malloc_r+0x8c>
 8017748:	2b0b      	cmp	r3, #11
 801774a:	d903      	bls.n	8017754 <_malloc_r+0x68>
 801774c:	6023      	str	r3, [r4, #0]
 801774e:	441c      	add	r4, r3
 8017750:	6025      	str	r5, [r4, #0]
 8017752:	e004      	b.n	801775e <_malloc_r+0x72>
 8017754:	6863      	ldr	r3, [r4, #4]
 8017756:	42a2      	cmp	r2, r4
 8017758:	bf0c      	ite	eq
 801775a:	600b      	streq	r3, [r1, #0]
 801775c:	6053      	strne	r3, [r2, #4]
 801775e:	4630      	mov	r0, r6
 8017760:	f000 f9d2 	bl	8017b08 <__malloc_unlock>
 8017764:	f104 000b 	add.w	r0, r4, #11
 8017768:	1d23      	adds	r3, r4, #4
 801776a:	f020 0007 	bic.w	r0, r0, #7
 801776e:	1ac2      	subs	r2, r0, r3
 8017770:	d0cc      	beq.n	801770c <_malloc_r+0x20>
 8017772:	1a1b      	subs	r3, r3, r0
 8017774:	50a3      	str	r3, [r4, r2]
 8017776:	e7c9      	b.n	801770c <_malloc_r+0x20>
 8017778:	4622      	mov	r2, r4
 801777a:	6864      	ldr	r4, [r4, #4]
 801777c:	e7cc      	b.n	8017718 <_malloc_r+0x2c>
 801777e:	1cc4      	adds	r4, r0, #3
 8017780:	f024 0403 	bic.w	r4, r4, #3
 8017784:	42a0      	cmp	r0, r4
 8017786:	d0e3      	beq.n	8017750 <_malloc_r+0x64>
 8017788:	1a21      	subs	r1, r4, r0
 801778a:	4630      	mov	r0, r6
 801778c:	f000 f964 	bl	8017a58 <_sbrk_r>
 8017790:	3001      	adds	r0, #1
 8017792:	d1dd      	bne.n	8017750 <_malloc_r+0x64>
 8017794:	e7cf      	b.n	8017736 <_malloc_r+0x4a>
 8017796:	bf00      	nop
 8017798:	20006f34 	.word	0x20006f34
 801779c:	20006f38 	.word	0x20006f38

080177a0 <__ssputs_r>:
 80177a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80177a4:	688e      	ldr	r6, [r1, #8]
 80177a6:	429e      	cmp	r6, r3
 80177a8:	4682      	mov	sl, r0
 80177aa:	460c      	mov	r4, r1
 80177ac:	4690      	mov	r8, r2
 80177ae:	461f      	mov	r7, r3
 80177b0:	d838      	bhi.n	8017824 <__ssputs_r+0x84>
 80177b2:	898a      	ldrh	r2, [r1, #12]
 80177b4:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80177b8:	d032      	beq.n	8017820 <__ssputs_r+0x80>
 80177ba:	6825      	ldr	r5, [r4, #0]
 80177bc:	6909      	ldr	r1, [r1, #16]
 80177be:	eba5 0901 	sub.w	r9, r5, r1
 80177c2:	6965      	ldr	r5, [r4, #20]
 80177c4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80177c8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80177cc:	3301      	adds	r3, #1
 80177ce:	444b      	add	r3, r9
 80177d0:	106d      	asrs	r5, r5, #1
 80177d2:	429d      	cmp	r5, r3
 80177d4:	bf38      	it	cc
 80177d6:	461d      	movcc	r5, r3
 80177d8:	0553      	lsls	r3, r2, #21
 80177da:	d531      	bpl.n	8017840 <__ssputs_r+0xa0>
 80177dc:	4629      	mov	r1, r5
 80177de:	f7ff ff85 	bl	80176ec <_malloc_r>
 80177e2:	4606      	mov	r6, r0
 80177e4:	b950      	cbnz	r0, 80177fc <__ssputs_r+0x5c>
 80177e6:	230c      	movs	r3, #12
 80177e8:	f8ca 3000 	str.w	r3, [sl]
 80177ec:	89a3      	ldrh	r3, [r4, #12]
 80177ee:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80177f2:	81a3      	strh	r3, [r4, #12]
 80177f4:	f04f 30ff 	mov.w	r0, #4294967295
 80177f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80177fc:	6921      	ldr	r1, [r4, #16]
 80177fe:	464a      	mov	r2, r9
 8017800:	f7fe f850 	bl	80158a4 <memcpy>
 8017804:	89a3      	ldrh	r3, [r4, #12]
 8017806:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 801780a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801780e:	81a3      	strh	r3, [r4, #12]
 8017810:	6126      	str	r6, [r4, #16]
 8017812:	6165      	str	r5, [r4, #20]
 8017814:	444e      	add	r6, r9
 8017816:	eba5 0509 	sub.w	r5, r5, r9
 801781a:	6026      	str	r6, [r4, #0]
 801781c:	60a5      	str	r5, [r4, #8]
 801781e:	463e      	mov	r6, r7
 8017820:	42be      	cmp	r6, r7
 8017822:	d900      	bls.n	8017826 <__ssputs_r+0x86>
 8017824:	463e      	mov	r6, r7
 8017826:	4632      	mov	r2, r6
 8017828:	6820      	ldr	r0, [r4, #0]
 801782a:	4641      	mov	r1, r8
 801782c:	f7fe f848 	bl	80158c0 <memmove>
 8017830:	68a3      	ldr	r3, [r4, #8]
 8017832:	6822      	ldr	r2, [r4, #0]
 8017834:	1b9b      	subs	r3, r3, r6
 8017836:	4432      	add	r2, r6
 8017838:	60a3      	str	r3, [r4, #8]
 801783a:	6022      	str	r2, [r4, #0]
 801783c:	2000      	movs	r0, #0
 801783e:	e7db      	b.n	80177f8 <__ssputs_r+0x58>
 8017840:	462a      	mov	r2, r5
 8017842:	f000 f967 	bl	8017b14 <_realloc_r>
 8017846:	4606      	mov	r6, r0
 8017848:	2800      	cmp	r0, #0
 801784a:	d1e1      	bne.n	8017810 <__ssputs_r+0x70>
 801784c:	6921      	ldr	r1, [r4, #16]
 801784e:	4650      	mov	r0, sl
 8017850:	f7ff fefc 	bl	801764c <_free_r>
 8017854:	e7c7      	b.n	80177e6 <__ssputs_r+0x46>
	...

08017858 <_svfiprintf_r>:
 8017858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801785c:	4698      	mov	r8, r3
 801785e:	898b      	ldrh	r3, [r1, #12]
 8017860:	061b      	lsls	r3, r3, #24
 8017862:	b09d      	sub	sp, #116	; 0x74
 8017864:	4607      	mov	r7, r0
 8017866:	460d      	mov	r5, r1
 8017868:	4614      	mov	r4, r2
 801786a:	d50e      	bpl.n	801788a <_svfiprintf_r+0x32>
 801786c:	690b      	ldr	r3, [r1, #16]
 801786e:	b963      	cbnz	r3, 801788a <_svfiprintf_r+0x32>
 8017870:	2140      	movs	r1, #64	; 0x40
 8017872:	f7ff ff3b 	bl	80176ec <_malloc_r>
 8017876:	6028      	str	r0, [r5, #0]
 8017878:	6128      	str	r0, [r5, #16]
 801787a:	b920      	cbnz	r0, 8017886 <_svfiprintf_r+0x2e>
 801787c:	230c      	movs	r3, #12
 801787e:	603b      	str	r3, [r7, #0]
 8017880:	f04f 30ff 	mov.w	r0, #4294967295
 8017884:	e0d1      	b.n	8017a2a <_svfiprintf_r+0x1d2>
 8017886:	2340      	movs	r3, #64	; 0x40
 8017888:	616b      	str	r3, [r5, #20]
 801788a:	2300      	movs	r3, #0
 801788c:	9309      	str	r3, [sp, #36]	; 0x24
 801788e:	2320      	movs	r3, #32
 8017890:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8017894:	f8cd 800c 	str.w	r8, [sp, #12]
 8017898:	2330      	movs	r3, #48	; 0x30
 801789a:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 8017a44 <_svfiprintf_r+0x1ec>
 801789e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80178a2:	f04f 0901 	mov.w	r9, #1
 80178a6:	4623      	mov	r3, r4
 80178a8:	469a      	mov	sl, r3
 80178aa:	f813 2b01 	ldrb.w	r2, [r3], #1
 80178ae:	b10a      	cbz	r2, 80178b4 <_svfiprintf_r+0x5c>
 80178b0:	2a25      	cmp	r2, #37	; 0x25
 80178b2:	d1f9      	bne.n	80178a8 <_svfiprintf_r+0x50>
 80178b4:	ebba 0b04 	subs.w	fp, sl, r4
 80178b8:	d00b      	beq.n	80178d2 <_svfiprintf_r+0x7a>
 80178ba:	465b      	mov	r3, fp
 80178bc:	4622      	mov	r2, r4
 80178be:	4629      	mov	r1, r5
 80178c0:	4638      	mov	r0, r7
 80178c2:	f7ff ff6d 	bl	80177a0 <__ssputs_r>
 80178c6:	3001      	adds	r0, #1
 80178c8:	f000 80aa 	beq.w	8017a20 <_svfiprintf_r+0x1c8>
 80178cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80178ce:	445a      	add	r2, fp
 80178d0:	9209      	str	r2, [sp, #36]	; 0x24
 80178d2:	f89a 3000 	ldrb.w	r3, [sl]
 80178d6:	2b00      	cmp	r3, #0
 80178d8:	f000 80a2 	beq.w	8017a20 <_svfiprintf_r+0x1c8>
 80178dc:	2300      	movs	r3, #0
 80178de:	f04f 32ff 	mov.w	r2, #4294967295
 80178e2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80178e6:	f10a 0a01 	add.w	sl, sl, #1
 80178ea:	9304      	str	r3, [sp, #16]
 80178ec:	9307      	str	r3, [sp, #28]
 80178ee:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80178f2:	931a      	str	r3, [sp, #104]	; 0x68
 80178f4:	4654      	mov	r4, sl
 80178f6:	2205      	movs	r2, #5
 80178f8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80178fc:	4851      	ldr	r0, [pc, #324]	; (8017a44 <_svfiprintf_r+0x1ec>)
 80178fe:	f7e8 fc8f 	bl	8000220 <memchr>
 8017902:	9a04      	ldr	r2, [sp, #16]
 8017904:	b9d8      	cbnz	r0, 801793e <_svfiprintf_r+0xe6>
 8017906:	06d0      	lsls	r0, r2, #27
 8017908:	bf44      	itt	mi
 801790a:	2320      	movmi	r3, #32
 801790c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8017910:	0711      	lsls	r1, r2, #28
 8017912:	bf44      	itt	mi
 8017914:	232b      	movmi	r3, #43	; 0x2b
 8017916:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801791a:	f89a 3000 	ldrb.w	r3, [sl]
 801791e:	2b2a      	cmp	r3, #42	; 0x2a
 8017920:	d015      	beq.n	801794e <_svfiprintf_r+0xf6>
 8017922:	9a07      	ldr	r2, [sp, #28]
 8017924:	4654      	mov	r4, sl
 8017926:	2000      	movs	r0, #0
 8017928:	f04f 0c0a 	mov.w	ip, #10
 801792c:	4621      	mov	r1, r4
 801792e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8017932:	3b30      	subs	r3, #48	; 0x30
 8017934:	2b09      	cmp	r3, #9
 8017936:	d94e      	bls.n	80179d6 <_svfiprintf_r+0x17e>
 8017938:	b1b0      	cbz	r0, 8017968 <_svfiprintf_r+0x110>
 801793a:	9207      	str	r2, [sp, #28]
 801793c:	e014      	b.n	8017968 <_svfiprintf_r+0x110>
 801793e:	eba0 0308 	sub.w	r3, r0, r8
 8017942:	fa09 f303 	lsl.w	r3, r9, r3
 8017946:	4313      	orrs	r3, r2
 8017948:	9304      	str	r3, [sp, #16]
 801794a:	46a2      	mov	sl, r4
 801794c:	e7d2      	b.n	80178f4 <_svfiprintf_r+0x9c>
 801794e:	9b03      	ldr	r3, [sp, #12]
 8017950:	1d19      	adds	r1, r3, #4
 8017952:	681b      	ldr	r3, [r3, #0]
 8017954:	9103      	str	r1, [sp, #12]
 8017956:	2b00      	cmp	r3, #0
 8017958:	bfbb      	ittet	lt
 801795a:	425b      	neglt	r3, r3
 801795c:	f042 0202 	orrlt.w	r2, r2, #2
 8017960:	9307      	strge	r3, [sp, #28]
 8017962:	9307      	strlt	r3, [sp, #28]
 8017964:	bfb8      	it	lt
 8017966:	9204      	strlt	r2, [sp, #16]
 8017968:	7823      	ldrb	r3, [r4, #0]
 801796a:	2b2e      	cmp	r3, #46	; 0x2e
 801796c:	d10c      	bne.n	8017988 <_svfiprintf_r+0x130>
 801796e:	7863      	ldrb	r3, [r4, #1]
 8017970:	2b2a      	cmp	r3, #42	; 0x2a
 8017972:	d135      	bne.n	80179e0 <_svfiprintf_r+0x188>
 8017974:	9b03      	ldr	r3, [sp, #12]
 8017976:	1d1a      	adds	r2, r3, #4
 8017978:	681b      	ldr	r3, [r3, #0]
 801797a:	9203      	str	r2, [sp, #12]
 801797c:	2b00      	cmp	r3, #0
 801797e:	bfb8      	it	lt
 8017980:	f04f 33ff 	movlt.w	r3, #4294967295
 8017984:	3402      	adds	r4, #2
 8017986:	9305      	str	r3, [sp, #20]
 8017988:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8017a54 <_svfiprintf_r+0x1fc>
 801798c:	7821      	ldrb	r1, [r4, #0]
 801798e:	2203      	movs	r2, #3
 8017990:	4650      	mov	r0, sl
 8017992:	f7e8 fc45 	bl	8000220 <memchr>
 8017996:	b140      	cbz	r0, 80179aa <_svfiprintf_r+0x152>
 8017998:	2340      	movs	r3, #64	; 0x40
 801799a:	eba0 000a 	sub.w	r0, r0, sl
 801799e:	fa03 f000 	lsl.w	r0, r3, r0
 80179a2:	9b04      	ldr	r3, [sp, #16]
 80179a4:	4303      	orrs	r3, r0
 80179a6:	3401      	adds	r4, #1
 80179a8:	9304      	str	r3, [sp, #16]
 80179aa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80179ae:	4826      	ldr	r0, [pc, #152]	; (8017a48 <_svfiprintf_r+0x1f0>)
 80179b0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80179b4:	2206      	movs	r2, #6
 80179b6:	f7e8 fc33 	bl	8000220 <memchr>
 80179ba:	2800      	cmp	r0, #0
 80179bc:	d038      	beq.n	8017a30 <_svfiprintf_r+0x1d8>
 80179be:	4b23      	ldr	r3, [pc, #140]	; (8017a4c <_svfiprintf_r+0x1f4>)
 80179c0:	bb1b      	cbnz	r3, 8017a0a <_svfiprintf_r+0x1b2>
 80179c2:	9b03      	ldr	r3, [sp, #12]
 80179c4:	3307      	adds	r3, #7
 80179c6:	f023 0307 	bic.w	r3, r3, #7
 80179ca:	3308      	adds	r3, #8
 80179cc:	9303      	str	r3, [sp, #12]
 80179ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80179d0:	4433      	add	r3, r6
 80179d2:	9309      	str	r3, [sp, #36]	; 0x24
 80179d4:	e767      	b.n	80178a6 <_svfiprintf_r+0x4e>
 80179d6:	fb0c 3202 	mla	r2, ip, r2, r3
 80179da:	460c      	mov	r4, r1
 80179dc:	2001      	movs	r0, #1
 80179de:	e7a5      	b.n	801792c <_svfiprintf_r+0xd4>
 80179e0:	2300      	movs	r3, #0
 80179e2:	3401      	adds	r4, #1
 80179e4:	9305      	str	r3, [sp, #20]
 80179e6:	4619      	mov	r1, r3
 80179e8:	f04f 0c0a 	mov.w	ip, #10
 80179ec:	4620      	mov	r0, r4
 80179ee:	f810 2b01 	ldrb.w	r2, [r0], #1
 80179f2:	3a30      	subs	r2, #48	; 0x30
 80179f4:	2a09      	cmp	r2, #9
 80179f6:	d903      	bls.n	8017a00 <_svfiprintf_r+0x1a8>
 80179f8:	2b00      	cmp	r3, #0
 80179fa:	d0c5      	beq.n	8017988 <_svfiprintf_r+0x130>
 80179fc:	9105      	str	r1, [sp, #20]
 80179fe:	e7c3      	b.n	8017988 <_svfiprintf_r+0x130>
 8017a00:	fb0c 2101 	mla	r1, ip, r1, r2
 8017a04:	4604      	mov	r4, r0
 8017a06:	2301      	movs	r3, #1
 8017a08:	e7f0      	b.n	80179ec <_svfiprintf_r+0x194>
 8017a0a:	ab03      	add	r3, sp, #12
 8017a0c:	9300      	str	r3, [sp, #0]
 8017a0e:	462a      	mov	r2, r5
 8017a10:	4b0f      	ldr	r3, [pc, #60]	; (8017a50 <_svfiprintf_r+0x1f8>)
 8017a12:	a904      	add	r1, sp, #16
 8017a14:	4638      	mov	r0, r7
 8017a16:	f7fe f815 	bl	8015a44 <_printf_float>
 8017a1a:	1c42      	adds	r2, r0, #1
 8017a1c:	4606      	mov	r6, r0
 8017a1e:	d1d6      	bne.n	80179ce <_svfiprintf_r+0x176>
 8017a20:	89ab      	ldrh	r3, [r5, #12]
 8017a22:	065b      	lsls	r3, r3, #25
 8017a24:	f53f af2c 	bmi.w	8017880 <_svfiprintf_r+0x28>
 8017a28:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017a2a:	b01d      	add	sp, #116	; 0x74
 8017a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017a30:	ab03      	add	r3, sp, #12
 8017a32:	9300      	str	r3, [sp, #0]
 8017a34:	462a      	mov	r2, r5
 8017a36:	4b06      	ldr	r3, [pc, #24]	; (8017a50 <_svfiprintf_r+0x1f8>)
 8017a38:	a904      	add	r1, sp, #16
 8017a3a:	4638      	mov	r0, r7
 8017a3c:	f7fe faa6 	bl	8015f8c <_printf_i>
 8017a40:	e7eb      	b.n	8017a1a <_svfiprintf_r+0x1c2>
 8017a42:	bf00      	nop
 8017a44:	0801eb34 	.word	0x0801eb34
 8017a48:	0801eb3e 	.word	0x0801eb3e
 8017a4c:	08015a45 	.word	0x08015a45
 8017a50:	080177a1 	.word	0x080177a1
 8017a54:	0801eb3a 	.word	0x0801eb3a

08017a58 <_sbrk_r>:
 8017a58:	b538      	push	{r3, r4, r5, lr}
 8017a5a:	4d06      	ldr	r5, [pc, #24]	; (8017a74 <_sbrk_r+0x1c>)
 8017a5c:	2300      	movs	r3, #0
 8017a5e:	4604      	mov	r4, r0
 8017a60:	4608      	mov	r0, r1
 8017a62:	602b      	str	r3, [r5, #0]
 8017a64:	f7ea fc4a 	bl	80022fc <_sbrk>
 8017a68:	1c43      	adds	r3, r0, #1
 8017a6a:	d102      	bne.n	8017a72 <_sbrk_r+0x1a>
 8017a6c:	682b      	ldr	r3, [r5, #0]
 8017a6e:	b103      	cbz	r3, 8017a72 <_sbrk_r+0x1a>
 8017a70:	6023      	str	r3, [r4, #0]
 8017a72:	bd38      	pop	{r3, r4, r5, pc}
 8017a74:	2002dbb0 	.word	0x2002dbb0

08017a78 <__assert_func>:
 8017a78:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8017a7a:	4614      	mov	r4, r2
 8017a7c:	461a      	mov	r2, r3
 8017a7e:	4b09      	ldr	r3, [pc, #36]	; (8017aa4 <__assert_func+0x2c>)
 8017a80:	681b      	ldr	r3, [r3, #0]
 8017a82:	4605      	mov	r5, r0
 8017a84:	68d8      	ldr	r0, [r3, #12]
 8017a86:	b14c      	cbz	r4, 8017a9c <__assert_func+0x24>
 8017a88:	4b07      	ldr	r3, [pc, #28]	; (8017aa8 <__assert_func+0x30>)
 8017a8a:	9100      	str	r1, [sp, #0]
 8017a8c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8017a90:	4906      	ldr	r1, [pc, #24]	; (8017aac <__assert_func+0x34>)
 8017a92:	462b      	mov	r3, r5
 8017a94:	f000 f80e 	bl	8017ab4 <fiprintf>
 8017a98:	f000 fa8a 	bl	8017fb0 <abort>
 8017a9c:	4b04      	ldr	r3, [pc, #16]	; (8017ab0 <__assert_func+0x38>)
 8017a9e:	461c      	mov	r4, r3
 8017aa0:	e7f3      	b.n	8017a8a <__assert_func+0x12>
 8017aa2:	bf00      	nop
 8017aa4:	20000108 	.word	0x20000108
 8017aa8:	0801eb45 	.word	0x0801eb45
 8017aac:	0801eb52 	.word	0x0801eb52
 8017ab0:	0801eb80 	.word	0x0801eb80

08017ab4 <fiprintf>:
 8017ab4:	b40e      	push	{r1, r2, r3}
 8017ab6:	b503      	push	{r0, r1, lr}
 8017ab8:	4601      	mov	r1, r0
 8017aba:	ab03      	add	r3, sp, #12
 8017abc:	4805      	ldr	r0, [pc, #20]	; (8017ad4 <fiprintf+0x20>)
 8017abe:	f853 2b04 	ldr.w	r2, [r3], #4
 8017ac2:	6800      	ldr	r0, [r0, #0]
 8017ac4:	9301      	str	r3, [sp, #4]
 8017ac6:	f000 f875 	bl	8017bb4 <_vfiprintf_r>
 8017aca:	b002      	add	sp, #8
 8017acc:	f85d eb04 	ldr.w	lr, [sp], #4
 8017ad0:	b003      	add	sp, #12
 8017ad2:	4770      	bx	lr
 8017ad4:	20000108 	.word	0x20000108

08017ad8 <__ascii_mbtowc>:
 8017ad8:	b082      	sub	sp, #8
 8017ada:	b901      	cbnz	r1, 8017ade <__ascii_mbtowc+0x6>
 8017adc:	a901      	add	r1, sp, #4
 8017ade:	b142      	cbz	r2, 8017af2 <__ascii_mbtowc+0x1a>
 8017ae0:	b14b      	cbz	r3, 8017af6 <__ascii_mbtowc+0x1e>
 8017ae2:	7813      	ldrb	r3, [r2, #0]
 8017ae4:	600b      	str	r3, [r1, #0]
 8017ae6:	7812      	ldrb	r2, [r2, #0]
 8017ae8:	1e10      	subs	r0, r2, #0
 8017aea:	bf18      	it	ne
 8017aec:	2001      	movne	r0, #1
 8017aee:	b002      	add	sp, #8
 8017af0:	4770      	bx	lr
 8017af2:	4610      	mov	r0, r2
 8017af4:	e7fb      	b.n	8017aee <__ascii_mbtowc+0x16>
 8017af6:	f06f 0001 	mvn.w	r0, #1
 8017afa:	e7f8      	b.n	8017aee <__ascii_mbtowc+0x16>

08017afc <__malloc_lock>:
 8017afc:	4801      	ldr	r0, [pc, #4]	; (8017b04 <__malloc_lock+0x8>)
 8017afe:	f000 bc17 	b.w	8018330 <__retarget_lock_acquire_recursive>
 8017b02:	bf00      	nop
 8017b04:	2002dbb8 	.word	0x2002dbb8

08017b08 <__malloc_unlock>:
 8017b08:	4801      	ldr	r0, [pc, #4]	; (8017b10 <__malloc_unlock+0x8>)
 8017b0a:	f000 bc12 	b.w	8018332 <__retarget_lock_release_recursive>
 8017b0e:	bf00      	nop
 8017b10:	2002dbb8 	.word	0x2002dbb8

08017b14 <_realloc_r>:
 8017b14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017b16:	4607      	mov	r7, r0
 8017b18:	4614      	mov	r4, r2
 8017b1a:	460e      	mov	r6, r1
 8017b1c:	b921      	cbnz	r1, 8017b28 <_realloc_r+0x14>
 8017b1e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8017b22:	4611      	mov	r1, r2
 8017b24:	f7ff bde2 	b.w	80176ec <_malloc_r>
 8017b28:	b922      	cbnz	r2, 8017b34 <_realloc_r+0x20>
 8017b2a:	f7ff fd8f 	bl	801764c <_free_r>
 8017b2e:	4625      	mov	r5, r4
 8017b30:	4628      	mov	r0, r5
 8017b32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017b34:	f000 fc62 	bl	80183fc <_malloc_usable_size_r>
 8017b38:	42a0      	cmp	r0, r4
 8017b3a:	d20f      	bcs.n	8017b5c <_realloc_r+0x48>
 8017b3c:	4621      	mov	r1, r4
 8017b3e:	4638      	mov	r0, r7
 8017b40:	f7ff fdd4 	bl	80176ec <_malloc_r>
 8017b44:	4605      	mov	r5, r0
 8017b46:	2800      	cmp	r0, #0
 8017b48:	d0f2      	beq.n	8017b30 <_realloc_r+0x1c>
 8017b4a:	4631      	mov	r1, r6
 8017b4c:	4622      	mov	r2, r4
 8017b4e:	f7fd fea9 	bl	80158a4 <memcpy>
 8017b52:	4631      	mov	r1, r6
 8017b54:	4638      	mov	r0, r7
 8017b56:	f7ff fd79 	bl	801764c <_free_r>
 8017b5a:	e7e9      	b.n	8017b30 <_realloc_r+0x1c>
 8017b5c:	4635      	mov	r5, r6
 8017b5e:	e7e7      	b.n	8017b30 <_realloc_r+0x1c>

08017b60 <__sfputc_r>:
 8017b60:	6893      	ldr	r3, [r2, #8]
 8017b62:	3b01      	subs	r3, #1
 8017b64:	2b00      	cmp	r3, #0
 8017b66:	b410      	push	{r4}
 8017b68:	6093      	str	r3, [r2, #8]
 8017b6a:	da08      	bge.n	8017b7e <__sfputc_r+0x1e>
 8017b6c:	6994      	ldr	r4, [r2, #24]
 8017b6e:	42a3      	cmp	r3, r4
 8017b70:	db01      	blt.n	8017b76 <__sfputc_r+0x16>
 8017b72:	290a      	cmp	r1, #10
 8017b74:	d103      	bne.n	8017b7e <__sfputc_r+0x1e>
 8017b76:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017b7a:	f000 b94b 	b.w	8017e14 <__swbuf_r>
 8017b7e:	6813      	ldr	r3, [r2, #0]
 8017b80:	1c58      	adds	r0, r3, #1
 8017b82:	6010      	str	r0, [r2, #0]
 8017b84:	7019      	strb	r1, [r3, #0]
 8017b86:	4608      	mov	r0, r1
 8017b88:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017b8c:	4770      	bx	lr

08017b8e <__sfputs_r>:
 8017b8e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017b90:	4606      	mov	r6, r0
 8017b92:	460f      	mov	r7, r1
 8017b94:	4614      	mov	r4, r2
 8017b96:	18d5      	adds	r5, r2, r3
 8017b98:	42ac      	cmp	r4, r5
 8017b9a:	d101      	bne.n	8017ba0 <__sfputs_r+0x12>
 8017b9c:	2000      	movs	r0, #0
 8017b9e:	e007      	b.n	8017bb0 <__sfputs_r+0x22>
 8017ba0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8017ba4:	463a      	mov	r2, r7
 8017ba6:	4630      	mov	r0, r6
 8017ba8:	f7ff ffda 	bl	8017b60 <__sfputc_r>
 8017bac:	1c43      	adds	r3, r0, #1
 8017bae:	d1f3      	bne.n	8017b98 <__sfputs_r+0xa>
 8017bb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08017bb4 <_vfiprintf_r>:
 8017bb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bb8:	460d      	mov	r5, r1
 8017bba:	b09d      	sub	sp, #116	; 0x74
 8017bbc:	4614      	mov	r4, r2
 8017bbe:	4698      	mov	r8, r3
 8017bc0:	4606      	mov	r6, r0
 8017bc2:	b118      	cbz	r0, 8017bcc <_vfiprintf_r+0x18>
 8017bc4:	6983      	ldr	r3, [r0, #24]
 8017bc6:	b90b      	cbnz	r3, 8017bcc <_vfiprintf_r+0x18>
 8017bc8:	f000 fb14 	bl	80181f4 <__sinit>
 8017bcc:	4b89      	ldr	r3, [pc, #548]	; (8017df4 <_vfiprintf_r+0x240>)
 8017bce:	429d      	cmp	r5, r3
 8017bd0:	d11b      	bne.n	8017c0a <_vfiprintf_r+0x56>
 8017bd2:	6875      	ldr	r5, [r6, #4]
 8017bd4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8017bd6:	07d9      	lsls	r1, r3, #31
 8017bd8:	d405      	bmi.n	8017be6 <_vfiprintf_r+0x32>
 8017bda:	89ab      	ldrh	r3, [r5, #12]
 8017bdc:	059a      	lsls	r2, r3, #22
 8017bde:	d402      	bmi.n	8017be6 <_vfiprintf_r+0x32>
 8017be0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8017be2:	f000 fba5 	bl	8018330 <__retarget_lock_acquire_recursive>
 8017be6:	89ab      	ldrh	r3, [r5, #12]
 8017be8:	071b      	lsls	r3, r3, #28
 8017bea:	d501      	bpl.n	8017bf0 <_vfiprintf_r+0x3c>
 8017bec:	692b      	ldr	r3, [r5, #16]
 8017bee:	b9eb      	cbnz	r3, 8017c2c <_vfiprintf_r+0x78>
 8017bf0:	4629      	mov	r1, r5
 8017bf2:	4630      	mov	r0, r6
 8017bf4:	f000 f96e 	bl	8017ed4 <__swsetup_r>
 8017bf8:	b1c0      	cbz	r0, 8017c2c <_vfiprintf_r+0x78>
 8017bfa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8017bfc:	07dc      	lsls	r4, r3, #31
 8017bfe:	d50e      	bpl.n	8017c1e <_vfiprintf_r+0x6a>
 8017c00:	f04f 30ff 	mov.w	r0, #4294967295
 8017c04:	b01d      	add	sp, #116	; 0x74
 8017c06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c0a:	4b7b      	ldr	r3, [pc, #492]	; (8017df8 <_vfiprintf_r+0x244>)
 8017c0c:	429d      	cmp	r5, r3
 8017c0e:	d101      	bne.n	8017c14 <_vfiprintf_r+0x60>
 8017c10:	68b5      	ldr	r5, [r6, #8]
 8017c12:	e7df      	b.n	8017bd4 <_vfiprintf_r+0x20>
 8017c14:	4b79      	ldr	r3, [pc, #484]	; (8017dfc <_vfiprintf_r+0x248>)
 8017c16:	429d      	cmp	r5, r3
 8017c18:	bf08      	it	eq
 8017c1a:	68f5      	ldreq	r5, [r6, #12]
 8017c1c:	e7da      	b.n	8017bd4 <_vfiprintf_r+0x20>
 8017c1e:	89ab      	ldrh	r3, [r5, #12]
 8017c20:	0598      	lsls	r0, r3, #22
 8017c22:	d4ed      	bmi.n	8017c00 <_vfiprintf_r+0x4c>
 8017c24:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8017c26:	f000 fb84 	bl	8018332 <__retarget_lock_release_recursive>
 8017c2a:	e7e9      	b.n	8017c00 <_vfiprintf_r+0x4c>
 8017c2c:	2300      	movs	r3, #0
 8017c2e:	9309      	str	r3, [sp, #36]	; 0x24
 8017c30:	2320      	movs	r3, #32
 8017c32:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8017c36:	f8cd 800c 	str.w	r8, [sp, #12]
 8017c3a:	2330      	movs	r3, #48	; 0x30
 8017c3c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8017e00 <_vfiprintf_r+0x24c>
 8017c40:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8017c44:	f04f 0901 	mov.w	r9, #1
 8017c48:	4623      	mov	r3, r4
 8017c4a:	469a      	mov	sl, r3
 8017c4c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8017c50:	b10a      	cbz	r2, 8017c56 <_vfiprintf_r+0xa2>
 8017c52:	2a25      	cmp	r2, #37	; 0x25
 8017c54:	d1f9      	bne.n	8017c4a <_vfiprintf_r+0x96>
 8017c56:	ebba 0b04 	subs.w	fp, sl, r4
 8017c5a:	d00b      	beq.n	8017c74 <_vfiprintf_r+0xc0>
 8017c5c:	465b      	mov	r3, fp
 8017c5e:	4622      	mov	r2, r4
 8017c60:	4629      	mov	r1, r5
 8017c62:	4630      	mov	r0, r6
 8017c64:	f7ff ff93 	bl	8017b8e <__sfputs_r>
 8017c68:	3001      	adds	r0, #1
 8017c6a:	f000 80aa 	beq.w	8017dc2 <_vfiprintf_r+0x20e>
 8017c6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017c70:	445a      	add	r2, fp
 8017c72:	9209      	str	r2, [sp, #36]	; 0x24
 8017c74:	f89a 3000 	ldrb.w	r3, [sl]
 8017c78:	2b00      	cmp	r3, #0
 8017c7a:	f000 80a2 	beq.w	8017dc2 <_vfiprintf_r+0x20e>
 8017c7e:	2300      	movs	r3, #0
 8017c80:	f04f 32ff 	mov.w	r2, #4294967295
 8017c84:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8017c88:	f10a 0a01 	add.w	sl, sl, #1
 8017c8c:	9304      	str	r3, [sp, #16]
 8017c8e:	9307      	str	r3, [sp, #28]
 8017c90:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8017c94:	931a      	str	r3, [sp, #104]	; 0x68
 8017c96:	4654      	mov	r4, sl
 8017c98:	2205      	movs	r2, #5
 8017c9a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8017c9e:	4858      	ldr	r0, [pc, #352]	; (8017e00 <_vfiprintf_r+0x24c>)
 8017ca0:	f7e8 fabe 	bl	8000220 <memchr>
 8017ca4:	9a04      	ldr	r2, [sp, #16]
 8017ca6:	b9d8      	cbnz	r0, 8017ce0 <_vfiprintf_r+0x12c>
 8017ca8:	06d1      	lsls	r1, r2, #27
 8017caa:	bf44      	itt	mi
 8017cac:	2320      	movmi	r3, #32
 8017cae:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8017cb2:	0713      	lsls	r3, r2, #28
 8017cb4:	bf44      	itt	mi
 8017cb6:	232b      	movmi	r3, #43	; 0x2b
 8017cb8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8017cbc:	f89a 3000 	ldrb.w	r3, [sl]
 8017cc0:	2b2a      	cmp	r3, #42	; 0x2a
 8017cc2:	d015      	beq.n	8017cf0 <_vfiprintf_r+0x13c>
 8017cc4:	9a07      	ldr	r2, [sp, #28]
 8017cc6:	4654      	mov	r4, sl
 8017cc8:	2000      	movs	r0, #0
 8017cca:	f04f 0c0a 	mov.w	ip, #10
 8017cce:	4621      	mov	r1, r4
 8017cd0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8017cd4:	3b30      	subs	r3, #48	; 0x30
 8017cd6:	2b09      	cmp	r3, #9
 8017cd8:	d94e      	bls.n	8017d78 <_vfiprintf_r+0x1c4>
 8017cda:	b1b0      	cbz	r0, 8017d0a <_vfiprintf_r+0x156>
 8017cdc:	9207      	str	r2, [sp, #28]
 8017cde:	e014      	b.n	8017d0a <_vfiprintf_r+0x156>
 8017ce0:	eba0 0308 	sub.w	r3, r0, r8
 8017ce4:	fa09 f303 	lsl.w	r3, r9, r3
 8017ce8:	4313      	orrs	r3, r2
 8017cea:	9304      	str	r3, [sp, #16]
 8017cec:	46a2      	mov	sl, r4
 8017cee:	e7d2      	b.n	8017c96 <_vfiprintf_r+0xe2>
 8017cf0:	9b03      	ldr	r3, [sp, #12]
 8017cf2:	1d19      	adds	r1, r3, #4
 8017cf4:	681b      	ldr	r3, [r3, #0]
 8017cf6:	9103      	str	r1, [sp, #12]
 8017cf8:	2b00      	cmp	r3, #0
 8017cfa:	bfbb      	ittet	lt
 8017cfc:	425b      	neglt	r3, r3
 8017cfe:	f042 0202 	orrlt.w	r2, r2, #2
 8017d02:	9307      	strge	r3, [sp, #28]
 8017d04:	9307      	strlt	r3, [sp, #28]
 8017d06:	bfb8      	it	lt
 8017d08:	9204      	strlt	r2, [sp, #16]
 8017d0a:	7823      	ldrb	r3, [r4, #0]
 8017d0c:	2b2e      	cmp	r3, #46	; 0x2e
 8017d0e:	d10c      	bne.n	8017d2a <_vfiprintf_r+0x176>
 8017d10:	7863      	ldrb	r3, [r4, #1]
 8017d12:	2b2a      	cmp	r3, #42	; 0x2a
 8017d14:	d135      	bne.n	8017d82 <_vfiprintf_r+0x1ce>
 8017d16:	9b03      	ldr	r3, [sp, #12]
 8017d18:	1d1a      	adds	r2, r3, #4
 8017d1a:	681b      	ldr	r3, [r3, #0]
 8017d1c:	9203      	str	r2, [sp, #12]
 8017d1e:	2b00      	cmp	r3, #0
 8017d20:	bfb8      	it	lt
 8017d22:	f04f 33ff 	movlt.w	r3, #4294967295
 8017d26:	3402      	adds	r4, #2
 8017d28:	9305      	str	r3, [sp, #20]
 8017d2a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8017e10 <_vfiprintf_r+0x25c>
 8017d2e:	7821      	ldrb	r1, [r4, #0]
 8017d30:	2203      	movs	r2, #3
 8017d32:	4650      	mov	r0, sl
 8017d34:	f7e8 fa74 	bl	8000220 <memchr>
 8017d38:	b140      	cbz	r0, 8017d4c <_vfiprintf_r+0x198>
 8017d3a:	2340      	movs	r3, #64	; 0x40
 8017d3c:	eba0 000a 	sub.w	r0, r0, sl
 8017d40:	fa03 f000 	lsl.w	r0, r3, r0
 8017d44:	9b04      	ldr	r3, [sp, #16]
 8017d46:	4303      	orrs	r3, r0
 8017d48:	3401      	adds	r4, #1
 8017d4a:	9304      	str	r3, [sp, #16]
 8017d4c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8017d50:	482c      	ldr	r0, [pc, #176]	; (8017e04 <_vfiprintf_r+0x250>)
 8017d52:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8017d56:	2206      	movs	r2, #6
 8017d58:	f7e8 fa62 	bl	8000220 <memchr>
 8017d5c:	2800      	cmp	r0, #0
 8017d5e:	d03f      	beq.n	8017de0 <_vfiprintf_r+0x22c>
 8017d60:	4b29      	ldr	r3, [pc, #164]	; (8017e08 <_vfiprintf_r+0x254>)
 8017d62:	bb1b      	cbnz	r3, 8017dac <_vfiprintf_r+0x1f8>
 8017d64:	9b03      	ldr	r3, [sp, #12]
 8017d66:	3307      	adds	r3, #7
 8017d68:	f023 0307 	bic.w	r3, r3, #7
 8017d6c:	3308      	adds	r3, #8
 8017d6e:	9303      	str	r3, [sp, #12]
 8017d70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017d72:	443b      	add	r3, r7
 8017d74:	9309      	str	r3, [sp, #36]	; 0x24
 8017d76:	e767      	b.n	8017c48 <_vfiprintf_r+0x94>
 8017d78:	fb0c 3202 	mla	r2, ip, r2, r3
 8017d7c:	460c      	mov	r4, r1
 8017d7e:	2001      	movs	r0, #1
 8017d80:	e7a5      	b.n	8017cce <_vfiprintf_r+0x11a>
 8017d82:	2300      	movs	r3, #0
 8017d84:	3401      	adds	r4, #1
 8017d86:	9305      	str	r3, [sp, #20]
 8017d88:	4619      	mov	r1, r3
 8017d8a:	f04f 0c0a 	mov.w	ip, #10
 8017d8e:	4620      	mov	r0, r4
 8017d90:	f810 2b01 	ldrb.w	r2, [r0], #1
 8017d94:	3a30      	subs	r2, #48	; 0x30
 8017d96:	2a09      	cmp	r2, #9
 8017d98:	d903      	bls.n	8017da2 <_vfiprintf_r+0x1ee>
 8017d9a:	2b00      	cmp	r3, #0
 8017d9c:	d0c5      	beq.n	8017d2a <_vfiprintf_r+0x176>
 8017d9e:	9105      	str	r1, [sp, #20]
 8017da0:	e7c3      	b.n	8017d2a <_vfiprintf_r+0x176>
 8017da2:	fb0c 2101 	mla	r1, ip, r1, r2
 8017da6:	4604      	mov	r4, r0
 8017da8:	2301      	movs	r3, #1
 8017daa:	e7f0      	b.n	8017d8e <_vfiprintf_r+0x1da>
 8017dac:	ab03      	add	r3, sp, #12
 8017dae:	9300      	str	r3, [sp, #0]
 8017db0:	462a      	mov	r2, r5
 8017db2:	4b16      	ldr	r3, [pc, #88]	; (8017e0c <_vfiprintf_r+0x258>)
 8017db4:	a904      	add	r1, sp, #16
 8017db6:	4630      	mov	r0, r6
 8017db8:	f7fd fe44 	bl	8015a44 <_printf_float>
 8017dbc:	4607      	mov	r7, r0
 8017dbe:	1c78      	adds	r0, r7, #1
 8017dc0:	d1d6      	bne.n	8017d70 <_vfiprintf_r+0x1bc>
 8017dc2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8017dc4:	07d9      	lsls	r1, r3, #31
 8017dc6:	d405      	bmi.n	8017dd4 <_vfiprintf_r+0x220>
 8017dc8:	89ab      	ldrh	r3, [r5, #12]
 8017dca:	059a      	lsls	r2, r3, #22
 8017dcc:	d402      	bmi.n	8017dd4 <_vfiprintf_r+0x220>
 8017dce:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8017dd0:	f000 faaf 	bl	8018332 <__retarget_lock_release_recursive>
 8017dd4:	89ab      	ldrh	r3, [r5, #12]
 8017dd6:	065b      	lsls	r3, r3, #25
 8017dd8:	f53f af12 	bmi.w	8017c00 <_vfiprintf_r+0x4c>
 8017ddc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017dde:	e711      	b.n	8017c04 <_vfiprintf_r+0x50>
 8017de0:	ab03      	add	r3, sp, #12
 8017de2:	9300      	str	r3, [sp, #0]
 8017de4:	462a      	mov	r2, r5
 8017de6:	4b09      	ldr	r3, [pc, #36]	; (8017e0c <_vfiprintf_r+0x258>)
 8017de8:	a904      	add	r1, sp, #16
 8017dea:	4630      	mov	r0, r6
 8017dec:	f7fe f8ce 	bl	8015f8c <_printf_i>
 8017df0:	e7e4      	b.n	8017dbc <_vfiprintf_r+0x208>
 8017df2:	bf00      	nop
 8017df4:	0801ecac 	.word	0x0801ecac
 8017df8:	0801eccc 	.word	0x0801eccc
 8017dfc:	0801ec8c 	.word	0x0801ec8c
 8017e00:	0801eb34 	.word	0x0801eb34
 8017e04:	0801eb3e 	.word	0x0801eb3e
 8017e08:	08015a45 	.word	0x08015a45
 8017e0c:	08017b8f 	.word	0x08017b8f
 8017e10:	0801eb3a 	.word	0x0801eb3a

08017e14 <__swbuf_r>:
 8017e14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017e16:	460e      	mov	r6, r1
 8017e18:	4614      	mov	r4, r2
 8017e1a:	4605      	mov	r5, r0
 8017e1c:	b118      	cbz	r0, 8017e26 <__swbuf_r+0x12>
 8017e1e:	6983      	ldr	r3, [r0, #24]
 8017e20:	b90b      	cbnz	r3, 8017e26 <__swbuf_r+0x12>
 8017e22:	f000 f9e7 	bl	80181f4 <__sinit>
 8017e26:	4b21      	ldr	r3, [pc, #132]	; (8017eac <__swbuf_r+0x98>)
 8017e28:	429c      	cmp	r4, r3
 8017e2a:	d12b      	bne.n	8017e84 <__swbuf_r+0x70>
 8017e2c:	686c      	ldr	r4, [r5, #4]
 8017e2e:	69a3      	ldr	r3, [r4, #24]
 8017e30:	60a3      	str	r3, [r4, #8]
 8017e32:	89a3      	ldrh	r3, [r4, #12]
 8017e34:	071a      	lsls	r2, r3, #28
 8017e36:	d52f      	bpl.n	8017e98 <__swbuf_r+0x84>
 8017e38:	6923      	ldr	r3, [r4, #16]
 8017e3a:	b36b      	cbz	r3, 8017e98 <__swbuf_r+0x84>
 8017e3c:	6923      	ldr	r3, [r4, #16]
 8017e3e:	6820      	ldr	r0, [r4, #0]
 8017e40:	1ac0      	subs	r0, r0, r3
 8017e42:	6963      	ldr	r3, [r4, #20]
 8017e44:	b2f6      	uxtb	r6, r6
 8017e46:	4283      	cmp	r3, r0
 8017e48:	4637      	mov	r7, r6
 8017e4a:	dc04      	bgt.n	8017e56 <__swbuf_r+0x42>
 8017e4c:	4621      	mov	r1, r4
 8017e4e:	4628      	mov	r0, r5
 8017e50:	f000 f93c 	bl	80180cc <_fflush_r>
 8017e54:	bb30      	cbnz	r0, 8017ea4 <__swbuf_r+0x90>
 8017e56:	68a3      	ldr	r3, [r4, #8]
 8017e58:	3b01      	subs	r3, #1
 8017e5a:	60a3      	str	r3, [r4, #8]
 8017e5c:	6823      	ldr	r3, [r4, #0]
 8017e5e:	1c5a      	adds	r2, r3, #1
 8017e60:	6022      	str	r2, [r4, #0]
 8017e62:	701e      	strb	r6, [r3, #0]
 8017e64:	6963      	ldr	r3, [r4, #20]
 8017e66:	3001      	adds	r0, #1
 8017e68:	4283      	cmp	r3, r0
 8017e6a:	d004      	beq.n	8017e76 <__swbuf_r+0x62>
 8017e6c:	89a3      	ldrh	r3, [r4, #12]
 8017e6e:	07db      	lsls	r3, r3, #31
 8017e70:	d506      	bpl.n	8017e80 <__swbuf_r+0x6c>
 8017e72:	2e0a      	cmp	r6, #10
 8017e74:	d104      	bne.n	8017e80 <__swbuf_r+0x6c>
 8017e76:	4621      	mov	r1, r4
 8017e78:	4628      	mov	r0, r5
 8017e7a:	f000 f927 	bl	80180cc <_fflush_r>
 8017e7e:	b988      	cbnz	r0, 8017ea4 <__swbuf_r+0x90>
 8017e80:	4638      	mov	r0, r7
 8017e82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017e84:	4b0a      	ldr	r3, [pc, #40]	; (8017eb0 <__swbuf_r+0x9c>)
 8017e86:	429c      	cmp	r4, r3
 8017e88:	d101      	bne.n	8017e8e <__swbuf_r+0x7a>
 8017e8a:	68ac      	ldr	r4, [r5, #8]
 8017e8c:	e7cf      	b.n	8017e2e <__swbuf_r+0x1a>
 8017e8e:	4b09      	ldr	r3, [pc, #36]	; (8017eb4 <__swbuf_r+0xa0>)
 8017e90:	429c      	cmp	r4, r3
 8017e92:	bf08      	it	eq
 8017e94:	68ec      	ldreq	r4, [r5, #12]
 8017e96:	e7ca      	b.n	8017e2e <__swbuf_r+0x1a>
 8017e98:	4621      	mov	r1, r4
 8017e9a:	4628      	mov	r0, r5
 8017e9c:	f000 f81a 	bl	8017ed4 <__swsetup_r>
 8017ea0:	2800      	cmp	r0, #0
 8017ea2:	d0cb      	beq.n	8017e3c <__swbuf_r+0x28>
 8017ea4:	f04f 37ff 	mov.w	r7, #4294967295
 8017ea8:	e7ea      	b.n	8017e80 <__swbuf_r+0x6c>
 8017eaa:	bf00      	nop
 8017eac:	0801ecac 	.word	0x0801ecac
 8017eb0:	0801eccc 	.word	0x0801eccc
 8017eb4:	0801ec8c 	.word	0x0801ec8c

08017eb8 <__ascii_wctomb>:
 8017eb8:	b149      	cbz	r1, 8017ece <__ascii_wctomb+0x16>
 8017eba:	2aff      	cmp	r2, #255	; 0xff
 8017ebc:	bf85      	ittet	hi
 8017ebe:	238a      	movhi	r3, #138	; 0x8a
 8017ec0:	6003      	strhi	r3, [r0, #0]
 8017ec2:	700a      	strbls	r2, [r1, #0]
 8017ec4:	f04f 30ff 	movhi.w	r0, #4294967295
 8017ec8:	bf98      	it	ls
 8017eca:	2001      	movls	r0, #1
 8017ecc:	4770      	bx	lr
 8017ece:	4608      	mov	r0, r1
 8017ed0:	4770      	bx	lr
	...

08017ed4 <__swsetup_r>:
 8017ed4:	4b32      	ldr	r3, [pc, #200]	; (8017fa0 <__swsetup_r+0xcc>)
 8017ed6:	b570      	push	{r4, r5, r6, lr}
 8017ed8:	681d      	ldr	r5, [r3, #0]
 8017eda:	4606      	mov	r6, r0
 8017edc:	460c      	mov	r4, r1
 8017ede:	b125      	cbz	r5, 8017eea <__swsetup_r+0x16>
 8017ee0:	69ab      	ldr	r3, [r5, #24]
 8017ee2:	b913      	cbnz	r3, 8017eea <__swsetup_r+0x16>
 8017ee4:	4628      	mov	r0, r5
 8017ee6:	f000 f985 	bl	80181f4 <__sinit>
 8017eea:	4b2e      	ldr	r3, [pc, #184]	; (8017fa4 <__swsetup_r+0xd0>)
 8017eec:	429c      	cmp	r4, r3
 8017eee:	d10f      	bne.n	8017f10 <__swsetup_r+0x3c>
 8017ef0:	686c      	ldr	r4, [r5, #4]
 8017ef2:	89a3      	ldrh	r3, [r4, #12]
 8017ef4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8017ef8:	0719      	lsls	r1, r3, #28
 8017efa:	d42c      	bmi.n	8017f56 <__swsetup_r+0x82>
 8017efc:	06dd      	lsls	r5, r3, #27
 8017efe:	d411      	bmi.n	8017f24 <__swsetup_r+0x50>
 8017f00:	2309      	movs	r3, #9
 8017f02:	6033      	str	r3, [r6, #0]
 8017f04:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8017f08:	81a3      	strh	r3, [r4, #12]
 8017f0a:	f04f 30ff 	mov.w	r0, #4294967295
 8017f0e:	e03e      	b.n	8017f8e <__swsetup_r+0xba>
 8017f10:	4b25      	ldr	r3, [pc, #148]	; (8017fa8 <__swsetup_r+0xd4>)
 8017f12:	429c      	cmp	r4, r3
 8017f14:	d101      	bne.n	8017f1a <__swsetup_r+0x46>
 8017f16:	68ac      	ldr	r4, [r5, #8]
 8017f18:	e7eb      	b.n	8017ef2 <__swsetup_r+0x1e>
 8017f1a:	4b24      	ldr	r3, [pc, #144]	; (8017fac <__swsetup_r+0xd8>)
 8017f1c:	429c      	cmp	r4, r3
 8017f1e:	bf08      	it	eq
 8017f20:	68ec      	ldreq	r4, [r5, #12]
 8017f22:	e7e6      	b.n	8017ef2 <__swsetup_r+0x1e>
 8017f24:	0758      	lsls	r0, r3, #29
 8017f26:	d512      	bpl.n	8017f4e <__swsetup_r+0x7a>
 8017f28:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8017f2a:	b141      	cbz	r1, 8017f3e <__swsetup_r+0x6a>
 8017f2c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8017f30:	4299      	cmp	r1, r3
 8017f32:	d002      	beq.n	8017f3a <__swsetup_r+0x66>
 8017f34:	4630      	mov	r0, r6
 8017f36:	f7ff fb89 	bl	801764c <_free_r>
 8017f3a:	2300      	movs	r3, #0
 8017f3c:	6363      	str	r3, [r4, #52]	; 0x34
 8017f3e:	89a3      	ldrh	r3, [r4, #12]
 8017f40:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8017f44:	81a3      	strh	r3, [r4, #12]
 8017f46:	2300      	movs	r3, #0
 8017f48:	6063      	str	r3, [r4, #4]
 8017f4a:	6923      	ldr	r3, [r4, #16]
 8017f4c:	6023      	str	r3, [r4, #0]
 8017f4e:	89a3      	ldrh	r3, [r4, #12]
 8017f50:	f043 0308 	orr.w	r3, r3, #8
 8017f54:	81a3      	strh	r3, [r4, #12]
 8017f56:	6923      	ldr	r3, [r4, #16]
 8017f58:	b94b      	cbnz	r3, 8017f6e <__swsetup_r+0x9a>
 8017f5a:	89a3      	ldrh	r3, [r4, #12]
 8017f5c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8017f60:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8017f64:	d003      	beq.n	8017f6e <__swsetup_r+0x9a>
 8017f66:	4621      	mov	r1, r4
 8017f68:	4630      	mov	r0, r6
 8017f6a:	f000 fa07 	bl	801837c <__smakebuf_r>
 8017f6e:	89a0      	ldrh	r0, [r4, #12]
 8017f70:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8017f74:	f010 0301 	ands.w	r3, r0, #1
 8017f78:	d00a      	beq.n	8017f90 <__swsetup_r+0xbc>
 8017f7a:	2300      	movs	r3, #0
 8017f7c:	60a3      	str	r3, [r4, #8]
 8017f7e:	6963      	ldr	r3, [r4, #20]
 8017f80:	425b      	negs	r3, r3
 8017f82:	61a3      	str	r3, [r4, #24]
 8017f84:	6923      	ldr	r3, [r4, #16]
 8017f86:	b943      	cbnz	r3, 8017f9a <__swsetup_r+0xc6>
 8017f88:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8017f8c:	d1ba      	bne.n	8017f04 <__swsetup_r+0x30>
 8017f8e:	bd70      	pop	{r4, r5, r6, pc}
 8017f90:	0781      	lsls	r1, r0, #30
 8017f92:	bf58      	it	pl
 8017f94:	6963      	ldrpl	r3, [r4, #20]
 8017f96:	60a3      	str	r3, [r4, #8]
 8017f98:	e7f4      	b.n	8017f84 <__swsetup_r+0xb0>
 8017f9a:	2000      	movs	r0, #0
 8017f9c:	e7f7      	b.n	8017f8e <__swsetup_r+0xba>
 8017f9e:	bf00      	nop
 8017fa0:	20000108 	.word	0x20000108
 8017fa4:	0801ecac 	.word	0x0801ecac
 8017fa8:	0801eccc 	.word	0x0801eccc
 8017fac:	0801ec8c 	.word	0x0801ec8c

08017fb0 <abort>:
 8017fb0:	b508      	push	{r3, lr}
 8017fb2:	2006      	movs	r0, #6
 8017fb4:	f000 fa52 	bl	801845c <raise>
 8017fb8:	2001      	movs	r0, #1
 8017fba:	f7ea f927 	bl	800220c <_exit>
	...

08017fc0 <__sflush_r>:
 8017fc0:	898a      	ldrh	r2, [r1, #12]
 8017fc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017fc6:	4605      	mov	r5, r0
 8017fc8:	0710      	lsls	r0, r2, #28
 8017fca:	460c      	mov	r4, r1
 8017fcc:	d458      	bmi.n	8018080 <__sflush_r+0xc0>
 8017fce:	684b      	ldr	r3, [r1, #4]
 8017fd0:	2b00      	cmp	r3, #0
 8017fd2:	dc05      	bgt.n	8017fe0 <__sflush_r+0x20>
 8017fd4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8017fd6:	2b00      	cmp	r3, #0
 8017fd8:	dc02      	bgt.n	8017fe0 <__sflush_r+0x20>
 8017fda:	2000      	movs	r0, #0
 8017fdc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017fe0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8017fe2:	2e00      	cmp	r6, #0
 8017fe4:	d0f9      	beq.n	8017fda <__sflush_r+0x1a>
 8017fe6:	2300      	movs	r3, #0
 8017fe8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8017fec:	682f      	ldr	r7, [r5, #0]
 8017fee:	602b      	str	r3, [r5, #0]
 8017ff0:	d032      	beq.n	8018058 <__sflush_r+0x98>
 8017ff2:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8017ff4:	89a3      	ldrh	r3, [r4, #12]
 8017ff6:	075a      	lsls	r2, r3, #29
 8017ff8:	d505      	bpl.n	8018006 <__sflush_r+0x46>
 8017ffa:	6863      	ldr	r3, [r4, #4]
 8017ffc:	1ac0      	subs	r0, r0, r3
 8017ffe:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8018000:	b10b      	cbz	r3, 8018006 <__sflush_r+0x46>
 8018002:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8018004:	1ac0      	subs	r0, r0, r3
 8018006:	2300      	movs	r3, #0
 8018008:	4602      	mov	r2, r0
 801800a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801800c:	6a21      	ldr	r1, [r4, #32]
 801800e:	4628      	mov	r0, r5
 8018010:	47b0      	blx	r6
 8018012:	1c43      	adds	r3, r0, #1
 8018014:	89a3      	ldrh	r3, [r4, #12]
 8018016:	d106      	bne.n	8018026 <__sflush_r+0x66>
 8018018:	6829      	ldr	r1, [r5, #0]
 801801a:	291d      	cmp	r1, #29
 801801c:	d82c      	bhi.n	8018078 <__sflush_r+0xb8>
 801801e:	4a2a      	ldr	r2, [pc, #168]	; (80180c8 <__sflush_r+0x108>)
 8018020:	40ca      	lsrs	r2, r1
 8018022:	07d6      	lsls	r6, r2, #31
 8018024:	d528      	bpl.n	8018078 <__sflush_r+0xb8>
 8018026:	2200      	movs	r2, #0
 8018028:	6062      	str	r2, [r4, #4]
 801802a:	04d9      	lsls	r1, r3, #19
 801802c:	6922      	ldr	r2, [r4, #16]
 801802e:	6022      	str	r2, [r4, #0]
 8018030:	d504      	bpl.n	801803c <__sflush_r+0x7c>
 8018032:	1c42      	adds	r2, r0, #1
 8018034:	d101      	bne.n	801803a <__sflush_r+0x7a>
 8018036:	682b      	ldr	r3, [r5, #0]
 8018038:	b903      	cbnz	r3, 801803c <__sflush_r+0x7c>
 801803a:	6560      	str	r0, [r4, #84]	; 0x54
 801803c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801803e:	602f      	str	r7, [r5, #0]
 8018040:	2900      	cmp	r1, #0
 8018042:	d0ca      	beq.n	8017fda <__sflush_r+0x1a>
 8018044:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8018048:	4299      	cmp	r1, r3
 801804a:	d002      	beq.n	8018052 <__sflush_r+0x92>
 801804c:	4628      	mov	r0, r5
 801804e:	f7ff fafd 	bl	801764c <_free_r>
 8018052:	2000      	movs	r0, #0
 8018054:	6360      	str	r0, [r4, #52]	; 0x34
 8018056:	e7c1      	b.n	8017fdc <__sflush_r+0x1c>
 8018058:	6a21      	ldr	r1, [r4, #32]
 801805a:	2301      	movs	r3, #1
 801805c:	4628      	mov	r0, r5
 801805e:	47b0      	blx	r6
 8018060:	1c41      	adds	r1, r0, #1
 8018062:	d1c7      	bne.n	8017ff4 <__sflush_r+0x34>
 8018064:	682b      	ldr	r3, [r5, #0]
 8018066:	2b00      	cmp	r3, #0
 8018068:	d0c4      	beq.n	8017ff4 <__sflush_r+0x34>
 801806a:	2b1d      	cmp	r3, #29
 801806c:	d001      	beq.n	8018072 <__sflush_r+0xb2>
 801806e:	2b16      	cmp	r3, #22
 8018070:	d101      	bne.n	8018076 <__sflush_r+0xb6>
 8018072:	602f      	str	r7, [r5, #0]
 8018074:	e7b1      	b.n	8017fda <__sflush_r+0x1a>
 8018076:	89a3      	ldrh	r3, [r4, #12]
 8018078:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801807c:	81a3      	strh	r3, [r4, #12]
 801807e:	e7ad      	b.n	8017fdc <__sflush_r+0x1c>
 8018080:	690f      	ldr	r7, [r1, #16]
 8018082:	2f00      	cmp	r7, #0
 8018084:	d0a9      	beq.n	8017fda <__sflush_r+0x1a>
 8018086:	0793      	lsls	r3, r2, #30
 8018088:	680e      	ldr	r6, [r1, #0]
 801808a:	bf08      	it	eq
 801808c:	694b      	ldreq	r3, [r1, #20]
 801808e:	600f      	str	r7, [r1, #0]
 8018090:	bf18      	it	ne
 8018092:	2300      	movne	r3, #0
 8018094:	eba6 0807 	sub.w	r8, r6, r7
 8018098:	608b      	str	r3, [r1, #8]
 801809a:	f1b8 0f00 	cmp.w	r8, #0
 801809e:	dd9c      	ble.n	8017fda <__sflush_r+0x1a>
 80180a0:	6a21      	ldr	r1, [r4, #32]
 80180a2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80180a4:	4643      	mov	r3, r8
 80180a6:	463a      	mov	r2, r7
 80180a8:	4628      	mov	r0, r5
 80180aa:	47b0      	blx	r6
 80180ac:	2800      	cmp	r0, #0
 80180ae:	dc06      	bgt.n	80180be <__sflush_r+0xfe>
 80180b0:	89a3      	ldrh	r3, [r4, #12]
 80180b2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80180b6:	81a3      	strh	r3, [r4, #12]
 80180b8:	f04f 30ff 	mov.w	r0, #4294967295
 80180bc:	e78e      	b.n	8017fdc <__sflush_r+0x1c>
 80180be:	4407      	add	r7, r0
 80180c0:	eba8 0800 	sub.w	r8, r8, r0
 80180c4:	e7e9      	b.n	801809a <__sflush_r+0xda>
 80180c6:	bf00      	nop
 80180c8:	20400001 	.word	0x20400001

080180cc <_fflush_r>:
 80180cc:	b538      	push	{r3, r4, r5, lr}
 80180ce:	690b      	ldr	r3, [r1, #16]
 80180d0:	4605      	mov	r5, r0
 80180d2:	460c      	mov	r4, r1
 80180d4:	b913      	cbnz	r3, 80180dc <_fflush_r+0x10>
 80180d6:	2500      	movs	r5, #0
 80180d8:	4628      	mov	r0, r5
 80180da:	bd38      	pop	{r3, r4, r5, pc}
 80180dc:	b118      	cbz	r0, 80180e6 <_fflush_r+0x1a>
 80180de:	6983      	ldr	r3, [r0, #24]
 80180e0:	b90b      	cbnz	r3, 80180e6 <_fflush_r+0x1a>
 80180e2:	f000 f887 	bl	80181f4 <__sinit>
 80180e6:	4b14      	ldr	r3, [pc, #80]	; (8018138 <_fflush_r+0x6c>)
 80180e8:	429c      	cmp	r4, r3
 80180ea:	d11b      	bne.n	8018124 <_fflush_r+0x58>
 80180ec:	686c      	ldr	r4, [r5, #4]
 80180ee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80180f2:	2b00      	cmp	r3, #0
 80180f4:	d0ef      	beq.n	80180d6 <_fflush_r+0xa>
 80180f6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80180f8:	07d0      	lsls	r0, r2, #31
 80180fa:	d404      	bmi.n	8018106 <_fflush_r+0x3a>
 80180fc:	0599      	lsls	r1, r3, #22
 80180fe:	d402      	bmi.n	8018106 <_fflush_r+0x3a>
 8018100:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8018102:	f000 f915 	bl	8018330 <__retarget_lock_acquire_recursive>
 8018106:	4628      	mov	r0, r5
 8018108:	4621      	mov	r1, r4
 801810a:	f7ff ff59 	bl	8017fc0 <__sflush_r>
 801810e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8018110:	07da      	lsls	r2, r3, #31
 8018112:	4605      	mov	r5, r0
 8018114:	d4e0      	bmi.n	80180d8 <_fflush_r+0xc>
 8018116:	89a3      	ldrh	r3, [r4, #12]
 8018118:	059b      	lsls	r3, r3, #22
 801811a:	d4dd      	bmi.n	80180d8 <_fflush_r+0xc>
 801811c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801811e:	f000 f908 	bl	8018332 <__retarget_lock_release_recursive>
 8018122:	e7d9      	b.n	80180d8 <_fflush_r+0xc>
 8018124:	4b05      	ldr	r3, [pc, #20]	; (801813c <_fflush_r+0x70>)
 8018126:	429c      	cmp	r4, r3
 8018128:	d101      	bne.n	801812e <_fflush_r+0x62>
 801812a:	68ac      	ldr	r4, [r5, #8]
 801812c:	e7df      	b.n	80180ee <_fflush_r+0x22>
 801812e:	4b04      	ldr	r3, [pc, #16]	; (8018140 <_fflush_r+0x74>)
 8018130:	429c      	cmp	r4, r3
 8018132:	bf08      	it	eq
 8018134:	68ec      	ldreq	r4, [r5, #12]
 8018136:	e7da      	b.n	80180ee <_fflush_r+0x22>
 8018138:	0801ecac 	.word	0x0801ecac
 801813c:	0801eccc 	.word	0x0801eccc
 8018140:	0801ec8c 	.word	0x0801ec8c

08018144 <std>:
 8018144:	2300      	movs	r3, #0
 8018146:	b510      	push	{r4, lr}
 8018148:	4604      	mov	r4, r0
 801814a:	e9c0 3300 	strd	r3, r3, [r0]
 801814e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8018152:	6083      	str	r3, [r0, #8]
 8018154:	8181      	strh	r1, [r0, #12]
 8018156:	6643      	str	r3, [r0, #100]	; 0x64
 8018158:	81c2      	strh	r2, [r0, #14]
 801815a:	6183      	str	r3, [r0, #24]
 801815c:	4619      	mov	r1, r3
 801815e:	2208      	movs	r2, #8
 8018160:	305c      	adds	r0, #92	; 0x5c
 8018162:	f7fd fbc7 	bl	80158f4 <memset>
 8018166:	4b05      	ldr	r3, [pc, #20]	; (801817c <std+0x38>)
 8018168:	6263      	str	r3, [r4, #36]	; 0x24
 801816a:	4b05      	ldr	r3, [pc, #20]	; (8018180 <std+0x3c>)
 801816c:	62a3      	str	r3, [r4, #40]	; 0x28
 801816e:	4b05      	ldr	r3, [pc, #20]	; (8018184 <std+0x40>)
 8018170:	62e3      	str	r3, [r4, #44]	; 0x2c
 8018172:	4b05      	ldr	r3, [pc, #20]	; (8018188 <std+0x44>)
 8018174:	6224      	str	r4, [r4, #32]
 8018176:	6323      	str	r3, [r4, #48]	; 0x30
 8018178:	bd10      	pop	{r4, pc}
 801817a:	bf00      	nop
 801817c:	08018495 	.word	0x08018495
 8018180:	080184b7 	.word	0x080184b7
 8018184:	080184ef 	.word	0x080184ef
 8018188:	08018513 	.word	0x08018513

0801818c <_cleanup_r>:
 801818c:	4901      	ldr	r1, [pc, #4]	; (8018194 <_cleanup_r+0x8>)
 801818e:	f000 b8af 	b.w	80182f0 <_fwalk_reent>
 8018192:	bf00      	nop
 8018194:	080180cd 	.word	0x080180cd

08018198 <__sfmoreglue>:
 8018198:	b570      	push	{r4, r5, r6, lr}
 801819a:	1e4a      	subs	r2, r1, #1
 801819c:	2568      	movs	r5, #104	; 0x68
 801819e:	4355      	muls	r5, r2
 80181a0:	460e      	mov	r6, r1
 80181a2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80181a6:	f7ff faa1 	bl	80176ec <_malloc_r>
 80181aa:	4604      	mov	r4, r0
 80181ac:	b140      	cbz	r0, 80181c0 <__sfmoreglue+0x28>
 80181ae:	2100      	movs	r1, #0
 80181b0:	e9c0 1600 	strd	r1, r6, [r0]
 80181b4:	300c      	adds	r0, #12
 80181b6:	60a0      	str	r0, [r4, #8]
 80181b8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80181bc:	f7fd fb9a 	bl	80158f4 <memset>
 80181c0:	4620      	mov	r0, r4
 80181c2:	bd70      	pop	{r4, r5, r6, pc}

080181c4 <__sfp_lock_acquire>:
 80181c4:	4801      	ldr	r0, [pc, #4]	; (80181cc <__sfp_lock_acquire+0x8>)
 80181c6:	f000 b8b3 	b.w	8018330 <__retarget_lock_acquire_recursive>
 80181ca:	bf00      	nop
 80181cc:	2002dbbc 	.word	0x2002dbbc

080181d0 <__sfp_lock_release>:
 80181d0:	4801      	ldr	r0, [pc, #4]	; (80181d8 <__sfp_lock_release+0x8>)
 80181d2:	f000 b8ae 	b.w	8018332 <__retarget_lock_release_recursive>
 80181d6:	bf00      	nop
 80181d8:	2002dbbc 	.word	0x2002dbbc

080181dc <__sinit_lock_acquire>:
 80181dc:	4801      	ldr	r0, [pc, #4]	; (80181e4 <__sinit_lock_acquire+0x8>)
 80181de:	f000 b8a7 	b.w	8018330 <__retarget_lock_acquire_recursive>
 80181e2:	bf00      	nop
 80181e4:	2002dbb7 	.word	0x2002dbb7

080181e8 <__sinit_lock_release>:
 80181e8:	4801      	ldr	r0, [pc, #4]	; (80181f0 <__sinit_lock_release+0x8>)
 80181ea:	f000 b8a2 	b.w	8018332 <__retarget_lock_release_recursive>
 80181ee:	bf00      	nop
 80181f0:	2002dbb7 	.word	0x2002dbb7

080181f4 <__sinit>:
 80181f4:	b510      	push	{r4, lr}
 80181f6:	4604      	mov	r4, r0
 80181f8:	f7ff fff0 	bl	80181dc <__sinit_lock_acquire>
 80181fc:	69a3      	ldr	r3, [r4, #24]
 80181fe:	b11b      	cbz	r3, 8018208 <__sinit+0x14>
 8018200:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018204:	f7ff bff0 	b.w	80181e8 <__sinit_lock_release>
 8018208:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801820c:	6523      	str	r3, [r4, #80]	; 0x50
 801820e:	4b13      	ldr	r3, [pc, #76]	; (801825c <__sinit+0x68>)
 8018210:	4a13      	ldr	r2, [pc, #76]	; (8018260 <__sinit+0x6c>)
 8018212:	681b      	ldr	r3, [r3, #0]
 8018214:	62a2      	str	r2, [r4, #40]	; 0x28
 8018216:	42a3      	cmp	r3, r4
 8018218:	bf04      	itt	eq
 801821a:	2301      	moveq	r3, #1
 801821c:	61a3      	streq	r3, [r4, #24]
 801821e:	4620      	mov	r0, r4
 8018220:	f000 f820 	bl	8018264 <__sfp>
 8018224:	6060      	str	r0, [r4, #4]
 8018226:	4620      	mov	r0, r4
 8018228:	f000 f81c 	bl	8018264 <__sfp>
 801822c:	60a0      	str	r0, [r4, #8]
 801822e:	4620      	mov	r0, r4
 8018230:	f000 f818 	bl	8018264 <__sfp>
 8018234:	2200      	movs	r2, #0
 8018236:	60e0      	str	r0, [r4, #12]
 8018238:	2104      	movs	r1, #4
 801823a:	6860      	ldr	r0, [r4, #4]
 801823c:	f7ff ff82 	bl	8018144 <std>
 8018240:	68a0      	ldr	r0, [r4, #8]
 8018242:	2201      	movs	r2, #1
 8018244:	2109      	movs	r1, #9
 8018246:	f7ff ff7d 	bl	8018144 <std>
 801824a:	68e0      	ldr	r0, [r4, #12]
 801824c:	2202      	movs	r2, #2
 801824e:	2112      	movs	r1, #18
 8018250:	f7ff ff78 	bl	8018144 <std>
 8018254:	2301      	movs	r3, #1
 8018256:	61a3      	str	r3, [r4, #24]
 8018258:	e7d2      	b.n	8018200 <__sinit+0xc>
 801825a:	bf00      	nop
 801825c:	0801e90c 	.word	0x0801e90c
 8018260:	0801818d 	.word	0x0801818d

08018264 <__sfp>:
 8018264:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018266:	4607      	mov	r7, r0
 8018268:	f7ff ffac 	bl	80181c4 <__sfp_lock_acquire>
 801826c:	4b1e      	ldr	r3, [pc, #120]	; (80182e8 <__sfp+0x84>)
 801826e:	681e      	ldr	r6, [r3, #0]
 8018270:	69b3      	ldr	r3, [r6, #24]
 8018272:	b913      	cbnz	r3, 801827a <__sfp+0x16>
 8018274:	4630      	mov	r0, r6
 8018276:	f7ff ffbd 	bl	80181f4 <__sinit>
 801827a:	3648      	adds	r6, #72	; 0x48
 801827c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8018280:	3b01      	subs	r3, #1
 8018282:	d503      	bpl.n	801828c <__sfp+0x28>
 8018284:	6833      	ldr	r3, [r6, #0]
 8018286:	b30b      	cbz	r3, 80182cc <__sfp+0x68>
 8018288:	6836      	ldr	r6, [r6, #0]
 801828a:	e7f7      	b.n	801827c <__sfp+0x18>
 801828c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8018290:	b9d5      	cbnz	r5, 80182c8 <__sfp+0x64>
 8018292:	4b16      	ldr	r3, [pc, #88]	; (80182ec <__sfp+0x88>)
 8018294:	60e3      	str	r3, [r4, #12]
 8018296:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801829a:	6665      	str	r5, [r4, #100]	; 0x64
 801829c:	f000 f847 	bl	801832e <__retarget_lock_init_recursive>
 80182a0:	f7ff ff96 	bl	80181d0 <__sfp_lock_release>
 80182a4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80182a8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80182ac:	6025      	str	r5, [r4, #0]
 80182ae:	61a5      	str	r5, [r4, #24]
 80182b0:	2208      	movs	r2, #8
 80182b2:	4629      	mov	r1, r5
 80182b4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80182b8:	f7fd fb1c 	bl	80158f4 <memset>
 80182bc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80182c0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80182c4:	4620      	mov	r0, r4
 80182c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80182c8:	3468      	adds	r4, #104	; 0x68
 80182ca:	e7d9      	b.n	8018280 <__sfp+0x1c>
 80182cc:	2104      	movs	r1, #4
 80182ce:	4638      	mov	r0, r7
 80182d0:	f7ff ff62 	bl	8018198 <__sfmoreglue>
 80182d4:	4604      	mov	r4, r0
 80182d6:	6030      	str	r0, [r6, #0]
 80182d8:	2800      	cmp	r0, #0
 80182da:	d1d5      	bne.n	8018288 <__sfp+0x24>
 80182dc:	f7ff ff78 	bl	80181d0 <__sfp_lock_release>
 80182e0:	230c      	movs	r3, #12
 80182e2:	603b      	str	r3, [r7, #0]
 80182e4:	e7ee      	b.n	80182c4 <__sfp+0x60>
 80182e6:	bf00      	nop
 80182e8:	0801e90c 	.word	0x0801e90c
 80182ec:	ffff0001 	.word	0xffff0001

080182f0 <_fwalk_reent>:
 80182f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80182f4:	4606      	mov	r6, r0
 80182f6:	4688      	mov	r8, r1
 80182f8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80182fc:	2700      	movs	r7, #0
 80182fe:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8018302:	f1b9 0901 	subs.w	r9, r9, #1
 8018306:	d505      	bpl.n	8018314 <_fwalk_reent+0x24>
 8018308:	6824      	ldr	r4, [r4, #0]
 801830a:	2c00      	cmp	r4, #0
 801830c:	d1f7      	bne.n	80182fe <_fwalk_reent+0xe>
 801830e:	4638      	mov	r0, r7
 8018310:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018314:	89ab      	ldrh	r3, [r5, #12]
 8018316:	2b01      	cmp	r3, #1
 8018318:	d907      	bls.n	801832a <_fwalk_reent+0x3a>
 801831a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801831e:	3301      	adds	r3, #1
 8018320:	d003      	beq.n	801832a <_fwalk_reent+0x3a>
 8018322:	4629      	mov	r1, r5
 8018324:	4630      	mov	r0, r6
 8018326:	47c0      	blx	r8
 8018328:	4307      	orrs	r7, r0
 801832a:	3568      	adds	r5, #104	; 0x68
 801832c:	e7e9      	b.n	8018302 <_fwalk_reent+0x12>

0801832e <__retarget_lock_init_recursive>:
 801832e:	4770      	bx	lr

08018330 <__retarget_lock_acquire_recursive>:
 8018330:	4770      	bx	lr

08018332 <__retarget_lock_release_recursive>:
 8018332:	4770      	bx	lr

08018334 <__swhatbuf_r>:
 8018334:	b570      	push	{r4, r5, r6, lr}
 8018336:	460e      	mov	r6, r1
 8018338:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801833c:	2900      	cmp	r1, #0
 801833e:	b096      	sub	sp, #88	; 0x58
 8018340:	4614      	mov	r4, r2
 8018342:	461d      	mov	r5, r3
 8018344:	da07      	bge.n	8018356 <__swhatbuf_r+0x22>
 8018346:	2300      	movs	r3, #0
 8018348:	602b      	str	r3, [r5, #0]
 801834a:	89b3      	ldrh	r3, [r6, #12]
 801834c:	061a      	lsls	r2, r3, #24
 801834e:	d410      	bmi.n	8018372 <__swhatbuf_r+0x3e>
 8018350:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8018354:	e00e      	b.n	8018374 <__swhatbuf_r+0x40>
 8018356:	466a      	mov	r2, sp
 8018358:	f000 f902 	bl	8018560 <_fstat_r>
 801835c:	2800      	cmp	r0, #0
 801835e:	dbf2      	blt.n	8018346 <__swhatbuf_r+0x12>
 8018360:	9a01      	ldr	r2, [sp, #4]
 8018362:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8018366:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801836a:	425a      	negs	r2, r3
 801836c:	415a      	adcs	r2, r3
 801836e:	602a      	str	r2, [r5, #0]
 8018370:	e7ee      	b.n	8018350 <__swhatbuf_r+0x1c>
 8018372:	2340      	movs	r3, #64	; 0x40
 8018374:	2000      	movs	r0, #0
 8018376:	6023      	str	r3, [r4, #0]
 8018378:	b016      	add	sp, #88	; 0x58
 801837a:	bd70      	pop	{r4, r5, r6, pc}

0801837c <__smakebuf_r>:
 801837c:	898b      	ldrh	r3, [r1, #12]
 801837e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8018380:	079d      	lsls	r5, r3, #30
 8018382:	4606      	mov	r6, r0
 8018384:	460c      	mov	r4, r1
 8018386:	d507      	bpl.n	8018398 <__smakebuf_r+0x1c>
 8018388:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801838c:	6023      	str	r3, [r4, #0]
 801838e:	6123      	str	r3, [r4, #16]
 8018390:	2301      	movs	r3, #1
 8018392:	6163      	str	r3, [r4, #20]
 8018394:	b002      	add	sp, #8
 8018396:	bd70      	pop	{r4, r5, r6, pc}
 8018398:	ab01      	add	r3, sp, #4
 801839a:	466a      	mov	r2, sp
 801839c:	f7ff ffca 	bl	8018334 <__swhatbuf_r>
 80183a0:	9900      	ldr	r1, [sp, #0]
 80183a2:	4605      	mov	r5, r0
 80183a4:	4630      	mov	r0, r6
 80183a6:	f7ff f9a1 	bl	80176ec <_malloc_r>
 80183aa:	b948      	cbnz	r0, 80183c0 <__smakebuf_r+0x44>
 80183ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80183b0:	059a      	lsls	r2, r3, #22
 80183b2:	d4ef      	bmi.n	8018394 <__smakebuf_r+0x18>
 80183b4:	f023 0303 	bic.w	r3, r3, #3
 80183b8:	f043 0302 	orr.w	r3, r3, #2
 80183bc:	81a3      	strh	r3, [r4, #12]
 80183be:	e7e3      	b.n	8018388 <__smakebuf_r+0xc>
 80183c0:	4b0d      	ldr	r3, [pc, #52]	; (80183f8 <__smakebuf_r+0x7c>)
 80183c2:	62b3      	str	r3, [r6, #40]	; 0x28
 80183c4:	89a3      	ldrh	r3, [r4, #12]
 80183c6:	6020      	str	r0, [r4, #0]
 80183c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80183cc:	81a3      	strh	r3, [r4, #12]
 80183ce:	9b00      	ldr	r3, [sp, #0]
 80183d0:	6163      	str	r3, [r4, #20]
 80183d2:	9b01      	ldr	r3, [sp, #4]
 80183d4:	6120      	str	r0, [r4, #16]
 80183d6:	b15b      	cbz	r3, 80183f0 <__smakebuf_r+0x74>
 80183d8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80183dc:	4630      	mov	r0, r6
 80183de:	f000 f8d1 	bl	8018584 <_isatty_r>
 80183e2:	b128      	cbz	r0, 80183f0 <__smakebuf_r+0x74>
 80183e4:	89a3      	ldrh	r3, [r4, #12]
 80183e6:	f023 0303 	bic.w	r3, r3, #3
 80183ea:	f043 0301 	orr.w	r3, r3, #1
 80183ee:	81a3      	strh	r3, [r4, #12]
 80183f0:	89a0      	ldrh	r0, [r4, #12]
 80183f2:	4305      	orrs	r5, r0
 80183f4:	81a5      	strh	r5, [r4, #12]
 80183f6:	e7cd      	b.n	8018394 <__smakebuf_r+0x18>
 80183f8:	0801818d 	.word	0x0801818d

080183fc <_malloc_usable_size_r>:
 80183fc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8018400:	1f18      	subs	r0, r3, #4
 8018402:	2b00      	cmp	r3, #0
 8018404:	bfbc      	itt	lt
 8018406:	580b      	ldrlt	r3, [r1, r0]
 8018408:	18c0      	addlt	r0, r0, r3
 801840a:	4770      	bx	lr

0801840c <_raise_r>:
 801840c:	291f      	cmp	r1, #31
 801840e:	b538      	push	{r3, r4, r5, lr}
 8018410:	4604      	mov	r4, r0
 8018412:	460d      	mov	r5, r1
 8018414:	d904      	bls.n	8018420 <_raise_r+0x14>
 8018416:	2316      	movs	r3, #22
 8018418:	6003      	str	r3, [r0, #0]
 801841a:	f04f 30ff 	mov.w	r0, #4294967295
 801841e:	bd38      	pop	{r3, r4, r5, pc}
 8018420:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8018422:	b112      	cbz	r2, 801842a <_raise_r+0x1e>
 8018424:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8018428:	b94b      	cbnz	r3, 801843e <_raise_r+0x32>
 801842a:	4620      	mov	r0, r4
 801842c:	f000 f830 	bl	8018490 <_getpid_r>
 8018430:	462a      	mov	r2, r5
 8018432:	4601      	mov	r1, r0
 8018434:	4620      	mov	r0, r4
 8018436:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801843a:	f000 b817 	b.w	801846c <_kill_r>
 801843e:	2b01      	cmp	r3, #1
 8018440:	d00a      	beq.n	8018458 <_raise_r+0x4c>
 8018442:	1c59      	adds	r1, r3, #1
 8018444:	d103      	bne.n	801844e <_raise_r+0x42>
 8018446:	2316      	movs	r3, #22
 8018448:	6003      	str	r3, [r0, #0]
 801844a:	2001      	movs	r0, #1
 801844c:	e7e7      	b.n	801841e <_raise_r+0x12>
 801844e:	2400      	movs	r4, #0
 8018450:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8018454:	4628      	mov	r0, r5
 8018456:	4798      	blx	r3
 8018458:	2000      	movs	r0, #0
 801845a:	e7e0      	b.n	801841e <_raise_r+0x12>

0801845c <raise>:
 801845c:	4b02      	ldr	r3, [pc, #8]	; (8018468 <raise+0xc>)
 801845e:	4601      	mov	r1, r0
 8018460:	6818      	ldr	r0, [r3, #0]
 8018462:	f7ff bfd3 	b.w	801840c <_raise_r>
 8018466:	bf00      	nop
 8018468:	20000108 	.word	0x20000108

0801846c <_kill_r>:
 801846c:	b538      	push	{r3, r4, r5, lr}
 801846e:	4d07      	ldr	r5, [pc, #28]	; (801848c <_kill_r+0x20>)
 8018470:	2300      	movs	r3, #0
 8018472:	4604      	mov	r4, r0
 8018474:	4608      	mov	r0, r1
 8018476:	4611      	mov	r1, r2
 8018478:	602b      	str	r3, [r5, #0]
 801847a:	f7e9 feb7 	bl	80021ec <_kill>
 801847e:	1c43      	adds	r3, r0, #1
 8018480:	d102      	bne.n	8018488 <_kill_r+0x1c>
 8018482:	682b      	ldr	r3, [r5, #0]
 8018484:	b103      	cbz	r3, 8018488 <_kill_r+0x1c>
 8018486:	6023      	str	r3, [r4, #0]
 8018488:	bd38      	pop	{r3, r4, r5, pc}
 801848a:	bf00      	nop
 801848c:	2002dbb0 	.word	0x2002dbb0

08018490 <_getpid_r>:
 8018490:	f7e9 bea4 	b.w	80021dc <_getpid>

08018494 <__sread>:
 8018494:	b510      	push	{r4, lr}
 8018496:	460c      	mov	r4, r1
 8018498:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801849c:	f000 f894 	bl	80185c8 <_read_r>
 80184a0:	2800      	cmp	r0, #0
 80184a2:	bfab      	itete	ge
 80184a4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80184a6:	89a3      	ldrhlt	r3, [r4, #12]
 80184a8:	181b      	addge	r3, r3, r0
 80184aa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80184ae:	bfac      	ite	ge
 80184b0:	6563      	strge	r3, [r4, #84]	; 0x54
 80184b2:	81a3      	strhlt	r3, [r4, #12]
 80184b4:	bd10      	pop	{r4, pc}

080184b6 <__swrite>:
 80184b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80184ba:	461f      	mov	r7, r3
 80184bc:	898b      	ldrh	r3, [r1, #12]
 80184be:	05db      	lsls	r3, r3, #23
 80184c0:	4605      	mov	r5, r0
 80184c2:	460c      	mov	r4, r1
 80184c4:	4616      	mov	r6, r2
 80184c6:	d505      	bpl.n	80184d4 <__swrite+0x1e>
 80184c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80184cc:	2302      	movs	r3, #2
 80184ce:	2200      	movs	r2, #0
 80184d0:	f000 f868 	bl	80185a4 <_lseek_r>
 80184d4:	89a3      	ldrh	r3, [r4, #12]
 80184d6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80184da:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80184de:	81a3      	strh	r3, [r4, #12]
 80184e0:	4632      	mov	r2, r6
 80184e2:	463b      	mov	r3, r7
 80184e4:	4628      	mov	r0, r5
 80184e6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80184ea:	f000 b817 	b.w	801851c <_write_r>

080184ee <__sseek>:
 80184ee:	b510      	push	{r4, lr}
 80184f0:	460c      	mov	r4, r1
 80184f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80184f6:	f000 f855 	bl	80185a4 <_lseek_r>
 80184fa:	1c43      	adds	r3, r0, #1
 80184fc:	89a3      	ldrh	r3, [r4, #12]
 80184fe:	bf15      	itete	ne
 8018500:	6560      	strne	r0, [r4, #84]	; 0x54
 8018502:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8018506:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801850a:	81a3      	strheq	r3, [r4, #12]
 801850c:	bf18      	it	ne
 801850e:	81a3      	strhne	r3, [r4, #12]
 8018510:	bd10      	pop	{r4, pc}

08018512 <__sclose>:
 8018512:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8018516:	f000 b813 	b.w	8018540 <_close_r>
	...

0801851c <_write_r>:
 801851c:	b538      	push	{r3, r4, r5, lr}
 801851e:	4d07      	ldr	r5, [pc, #28]	; (801853c <_write_r+0x20>)
 8018520:	4604      	mov	r4, r0
 8018522:	4608      	mov	r0, r1
 8018524:	4611      	mov	r1, r2
 8018526:	2200      	movs	r2, #0
 8018528:	602a      	str	r2, [r5, #0]
 801852a:	461a      	mov	r2, r3
 801852c:	f7e9 fe95 	bl	800225a <_write>
 8018530:	1c43      	adds	r3, r0, #1
 8018532:	d102      	bne.n	801853a <_write_r+0x1e>
 8018534:	682b      	ldr	r3, [r5, #0]
 8018536:	b103      	cbz	r3, 801853a <_write_r+0x1e>
 8018538:	6023      	str	r3, [r4, #0]
 801853a:	bd38      	pop	{r3, r4, r5, pc}
 801853c:	2002dbb0 	.word	0x2002dbb0

08018540 <_close_r>:
 8018540:	b538      	push	{r3, r4, r5, lr}
 8018542:	4d06      	ldr	r5, [pc, #24]	; (801855c <_close_r+0x1c>)
 8018544:	2300      	movs	r3, #0
 8018546:	4604      	mov	r4, r0
 8018548:	4608      	mov	r0, r1
 801854a:	602b      	str	r3, [r5, #0]
 801854c:	f7e9 fea1 	bl	8002292 <_close>
 8018550:	1c43      	adds	r3, r0, #1
 8018552:	d102      	bne.n	801855a <_close_r+0x1a>
 8018554:	682b      	ldr	r3, [r5, #0]
 8018556:	b103      	cbz	r3, 801855a <_close_r+0x1a>
 8018558:	6023      	str	r3, [r4, #0]
 801855a:	bd38      	pop	{r3, r4, r5, pc}
 801855c:	2002dbb0 	.word	0x2002dbb0

08018560 <_fstat_r>:
 8018560:	b538      	push	{r3, r4, r5, lr}
 8018562:	4d07      	ldr	r5, [pc, #28]	; (8018580 <_fstat_r+0x20>)
 8018564:	2300      	movs	r3, #0
 8018566:	4604      	mov	r4, r0
 8018568:	4608      	mov	r0, r1
 801856a:	4611      	mov	r1, r2
 801856c:	602b      	str	r3, [r5, #0]
 801856e:	f7e9 fe9c 	bl	80022aa <_fstat>
 8018572:	1c43      	adds	r3, r0, #1
 8018574:	d102      	bne.n	801857c <_fstat_r+0x1c>
 8018576:	682b      	ldr	r3, [r5, #0]
 8018578:	b103      	cbz	r3, 801857c <_fstat_r+0x1c>
 801857a:	6023      	str	r3, [r4, #0]
 801857c:	bd38      	pop	{r3, r4, r5, pc}
 801857e:	bf00      	nop
 8018580:	2002dbb0 	.word	0x2002dbb0

08018584 <_isatty_r>:
 8018584:	b538      	push	{r3, r4, r5, lr}
 8018586:	4d06      	ldr	r5, [pc, #24]	; (80185a0 <_isatty_r+0x1c>)
 8018588:	2300      	movs	r3, #0
 801858a:	4604      	mov	r4, r0
 801858c:	4608      	mov	r0, r1
 801858e:	602b      	str	r3, [r5, #0]
 8018590:	f7e9 fe9b 	bl	80022ca <_isatty>
 8018594:	1c43      	adds	r3, r0, #1
 8018596:	d102      	bne.n	801859e <_isatty_r+0x1a>
 8018598:	682b      	ldr	r3, [r5, #0]
 801859a:	b103      	cbz	r3, 801859e <_isatty_r+0x1a>
 801859c:	6023      	str	r3, [r4, #0]
 801859e:	bd38      	pop	{r3, r4, r5, pc}
 80185a0:	2002dbb0 	.word	0x2002dbb0

080185a4 <_lseek_r>:
 80185a4:	b538      	push	{r3, r4, r5, lr}
 80185a6:	4d07      	ldr	r5, [pc, #28]	; (80185c4 <_lseek_r+0x20>)
 80185a8:	4604      	mov	r4, r0
 80185aa:	4608      	mov	r0, r1
 80185ac:	4611      	mov	r1, r2
 80185ae:	2200      	movs	r2, #0
 80185b0:	602a      	str	r2, [r5, #0]
 80185b2:	461a      	mov	r2, r3
 80185b4:	f7e9 fe94 	bl	80022e0 <_lseek>
 80185b8:	1c43      	adds	r3, r0, #1
 80185ba:	d102      	bne.n	80185c2 <_lseek_r+0x1e>
 80185bc:	682b      	ldr	r3, [r5, #0]
 80185be:	b103      	cbz	r3, 80185c2 <_lseek_r+0x1e>
 80185c0:	6023      	str	r3, [r4, #0]
 80185c2:	bd38      	pop	{r3, r4, r5, pc}
 80185c4:	2002dbb0 	.word	0x2002dbb0

080185c8 <_read_r>:
 80185c8:	b538      	push	{r3, r4, r5, lr}
 80185ca:	4d07      	ldr	r5, [pc, #28]	; (80185e8 <_read_r+0x20>)
 80185cc:	4604      	mov	r4, r0
 80185ce:	4608      	mov	r0, r1
 80185d0:	4611      	mov	r1, r2
 80185d2:	2200      	movs	r2, #0
 80185d4:	602a      	str	r2, [r5, #0]
 80185d6:	461a      	mov	r2, r3
 80185d8:	f7e9 fe22 	bl	8002220 <_read>
 80185dc:	1c43      	adds	r3, r0, #1
 80185de:	d102      	bne.n	80185e6 <_read_r+0x1e>
 80185e0:	682b      	ldr	r3, [r5, #0]
 80185e2:	b103      	cbz	r3, 80185e6 <_read_r+0x1e>
 80185e4:	6023      	str	r3, [r4, #0]
 80185e6:	bd38      	pop	{r3, r4, r5, pc}
 80185e8:	2002dbb0 	.word	0x2002dbb0

080185ec <sqrt>:
 80185ec:	b538      	push	{r3, r4, r5, lr}
 80185ee:	ed2d 8b02 	vpush	{d8}
 80185f2:	ec55 4b10 	vmov	r4, r5, d0
 80185f6:	f000 f82d 	bl	8018654 <__ieee754_sqrt>
 80185fa:	4b15      	ldr	r3, [pc, #84]	; (8018650 <sqrt+0x64>)
 80185fc:	eeb0 8a40 	vmov.f32	s16, s0
 8018600:	eef0 8a60 	vmov.f32	s17, s1
 8018604:	f993 3000 	ldrsb.w	r3, [r3]
 8018608:	3301      	adds	r3, #1
 801860a:	d019      	beq.n	8018640 <sqrt+0x54>
 801860c:	4622      	mov	r2, r4
 801860e:	462b      	mov	r3, r5
 8018610:	4620      	mov	r0, r4
 8018612:	4629      	mov	r1, r5
 8018614:	f7e8 faaa 	bl	8000b6c <__aeabi_dcmpun>
 8018618:	b990      	cbnz	r0, 8018640 <sqrt+0x54>
 801861a:	2200      	movs	r2, #0
 801861c:	2300      	movs	r3, #0
 801861e:	4620      	mov	r0, r4
 8018620:	4629      	mov	r1, r5
 8018622:	f7e8 fa7b 	bl	8000b1c <__aeabi_dcmplt>
 8018626:	b158      	cbz	r0, 8018640 <sqrt+0x54>
 8018628:	f7fd f904 	bl	8015834 <__errno>
 801862c:	2321      	movs	r3, #33	; 0x21
 801862e:	6003      	str	r3, [r0, #0]
 8018630:	2200      	movs	r2, #0
 8018632:	2300      	movs	r3, #0
 8018634:	4610      	mov	r0, r2
 8018636:	4619      	mov	r1, r3
 8018638:	f7e8 f928 	bl	800088c <__aeabi_ddiv>
 801863c:	ec41 0b18 	vmov	d8, r0, r1
 8018640:	eeb0 0a48 	vmov.f32	s0, s16
 8018644:	eef0 0a68 	vmov.f32	s1, s17
 8018648:	ecbd 8b02 	vpop	{d8}
 801864c:	bd38      	pop	{r3, r4, r5, pc}
 801864e:	bf00      	nop
 8018650:	200002d8 	.word	0x200002d8

08018654 <__ieee754_sqrt>:
 8018654:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018658:	ec55 4b10 	vmov	r4, r5, d0
 801865c:	4e56      	ldr	r6, [pc, #344]	; (80187b8 <__ieee754_sqrt+0x164>)
 801865e:	43ae      	bics	r6, r5
 8018660:	ee10 0a10 	vmov	r0, s0
 8018664:	ee10 3a10 	vmov	r3, s0
 8018668:	4629      	mov	r1, r5
 801866a:	462a      	mov	r2, r5
 801866c:	d110      	bne.n	8018690 <__ieee754_sqrt+0x3c>
 801866e:	ee10 2a10 	vmov	r2, s0
 8018672:	462b      	mov	r3, r5
 8018674:	f7e7 ffe0 	bl	8000638 <__aeabi_dmul>
 8018678:	4602      	mov	r2, r0
 801867a:	460b      	mov	r3, r1
 801867c:	4620      	mov	r0, r4
 801867e:	4629      	mov	r1, r5
 8018680:	f7e7 fe24 	bl	80002cc <__adddf3>
 8018684:	4604      	mov	r4, r0
 8018686:	460d      	mov	r5, r1
 8018688:	ec45 4b10 	vmov	d0, r4, r5
 801868c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018690:	2d00      	cmp	r5, #0
 8018692:	dc10      	bgt.n	80186b6 <__ieee754_sqrt+0x62>
 8018694:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8018698:	4330      	orrs	r0, r6
 801869a:	d0f5      	beq.n	8018688 <__ieee754_sqrt+0x34>
 801869c:	b15d      	cbz	r5, 80186b6 <__ieee754_sqrt+0x62>
 801869e:	ee10 2a10 	vmov	r2, s0
 80186a2:	462b      	mov	r3, r5
 80186a4:	ee10 0a10 	vmov	r0, s0
 80186a8:	f7e7 fe0e 	bl	80002c8 <__aeabi_dsub>
 80186ac:	4602      	mov	r2, r0
 80186ae:	460b      	mov	r3, r1
 80186b0:	f7e8 f8ec 	bl	800088c <__aeabi_ddiv>
 80186b4:	e7e6      	b.n	8018684 <__ieee754_sqrt+0x30>
 80186b6:	1509      	asrs	r1, r1, #20
 80186b8:	d076      	beq.n	80187a8 <__ieee754_sqrt+0x154>
 80186ba:	f3c2 0213 	ubfx	r2, r2, #0, #20
 80186be:	07ce      	lsls	r6, r1, #31
 80186c0:	f442 1080 	orr.w	r0, r2, #1048576	; 0x100000
 80186c4:	bf5e      	ittt	pl
 80186c6:	0fda      	lsrpl	r2, r3, #31
 80186c8:	005b      	lslpl	r3, r3, #1
 80186ca:	eb02 0040 	addpl.w	r0, r2, r0, lsl #1
 80186ce:	0fda      	lsrs	r2, r3, #31
 80186d0:	f2a1 35ff 	subw	r5, r1, #1023	; 0x3ff
 80186d4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80186d8:	2000      	movs	r0, #0
 80186da:	106d      	asrs	r5, r5, #1
 80186dc:	005b      	lsls	r3, r3, #1
 80186de:	f04f 0e16 	mov.w	lr, #22
 80186e2:	4684      	mov	ip, r0
 80186e4:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80186e8:	eb0c 0401 	add.w	r4, ip, r1
 80186ec:	4294      	cmp	r4, r2
 80186ee:	bfde      	ittt	le
 80186f0:	1b12      	suble	r2, r2, r4
 80186f2:	eb04 0c01 	addle.w	ip, r4, r1
 80186f6:	1840      	addle	r0, r0, r1
 80186f8:	0052      	lsls	r2, r2, #1
 80186fa:	f1be 0e01 	subs.w	lr, lr, #1
 80186fe:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 8018702:	ea4f 0151 	mov.w	r1, r1, lsr #1
 8018706:	ea4f 0343 	mov.w	r3, r3, lsl #1
 801870a:	d1ed      	bne.n	80186e8 <__ieee754_sqrt+0x94>
 801870c:	4671      	mov	r1, lr
 801870e:	2720      	movs	r7, #32
 8018710:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8018714:	4562      	cmp	r2, ip
 8018716:	eb04 060e 	add.w	r6, r4, lr
 801871a:	dc02      	bgt.n	8018722 <__ieee754_sqrt+0xce>
 801871c:	d113      	bne.n	8018746 <__ieee754_sqrt+0xf2>
 801871e:	429e      	cmp	r6, r3
 8018720:	d811      	bhi.n	8018746 <__ieee754_sqrt+0xf2>
 8018722:	2e00      	cmp	r6, #0
 8018724:	eb06 0e04 	add.w	lr, r6, r4
 8018728:	da43      	bge.n	80187b2 <__ieee754_sqrt+0x15e>
 801872a:	f1be 0f00 	cmp.w	lr, #0
 801872e:	db40      	blt.n	80187b2 <__ieee754_sqrt+0x15e>
 8018730:	f10c 0801 	add.w	r8, ip, #1
 8018734:	eba2 020c 	sub.w	r2, r2, ip
 8018738:	429e      	cmp	r6, r3
 801873a:	bf88      	it	hi
 801873c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8018740:	1b9b      	subs	r3, r3, r6
 8018742:	4421      	add	r1, r4
 8018744:	46c4      	mov	ip, r8
 8018746:	0052      	lsls	r2, r2, #1
 8018748:	3f01      	subs	r7, #1
 801874a:	eb02 72d3 	add.w	r2, r2, r3, lsr #31
 801874e:	ea4f 0454 	mov.w	r4, r4, lsr #1
 8018752:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8018756:	d1dd      	bne.n	8018714 <__ieee754_sqrt+0xc0>
 8018758:	4313      	orrs	r3, r2
 801875a:	d006      	beq.n	801876a <__ieee754_sqrt+0x116>
 801875c:	1c4c      	adds	r4, r1, #1
 801875e:	bf13      	iteet	ne
 8018760:	3101      	addne	r1, #1
 8018762:	3001      	addeq	r0, #1
 8018764:	4639      	moveq	r1, r7
 8018766:	f021 0101 	bicne.w	r1, r1, #1
 801876a:	1043      	asrs	r3, r0, #1
 801876c:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 8018770:	0849      	lsrs	r1, r1, #1
 8018772:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 8018776:	07c2      	lsls	r2, r0, #31
 8018778:	bf48      	it	mi
 801877a:	f041 4100 	orrmi.w	r1, r1, #2147483648	; 0x80000000
 801877e:	eb03 5705 	add.w	r7, r3, r5, lsl #20
 8018782:	460c      	mov	r4, r1
 8018784:	463d      	mov	r5, r7
 8018786:	e77f      	b.n	8018688 <__ieee754_sqrt+0x34>
 8018788:	0ada      	lsrs	r2, r3, #11
 801878a:	3815      	subs	r0, #21
 801878c:	055b      	lsls	r3, r3, #21
 801878e:	2a00      	cmp	r2, #0
 8018790:	d0fa      	beq.n	8018788 <__ieee754_sqrt+0x134>
 8018792:	02d7      	lsls	r7, r2, #11
 8018794:	d50a      	bpl.n	80187ac <__ieee754_sqrt+0x158>
 8018796:	f1c1 0420 	rsb	r4, r1, #32
 801879a:	fa23 f404 	lsr.w	r4, r3, r4
 801879e:	1e4d      	subs	r5, r1, #1
 80187a0:	408b      	lsls	r3, r1
 80187a2:	4322      	orrs	r2, r4
 80187a4:	1b41      	subs	r1, r0, r5
 80187a6:	e788      	b.n	80186ba <__ieee754_sqrt+0x66>
 80187a8:	4608      	mov	r0, r1
 80187aa:	e7f0      	b.n	801878e <__ieee754_sqrt+0x13a>
 80187ac:	0052      	lsls	r2, r2, #1
 80187ae:	3101      	adds	r1, #1
 80187b0:	e7ef      	b.n	8018792 <__ieee754_sqrt+0x13e>
 80187b2:	46e0      	mov	r8, ip
 80187b4:	e7be      	b.n	8018734 <__ieee754_sqrt+0xe0>
 80187b6:	bf00      	nop
 80187b8:	7ff00000 	.word	0x7ff00000

080187bc <_init>:
 80187bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80187be:	bf00      	nop
 80187c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80187c2:	bc08      	pop	{r3}
 80187c4:	469e      	mov	lr, r3
 80187c6:	4770      	bx	lr

080187c8 <_fini>:
 80187c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80187ca:	bf00      	nop
 80187cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80187ce:	bc08      	pop	{r3}
 80187d0:	469e      	mov	lr, r3
 80187d2:	4770      	bx	lr
